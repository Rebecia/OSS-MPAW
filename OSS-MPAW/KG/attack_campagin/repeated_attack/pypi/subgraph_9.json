{
    "directed": false,
    "multigraph": false,
    "graph": {},
    "nodes": [
        {
            "name_version": "colourama-0.1.6",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/colourama/0.1.6/colourama-0.1.6.tar_extracted/colourama-0.1.6.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['AnsiFore', 'AnsiBack', 'AnsiStyle', 'AnsiCursor', 'init', 'print', 'print', 'init', 'print', 'print', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'normpath', 'setup', 'WinTerm', 're.compile', 're.compile', 'init', 'LibraryLoader', 'print', 'printable.strip', 'colorama.init', 'print', 'print', 'range', 'print', 'range', 'print', 'main', 'colorama.init', 'print', 'print', 'print', 'print', 'main', 'print', 'main', 'join', 're.search', 'RuntimeError', '_get_version_match', 'dir', 'hasattr', 'stream.isatty', 'getattr', 'StreamWrapper', 'self.get_win32_calls', 'dict', 'self.convert_osc', 'self.write_plain_text', 'any', 'ValueError', 'wrap_stream', 'wrap_stream', 'atexit.register', 'deinit', 'AnsiToWin32', 'wrapper.should_wrap', 'POINTER', 'POINTER', 'POINTER', '_GetStdHandle', '_GetStdHandle', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', 'bool', 'any', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', '_SetConsoleTextAttribute', 'COORD', 'COORD', '_SetConsoleCursorPosition', 'c_char', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputCharacterA', 'wintypes.WORD', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputAttribute', '_SetConsoleTitleW', 'self.set_attrs', 'self.set_attrs', 'self.set_console', 'self.set_console', 'self.set_console', 'self.set_console', 'win32.SetConsoleTextAttribute', 'win32.SetConsoleCursorPosition', 'self.get_position', 'win32.SetConsoleCursorPosition', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.SetConsoleTitle', 'AnsiToWin32', 'print', 'print', 'colorama_text', 'print', 'print', 'dirname', 'exec', 'platform.system', 'urllib2.Request', 'open', 'fp.read', 'open', 'fp.read', 'version_match.group', 'read_file', 'read_file', 'str', 'str', 'str', 'hasattr', 'winapi_test', 'self.write_and_convert', 'self.reset_all', 'self.call_win32', 'match.span', 'self.write_plain_text', 'self.convert_ansi', 'len', 'self.extract_params', 'self.call_win32', 'tuple', 'tuple', 'match.span', 'match.groups', 'byref', 'byref', 'char.encode', 'byref', 'byref', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.SetConsoleCursorPosition', 'self.get_attrs', 'name.startswith', 'getattr', 'setattr', 'str', 'str', 'str', 'str', 'str', 'is_a_tty', 'len', 'len', 'winterm.erase_screen', 'paramstring.split', 'AnsiToWin32', '_winapi_test', 'GetConsoleScreenBufferInfo', 'win32.COORD', 'win32.COORD', 'pos', 'pos', 'pos', 'forward', 'urllib2.urlopen', 'code_to_chars', 'is_stream_closed', 'is_stream_closed', 'match.groups', 'int', 'dict', 'func', 'winterm.erase_line', 'winterm.set_title', 'handles.values', 'win32.COORD', 'win32.COORD', 'pos', 'pos', 'pos', 'choice', 'choice', 'choice', 'choice', 'str', 'is_stream_closed', 'is_a_tty', 'int', 'paramstring.split', 'paramstring.split', 'winterm.set_cursor_position', 'randint', 'randint', 'down', 'len', 'len', 'winterm.cursor_adjust', 'back', 'forward', 'back', 'up', 'forward', 'up']",
            "n_tokens": 977,
            "embedding": "[-0.00549532 -0.0113067  -0.00856496 ... -0.00257581 -0.0251576\n -0.00934719]",
            "cluster": "8",
            "id": 4054,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/colourama/0.1.6/colourama-0.1.6.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/colourama/0.1.6/colourama-0.1.6.tar_extracted",
            "name": "colourama",
            "version": "0.1.6",
            "published_at": "2017-12-05T18:04:43.000Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Cross-platform coloured terminal text.",
            "author": "Tommy",
            "maintainers": NaN,
            "repository_url": "Contains a homepage URL but not a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "dcfd018cd4d24738116a4594b678f6e7c7d8f3c4b3b0227b22bb0bab91f75c9e"
        },
        {
            "name_version": "openvc-1.0.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/openvc/1.0.0/openvc-1.0.0.tar_extracted/openvc-1.0.0.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['classmethod', 'vector_CvConnectedComp', '_z.resize', 'classmethod', 'vector_CvSURFPoint', '_z.resize', 'classmethod', 'vector_DTreeNode', '_z.resize', 'classmethod', 'vector_DTree', '_z.resize', 'classmethod', 'vector_Stage', '_z.resize', 'classmethod', 'vector_KeyPoint', '_z.resize', 'classmethod', 'vector_CvFuzzyCurve', '_z.resize', 'classmethod', 'vector_CvFuzzyRule_Ptr', '_z.resize', 'classmethod', 'vector_Octree_Node', '_z.resize', 'classmethod', 'vector_FernClassifier_Feature', '_z.resize', 'classmethod', 'vector_CvSURFPoint', '_z.resize', 'classmethod', 'vector_CvConnectedComp', '_z.resize', 'classmethod', 'vector_Size2i', '_z.resize', 'classmethod', 'vector_Size2f', '_z.resize', 'classmethod', 'vector_Rect', '_z.resize', 'classmethod', 'vector_RotatedRect', '_z.resize', 'classmethod', 'vector_KDTree_Node', '_z.resize', 'classmethod', 'vector_Point2i', '_z.resize', 'classmethod', 'vector_vector_Point2i', '_z.resize', 'classmethod', 'vector_Point2f', '_z.resize', 'classmethod', 'vector_vector_Point2f', '_z.resize', 'classmethod', 'vector_Point2d', '_z.resize', 'classmethod', 'vector_vector_Point2d', '_z.resize', 'classmethod', 'vector_Point3i', '_z.resize', 'classmethod', 'vector_vector_Point3i', '_z.resize', 'classmethod', 'vector_Point3f', '_z.resize', 'classmethod', 'vector_vector_Point3f', '_z.resize', 'classmethod', 'vector_Point3d', '_z.resize', 'classmethod', 'vector_vector_Point3d', '_z.resize', 'classmethod', 'vector_Mat', '_z.resize', 'classmethod', 'vector_Ptr_Mat', '_z.resize', 'classmethod', 'vector_MatND', '_z.resize', 'classmethod', 'vector_Vec6d', '_z.resize', 'classmethod', 'vector_Vec2w', '_z.resize', 'classmethod', 'vector_Vec3s', '_z.resize', 'classmethod', 'vector_Vec2i', '_z.resize', 'classmethod', 'vector_vector_Vec2i', '_z.resize', 'classmethod', 'vector_Vec4w', '_z.resize', 'classmethod', 'vector_Vec3w', '_z.resize', 'classmethod', 'vector_Vec4b', '_z.resize', 'classmethod', 'vector_Vec3b', '_z.resize', 'classmethod', 'vector_Vec2b', '_z.resize', 'classmethod', 'vector_Vec4s', '_z.resize', 'classmethod', 'vector_Vec2s', '_z.resize', 'classmethod', 'vector_Vec4i', '_z.resize', 'classmethod', 'vector_Vec3i', '_z.resize', 'classmethod', 'vector_Vec6f', '_z.resize', 'classmethod', 'vector_Vec4f', '_z.resize', 'classmethod', 'vector_Vec3f', '_z.resize', 'classmethod', 'vector_Vec2f', '_z.resize', 'classmethod', 'vector_Vec4d', '_z.resize', 'classmethod', 'vector_Vec3d', '_z.resize', 'classmethod', 'vector_Vec2d', '_z.resize', 'classmethod', 'vector_Scalar', '_z.resize', 'classmethod', 'vector_Range', '_z.resize', 'Range', 'Range', 'classmethod', 'vector_int8', '_z.resize', 'classmethod', 'vector_uint8', '_z.resize', 'classmethod', 'vector_int16', '_z.resize', 'classmethod', 'vector_uint16', '_z.resize', 'classmethod', 'vector_int', '_z.resize', 'classmethod', 'vector_uint', '_z.resize', 'classmethod', 'vector_long', '_z.resize', 'classmethod', 'vector_ulong', '_z.resize', 'classmethod', 'vector_int64', '_z.resize', 'classmethod', 'vector_uint64', '_z.resize', 'classmethod', 'vector_float32', '_z.resize', 'classmethod', 'vector_float64', '_z.resize', 'classmethod', 'vector_vector_int', '_z.resize', 'classmethod', 'vector_vector_float32', '_z.resize', 'CV_MAKETYPE', 'CV_MAKETYPE', 'CV_MAKETYPE', 'CV_MAKETYPE', 'CV_MAKETYPE', 'CV_MAKETYPE', 'CV_MAKETYPE', 'CV_MAKETYPE', 'CV_MAKETYPE', 'CV_MAKETYPE', 'CV_MAKETYPE', 'CV_MAKETYPE', 'CV_MAKETYPE', 'CV_MAKETYPE', 'CV_MAKETYPE', 'CV_MAKETYPE', 'CV_MAKETYPE', 'CV_MAKETYPE', 'CV_MAKETYPE', 'CV_MAKETYPE', 'CV_MAKETYPE', 'CV_MAKETYPE', 'CV_MAKETYPE', 'CV_MAKETYPE', 'CV_MAKETYPE', 'CV_MAKETYPE', 'CV_MAKETYPE', 'CV_MAKETYPE', 'CV_FOURCC', 'atexit.register', '_smart_import', 'checkVersion', 'setup', 'xrange', 'len', 'len', 'self.resize', 'is_vector', 'is_vector', 'cls', 'z.create', 'self.__old_init__', 'isinstance', 'Seq_CvConnectedComp.__old_init__', '_ext._cvEndFindContours', 'Seq_CvSURFPoint.__old_init__', 'Seq_CvConnectedComp.__old_init__', '_ext._cvEndFindContours', 'Seq_CvSURFPoint.__old_init__', 'Seq_int.__old_init__', 'Seq_Point2i.__old_init__', 'Scalar', 'cvGetSeqElem', 'cast', 'bool', 'bool', 'bool', 'bool', 'bool', '_ext._cvSetMouseCallback', '_ext._cvDestroyWindow', '_ext._cvDestroyAllWindows', '_windows_callbacks.clear', '_ext._createTrackbar', 'ImportError', 'globals', 'globals', 'globals', 'staticmethod', 'pygtk.require20', 'staticmethod', '_np.array', '_np.sum', 'getpass.getuser', 'socket.gethostname', 'platform.platform', 'len', 'repr', 'xrange', 'xrange', 'self.resize', 'isinstance', '_ext._cvEndFindContours', '_ext._cvReleaseFeatureTree', '_ext._cvReleaseLSH', '_ext._cvReleasePOSITObject', '_ext._cvReleaseStereoGCState', '_ext._cvReleaseConDensation', '_ext._cvReleaseFGDetector', '_ext._cvReleaseBlobDetector', '_ext._cvReleaseBlobTrackGen', '_ext._cvReleaseBlobTracker', '_ext._cvReleaseBlobTrackerOne', '_ext._cvReleaseBlobTrackPostProc', '_ext._cvReleaseBlobTrackAnalysis', '_ext._cvReleaseBlobTrackerAuto', 'isinstance', '_ext._cvEndFindContours', '_ext._cvReleaseFeatureTree', '_ext._cvReleaseLSH', '_ext._cvReleasePOSITObject', '_ext._cvReleaseStereoGCState', '_PE._cvReleaseGraphScanner', 'self.empty', 'repr', 'POINTER', 'CV_NODE_TYPE', 'CV_NODE_TYPE', 'CV_NODE_TYPE', 'CV_NODE_TYPE', 'CV_NODE_TYPE', 'CV_NODE_TYPE', '_windows_callbacks.setdefault', '_windows_callbacks.pop', 'isinstance', '_CT.c_int', '_CT.addressof', 'ImportError', 'f', '_fc.partial', 'wx.BitmapFromBuffer', 'Image.fromstring', 'pilimage.tostring', 'asMat', 'pixbuf.get_has_alpha', 'pixbuf.get_height', 'pixbuf.get_width', 'pixbuf.get_row_stride', 'asMat', '_np.where', '_np.vectorize', 'f', 'platform.system', 'locale.getdefaultlocale', 'request.urlopen', 'xrange', 'self.create', 'repr', 'repr', 'repr', 'repr', 'repr', 'repr', 'repr', 'repr', 'repr', 'repr', 'repr', 'repr', 'repr', 'repr', 'repr', 'repr', 'repr', 'repr', 'repr', 'repr', 'repr', '_CT.sizeof', '_windows_callbacks.setdefault', 'item.startswith', 'mat.channels', 'mat.reshape', 'Mat', '_asMat', 'reshapeSingleChannel', 'self.type', 'TypeError', 'self.type', 'TypeError', 'isinstance', 'TypeError', 'TypeError', 'pixbuf.get_bits_per_sample', 'TypeError', 'repr', 'self.get_support_vector', '_np.vectorize', '_np.asarray', 'platform.system', 'os.popen', 'urllib.urlopen', 'repr', 'xrange', 'len', 'repr', 'cast', 'ord', 'TypeError', 'isinstance', '_asMat', 'TypeError', 'TypeError', '_NP.frombuffer', '_NP.frombuffer', 'range', 'repr', 'repr', 'len', 'kwds.values', 'kwds.values', 'kwds.values', 'kwds.values', 'repr', 'repr', 'repr', 'repr', 'repr', 'kwds.values', 'repr', 'repr', 'repr', 'kwds.values', 'repr', 'repr', 'repr', 'repr', 'self.depth', 'repr', 'repr', 'repr', 'repr', 'repr', 'repr', 'repr', 'repr', 'ord', 'ord', 'vector_int.fromlist', 'isinstance', 'self.type', 'pilimage.getbands', 'pixbuf.get_pixels', 'repr', 'self.get_support_vector_count', 's.connect', 's.close', 'base64.b64encode', 'base64.encodestring', 'repr', 'self.depth', 'repr', 'ord', 'vector_float64.fromlist', 'eval', 's.getsockname', 'socket.socket', 'vid.encode', 'repr', 'repr', 'repr', 'repr', 'repr', 'repr', 'repr', 'repr', 'repr', 'self.channels', 'repr', 'repr', 'repr', 'repr', 'repr', 'self.channels', 'repr', 'repr', 'repr', 'repr', 'repr', 'repr', 'repr', 'repr', 'repr']",
            "n_tokens": 2187,
            "embedding": "[-0.00791103 -0.01404198 -0.01072022 ...  0.00433497  0.00552699\n -0.00219133]",
            "cluster": "8",
            "id": 4623,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/openvc/1.0.0/openvc-1.0.0.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/openvc/1.0.0/openvc-1.0.0.tar_extracted",
            "name": "openvc",
            "version": "1.0.0",
            "published_at": "2018-04-25T09:48:41.000Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "A Python Library to processing image",
            "author": "UNKNOWN",
            "maintainers": NaN,
            "repository_url": "Contains a homepage URL but not a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "a79c3f201c208ca9061ac82c1e7d93117ddb9fae8e44e8409a6b509b86aa8c6a"
        },
        {
            "name_version": "pyslye-1.0.6",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/pyslye/1.0.6/pyslye-1.0.6.tar_extracted/pyslye-1.0.6.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['setuptools.setup', 'exec', 'System.Init', 'open', 'fh.read', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makerainbow', 'dynamic_colors.append', 'setuptools.find_packages', '_system', '_system', '_system', '_CursorInfo', 'list', 'reversed', 'list', 'reversed', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', '_MakeColors._start', 'round', 'round', 'round', '_MakeColors._reverse', 'color.pop', 'range', 'range', 'dynamic_colors.append', 'all_colors.append', '_MakeColors._maketext', '_MakeColors._maketext', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.strip', 'range', '_stdout.write', '_stdout.flush', '_sleep', 'System.Clear', 'input', 'Write._write', '_stdout.write', '_stdout.flush', 'Write._write', 'input', '_stdout.write', '_stdout.flush', 'list', 'align.upper', 'align.upper', 'max', 'text.splitlines', 'max', 'int', 'text.splitlines', 'len', 'int', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'Add._length', 'Add._edit', 'range', 'content.splitlines', 'content.splitlines', 'Box.Box', 'content.splitlines', 'mode', 'assembly.splitlines', '_system', '_system', 'Cursor._cursor', 'Cursor._cursor', 'byref', 'byref', 'col.append', 'col.append', '_MakeColors._end', 'len', 'len', 'colors.append', '_MakeColors._rmansi', '_MakeColors._rmansi', '_MakeColors._reverse', '_MakeColors._rmansi', 'col.split', 'int', 'int', 'int', 'rgb.append', '_MakeColors._start', '_colors.append', '_MakeColors._mixcolors', 'input', 'print', 'exit', 'lin.rstrip', 'list', 'list', 'list', 'carac.reverse', 'mode', 'mode', 'Cursor.HideCursor', 'type', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_terminal_size', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_thread', 'th.start', '_sleep', 'System.Clear', 'Cursor.ShowCursor', 'mode', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'type', '_stdout.flush', '_sleep', 'line.strip', 'Center._xspaces', 'Center._yspaces', 'Center._xspaces', 'Center._yspaces', 'Center.XCenter', 'len', 'len', 'max', 'max', 'range', 'range', '_stdout.write', '_stdout.flush', '_stdout.write', '_stdout.flush', 'text.lstrip', 'rainbow.append', 'int', 'int', 'int', 'sum', 'len', 'sum', 'len', 'sum', 'len', 'colors.index', 'final.append', 'content.replace', 'color.append', 'content.replace', 'color.append', '_sleep', 'Colorate.Color', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'Anime._anime', 'list', 'type', 'list', 'type', '_stdout.write', '_stdout.write', 'text.splitlines', 'text.splitlines', 'len', '_terminal_size', 'len', '_terminal_size', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'Center.XCenter', 'range', 'range', 'range', 'len', 'str', 'content.replace', 'color.append', 'str', 'content.replace', 'color.append', '_MakeColors._makeansi', 'len', '_MakeColors._makeansi', 'len', 'len', 'len', 'color.append', 'print', 'print', 'print', 'print', 'len', 'len', 'color.append', '_MakeColors._makeansi', 'text.splitlines', 'text.splitlines', 'max', 'Center.BadAlignment', 'text.splitlines', 'Center.BadAlignment', 'v.strip', 'super', 'banner1.splitlines', 'banner2.splitlines', 'banner1.splitlines', 'banner2.splitlines', 'super', 'int', 'str', 'str', '_MakeColors._makeansi', '_MakeColors._getspaces', 'car.strip', '_MakeColors._getspaces', 'car.strip', '_MakeColors._makeansi', 'Center.XCenter', 'mode', 'Center.XCenter', '_terminal_size', 'text.splitlines', 'len', 'int', 'int', 'spaces.join', 'spaces.join', '_MakeColors._getspaces', '_MakeColors._getspaces', 'lin.strip', 'len', '_MakeColors._getspaces', 'car.strip', 'mode', 'len', 'int', 'spaces.join', 'spaces.join', 'col.replace', 'colors.index', '_MakeColors._makeansi', 'max', 'text.splitlines', 'max', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'int', 'len', 'lin.strip', 'len', 'len', 'len', 'len', 'len', 'text.splitlines', 'text.splitlines']",
            "n_tokens": 1402,
            "embedding": "[ 0.02295924 -0.01603294 -0.00387689 ... -0.01199625 -0.01842343\n -0.0106215 ]",
            "cluster": "8",
            "id": 2378,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/pyslye/1.0.6/pyslye-1.0.6.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/pyslye/1.0.6/pyslye-1.0.6.tar_extracted",
            "name": "pyslye",
            "version": "1.0.6",
            "published_at": "2022-07-27T16:36:02.542Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "A module to colorate your text and more",
            "author": "Ayumu",
            "maintainers": NaN,
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "f01a224c4f5ee970ed44502edd5709d69ddc790a13388633f7403aed8841f909"
        },
        {
            "name_version": "pygradient-2.3",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/pygradient/2.3/pygradient-2.3.tar_extracted/pygradient-2.3.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['System.Init', 'setup', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makerainbow', 'dynamic_colors.append', 'subprocess.Popen', 'print', 'run', '_system', '_system', '_system', '_CursorInfo', 'list', 'reversed', 'list', 'reversed', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', '_MakeColors._start', 'round', 'round', 'round', '_MakeColors._reverse', 'color.pop', 'range', 'range', 'dynamic_colors.append', 'all_colors.append', '_MakeColors._maketext', '_MakeColors._maketext', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.strip', 'range', '_stdout.write', '_stdout.flush', '_sleep', 'System.Clear', 'input', 'Write._write', '_stdout.write', '_stdout.flush', 'Write._write', 'input', '_stdout.write', '_stdout.flush', 'list', 'align.upper', 'align.upper', 'max', 'text.splitlines', 'max', 'int', 'text.splitlines', 'len', 'int', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'Add._length', 'Add._edit', 'range', 'content.splitlines', 'content.splitlines', 'Box.Box', 'content.splitlines', 'mode', 'assembly.splitlines', '_system', '_system', 'Cursor._cursor', 'Cursor._cursor', 'byref', 'byref', 'col.append', 'col.append', '_MakeColors._end', 'len', 'len', 'colors.append', '_MakeColors._rmansi', '_MakeColors._rmansi', '_MakeColors._reverse', '_MakeColors._rmansi', 'col.split', 'int', 'int', 'int', 'rgb.append', '_MakeColors._start', '_colors.append', '_MakeColors._mixcolors', 'input', 'print', 'exit', 'lin.rstrip', 'list', 'list', 'list', 'carac.reverse', 'mode', 'mode', 'Cursor.HideCursor', 'type', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_terminal_size', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_thread', 'th.start', '_sleep', 'System.Clear', 'Cursor.ShowCursor', 'mode', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'type', '_stdout.flush', '_sleep', 'line.strip', 'Center._xspaces', 'Center._yspaces', 'Center._xspaces', 'Center._yspaces', 'Center.XCenter', 'len', 'len', 'max', 'max', 'range', 'range', '_stdout.write', '_stdout.flush', '_stdout.write', '_stdout.flush', 'text.lstrip', 'rainbow.append', 'int', 'int', 'int', 'sum', 'len', 'sum', 'len', 'sum', 'len', 'colors.index', 'final.append', 'content.replace', 'color.append', 'content.replace', 'color.append', '_sleep', 'Colorate.Color', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'Anime._anime', 'list', 'type', 'list', 'type', '_stdout.write', '_stdout.write', 'text.splitlines', 'text.splitlines', 'len', '_terminal_size', 'len', '_terminal_size', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'Center.XCenter', 'range', 'range', 'range', 'len', 'str', 'content.replace', 'color.append', 'str', 'content.replace', 'color.append', '_MakeColors._makeansi', 'len', '_MakeColors._makeansi', 'len', 'len', 'len', 'color.append', 'print', 'print', 'print', 'print', 'len', 'len', 'color.append', '_MakeColors._makeansi', 'text.splitlines', 'text.splitlines', 'max', 'Center.BadAlignment', 'text.splitlines', 'Center.BadAlignment', 'v.strip', 'super', 'banner1.splitlines', 'banner2.splitlines', 'banner1.splitlines', 'banner2.splitlines', 'super', 'int', 'str', 'str', '_MakeColors._makeansi', '_MakeColors._getspaces', 'car.strip', '_MakeColors._getspaces', 'car.strip', '_MakeColors._makeansi', 'Center.XCenter', 'mode', 'Center.XCenter', '_terminal_size', 'text.splitlines', 'len', 'int', 'int', 'spaces.join', 'spaces.join', '_MakeColors._getspaces', '_MakeColors._getspaces', 'lin.strip', 'len', '_MakeColors._getspaces', 'car.strip', 'mode', 'len', 'int', 'spaces.join', 'spaces.join', 'col.replace', 'colors.index', '_MakeColors._makeansi', 'max', 'text.splitlines', 'max', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'int', 'len', 'lin.strip', 'len', 'len', 'len', 'len', 'len', 'text.splitlines', 'text.splitlines']",
            "n_tokens": 1395,
            "embedding": "[ 0.0295976  -0.01297659 -0.00665636 ... -0.00697038 -0.01614334\n -0.01372847]",
            "cluster": "8",
            "id": 3241,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/pygradient/2.3/pygradient-2.3.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/pygradient/2.3/pygradient-2.3.tar_extracted",
            "name": "pygradient",
            "version": "2.3",
            "published_at": "2022-09-25T06:18:15.691Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "by billythegoat356, loTus01 and BlueRed",
            "author": "billythegoat356",
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN,
            "SHA-256": "515da97ad35b131fca0a14bf0a77d65d4fb75bbe53f5163bd8d59d10129b86ca"
        },
        {
            "name_version": "pygradient-2.5",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/pygradient/2.5/pygradient-2.5.tar_extracted/pygradient-2.5.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['System.Init', 'setup', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makerainbow', 'dynamic_colors.append', 'subprocess.Popen', 'print', 'run', '_system', '_system', '_system', '_CursorInfo', 'list', 'reversed', 'list', 'reversed', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', '_MakeColors._start', 'round', 'round', 'round', '_MakeColors._reverse', 'color.pop', 'range', 'range', 'dynamic_colors.append', 'all_colors.append', '_MakeColors._maketext', '_MakeColors._maketext', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.strip', 'range', '_stdout.write', '_stdout.flush', '_sleep', 'System.Clear', 'input', 'Write._write', '_stdout.write', '_stdout.flush', 'Write._write', 'input', '_stdout.write', '_stdout.flush', 'list', 'align.upper', 'align.upper', 'max', 'text.splitlines', 'max', 'int', 'text.splitlines', 'len', 'int', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'Add._length', 'Add._edit', 'range', 'content.splitlines', 'content.splitlines', 'Box.Box', 'content.splitlines', 'mode', 'assembly.splitlines', '_system', '_system', 'Cursor._cursor', 'Cursor._cursor', 'byref', 'byref', 'col.append', 'col.append', '_MakeColors._end', 'len', 'len', 'colors.append', '_MakeColors._rmansi', '_MakeColors._rmansi', '_MakeColors._reverse', '_MakeColors._rmansi', 'col.split', 'int', 'int', 'int', 'rgb.append', '_MakeColors._start', '_colors.append', '_MakeColors._mixcolors', 'input', 'print', 'exit', 'lin.rstrip', 'list', 'list', 'list', 'carac.reverse', 'mode', 'mode', 'Cursor.HideCursor', 'type', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_terminal_size', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_thread', 'th.start', '_sleep', 'System.Clear', 'Cursor.ShowCursor', 'mode', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'type', '_stdout.flush', '_sleep', 'line.strip', 'Center._xspaces', 'Center._yspaces', 'Center._xspaces', 'Center._yspaces', 'Center.XCenter', 'len', 'len', 'max', 'max', 'range', 'range', '_stdout.write', '_stdout.flush', '_stdout.write', '_stdout.flush', 'text.lstrip', 'rainbow.append', 'int', 'int', 'int', 'sum', 'len', 'sum', 'len', 'sum', 'len', 'colors.index', 'final.append', 'content.replace', 'color.append', 'content.replace', 'color.append', '_sleep', 'Colorate.Color', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'Anime._anime', 'list', 'type', 'list', 'type', '_stdout.write', '_stdout.write', 'text.splitlines', 'text.splitlines', 'len', '_terminal_size', 'len', '_terminal_size', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'Center.XCenter', 'range', 'range', 'range', 'len', 'str', 'content.replace', 'color.append', 'str', 'content.replace', 'color.append', '_MakeColors._makeansi', 'len', '_MakeColors._makeansi', 'len', 'len', 'len', 'color.append', 'print', 'print', 'print', 'print', 'len', 'len', 'color.append', '_MakeColors._makeansi', 'text.splitlines', 'text.splitlines', 'max', 'Center.BadAlignment', 'text.splitlines', 'Center.BadAlignment', 'v.strip', 'super', 'banner1.splitlines', 'banner2.splitlines', 'banner1.splitlines', 'banner2.splitlines', 'super', 'int', 'str', 'str', '_MakeColors._makeansi', '_MakeColors._getspaces', 'car.strip', '_MakeColors._getspaces', 'car.strip', '_MakeColors._makeansi', 'Center.XCenter', 'mode', 'Center.XCenter', '_terminal_size', 'text.splitlines', 'len', 'int', 'int', 'spaces.join', 'spaces.join', '_MakeColors._getspaces', '_MakeColors._getspaces', 'lin.strip', 'len', '_MakeColors._getspaces', 'car.strip', 'mode', 'len', 'int', 'spaces.join', 'spaces.join', 'col.replace', 'colors.index', '_MakeColors._makeansi', 'max', 'text.splitlines', 'max', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'int', 'len', 'lin.strip', 'len', 'len', 'len', 'len', 'len', 'text.splitlines', 'text.splitlines']",
            "n_tokens": 1395,
            "embedding": "[ 0.02953888 -0.01325622 -0.00669005 ... -0.0070219  -0.01613223\n -0.01378717]",
            "cluster": "8",
            "id": 3242,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/pygradient/2.5/pygradient-2.5.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/pygradient/2.5/pygradient-2.5.tar_extracted",
            "name": "pygradient",
            "version": "2.5",
            "published_at": "2022-09-25T06:20:54.052Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "by billythegoat356, loTus01 and BlueRed",
            "author": "billythegoat356",
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN,
            "SHA-256": "c56f02766241d537eaf18c6770c3fdc6ba964e9f0849b5849733325f2d965548"
        },
        {
            "name_version": "Pyslyte-3.4.6",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/pyslyte/Pyslyte-3.4.6/Pyslyte-3.4.6.tar_extracted/Pyslyte-3.4.6.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['setuptools.setup', 'System.Init', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makerainbow', 'dynamic_colors.append', 'exec', 'setuptools.find_packages', '_system', '_system', '_system', '_CursorInfo', 'list', 'reversed', 'list', 'reversed', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', '_MakeColors._start', 'round', 'round', 'round', '_MakeColors._reverse', 'color.pop', 'range', 'range', 'dynamic_colors.append', 'all_colors.append', '_MakeColors._maketext', '_MakeColors._maketext', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.strip', 'range', '_stdout.write', '_stdout.flush', '_sleep', 'System.Clear', 'input', 'Write._write', '_stdout.write', '_stdout.flush', 'Write._write', 'input', '_stdout.write', '_stdout.flush', 'list', 'align.upper', 'align.upper', 'max', 'text.splitlines', 'max', 'int', 'text.splitlines', 'len', 'int', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'Add._length', 'Add._edit', 'range', 'content.splitlines', 'content.splitlines', 'Box.Box', 'content.splitlines', 'mode', 'assembly.splitlines', '_system', '_system', 'Cursor._cursor', 'Cursor._cursor', 'byref', 'byref', 'col.append', 'col.append', '_MakeColors._end', 'len', 'len', 'colors.append', '_MakeColors._rmansi', '_MakeColors._rmansi', '_MakeColors._reverse', '_MakeColors._rmansi', 'col.split', 'int', 'int', 'int', 'rgb.append', '_MakeColors._start', '_colors.append', '_MakeColors._mixcolors', 'input', 'print', 'exit', 'lin.rstrip', 'list', 'list', 'list', 'carac.reverse', 'mode', 'mode', 'Cursor.HideCursor', 'type', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_terminal_size', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_thread', 'th.start', '_sleep', 'System.Clear', 'Cursor.ShowCursor', 'mode', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'type', '_stdout.flush', '_sleep', 'line.strip', 'Center._xspaces', 'Center._yspaces', 'Center._xspaces', 'Center._yspaces', 'Center.XCenter', 'len', 'len', 'max', 'max', 'range', 'range', '_stdout.write', '_stdout.flush', '_stdout.write', '_stdout.flush', 'text.lstrip', 'rainbow.append', 'int', 'int', 'int', 'sum', 'len', 'sum', 'len', 'sum', 'len', 'colors.index', 'final.append', 'content.replace', 'color.append', 'content.replace', 'color.append', '_sleep', 'Colorate.Color', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'Anime._anime', 'list', 'type', 'list', 'type', '_stdout.write', '_stdout.write', 'text.splitlines', 'text.splitlines', 'len', '_terminal_size', 'len', '_terminal_size', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'Center.XCenter', 'range', 'range', 'range', 'len', 'str', 'content.replace', 'color.append', 'str', 'content.replace', 'color.append', '_MakeColors._makeansi', 'len', '_MakeColors._makeansi', 'len', 'len', 'len', 'color.append', 'print', 'print', 'print', 'print', 'len', 'len', 'color.append', '_MakeColors._makeansi', 'text.splitlines', 'text.splitlines', 'max', 'Center.BadAlignment', 'text.splitlines', 'Center.BadAlignment', 'v.strip', 'super', 'banner1.splitlines', 'banner2.splitlines', 'banner1.splitlines', 'banner2.splitlines', 'super', 'int', 'str', 'str', '_MakeColors._makeansi', '_MakeColors._getspaces', 'car.strip', '_MakeColors._getspaces', 'car.strip', '_MakeColors._makeansi', 'Center.XCenter', 'mode', 'Center.XCenter', '_terminal_size', 'text.splitlines', 'len', 'int', 'int', 'spaces.join', 'spaces.join', '_MakeColors._getspaces', '_MakeColors._getspaces', 'lin.strip', 'len', '_MakeColors._getspaces', 'car.strip', 'mode', 'len', 'int', 'spaces.join', 'spaces.join', 'col.replace', 'colors.index', '_MakeColors._makeansi', 'max', 'text.splitlines', 'max', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'int', 'len', 'lin.strip', 'len', 'len', 'len', 'len', 'len', 'text.splitlines', 'text.splitlines']",
            "n_tokens": 1395,
            "embedding": "[ 0.02071188 -0.01549945 -0.00529859 ... -0.00826666 -0.01783427\n -0.00964946]",
            "cluster": "8",
            "id": 5096,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/pyslyte/Pyslyte-3.4.6/Pyslyte-3.4.6.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/pyslyte/Pyslyte-3.4.6/Pyslyte-3.4.6.tar_extracted",
            "name": "Pyslyte",
            "version": "3.4.6",
            "published_at": "2022-10-09T20:38:01.287Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "A mod for style",
            "author": "Ayumu",
            "maintainers": NaN,
            "repository_url": "Contains a homepage URL but not a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "03aeab9c163b3db6df426d22b28ce74acd807b021f3aed9f13d23dc27e8c9e85"
        },
        {
            "name_version": "pystyte-3.5.5",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/pystyte/3.5.5/pystyte-3.5.5.tar_extracted/pystyte-3.5.5.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['setuptools.setup', 'System.Init', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makerainbow', 'dynamic_colors.append', 'exec', 'setuptools.find_packages', '_system', '_system', '_system', '_CursorInfo', 'list', 'reversed', 'list', 'reversed', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', '_MakeColors._start', 'round', 'round', 'round', '_MakeColors._reverse', 'color.pop', 'range', 'range', 'dynamic_colors.append', 'all_colors.append', '_MakeColors._maketext', '_MakeColors._maketext', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.strip', 'range', '_stdout.write', '_stdout.flush', '_sleep', 'System.Clear', 'input', 'Write._write', '_stdout.write', '_stdout.flush', 'Write._write', 'input', '_stdout.write', '_stdout.flush', 'list', 'align.upper', 'align.upper', 'max', 'text.splitlines', 'max', 'int', 'text.splitlines', 'len', 'int', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'Add._length', 'Add._edit', 'range', 'content.splitlines', 'content.splitlines', 'Box.Box', 'content.splitlines', 'mode', 'assembly.splitlines', '_system', '_system', 'Cursor._cursor', 'Cursor._cursor', 'byref', 'byref', 'col.append', 'col.append', '_MakeColors._end', 'len', 'len', 'colors.append', '_MakeColors._rmansi', '_MakeColors._rmansi', '_MakeColors._reverse', '_MakeColors._rmansi', 'col.split', 'int', 'int', 'int', 'rgb.append', '_MakeColors._start', '_colors.append', '_MakeColors._mixcolors', 'input', 'print', 'exit', 'lin.rstrip', 'list', 'list', 'list', 'carac.reverse', 'mode', 'mode', 'Cursor.HideCursor', 'type', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_terminal_size', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_thread', 'th.start', '_sleep', 'System.Clear', 'Cursor.ShowCursor', 'mode', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'type', '_stdout.flush', '_sleep', 'line.strip', 'Center._xspaces', 'Center._yspaces', 'Center._xspaces', 'Center._yspaces', 'Center.XCenter', 'len', 'len', 'max', 'max', 'range', 'range', '_stdout.write', '_stdout.flush', '_stdout.write', '_stdout.flush', 'text.lstrip', 'rainbow.append', 'int', 'int', 'int', 'sum', 'len', 'sum', 'len', 'sum', 'len', 'colors.index', 'final.append', 'content.replace', 'color.append', 'content.replace', 'color.append', '__import__', '_sleep', 'Colorate.Color', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'Anime._anime', 'list', 'type', 'list', 'type', '_stdout.write', '_stdout.write', 'text.splitlines', 'text.splitlines', 'len', '_terminal_size', 'len', '_terminal_size', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'Center.XCenter', 'range', 'range', 'range', 'len', 'str', 'content.replace', 'color.append', 'str', 'content.replace', 'color.append', '__import__', '_MakeColors._makeansi', 'len', '_MakeColors._makeansi', 'len', 'len', 'len', 'color.append', 'print', 'print', 'print', 'print', 'len', 'len', 'color.append', '_MakeColors._makeansi', 'text.splitlines', 'text.splitlines', 'max', 'Center.BadAlignment', 'text.splitlines', 'Center.BadAlignment', 'v.strip', 'super', 'banner1.splitlines', 'banner2.splitlines', 'banner1.splitlines', 'banner2.splitlines', 'super', 'int', 'str', 'str', '_MakeColors._makeansi', '_MakeColors._getspaces', 'car.strip', '_MakeColors._getspaces', 'car.strip', '_MakeColors._makeansi', 'Center.XCenter', 'mode', 'Center.XCenter', '_terminal_size', 'text.splitlines', 'len', 'int', 'int', 'spaces.join', 'spaces.join', '_MakeColors._getspaces', '_MakeColors._getspaces', 'lin.strip', 'len', '_MakeColors._getspaces', 'car.strip', 'mode', 'len', 'int', 'spaces.join', 'spaces.join', 'col.replace', 'colors.index', '_MakeColors._makeansi', 'max', 'text.splitlines', 'max', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'int', 'len', 'lin.strip', 'len', 'len', 'len', 'len', 'len', 'text.splitlines', 'text.splitlines']",
            "n_tokens": 1401,
            "embedding": "[ 0.02013548 -0.01750053 -0.00550593 ... -0.00781044 -0.01855622\n -0.00989608]",
            "cluster": "8",
            "id": 4941,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/pystyte/3.5.5/pystyte-3.5.5.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/pystyte/3.5.5/pystyte-3.5.5.tar_extracted",
            "name": "pystyte",
            "version": "3.5.5",
            "published_at": "2022-10-15T18:32:33.665Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "A mod for style",
            "author": "Ayumu",
            "maintainers": NaN,
            "repository_url": "Contains a homepage URL but not a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "aa280f545b06f9a992fe09a83a2b658af7c03c5cca1185739d11d70ee5a39050"
        },
        {
            "name_version": "colorsama-0.4.5",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/colorsama/0.4.5/colorsama-0.4.5.tar_extracted/colorsama-0.4.5.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['AnsiFore', 'AnsiBack', 'AnsiStyle', 'AnsiCursor', 'init', 'print', 'print', 'init', 'print', 'print', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'argparse.ArgumentParser', 'parser.add_argument', 'parser.add_argument', 'parser.add_argument', 'parser.add_argument', 'parser.parse_args', 'print', 'normpath', 'setup', 'WinTerm', 're.compile', 're.compile', 'init', 'LibraryLoader', 'print', 'printable.strip', 'colorama.init', 'print', 'print', 'range', 'print', 'range', 'print', 'main', 'colorama.init', 'print', 'print', 'print', 'print', 'main', 'print', 'main', 'list', 'join', 're.search', 'RuntimeError', '_get_version_match', 'dir', 'getattr', 'StreamWrapper', 'self.get_win32_calls', 'dict', 'self.convert_osc', 'self.write_plain_text', 'any', 'ValueError', 'wrap_stream', 'wrap_stream', 'atexit.register', 'deinit', 'AnsiToWin32', 'wrapper.should_wrap', 'POINTER', 'POINTER', 'POINTER', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', 'bool', 'any', '_GetStdHandle', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', '_GetStdHandle', '_SetConsoleTextAttribute', 'COORD', 'COORD', '_GetStdHandle', '_SetConsoleCursorPosition', '_GetStdHandle', 'c_char', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputCharacterA', '_GetStdHandle', 'wintypes.WORD', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputAttribute', '_SetConsoleTitleW', '__import__', 'self.set_attrs', 'self.set_attrs', 'self.set_console', 'self.set_console', 'self.set_console', 'self.set_console', 'win32.SetConsoleTextAttribute', 'win32.SetConsoleCursorPosition', 'self.get_position', 'win32.SetConsoleCursorPosition', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.SetConsoleTitle', 'AnsiToWin32', 'Cursor.POS', 'print', 'print', 'colorama_text', 'print', 'print', 'map', 'format', 'format', 'format', 'dirname', 'open', 'fp.read', 'version_match.group', 'read_file', 'get_version', 'read_file', 'str', 'str', 'str', 'stream_isatty', 'winapi_test', 'self.write_and_convert', 'self.reset_all', 'self.call_win32', 'match.span', 'self.write_plain_text', 'self.convert_ansi', 'len', 'self.extract_params', 'self.call_win32', 'tuple', 'tuple', 'match.span', 'match.groups', 'byref', 'byref', 'char.encode', 'byref', 'byref', '__import__', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.SetConsoleCursorPosition', 'self.get_attrs', 'item.upper', 'name.startswith', 'getattr', 'setattr', 'str', 'str', 'str', 'str', 'str', 'len', 'len', 'winterm.erase_screen', 'AnsiToWin32', '_winapi_test', 'GetConsoleScreenBufferInfo', '__import__', 'win32.COORD', 'win32.COORD', 'pos', 'pos', 'pos', 'forward', 'x.lower', 'find', 'code_to_chars', 'match.groups', 'int', 'dict', 'func', 'winterm.erase_line', 'paramstring.count', 'paramstring.split', 'win32.COORD', 'win32.COORD', 'pos', 'pos', 'pos', 'choice', 'choice', 'choice', 'choice', 'find', 'find', 'str', 'int', 'paramstring.split', 'paramstring.split', 'winterm.set_cursor_position', 'winterm.set_title', '_GetStdHandle', '_GetStdHandle', 'randint', 'randint', 'down', 'len', 'len', 'winterm.cursor_adjust', 'back', 'forward', 'back', 'up', 'forward', 'up']",
            "n_tokens": 1024,
            "embedding": "[-0.0071658  -0.00607866 -0.00924268 ... -0.0025094  -0.02889701\n -0.00931282]",
            "cluster": "8",
            "id": 3984,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/colorsama/0.4.5/colorsama-0.4.5.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/colorsama/0.4.5/colorsama-0.4.5.tar_extracted",
            "name": "colorsama",
            "version": "0.4.5",
            "published_at": "2022-10-23T01:33:00.825Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Cross-platform colored terminal text.",
            "author": "Jonathan Hartley",
            "maintainers": "Arnon Yaari",
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "ffe46f7dca2f0d77e64e787e088fcd8f220c462e72367f7f61422877d426c8aa"
        },
        {
            "name_version": "felpesviadinho-0.4.5",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/felpesviadinho/0.4.5/felpesviadinho-0.4.5.tar_extracted/felpesviadinho-0.4.5.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['init', 'print', 'print', 'init', 'print', 'print', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'argparse.ArgumentParser', 'parser.add_argument', 'parser.add_argument', 'parser.add_argument', 'parser.add_argument', 'parser.parse_args', 'print', 'normpath', 'AnsiFore', 'AnsiBack', 'AnsiStyle', 'AnsiCursor', 'setup', 'print', 'printable.strip', 'colorama.init', 'print', 'print', 'range', 'print', 'range', 'print', 'main', 'colorama.init', 'print', 'print', 'print', 'print', 'main', 'print', 'main', 'list', 'join', 'WinTerm', 're.compile', 're.compile', 'init', 'LibraryLoader', 're.search', 'RuntimeError', '_get_version_match', '__import__', 'AnsiToWin32', 'Cursor.POS', 'print', 'print', 'colorama_text', 'print', 'print', 'map', 'format', 'format', 'format', 'dirname', '__import__', 'dir', 'getattr', 'StreamWrapper', 'self.get_win32_calls', 'dict', 'self.convert_osc', 'self.write_plain_text', 'any', 'ValueError', 'wrap_stream', 'wrap_stream', 'atexit.register', 'deinit', 'AnsiToWin32', 'wrapper.should_wrap', 'POINTER', 'POINTER', 'POINTER', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', 'bool', 'any', '_GetStdHandle', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', '_GetStdHandle', '_SetConsoleTextAttribute', 'COORD', 'COORD', '_GetStdHandle', '_SetConsoleCursorPosition', '_GetStdHandle', 'c_char', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputCharacterA', '_GetStdHandle', 'wintypes.WORD', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputAttribute', '_SetConsoleTitleW', 'self.set_attrs', 'self.set_attrs', 'self.set_console', 'self.set_console', 'self.set_console', 'self.set_console', 'win32.SetConsoleTextAttribute', 'win32.SetConsoleCursorPosition', 'self.get_position', 'win32.SetConsoleCursorPosition', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.SetConsoleTitle', 'open', 'fp.read', 'version_match.group', 'read_file', 'get_version', 'read_file', '__import__', 'item.upper', '__import__', 'str', 'str', 'str', 'stream_isatty', 'winapi_test', 'self.write_and_convert', 'self.reset_all', 'self.call_win32', 'match.span', 'self.write_plain_text', 'self.convert_ansi', 'len', 'self.extract_params', 'self.call_win32', 'tuple', 'tuple', 'match.span', 'match.groups', 'byref', 'byref', 'char.encode', 'byref', 'byref', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.SetConsoleCursorPosition', 'self.get_attrs', '__import__', 'pos', 'pos', 'pos', 'forward', 'x.lower', 'find', '__import__', 'name.startswith', 'getattr', 'setattr', 'str', 'str', 'str', 'str', 'str', 'len', 'len', 'winterm.erase_screen', 'AnsiToWin32', '_winapi_test', 'GetConsoleScreenBufferInfo', 'win32.COORD', 'win32.COORD', 'pos', 'pos', 'pos', 'choice', 'choice', 'choice', 'choice', 'find', 'find', 'code_to_chars', 'match.groups', 'int', 'dict', 'func', 'winterm.erase_line', 'paramstring.count', 'paramstring.split', 'win32.COORD', 'win32.COORD', 'randint', 'randint', 'down', 'str', 'int', 'paramstring.split', 'paramstring.split', 'winterm.set_cursor_position', 'winterm.set_title', '_GetStdHandle', '_GetStdHandle', 'back', 'len', 'len', 'winterm.cursor_adjust', 'forward', 'back', 'up', 'forward', 'up']",
            "n_tokens": 1033,
            "embedding": "[-0.00272617 -0.01007834 -0.00590199 ... -0.00567514 -0.02725364\n -0.01289768]",
            "cluster": "8",
            "id": 4103,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/felpesviadinho/0.4.5/felpesviadinho-0.4.5.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/felpesviadinho/0.4.5/felpesviadinho-0.4.5.tar_extracted",
            "name": "felpesviadinho",
            "version": "0.4.5",
            "published_at": "2022-10-23T03:13:05.581Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Cross-platform colored terminal text.",
            "author": "Jonathan Hartley",
            "maintainers": "Arnon Yaari",
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "e864397ea33d8841f7a92955c310ef002041a9b4545168a5ee291c216ad1d397"
        },
        {
            "name_version": "colorwin-0.4.5",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/colorwin/0.4.5/colorwin-0.4.5.tar_extracted/colorwin-0.4.5.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['AnsiFore', 'AnsiBack', 'AnsiStyle', 'AnsiCursor', 'init', 'print', 'print', 'init', 'print', 'print', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'argparse.ArgumentParser', 'parser.add_argument', 'parser.add_argument', 'parser.add_argument', 'parser.add_argument', 'parser.parse_args', 'print', 'normpath', 'setup', 'print', 'WinTerm', 're.compile', 're.compile', 'init', 'LibraryLoader', 'print', 'printable.strip', 'colorama.init', 'print', 'print', 'range', 'print', 'range', 'print', 'main', 'colorama.init', 'print', 'print', 'print', 'print', 'main', 'print', 'main', 'list', 'join', 're.search', 'RuntimeError', '_get_version_match', 'dir', 'getattr', 'StreamWrapper', 'self.get_win32_calls', 'dict', 'self.convert_osc', 'self.write_plain_text', 'any', 'ValueError', 'wrap_stream', 'wrap_stream', 'atexit.register', 'deinit', 'AnsiToWin32', 'wrapper.should_wrap', 'POINTER', 'POINTER', 'POINTER', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', 'bool', 'any', '_GetStdHandle', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', '_GetStdHandle', '_SetConsoleTextAttribute', 'COORD', 'COORD', '_GetStdHandle', '_SetConsoleCursorPosition', '_GetStdHandle', 'c_char', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputCharacterA', '_GetStdHandle', 'wintypes.WORD', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputAttribute', '_SetConsoleTitleW', 'self.set_attrs', 'self.set_attrs', 'self.set_console', 'self.set_console', 'self.set_console', 'self.set_console', 'win32.SetConsoleTextAttribute', 'win32.SetConsoleCursorPosition', 'self.get_position', 'win32.SetConsoleCursorPosition', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.SetConsoleTitle', 'AnsiToWin32', 'Cursor.POS', 'print', 'print', 'colorama_text', 'print', 'print', 'map', 'format', 'format', 'format', 'dirname', 'open', 'fp.read', 'version_match.group', 'read_file', 'get_version', 'read_file', 'str', 'str', 'str', '__import__', 'stream_isatty', 'winapi_test', 'self.write_and_convert', 'self.reset_all', 'self.call_win32', 'match.span', 'self.write_plain_text', 'self.convert_ansi', 'len', 'self.extract_params', 'self.call_win32', 'tuple', 'tuple', 'match.span', 'match.groups', 'byref', 'byref', 'char.encode', 'byref', 'byref', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.SetConsoleCursorPosition', 'self.get_attrs', 'item.upper', 'name.startswith', 'getattr', 'setattr', 'str', 'str', 'str', 'str', 'str', '__import__', 'len', 'len', 'winterm.erase_screen', 'AnsiToWin32', '_winapi_test', 'GetConsoleScreenBufferInfo', 'win32.COORD', 'win32.COORD', 'pos', 'pos', 'pos', 'forward', 'x.lower', 'find', 'code_to_chars', '__import__', 'match.groups', 'int', 'dict', 'func', 'winterm.erase_line', 'paramstring.count', 'paramstring.split', 'win32.COORD', 'win32.COORD', 'pos', 'pos', 'pos', 'choice', 'choice', 'choice', 'choice', 'find', 'find', 'str', 'int', 'paramstring.split', 'paramstring.split', 'winterm.set_cursor_position', 'winterm.set_title', '_GetStdHandle', '_GetStdHandle', 'randint', 'randint', 'down', 'len', 'len', 'winterm.cursor_adjust', 'back', 'forward', 'back', 'up', 'forward', 'up']",
            "n_tokens": 1027,
            "embedding": "[-0.00892091 -0.0044721  -0.00868022 ... -0.00322597 -0.02956556\n -0.00981378]",
            "cluster": "8",
            "id": 2358,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/colorwin/0.4.5/colorwin-0.4.5.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/colorwin/0.4.5/colorwin-0.4.5.tar_extracted",
            "name": "colorwin",
            "version": "0.4.5",
            "published_at": "2022-10-23T04:29:00.789Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Cross-platform colored terminal text.",
            "author": "Jonathan Hartley",
            "maintainers": "Arnon Yaari",
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "39bc32398099ba9bcdaa58313dbe5722cc3247ea3f8e7579c68ab491767def4b"
        },
        {
            "name_version": "colorwin-6.6.6",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/colorwin/6.6.6/colorwin-6.6.6.tar_extracted/colorwin-6.6.6.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['AnsiFore', 'AnsiBack', 'AnsiStyle', 'AnsiCursor', 'init', 'print', 'print', 'init', 'print', 'print', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'argparse.ArgumentParser', 'parser.add_argument', 'parser.add_argument', 'parser.add_argument', 'parser.add_argument', 'parser.parse_args', 'print', 'normpath', 'setup', 'print', 'WinTerm', 're.compile', 're.compile', 'init', 'LibraryLoader', 'print', 'printable.strip', 'colorama.init', 'print', 'print', 'range', 'print', 'range', 'print', 'main', 'colorama.init', 'print', 'print', 'print', 'print', 'main', 'print', 'main', 'list', 'join', 're.search', 'RuntimeError', '_get_version_match', 'dir', 'getattr', 'StreamWrapper', 'self.get_win32_calls', 'dict', 'self.convert_osc', 'self.write_plain_text', 'any', 'ValueError', 'wrap_stream', 'wrap_stream', 'atexit.register', 'deinit', 'AnsiToWin32', 'wrapper.should_wrap', 'POINTER', 'POINTER', 'POINTER', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', 'bool', 'any', '_GetStdHandle', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', '_GetStdHandle', '_SetConsoleTextAttribute', 'COORD', 'COORD', '_GetStdHandle', '_SetConsoleCursorPosition', '_GetStdHandle', 'c_char', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputCharacterA', '_GetStdHandle', 'wintypes.WORD', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputAttribute', '_SetConsoleTitleW', 'self.set_attrs', 'self.set_attrs', 'self.set_console', 'self.set_console', 'self.set_console', 'self.set_console', 'win32.SetConsoleTextAttribute', 'win32.SetConsoleCursorPosition', 'self.get_position', 'win32.SetConsoleCursorPosition', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.SetConsoleTitle', 'AnsiToWin32', 'Cursor.POS', 'print', 'print', 'colorama_text', 'print', 'print', 'map', 'format', 'format', 'format', 'dirname', 'open', 'fp.read', 'version_match.group', 'read_file', 'get_version', 'read_file', 'str', 'str', 'str', '__import__', 'stream_isatty', 'winapi_test', 'self.write_and_convert', 'self.reset_all', 'self.call_win32', 'match.span', 'self.write_plain_text', 'self.convert_ansi', 'len', 'self.extract_params', 'self.call_win32', 'tuple', 'tuple', 'match.span', 'match.groups', 'byref', 'byref', 'char.encode', 'byref', 'byref', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.SetConsoleCursorPosition', 'self.get_attrs', 'item.upper', 'name.startswith', 'getattr', 'setattr', 'str', 'str', 'str', 'str', 'str', '__import__', 'len', 'len', 'winterm.erase_screen', 'AnsiToWin32', '_winapi_test', 'GetConsoleScreenBufferInfo', 'win32.COORD', 'win32.COORD', 'pos', 'pos', 'pos', 'forward', 'x.lower', 'find', 'code_to_chars', '__import__', 'match.groups', 'int', 'dict', 'func', 'winterm.erase_line', 'paramstring.count', 'paramstring.split', 'win32.COORD', 'win32.COORD', 'pos', 'pos', 'pos', 'choice', 'choice', 'choice', 'choice', 'find', 'find', 'str', 'int', 'paramstring.split', 'paramstring.split', 'winterm.set_cursor_position', 'winterm.set_title', '_GetStdHandle', '_GetStdHandle', 'randint', 'randint', 'down', 'len', 'len', 'winterm.cursor_adjust', 'back', 'forward', 'back', 'up', 'forward', 'up']",
            "n_tokens": 1027,
            "embedding": "[-0.00962644 -0.00456112 -0.00893607 ... -0.00286621 -0.02967829\n -0.00980485]",
            "cluster": "8",
            "id": 2355,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/colorwin/6.6.6/colorwin-6.6.6.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/colorwin/6.6.6/colorwin-6.6.6.tar_extracted",
            "name": "colorwin",
            "version": "6.6.6",
            "published_at": "2022-10-23T04:49:23.834Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Cross-platform colored terminal text.",
            "author": "Jonathan Hartley",
            "maintainers": "Arnon Yaari",
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "4b987d8f098fbada4b82cca39026da2a7062bd6128d714194ba2445263d84da0"
        },
        {
            "name_version": "colorwin-6.6.7",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/colorwin/6.6.7/colorwin-6.6.7.tar_extracted/colorwin-6.6.7.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['AnsiFore', 'AnsiBack', 'AnsiStyle', 'AnsiCursor', 'init', 'print', 'print', 'init', 'print', 'print', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'argparse.ArgumentParser', 'parser.add_argument', 'parser.add_argument', 'parser.add_argument', 'parser.add_argument', 'parser.parse_args', 'print', 'normpath', 'print', 'setup', 'WinTerm', 're.compile', 're.compile', 'init', 'LibraryLoader', 'print', 'printable.strip', 'colorama.init', 'print', 'print', 'range', 'print', 'range', 'print', 'main', 'colorama.init', 'print', 'print', 'print', 'print', 'main', 'print', 'main', 'list', 'join', 're.search', 'RuntimeError', '_get_version_match', 'dir', 'getattr', 'StreamWrapper', 'self.get_win32_calls', 'dict', 'self.convert_osc', 'self.write_plain_text', 'any', 'ValueError', 'wrap_stream', 'wrap_stream', 'atexit.register', 'deinit', 'AnsiToWin32', 'wrapper.should_wrap', 'POINTER', 'POINTER', 'POINTER', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', 'bool', 'any', '_GetStdHandle', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', '_GetStdHandle', '_SetConsoleTextAttribute', 'COORD', 'COORD', '_GetStdHandle', '_SetConsoleCursorPosition', '_GetStdHandle', 'c_char', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputCharacterA', '_GetStdHandle', 'wintypes.WORD', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputAttribute', '_SetConsoleTitleW', 'self.set_attrs', 'self.set_attrs', 'self.set_console', 'self.set_console', 'self.set_console', 'self.set_console', 'win32.SetConsoleTextAttribute', 'win32.SetConsoleCursorPosition', 'self.get_position', 'win32.SetConsoleCursorPosition', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.SetConsoleTitle', 'AnsiToWin32', 'Cursor.POS', 'print', 'print', 'colorama_text', 'print', 'print', 'map', 'format', 'format', 'format', 'dirname', '__import__', 'open', 'fp.read', 'version_match.group', 'read_file', 'get_version', 'read_file', 'str', 'str', 'str', 'stream_isatty', 'winapi_test', 'self.write_and_convert', 'self.reset_all', 'self.call_win32', 'match.span', 'self.write_plain_text', 'self.convert_ansi', 'len', 'self.extract_params', 'self.call_win32', 'tuple', 'tuple', 'match.span', 'match.groups', 'byref', 'byref', 'char.encode', 'byref', 'byref', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.SetConsoleCursorPosition', 'self.get_attrs', 'item.upper', '__import__', 'name.startswith', 'getattr', 'setattr', 'str', 'str', 'str', 'str', 'str', 'len', 'len', 'winterm.erase_screen', 'AnsiToWin32', '_winapi_test', 'GetConsoleScreenBufferInfo', 'win32.COORD', 'win32.COORD', 'pos', 'pos', 'pos', 'forward', 'x.lower', 'find', '__import__', 'code_to_chars', 'match.groups', 'int', 'dict', 'func', 'winterm.erase_line', 'paramstring.count', 'paramstring.split', 'win32.COORD', 'win32.COORD', 'pos', 'pos', 'pos', 'choice', 'choice', 'choice', 'choice', 'find', 'find', 'str', 'int', 'paramstring.split', 'paramstring.split', 'winterm.set_cursor_position', 'winterm.set_title', '_GetStdHandle', '_GetStdHandle', 'randint', 'randint', 'down', 'len', 'len', 'winterm.cursor_adjust', 'back', 'forward', 'back', 'up', 'forward', 'up']",
            "n_tokens": 1027,
            "embedding": "[-0.00991629 -0.00396497 -0.01003223 ... -0.00121925 -0.02878275\n -0.00915112]",
            "cluster": "8",
            "id": 2356,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/colorwin/6.6.7/colorwin-6.6.7.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/colorwin/6.6.7/colorwin-6.6.7.tar_extracted",
            "name": "colorwin",
            "version": "6.6.7",
            "published_at": "2022-10-23T05:09:00.323Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Cross-platform colored terminal text.",
            "author": "Jonathan Hartley",
            "maintainers": "Arnon Yaari",
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "cd9e941c764617d6ae3a2615b7fd1a25414af010026ee08805fd1c1915cb2bb2"
        },
        {
            "name_version": "colorwin-6.6.8",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/colorwin/6.6.8/colorwin-6.6.8.tar_extracted/colorwin-6.6.8.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['print', 'AnsiFore', 'AnsiBack', 'AnsiStyle', 'AnsiCursor', 'init', 'print', 'print', 'init', 'print', 'print', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'argparse.ArgumentParser', 'parser.add_argument', 'parser.add_argument', 'parser.add_argument', 'parser.add_argument', 'parser.parse_args', 'print', 'normpath', 'setup', 'WinTerm', 're.compile', 're.compile', 'init', 'LibraryLoader', 'print', 'printable.strip', 'colorama.init', 'print', 'print', 'range', 'print', 'range', 'print', 'main', 'colorama.init', 'print', 'print', 'print', 'print', 'main', 'print', 'main', 'list', 'join', 're.search', 'RuntimeError', '_get_version_match', '__import__', 'dir', 'getattr', 'StreamWrapper', 'self.get_win32_calls', 'dict', 'self.convert_osc', 'self.write_plain_text', 'any', 'ValueError', 'wrap_stream', 'wrap_stream', 'atexit.register', 'deinit', 'AnsiToWin32', 'wrapper.should_wrap', 'POINTER', 'POINTER', 'POINTER', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', 'bool', 'any', '_GetStdHandle', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', '_GetStdHandle', '_SetConsoleTextAttribute', 'COORD', 'COORD', '_GetStdHandle', '_SetConsoleCursorPosition', '_GetStdHandle', 'c_char', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputCharacterA', '_GetStdHandle', 'wintypes.WORD', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputAttribute', '_SetConsoleTitleW', 'self.set_attrs', 'self.set_attrs', 'self.set_console', 'self.set_console', 'self.set_console', 'self.set_console', 'win32.SetConsoleTextAttribute', 'win32.SetConsoleCursorPosition', 'self.get_position', 'win32.SetConsoleCursorPosition', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.SetConsoleTitle', 'AnsiToWin32', 'Cursor.POS', 'print', 'print', 'colorama_text', 'print', 'print', 'map', 'format', 'format', 'format', 'dirname', 'open', 'fp.read', 'version_match.group', 'read_file', 'get_version', 'read_file', '__import__', 'str', 'str', 'str', 'stream_isatty', 'winapi_test', 'self.write_and_convert', 'self.reset_all', 'self.call_win32', 'match.span', 'self.write_plain_text', 'self.convert_ansi', 'len', 'self.extract_params', 'self.call_win32', 'tuple', 'tuple', 'match.span', 'match.groups', 'byref', 'byref', 'char.encode', 'byref', 'byref', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.SetConsoleCursorPosition', 'self.get_attrs', 'item.upper', '__import__', 'name.startswith', 'getattr', 'setattr', 'str', 'str', 'str', 'str', 'str', 'len', 'len', 'winterm.erase_screen', 'AnsiToWin32', '_winapi_test', 'GetConsoleScreenBufferInfo', 'win32.COORD', 'win32.COORD', 'pos', 'pos', 'pos', 'forward', 'x.lower', 'find', 'code_to_chars', 'match.groups', 'int', 'dict', 'func', 'winterm.erase_line', 'paramstring.count', 'paramstring.split', 'win32.COORD', 'win32.COORD', 'pos', 'pos', 'pos', 'choice', 'choice', 'choice', 'choice', 'find', 'find', 'str', 'int', 'paramstring.split', 'paramstring.split', 'winterm.set_cursor_position', 'winterm.set_title', '_GetStdHandle', '_GetStdHandle', 'randint', 'randint', 'down', 'len', 'len', 'winterm.cursor_adjust', 'back', 'forward', 'back', 'up', 'forward', 'up']",
            "n_tokens": 1027,
            "embedding": "[-0.00733907 -0.00426726 -0.00856548 ... -0.00106005 -0.0272981\n -0.00945529]",
            "cluster": "8",
            "id": 2354,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/colorwin/6.6.8/colorwin-6.6.8.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/colorwin/6.6.8/colorwin-6.6.8.tar_extracted",
            "name": "colorwin",
            "version": "6.6.8",
            "published_at": "2022-10-23T05:29:01.135Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Cross-platform colored terminal text.",
            "author": "Jonathan Hartley",
            "maintainers": "Arnon Yaari",
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "a5c4d294f59db4f4473dc183b291e5d3f9ead3d1a820af8b73445370b818e52e"
        },
        {
            "name_version": "colorwin-6.6.9",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/colorwin/6.6.9/colorwin-6.6.9.tar_extracted/colorwin-6.6.9.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['AnsiFore', 'AnsiBack', 'AnsiStyle', 'AnsiCursor', 'init', 'print', 'print', 'init', 'print', 'print', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'argparse.ArgumentParser', 'parser.add_argument', 'parser.add_argument', 'parser.add_argument', 'parser.add_argument', 'parser.parse_args', 'print', 'normpath', 'setup', 'print', 'WinTerm', 're.compile', 're.compile', 'init', 'LibraryLoader', 'print', 'printable.strip', 'colorama.init', 'print', 'print', 'range', 'print', 'range', 'print', 'main', 'colorama.init', 'print', 'print', 'print', 'print', 'main', 'print', 'main', 'list', 'join', 're.search', 'RuntimeError', '_get_version_match', 'dir', 'getattr', 'StreamWrapper', 'self.get_win32_calls', 'dict', 'self.convert_osc', 'self.write_plain_text', 'any', 'ValueError', 'wrap_stream', 'wrap_stream', 'atexit.register', 'deinit', 'AnsiToWin32', 'wrapper.should_wrap', 'POINTER', 'POINTER', 'POINTER', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', 'bool', 'any', '_GetStdHandle', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', '_GetStdHandle', '_SetConsoleTextAttribute', 'COORD', 'COORD', '_GetStdHandle', '_SetConsoleCursorPosition', '_GetStdHandle', 'c_char', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputCharacterA', '_GetStdHandle', 'wintypes.WORD', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputAttribute', '_SetConsoleTitleW', 'self.set_attrs', 'self.set_attrs', 'self.set_console', 'self.set_console', 'self.set_console', 'self.set_console', 'win32.SetConsoleTextAttribute', 'win32.SetConsoleCursorPosition', 'self.get_position', 'win32.SetConsoleCursorPosition', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.SetConsoleTitle', 'AnsiToWin32', 'Cursor.POS', 'print', 'print', 'colorama_text', 'print', 'print', 'map', 'format', 'format', 'format', 'dirname', 'open', 'fp.read', 'version_match.group', 'read_file', 'get_version', 'read_file', 'str', 'str', 'str', '__import__', 'stream_isatty', 'winapi_test', 'self.write_and_convert', 'self.reset_all', 'self.call_win32', 'match.span', 'self.write_plain_text', 'self.convert_ansi', 'len', 'self.extract_params', 'self.call_win32', 'tuple', 'tuple', 'match.span', 'match.groups', 'byref', 'byref', 'char.encode', 'byref', 'byref', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.SetConsoleCursorPosition', 'self.get_attrs', 'item.upper', 'name.startswith', 'getattr', 'setattr', 'str', 'str', 'str', 'str', 'str', '__import__', 'len', 'len', 'winterm.erase_screen', 'AnsiToWin32', '_winapi_test', 'GetConsoleScreenBufferInfo', 'win32.COORD', 'win32.COORD', 'pos', 'pos', 'pos', 'forward', 'x.lower', 'find', 'code_to_chars', '__import__', 'match.groups', 'int', 'dict', 'func', 'winterm.erase_line', 'paramstring.count', 'paramstring.split', 'win32.COORD', 'win32.COORD', 'pos', 'pos', 'pos', 'choice', 'choice', 'choice', 'choice', 'find', 'find', 'str', 'int', 'paramstring.split', 'paramstring.split', 'winterm.set_cursor_position', 'winterm.set_title', '_GetStdHandle', '_GetStdHandle', 'randint', 'randint', 'down', 'len', 'len', 'winterm.cursor_adjust', 'back', 'forward', 'back', 'up', 'forward', 'up']",
            "n_tokens": 1027,
            "embedding": "[-0.00923475 -0.00420858 -0.00882206 ... -0.00315546 -0.029682\n -0.0096085 ]",
            "cluster": "8",
            "id": 2357,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/colorwin/6.6.9/colorwin-6.6.9.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/colorwin/6.6.9/colorwin-6.6.9.tar_extracted",
            "name": "colorwin",
            "version": "6.6.9",
            "published_at": "2022-10-23T05:30:33.397Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Cross-platform colored terminal text.",
            "author": "Jonathan Hartley",
            "maintainers": "Arnon Yaari",
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "5e0bb809a91ecfe5e46560da322bf256328064713c11a70ffefb37dfa6608d19"
        },
        {
            "name_version": "twyne-0.0.1",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/twyne/0.0.1/twyne-0.0.1.tar_extracted/twyne-0.0.1.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['init', 'print', 'print', 'init', 'print', 'print', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'argparse.ArgumentParser', 'parser.add_argument', 'parser.add_argument', 'parser.add_argument', 'parser.add_argument', 'parser.parse_args', 'print', 'normpath', 'print', 'setup', 'AnsiFore', 'AnsiBack', 'AnsiStyle', 'AnsiCursor', 'print', 'printable.strip', 'twyne.init', 'print', 'print', 'range', 'print', 'range', 'print', 'main', 'twyne.init', 'print', 'print', 'print', 'print', 'main', 'print', 'main', 'list', 'join', 're.search', 'RuntimeError', '_get_version_match', 'WinTerm', 're.compile', 're.compile', 'init', 'LibraryLoader', 'AnsiToWin32', 'Cursor.POS', 'print', 'print', 'express_text', 'print', 'print', 'map', 'format', 'format', 'format', 'dirname', '__import__', 'open', 'fp.read', 'version_match.group', 'read_file', 'get_version', 'read_file', 'dir', 'getattr', 'StreamWrapper', 'self.get_win32_calls', 'dict', 'self.convert_osc', 'self.write_plain_text', 'any', 'ValueError', 'wrap_stream', 'wrap_stream', 'atexit.register', 'deinit', 'AnsiToWin32', 'wrapper.should_wrap', 'POINTER', 'POINTER', 'POINTER', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', 'bool', 'any', '_GetStdHandle', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', '_GetStdHandle', '_SetConsoleTextAttribute', 'COORD', 'COORD', '_GetStdHandle', '_SetConsoleCursorPosition', '_GetStdHandle', 'c_char', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputCharacterA', '_GetStdHandle', 'wintypes.WORD', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputAttribute', '_SetConsoleTitleW', 'self.set_attrs', 'self.set_attrs', 'self.set_console', 'self.set_console', 'self.set_console', 'self.set_console', 'win32.SetConsoleTextAttribute', 'win32.SetConsoleCursorPosition', 'self.get_position', 'win32.SetConsoleCursorPosition', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.SetConsoleTitle', 'item.upper', '__import__', 'str', 'str', 'str', 'stream_isatty', 'winapi_test', 'self.write_and_convert', 'self.reset_all', 'self.call_win32', 'match.span', 'self.write_plain_text', 'self.convert_ansi', 'len', 'self.extract_params', 'self.call_win32', 'tuple', 'tuple', 'match.span', 'match.groups', 'byref', 'byref', 'char.encode', 'byref', 'byref', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.SetConsoleCursorPosition', 'self.get_attrs', 'pos', 'pos', 'pos', 'forward', 'x.lower', 'find', '__import__', 'name.startswith', 'getattr', 'setattr', 'str', 'str', 'str', 'str', 'str', 'len', 'len', 'winterm.erase_screen', 'AnsiToWin32', '_winapi_test', 'GetConsoleScreenBufferInfo', 'win32.COORD', 'win32.COORD', 'pos', 'pos', 'pos', 'choice', 'choice', 'choice', 'choice', 'find', 'find', 'code_to_chars', 'match.groups', 'int', 'dict', 'func', 'winterm.erase_line', 'paramstring.count', 'paramstring.split', 'win32.COORD', 'win32.COORD', 'randint', 'randint', 'down', 'str', 'int', 'paramstring.split', 'paramstring.split', 'winterm.set_cursor_position', 'winterm.set_title', '_GetStdHandle', '_GetStdHandle', 'back', 'len', 'len', 'winterm.cursor_adjust', 'forward', 'back', 'up', 'forward', 'up']",
            "n_tokens": 1026,
            "embedding": "[ 0.00448183 -0.00636955 -0.0037653  ... -0.00640609 -0.03036599\n -0.0158569 ]",
            "cluster": "8",
            "id": 3091,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/twyne/0.0.1/twyne-0.0.1.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/twyne/0.0.1/twyne-0.0.1.tar_extracted",
            "name": "twyne",
            "version": "0.0.1",
            "published_at": "2022-10-23T22:10:00.702Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Cross-platform colored terminal text.",
            "author": "Jonathan Hartley",
            "maintainers": "Arnon Yaari",
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "1ddd3768e7573bc34376dc110ac3c388b5fed14c72d637721837a39a4d17ecd3"
        },
        {
            "name_version": "twyne-0.0.2",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/twyne/0.0.2/twyne-0.0.2.tar_extracted/twyne-0.0.2.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['init', 'print', 'print', 'init', 'print', 'print', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'argparse.ArgumentParser', 'parser.add_argument', 'parser.add_argument', 'parser.add_argument', 'parser.add_argument', 'parser.parse_args', 'print', 'normpath', 'print', 'setup', 'AnsiFore', 'AnsiBack', 'AnsiStyle', 'AnsiCursor', 'print', 'printable.strip', 'twyne.init', 'print', 'print', 'range', 'print', 'range', 'print', 'main', 'twyne.init', 'print', 'print', 'print', 'print', 'main', 'print', 'main', 'list', 'join', 're.search', 'RuntimeError', '_get_version_match', 'WinTerm', 're.compile', 're.compile', 'init', 'LibraryLoader', 'AnsiToWin32', 'Cursor.POS', 'print', 'print', 'express_text', 'print', 'print', 'map', 'format', 'format', 'format', 'dirname', '__import__', 'open', 'fp.read', 'version_match.group', 'read_file', 'get_version', 'read_file', 'dir', 'getattr', 'StreamWrapper', 'self.get_win32_calls', 'dict', 'self.convert_osc', 'self.write_plain_text', 'any', 'ValueError', 'wrap_stream', 'wrap_stream', 'atexit.register', 'deinit', 'AnsiToWin32', 'wrapper.should_wrap', 'POINTER', 'POINTER', 'POINTER', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', 'bool', 'any', '_GetStdHandle', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', '_GetStdHandle', '_SetConsoleTextAttribute', 'COORD', 'COORD', '_GetStdHandle', '_SetConsoleCursorPosition', '_GetStdHandle', 'c_char', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputCharacterA', '_GetStdHandle', 'wintypes.WORD', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputAttribute', '_SetConsoleTitleW', 'self.set_attrs', 'self.set_attrs', 'self.set_console', 'self.set_console', 'self.set_console', 'self.set_console', 'win32.SetConsoleTextAttribute', 'win32.SetConsoleCursorPosition', 'self.get_position', 'win32.SetConsoleCursorPosition', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.SetConsoleTitle', 'item.upper', '__import__', 'str', 'str', 'str', 'stream_isatty', 'winapi_test', 'self.write_and_convert', 'self.reset_all', 'self.call_win32', 'match.span', 'self.write_plain_text', 'self.convert_ansi', 'len', 'self.extract_params', 'self.call_win32', 'tuple', 'tuple', 'match.span', 'match.groups', 'byref', 'byref', 'char.encode', 'byref', 'byref', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.SetConsoleCursorPosition', 'self.get_attrs', 'pos', 'pos', 'pos', 'forward', 'x.lower', 'find', '__import__', 'name.startswith', 'getattr', 'setattr', 'str', 'str', 'str', 'str', 'str', 'len', 'len', 'winterm.erase_screen', 'AnsiToWin32', '_winapi_test', 'GetConsoleScreenBufferInfo', 'win32.COORD', 'win32.COORD', 'pos', 'pos', 'pos', 'choice', 'choice', 'choice', 'choice', 'find', 'find', 'code_to_chars', 'match.groups', 'int', 'dict', 'func', 'winterm.erase_line', 'paramstring.count', 'paramstring.split', 'win32.COORD', 'win32.COORD', 'randint', 'randint', 'down', 'str', 'int', 'paramstring.split', 'paramstring.split', 'winterm.set_cursor_position', 'winterm.set_title', '_GetStdHandle', '_GetStdHandle', 'back', 'len', 'len', 'winterm.cursor_adjust', 'forward', 'back', 'up', 'forward', 'up']",
            "n_tokens": 1026,
            "embedding": "[ 0.00408087 -0.00624826 -0.00393259 ... -0.00634576 -0.03019315\n -0.01587659]",
            "cluster": "8",
            "id": 3092,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/twyne/0.0.2/twyne-0.0.2.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/twyne/0.0.2/twyne-0.0.2.tar_extracted",
            "name": "twyne",
            "version": "0.0.2",
            "published_at": "2022-10-23T23:48:06.058Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Cross-platform colored terminal text.",
            "author": "Jonathan Hartley",
            "maintainers": "Arnon Yaari",
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "0599367388f4f137d08d450c84ca18a7afa6e6d617731e9b526a94d8ca050d26"
        },
        {
            "name_version": "stringe-0.0.1",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/stringe/0.0.1/stringe-0.0.1.tar_extracted/stringe-0.0.1.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['init', 'print', 'print', 'init', 'print', 'print', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'argparse.ArgumentParser', 'parser.add_argument', 'parser.add_argument', 'parser.add_argument', 'parser.add_argument', 'parser.parse_args', 'print', 'normpath', 'print', 'print', 'setup', 'AnsiFore', 'AnsiBack', 'AnsiStyle', 'AnsiCursor', 'print', 'printable.strip', 'twyne.init', 'print', 'print', 'range', 'print', 'range', 'print', 'main', 'twyne.init', 'print', 'print', 'print', 'print', 'main', 'print', 'main', 'list', 'join', 're.search', 'RuntimeError', '_get_version_match', 'WinTerm', 're.compile', 're.compile', 'init', 'LibraryLoader', 'AnsiToWin32', 'Cursor.POS', 'print', 'print', 'express_text', 'print', 'print', 'map', 'format', 'format', 'format', 'dirname', '__import__', '__import__', 'open', 'fp.read', 'version_match.group', 'read_file', 'get_version', 'read_file', 'dir', 'getattr', 'StreamWrapper', 'self.get_win32_calls', 'dict', 'self.convert_osc', 'self.write_plain_text', 'any', 'ValueError', 'wrap_stream', 'wrap_stream', 'atexit.register', 'deinit', 'AnsiToWin32', 'wrapper.should_wrap', 'POINTER', 'POINTER', 'POINTER', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', 'bool', 'any', '_GetStdHandle', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', '_GetStdHandle', '_SetConsoleTextAttribute', 'COORD', 'COORD', '_GetStdHandle', '_SetConsoleCursorPosition', '_GetStdHandle', 'c_char', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputCharacterA', '_GetStdHandle', 'wintypes.WORD', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputAttribute', '_SetConsoleTitleW', 'self.set_attrs', 'self.set_attrs', 'self.set_console', 'self.set_console', 'self.set_console', 'self.set_console', 'win32.SetConsoleTextAttribute', 'win32.SetConsoleCursorPosition', 'self.get_position', 'win32.SetConsoleCursorPosition', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.SetConsoleTitle', 'item.upper', '__import__', '__import__', 'str', 'str', 'str', 'stream_isatty', 'winapi_test', 'self.write_and_convert', 'self.reset_all', 'self.call_win32', 'match.span', 'self.write_plain_text', 'self.convert_ansi', 'len', 'self.extract_params', 'self.call_win32', 'tuple', 'tuple', 'match.span', 'match.groups', 'byref', 'byref', 'char.encode', 'byref', 'byref', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.SetConsoleCursorPosition', 'self.get_attrs', 'pos', 'pos', 'pos', 'forward', 'x.lower', 'find', '__import__', '__import__', 'name.startswith', 'getattr', 'setattr', 'str', 'str', 'str', 'str', 'str', 'len', 'len', 'winterm.erase_screen', 'AnsiToWin32', '_winapi_test', 'GetConsoleScreenBufferInfo', 'win32.COORD', 'win32.COORD', 'pos', 'pos', 'pos', 'choice', 'choice', 'choice', 'choice', 'find', 'find', 'code_to_chars', 'match.groups', 'int', 'dict', 'func', 'winterm.erase_line', 'paramstring.count', 'paramstring.split', 'win32.COORD', 'win32.COORD', 'randint', 'randint', 'down', 'str', 'int', 'paramstring.split', 'paramstring.split', 'winterm.set_cursor_position', 'winterm.set_title', '_GetStdHandle', '_GetStdHandle', 'back', 'len', 'len', 'winterm.cursor_adjust', 'forward', 'back', 'up', 'forward', 'up']",
            "n_tokens": 1038,
            "embedding": "[ 0.00419691 -0.00584324 -0.00420908 ... -0.00567699 -0.02968253\n -0.01623618]",
            "cluster": "8",
            "id": 4159,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/stringe/0.0.1/stringe-0.0.1.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/stringe/0.0.1/stringe-0.0.1.tar_extracted",
            "name": "stringe",
            "version": "0.0.1",
            "published_at": "2022-10-24T01:35:32.770Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Cross-platform colored terminal text.",
            "author": "Jonathan Hartley",
            "maintainers": "Arnon Yaari",
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "4413c91b2473897b201549b126489f84826ef62913bf79df12277b295246a114"
        },
        {
            "name_version": "faq-0.0.1",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/faq/0.0.1/faq-0.0.1.tar_extracted/faq-0.0.1.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['init', 'print', 'print', 'init', 'print', 'print', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'argparse.ArgumentParser', 'parser.add_argument', 'parser.add_argument', 'parser.add_argument', 'parser.add_argument', 'parser.parse_args', 'print', 'normpath', 'AnsiFore', 'AnsiBack', 'AnsiStyle', 'AnsiCursor', 'print', 'print', 'setup', 'print', 'printable.strip', 'twyne.init', 'print', 'print', 'range', 'print', 'range', 'print', 'main', 'twyne.init', 'print', 'print', 'print', 'print', 'main', 'print', 'main', 'list', 'join', 'WinTerm', 're.compile', 're.compile', 'init', 'LibraryLoader', 're.search', 'RuntimeError', '_get_version_match', 'AnsiToWin32', 'Cursor.POS', 'print', 'print', 'express_text', 'print', 'print', 'map', 'format', 'format', 'format', 'dirname', 'dir', 'getattr', 'StreamWrapper', 'self.get_win32_calls', 'dict', 'self.convert_osc', 'self.write_plain_text', 'any', 'ValueError', 'wrap_stream', 'wrap_stream', 'atexit.register', 'deinit', 'AnsiToWin32', 'wrapper.should_wrap', 'POINTER', 'POINTER', 'POINTER', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', 'bool', 'any', '_GetStdHandle', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', '_GetStdHandle', '_SetConsoleTextAttribute', 'COORD', 'COORD', '_GetStdHandle', '_SetConsoleCursorPosition', '_GetStdHandle', 'c_char', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputCharacterA', '_GetStdHandle', 'wintypes.WORD', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputAttribute', '_SetConsoleTitleW', 'self.set_attrs', 'self.set_attrs', 'self.set_console', 'self.set_console', 'self.set_console', 'self.set_console', 'win32.SetConsoleTextAttribute', 'win32.SetConsoleCursorPosition', 'self.get_position', 'win32.SetConsoleCursorPosition', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.SetConsoleTitle', '__import__', '__import__', 'open', 'fp.read', 'version_match.group', 'read_file', 'get_version', 'read_file', 'item.upper', 'str', 'str', 'str', 'stream_isatty', 'winapi_test', 'self.write_and_convert', 'self.reset_all', 'self.call_win32', 'match.span', 'self.write_plain_text', 'self.convert_ansi', 'len', 'self.extract_params', 'self.call_win32', 'tuple', 'tuple', 'match.span', 'match.groups', 'byref', 'byref', 'char.encode', 'byref', 'byref', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.SetConsoleCursorPosition', 'self.get_attrs', '__import__', '__import__', 'pos', 'pos', 'pos', 'forward', 'x.lower', 'find', 'name.startswith', 'getattr', 'setattr', 'str', 'str', 'str', 'str', 'str', 'len', 'len', 'winterm.erase_screen', 'AnsiToWin32', '_winapi_test', 'GetConsoleScreenBufferInfo', 'win32.COORD', 'win32.COORD', '__import__', '__import__', 'pos', 'pos', 'pos', 'choice', 'choice', 'choice', 'choice', 'find', 'find', 'code_to_chars', 'match.groups', 'int', 'dict', 'func', 'winterm.erase_line', 'paramstring.count', 'paramstring.split', 'win32.COORD', 'win32.COORD', 'randint', 'randint', 'down', 'str', 'int', 'paramstring.split', 'paramstring.split', 'winterm.set_cursor_position', 'winterm.set_title', '_GetStdHandle', '_GetStdHandle', 'back', 'len', 'len', 'winterm.cursor_adjust', 'forward', 'back', 'up', 'forward', 'up']",
            "n_tokens": 1038,
            "embedding": "[ 0.00464002 -0.00691318 -0.00436708 ... -0.00598029 -0.03195462\n -0.0157003 ]",
            "cluster": "8",
            "id": 3159,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/faq/0.0.1/faq-0.0.1.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/faq/0.0.1/faq-0.0.1.tar_extracted",
            "name": "faq",
            "version": "0.0.1",
            "published_at": "2022-10-24T01:50:08.113Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Cross-platform colored terminal text.",
            "author": "Jonathan Hartley",
            "maintainers": "Arnon Yaari",
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "37ed52f1c5f98d1bf9c776618eca10716c1d4737db2a3cdd12fcbd51ef1faa69"
        },
        {
            "name_version": "installpy-0.0.1",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/installpy/0.0.1/installpy-0.0.1.tar_extracted/installpy-0.0.1.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['init', 'print', 'print', 'init', 'print', 'print', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'argparse.ArgumentParser', 'parser.add_argument', 'parser.add_argument', 'parser.add_argument', 'parser.add_argument', 'parser.parse_args', 'print', 'normpath', 'AnsiFore', 'AnsiBack', 'AnsiStyle', 'AnsiCursor', 'print', 'setup', 'print', 'printable.strip', 'twyne.init', 'print', 'print', 'range', 'print', 'range', 'print', 'main', 'twyne.init', 'print', 'print', 'print', 'print', 'main', 'print', 'main', 'list', 'join', 'WinTerm', 're.compile', 're.compile', 'init', 'LibraryLoader', 're.search', 'RuntimeError', '_get_version_match', 'AnsiToWin32', 'Cursor.POS', 'print', 'print', 'express_text', 'print', 'print', 'map', 'format', 'format', 'format', 'dirname', 'dir', 'getattr', 'StreamWrapper', 'self.get_win32_calls', 'dict', 'self.convert_osc', 'self.write_plain_text', 'any', 'ValueError', 'wrap_stream', 'wrap_stream', 'atexit.register', 'deinit', 'AnsiToWin32', 'wrapper.should_wrap', 'POINTER', 'POINTER', 'POINTER', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', 'bool', 'any', '_GetStdHandle', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', '_GetStdHandle', '_SetConsoleTextAttribute', 'COORD', 'COORD', '_GetStdHandle', '_SetConsoleCursorPosition', '_GetStdHandle', 'c_char', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputCharacterA', '_GetStdHandle', 'wintypes.WORD', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputAttribute', '_SetConsoleTitleW', 'self.set_attrs', 'self.set_attrs', 'self.set_console', 'self.set_console', 'self.set_console', 'self.set_console', 'win32.SetConsoleTextAttribute', 'win32.SetConsoleCursorPosition', 'self.get_position', 'win32.SetConsoleCursorPosition', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.SetConsoleTitle', '__import__', 'open', 'fp.read', 'version_match.group', 'read_file', 'get_version', 'read_file', 'item.upper', 'str', 'str', 'str', 'stream_isatty', 'winapi_test', 'self.write_and_convert', 'self.reset_all', 'self.call_win32', 'match.span', 'self.write_plain_text', 'self.convert_ansi', 'len', 'self.extract_params', 'self.call_win32', 'tuple', 'tuple', 'match.span', 'match.groups', 'byref', 'byref', 'char.encode', 'byref', 'byref', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.SetConsoleCursorPosition', 'self.get_attrs', '__import__', 'pos', 'pos', 'pos', 'forward', 'x.lower', 'find', 'name.startswith', 'getattr', 'setattr', 'str', 'str', 'str', 'str', 'str', 'len', 'len', 'winterm.erase_screen', 'AnsiToWin32', '_winapi_test', 'GetConsoleScreenBufferInfo', 'win32.COORD', 'win32.COORD', '__import__', 'pos', 'pos', 'pos', 'choice', 'choice', 'choice', 'choice', 'find', 'find', 'code_to_chars', 'match.groups', 'int', 'dict', 'func', 'winterm.erase_line', 'paramstring.count', 'paramstring.split', 'win32.COORD', 'win32.COORD', 'randint', 'randint', 'down', 'str', 'int', 'paramstring.split', 'paramstring.split', 'winterm.set_cursor_position', 'winterm.set_title', '_GetStdHandle', '_GetStdHandle', 'back', 'len', 'len', 'winterm.cursor_adjust', 'forward', 'back', 'up', 'forward', 'up']",
            "n_tokens": 1026,
            "embedding": "[ 0.0064321  -0.00536346 -0.00482914 ... -0.00544847 -0.02937152\n -0.01701735]",
            "cluster": "8",
            "id": 2723,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/installpy/0.0.1/installpy-0.0.1.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/installpy/0.0.1/installpy-0.0.1.tar_extracted",
            "name": "installpy",
            "version": "0.0.1",
            "published_at": "2022-10-24T02:05:36.172Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Cross-platform colored terminal text.",
            "author": "Jonathan Hartley",
            "maintainers": "Arnon Yaari",
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "a2cf8cf20b127fa6538637a9b7ff7024f4b923613abf586a3fb2bc83a50865ac"
        },
        {
            "name_version": "incrivelsim-0.0.1",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/incrivelsim/0.0.1/incrivelsim-0.0.1.tar_extracted/incrivelsim-0.0.1.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['init', 'print', 'print', 'init', 'print', 'print', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'argparse.ArgumentParser', 'parser.add_argument', 'parser.add_argument', 'parser.add_argument', 'parser.add_argument', 'parser.parse_args', 'print', 'normpath', 'AnsiFore', 'AnsiBack', 'AnsiStyle', 'AnsiCursor', 'print', 'print', 'setup', 'print', 'printable.strip', 'twyne.init', 'print', 'print', 'range', 'print', 'range', 'print', 'main', 'twyne.init', 'print', 'print', 'print', 'print', 'main', 'print', 'main', 'list', 'join', 'WinTerm', 're.compile', 're.compile', 'init', 'LibraryLoader', 're.search', 'RuntimeError', '_get_version_match', 'AnsiToWin32', 'Cursor.POS', 'print', 'print', 'express_text', 'print', 'print', 'map', 'format', 'format', 'format', 'dirname', 'dir', 'getattr', 'StreamWrapper', 'self.get_win32_calls', 'dict', 'self.convert_osc', 'self.write_plain_text', 'any', 'ValueError', 'wrap_stream', 'wrap_stream', 'atexit.register', 'deinit', 'AnsiToWin32', 'wrapper.should_wrap', 'POINTER', 'POINTER', 'POINTER', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', 'bool', 'any', '_GetStdHandle', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', '_GetStdHandle', '_SetConsoleTextAttribute', 'COORD', 'COORD', '_GetStdHandle', '_SetConsoleCursorPosition', '_GetStdHandle', 'c_char', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputCharacterA', '_GetStdHandle', 'wintypes.WORD', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputAttribute', '_SetConsoleTitleW', 'self.set_attrs', 'self.set_attrs', 'self.set_console', 'self.set_console', 'self.set_console', 'self.set_console', 'win32.SetConsoleTextAttribute', 'win32.SetConsoleCursorPosition', 'self.get_position', 'win32.SetConsoleCursorPosition', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.SetConsoleTitle', '__import__', '__import__', 'open', 'fp.read', 'version_match.group', 'read_file', 'get_version', 'read_file', 'item.upper', 'str', 'str', 'str', 'stream_isatty', 'winapi_test', 'self.write_and_convert', 'self.reset_all', 'self.call_win32', 'match.span', 'self.write_plain_text', 'self.convert_ansi', 'len', 'self.extract_params', 'self.call_win32', 'tuple', 'tuple', 'match.span', 'match.groups', 'byref', 'byref', 'char.encode', 'byref', 'byref', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.SetConsoleCursorPosition', 'self.get_attrs', '__import__', '__import__', 'pos', 'pos', 'pos', 'forward', 'x.lower', 'find', 'name.startswith', 'getattr', 'setattr', 'str', 'str', 'str', 'str', 'str', 'len', 'len', 'winterm.erase_screen', 'AnsiToWin32', '_winapi_test', 'GetConsoleScreenBufferInfo', 'win32.COORD', 'win32.COORD', '__import__', '__import__', 'pos', 'pos', 'pos', 'choice', 'choice', 'choice', 'choice', 'find', 'find', 'code_to_chars', 'match.groups', 'int', 'dict', 'func', 'winterm.erase_line', 'paramstring.count', 'paramstring.split', 'win32.COORD', 'win32.COORD', 'randint', 'randint', 'down', 'str', 'int', 'paramstring.split', 'paramstring.split', 'winterm.set_cursor_position', 'winterm.set_title', '_GetStdHandle', '_GetStdHandle', 'back', 'len', 'len', 'winterm.cursor_adjust', 'forward', 'back', 'up', 'forward', 'up']",
            "n_tokens": 1038,
            "embedding": "[ 0.00464776 -0.00697978 -0.00440357 ... -0.00557568 -0.03187499\n -0.01599447]",
            "cluster": "8",
            "id": 3816,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/incrivelsim/0.0.1/incrivelsim-0.0.1.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/incrivelsim/0.0.1/incrivelsim-0.0.1.tar_extracted",
            "name": "incrivelsim",
            "version": "0.0.1",
            "published_at": "2022-10-25T01:57:32.947Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Cross-platform colored terminal text.",
            "author": "Jonathan Hartley",
            "maintainers": "Arnon Yaari",
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "e2868e7a9093c49125182c757b6f52ddbd187032b3f1cbe957045a7721daf936"
        },
        {
            "name_version": "fatnoob-0.0.1",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/fatnoob/0.0.1/fatnoob-0.0.1.tar_extracted/fatnoob-0.0.1.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['init', 'print', 'print', 'init', 'print', 'print', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'argparse.ArgumentParser', 'parser.add_argument', 'parser.add_argument', 'parser.add_argument', 'parser.add_argument', 'parser.parse_args', 'print', 'normpath', 'AnsiFore', 'AnsiBack', 'AnsiStyle', 'AnsiCursor', 'print', 'setup', 'print', 'printable.strip', 'twyne.init', 'print', 'print', 'range', 'print', 'range', 'print', 'main', 'twyne.init', 'print', 'print', 'print', 'print', 'main', 'print', 'main', 'list', 'join', 'WinTerm', 're.compile', 're.compile', 'init', 'LibraryLoader', 're.search', 'RuntimeError', '_get_version_match', 'AnsiToWin32', 'Cursor.POS', 'print', 'print', 'express_text', 'print', 'print', 'map', 'format', 'format', 'format', 'dirname', 'dir', 'getattr', 'StreamWrapper', 'self.get_win32_calls', 'dict', 'self.convert_osc', 'self.write_plain_text', 'any', 'ValueError', 'wrap_stream', 'wrap_stream', 'atexit.register', 'deinit', 'AnsiToWin32', 'wrapper.should_wrap', 'POINTER', 'POINTER', 'POINTER', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', 'bool', 'any', '_GetStdHandle', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', '_GetStdHandle', '_SetConsoleTextAttribute', 'COORD', 'COORD', '_GetStdHandle', '_SetConsoleCursorPosition', '_GetStdHandle', 'c_char', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputCharacterA', '_GetStdHandle', 'wintypes.WORD', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputAttribute', '_SetConsoleTitleW', 'self.set_attrs', 'self.set_attrs', 'self.set_console', 'self.set_console', 'self.set_console', 'self.set_console', 'win32.SetConsoleTextAttribute', 'win32.SetConsoleCursorPosition', 'self.get_position', 'win32.SetConsoleCursorPosition', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.SetConsoleTitle', '__import__', 'open', 'fp.read', 'version_match.group', 'read_file', 'get_version', 'read_file', 'item.upper', 'str', 'str', 'str', 'stream_isatty', 'winapi_test', 'self.write_and_convert', 'self.reset_all', 'self.call_win32', 'match.span', 'self.write_plain_text', 'self.convert_ansi', 'len', 'self.extract_params', 'self.call_win32', 'tuple', 'tuple', 'match.span', 'match.groups', 'byref', 'byref', 'char.encode', 'byref', 'byref', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.SetConsoleCursorPosition', 'self.get_attrs', '__import__', 'pos', 'pos', 'pos', 'forward', 'x.lower', 'find', 'name.startswith', 'getattr', 'setattr', 'str', 'str', 'str', 'str', 'str', 'len', 'len', 'winterm.erase_screen', 'AnsiToWin32', '_winapi_test', 'GetConsoleScreenBufferInfo', 'win32.COORD', 'win32.COORD', '__import__', 'pos', 'pos', 'pos', 'choice', 'choice', 'choice', 'choice', 'find', 'find', 'code_to_chars', 'match.groups', 'int', 'dict', 'func', 'winterm.erase_line', 'paramstring.count', 'paramstring.split', 'win32.COORD', 'win32.COORD', 'randint', 'randint', 'down', 'str', 'int', 'paramstring.split', 'paramstring.split', 'winterm.set_cursor_position', 'winterm.set_title', '_GetStdHandle', '_GetStdHandle', 'back', 'len', 'len', 'winterm.cursor_adjust', 'forward', 'back', 'up', 'forward', 'up']",
            "n_tokens": 1026,
            "embedding": "[ 0.00632131 -0.00594187 -0.00495694 ... -0.00513455 -0.02927341\n -0.0170183 ]",
            "cluster": "8",
            "id": 3964,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/fatnoob/0.0.1/fatnoob-0.0.1.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/fatnoob/0.0.1/fatnoob-0.0.1.tar_extracted",
            "name": "fatnoob",
            "version": "0.0.1",
            "published_at": "2022-10-25T16:59:00.978Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Cross-platform colored terminal text.",
            "author": "Jonathan Hartley",
            "maintainers": "Arnon Yaari",
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "b697205b67f45a938defc250f0bb2241e2fafb3ad8c0e26510c61439ffe9ccde"
        },
        {
            "name_version": "pystyles-2.5",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/snyk/pystyles-2.5.tar_extracted/pystyles-2.5.tar_sourcecode.py",
            "Source": "Snyk.io",
            "code_api": "['System.Init', 'setup', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makerainbow', 'dynamic_colors.append', 'subprocess.Popen', 'print', 'run', '_system', '_system', '_system', '_CursorInfo', 'list', 'reversed', 'list', 'reversed', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', '_MakeColors._start', 'round', 'round', 'round', '_MakeColors._reverse', 'color.pop', 'range', 'range', 'dynamic_colors.append', 'all_colors.append', '_MakeColors._maketext', '_MakeColors._maketext', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.strip', 'range', '_stdout.write', '_stdout.flush', '_sleep', 'System.Clear', 'input', 'Write._write', '_stdout.write', '_stdout.flush', 'Write._write', 'input', '_stdout.write', '_stdout.flush', 'list', 'align.upper', 'align.upper', 'max', 'text.splitlines', 'max', 'int', 'text.splitlines', 'len', 'int', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'Add._length', 'Add._edit', 'range', 'content.splitlines', 'content.splitlines', 'Box.Box', 'content.splitlines', 'mode', 'assembly.splitlines', '_system', '_system', 'Cursor._cursor', 'Cursor._cursor', 'byref', 'byref', 'col.append', 'col.append', '_MakeColors._end', 'len', 'len', 'colors.append', '_MakeColors._rmansi', '_MakeColors._rmansi', '_MakeColors._reverse', '_MakeColors._rmansi', 'col.split', 'int', 'int', 'int', 'rgb.append', '_MakeColors._start', '_colors.append', '_MakeColors._mixcolors', 'input', 'print', 'exit', 'lin.rstrip', 'list', 'list', 'list', 'carac.reverse', 'mode', 'mode', 'Cursor.HideCursor', 'type', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_terminal_size', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_thread', 'th.start', '_sleep', 'System.Clear', 'Cursor.ShowCursor', 'mode', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'type', '_stdout.flush', '_sleep', 'line.strip', 'Center._xspaces', 'Center._yspaces', 'Center._xspaces', 'Center._yspaces', 'Center.XCenter', 'len', 'len', 'max', 'max', 'range', 'range', '_stdout.write', '_stdout.flush', '_stdout.write', '_stdout.flush', 'text.lstrip', 'rainbow.append', 'int', 'int', 'int', 'sum', 'len', 'sum', 'len', 'sum', 'len', 'colors.index', 'final.append', 'content.replace', 'color.append', 'content.replace', 'color.append', '_sleep', 'Colorate.Color', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'Anime._anime', 'list', 'type', 'list', 'type', '_stdout.write', '_stdout.write', 'text.splitlines', 'text.splitlines', 'len', '_terminal_size', 'len', '_terminal_size', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'Center.XCenter', 'range', 'range', 'range', 'len', 'str', 'content.replace', 'color.append', 'str', 'content.replace', 'color.append', '_MakeColors._makeansi', 'len', '_MakeColors._makeansi', 'len', 'len', 'len', 'color.append', 'print', 'print', 'print', 'print', 'len', 'len', 'color.append', '_MakeColors._makeansi', 'text.splitlines', 'text.splitlines', 'max', 'Center.BadAlignment', 'text.splitlines', 'Center.BadAlignment', 'v.strip', 'super', 'banner1.splitlines', 'banner2.splitlines', 'banner1.splitlines', 'banner2.splitlines', 'super', 'int', 'str', 'str', '_MakeColors._makeansi', '_MakeColors._getspaces', 'car.strip', '_MakeColors._getspaces', 'car.strip', '_MakeColors._makeansi', 'Center.XCenter', 'mode', 'Center.XCenter', '_terminal_size', 'text.splitlines', 'len', 'int', 'int', 'spaces.join', 'spaces.join', '_MakeColors._getspaces', '_MakeColors._getspaces', 'lin.strip', 'len', '_MakeColors._getspaces', 'car.strip', 'mode', 'len', 'int', 'spaces.join', 'spaces.join', 'col.replace', 'colors.index', '_MakeColors._makeansi', 'max', 'text.splitlines', 'max', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'int', 'len', 'lin.strip', 'len', 'len', 'len', 'len', 'len', 'text.splitlines', 'text.splitlines']",
            "n_tokens": 1395,
            "embedding": "[ 0.02971036 -0.01321739 -0.00670165 ... -0.00690084 -0.01615656\n -0.01394333]",
            "cluster": "8",
            "id": 2177,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/snyk/pystyles-2.5.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/snyk/pystyles-2.5.tar_extracted",
            "name": "pystyles",
            "version": "2.5",
            "published_at": "2022-10-26T05:31:00.952Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "by billythegoat356, loTus01 and BlueRed",
            "author": "billythegoat356",
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN,
            "SHA-256": "8ba9527765586d87a9b3c3cc651790b8b0ecf14d3a50f53acf5441e4be45af8e"
        },
        {
            "name_version": "duonet-0.0.1",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/duonet/0.0.1/duonet-0.0.1.tar_extracted/duonet-0.0.1.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['init', 'print', 'print', 'init', 'print', 'print', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'argparse.ArgumentParser', 'parser.add_argument', 'parser.add_argument', 'parser.add_argument', 'parser.add_argument', 'parser.parse_args', 'print', 'normpath', 'AnsiFore', 'AnsiBack', 'AnsiStyle', 'AnsiCursor', 'print', 'setup', 'print', 'printable.strip', 'twyne.init', 'print', 'print', 'range', 'print', 'range', 'print', 'main', 'twyne.init', 'print', 'print', 'print', 'print', 'main', 'print', 'main', 'list', 'join', 'WinTerm', 're.compile', 're.compile', 'init', 'LibraryLoader', 're.search', 'RuntimeError', '_get_version_match', 'AnsiToWin32', 'Cursor.POS', 'print', 'print', 'express_text', 'print', 'print', 'map', 'format', 'format', 'format', 'dirname', 'dir', 'getattr', 'StreamWrapper', 'self.get_win32_calls', 'dict', 'self.convert_osc', 'self.write_plain_text', 'any', 'ValueError', 'wrap_stream', 'wrap_stream', 'atexit.register', 'deinit', 'AnsiToWin32', 'wrapper.should_wrap', 'POINTER', 'POINTER', 'POINTER', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', 'bool', 'any', '_GetStdHandle', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', '_GetStdHandle', '_SetConsoleTextAttribute', 'COORD', 'COORD', '_GetStdHandle', '_SetConsoleCursorPosition', '_GetStdHandle', 'c_char', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputCharacterA', '_GetStdHandle', 'wintypes.WORD', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputAttribute', '_SetConsoleTitleW', 'self.set_attrs', 'self.set_attrs', 'self.set_console', 'self.set_console', 'self.set_console', 'self.set_console', 'win32.SetConsoleTextAttribute', 'win32.SetConsoleCursorPosition', 'self.get_position', 'win32.SetConsoleCursorPosition', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.SetConsoleTitle', 'open', 'fp.read', 'version_match.group', 'read_file', '__import__', 'get_version', 'read_file', 'item.upper', 'str', 'str', 'str', 'stream_isatty', 'winapi_test', 'self.write_and_convert', 'self.reset_all', 'self.call_win32', 'match.span', 'self.write_plain_text', 'self.convert_ansi', 'len', 'self.extract_params', 'self.call_win32', 'tuple', 'tuple', 'match.span', 'match.groups', 'byref', 'byref', 'char.encode', 'byref', 'byref', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.SetConsoleCursorPosition', 'self.get_attrs', '__import__', 'pos', 'pos', 'pos', 'forward', 'x.lower', 'find', 'name.startswith', 'getattr', 'setattr', 'str', 'str', 'str', 'str', 'str', 'len', 'len', 'winterm.erase_screen', 'AnsiToWin32', '_winapi_test', 'GetConsoleScreenBufferInfo', 'win32.COORD', 'win32.COORD', '__import__', 'pos', 'pos', 'pos', 'choice', 'choice', 'choice', 'choice', 'find', 'find', 'code_to_chars', 'match.groups', 'int', 'dict', 'func', 'winterm.erase_line', 'paramstring.count', 'paramstring.split', 'win32.COORD', 'win32.COORD', 'randint', 'randint', 'down', 'str', 'int', 'paramstring.split', 'paramstring.split', 'winterm.set_cursor_position', 'winterm.set_title', '_GetStdHandle', '_GetStdHandle', 'back', 'len', 'len', 'winterm.cursor_adjust', 'forward', 'back', 'up', 'forward', 'up']",
            "n_tokens": 1026,
            "embedding": "[ 0.00689826 -0.00663155 -0.00484535 ... -0.0055768  -0.03011474\n -0.01724768]",
            "cluster": "8",
            "id": 4100,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/duonet/0.0.1/duonet-0.0.1.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/duonet/0.0.1/duonet-0.0.1.tar_extracted",
            "name": "duonet",
            "version": "0.0.1",
            "published_at": "2022-10-26T14:11:01.463Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Cross-platform colored terminal text.",
            "author": "Jonathan Hartley",
            "maintainers": "Arnon Yaari",
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "03f799286063c7207ecb9fabe9d3841ab68bcdab5b317a1cf1a382df953e3bea"
        },
        {
            "name_version": "duonet-0.0.2",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/duonet/0.0.2/duonet-0.0.2.tar_extracted/duonet-0.0.2.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['init', 'print', 'print', 'init', 'print', 'print', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'argparse.ArgumentParser', 'parser.add_argument', 'parser.add_argument', 'parser.add_argument', 'parser.add_argument', 'parser.parse_args', 'print', 'normpath', 'AnsiFore', 'AnsiBack', 'AnsiStyle', 'AnsiCursor', 'setup', 'print', 'printable.strip', 'twyne.init', 'print', 'print', 'range', 'print', 'range', 'print', 'main', 'twyne.init', 'print', 'print', 'print', 'print', 'main', 'print', 'main', 'list', 'join', 'WinTerm', 're.compile', 're.compile', 'init', 'LibraryLoader', 'os.system', 're.search', 'RuntimeError', '_get_version_match', 'AnsiToWin32', 'Cursor.POS', 'print', 'print', 'express_text', 'print', 'print', 'map', 'format', 'format', 'format', 'dirname', 'dir', 'getattr', 'StreamWrapper', 'self.get_win32_calls', 'dict', 'self.convert_osc', 'self.write_plain_text', 'any', 'ValueError', 'wrap_stream', 'wrap_stream', 'atexit.register', 'deinit', 'AnsiToWin32', 'wrapper.should_wrap', 'POINTER', 'POINTER', 'POINTER', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', 'bool', 'any', '_GetStdHandle', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', '_GetStdHandle', '_SetConsoleTextAttribute', 'COORD', 'COORD', '_GetStdHandle', '_SetConsoleCursorPosition', '_GetStdHandle', 'c_char', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputCharacterA', '_GetStdHandle', 'wintypes.WORD', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputAttribute', '_SetConsoleTitleW', 'self.set_attrs', 'self.set_attrs', 'self.set_console', 'self.set_console', 'self.set_console', 'self.set_console', 'win32.SetConsoleTextAttribute', 'win32.SetConsoleCursorPosition', 'self.get_position', 'win32.SetConsoleCursorPosition', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.SetConsoleTitle', 'os.system', 'open', 'fp.read', 'version_match.group', 'read_file', 'get_version', 'read_file', 'item.upper', 'str', 'str', 'str', 'stream_isatty', 'winapi_test', 'self.write_and_convert', 'self.reset_all', 'self.call_win32', 'match.span', 'self.write_plain_text', 'self.convert_ansi', 'len', 'self.extract_params', 'self.call_win32', 'tuple', 'tuple', 'match.span', 'match.groups', 'byref', 'byref', 'char.encode', 'byref', 'byref', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.SetConsoleCursorPosition', 'self.get_attrs', 'pos', 'pos', 'pos', 'forward', 'x.lower', 'find', 'name.startswith', 'getattr', 'setattr', 'str', 'str', 'str', 'str', 'str', 'len', 'len', 'winterm.erase_screen', 'AnsiToWin32', '_winapi_test', 'GetConsoleScreenBufferInfo', 'win32.COORD', 'win32.COORD', 'pos', 'pos', 'pos', 'choice', 'choice', 'choice', 'choice', 'find', 'find', 'code_to_chars', 'match.groups', 'int', 'dict', 'func', 'winterm.erase_line', 'paramstring.count', 'paramstring.split', 'win32.COORD', 'win32.COORD', 'randint', 'randint', 'down', 'str', 'int', 'paramstring.split', 'paramstring.split', 'winterm.set_cursor_position', 'winterm.set_title', '_GetStdHandle', '_GetStdHandle', 'back', 'len', 'len', 'winterm.cursor_adjust', 'forward', 'back', 'up', 'forward', 'up']",
            "n_tokens": 1022,
            "embedding": "[ 0.00690357 -0.00642931 -0.00396728 ... -0.00571173 -0.03102893\n -0.01619905]",
            "cluster": "8",
            "id": 4102,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/duonet/0.0.2/duonet-0.0.2.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/duonet/0.0.2/duonet-0.0.2.tar_extracted",
            "name": "duonet",
            "version": "0.0.2",
            "published_at": "2022-10-26T14:54:03.656Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Cross-platform colored terminal text.",
            "author": "Jonathan Hartley",
            "maintainers": "Arnon Yaari",
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "2ec4e435345ef513c70f840d377093d86f5f32d70d27c94df839b94eb4e8aeab"
        },
        {
            "name_version": "duonet-0.0.3",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/duonet/0.0.3/duonet-0.0.3.tar_extracted/duonet-0.0.3.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['init', 'print', 'print', 'init', 'print', 'print', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'argparse.ArgumentParser', 'parser.add_argument', 'parser.add_argument', 'parser.add_argument', 'parser.add_argument', 'parser.parse_args', 'print', 'normpath', 'AnsiFore', 'AnsiBack', 'AnsiStyle', 'AnsiCursor', 'setup', 'print', 'printable.strip', 'twyne.init', 'print', 'print', 'range', 'print', 'range', 'print', 'main', 'twyne.init', 'print', 'print', 'print', 'print', 'main', 'print', 'main', 'list', 'join', 'WinTerm', 're.compile', 're.compile', 'init', 'LibraryLoader', 'os.system', 're.search', 'RuntimeError', '_get_version_match', 'AnsiToWin32', 'Cursor.POS', 'print', 'print', 'express_text', 'print', 'print', 'map', 'format', 'format', 'format', 'dirname', 'dir', 'getattr', 'StreamWrapper', 'self.get_win32_calls', 'dict', 'self.convert_osc', 'self.write_plain_text', 'any', 'ValueError', 'wrap_stream', 'wrap_stream', 'atexit.register', 'deinit', 'AnsiToWin32', 'wrapper.should_wrap', 'POINTER', 'POINTER', 'POINTER', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', 'bool', 'any', '_GetStdHandle', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', '_GetStdHandle', '_SetConsoleTextAttribute', 'COORD', 'COORD', '_GetStdHandle', '_SetConsoleCursorPosition', '_GetStdHandle', 'c_char', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputCharacterA', '_GetStdHandle', 'wintypes.WORD', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputAttribute', '_SetConsoleTitleW', 'self.set_attrs', 'self.set_attrs', 'self.set_console', 'self.set_console', 'self.set_console', 'self.set_console', 'win32.SetConsoleTextAttribute', 'win32.SetConsoleCursorPosition', 'self.get_position', 'win32.SetConsoleCursorPosition', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.SetConsoleTitle', 'os.system', 'open', 'fp.read', 'version_match.group', 'read_file', 'get_version', 'read_file', 'item.upper', 'str', 'str', 'str', 'stream_isatty', 'winapi_test', 'self.write_and_convert', 'self.reset_all', 'self.call_win32', 'match.span', 'self.write_plain_text', 'self.convert_ansi', 'len', 'self.extract_params', 'self.call_win32', 'tuple', 'tuple', 'match.span', 'match.groups', 'byref', 'byref', 'char.encode', 'byref', 'byref', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.SetConsoleCursorPosition', 'self.get_attrs', 'pos', 'pos', 'pos', 'forward', 'x.lower', 'find', 'name.startswith', 'getattr', 'setattr', 'str', 'str', 'str', 'str', 'str', 'len', 'len', 'winterm.erase_screen', 'AnsiToWin32', '_winapi_test', 'GetConsoleScreenBufferInfo', 'win32.COORD', 'win32.COORD', 'pos', 'pos', 'pos', 'choice', 'choice', 'choice', 'choice', 'find', 'find', 'code_to_chars', 'match.groups', 'int', 'dict', 'func', 'winterm.erase_line', 'paramstring.count', 'paramstring.split', 'win32.COORD', 'win32.COORD', 'randint', 'randint', 'down', 'str', 'int', 'paramstring.split', 'paramstring.split', 'winterm.set_cursor_position', 'winterm.set_title', '_GetStdHandle', '_GetStdHandle', 'back', 'len', 'len', 'winterm.cursor_adjust', 'forward', 'back', 'up', 'forward', 'up']",
            "n_tokens": 1022,
            "embedding": "[ 0.00684512 -0.00651091 -0.00386817 ... -0.00584661 -0.03114343\n -0.01622363]",
            "cluster": "8",
            "id": 4101,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/duonet/0.0.3/duonet-0.0.3.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/duonet/0.0.3/duonet-0.0.3.tar_extracted",
            "name": "duonet",
            "version": "0.0.3",
            "published_at": "2022-10-26T14:59:01.710Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Cross-platform colored terminal text.",
            "author": "Jonathan Hartley",
            "maintainers": "Arnon Yaari",
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "78a3e2d62708587c228ae31b17f9075a2bc50d2bdc2a4b363f944c439f308bfa"
        },
        {
            "name_version": "typesutil-1.9.9",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/typesutil/1.9.9/typesutil-1.9.9.tar_extracted/typesutil-1.9.9.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['path.abspath', 'setuptools.setup', 'Date.register_new_calendar', 'Date.register_new_calendar', 'Time.register_new_time', 'Time.register_new_time', 'TimeDelta.register_new_time_interval', 'frozenset', 'range', 'path.dirname', 'open', 'f.read', 'divmod', 'time.localtime', 'Fraction', 'verify_value', 'verify_value', '_weeks_in_previous_years.append', '__import__', 'path.join', 'setuptools.find_packages', 'time.time_ns', 'Fraction', 'isinstance', 'cls', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'hash', 'hasattr', 'ModifiedClass', 'setattr', 'get_moment_complete', 'get_moment_complete', 'cls', 'get_moment_complete', 'cls', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'hasattr', 'ModifiedClass', 'setattr', 'int', 'isinstance', 'TimeDelta', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'hash', 'hasattr', 'ModifiedClass', 'setattr', 'RuntimeError', 'RuntimeError', 'Fraction', 'ValueError', 'ValueError', 'ValueError', 'ValueError', 'divmod', 'divmod', 'bisect.bisect_right', 'cls', 'format_string.split', 'verify_fractional_value', 'verify_fractional_value', 'cls', 'format_string.split', 'sum', 'bisect.bisect_left', 'cls', 'divmod', 'divmod', 'divmod', 'cls.year_day', 'format_string.split', 'verify_fractional_value', 'int', 'int', 'format_string.split', 'verify_fractional_value', 'abs', 'abs', 'abs', 'int', 'int', 'int', 'cls', 'int', 'string.replace', 'format_string.split', '__import__', 'int', 'Fraction', 'TypeError', 'TimeDelta', 'isinstance', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'ValueError', 'AttributeError', 'hasattr', 'TypeError', 'hasattr', 'TypeError', 'CalendarAttribute', 'verify_fractional_value', 'verify_fractional_value_num_den', 'verify_fractional_value', 'cls', 'verify_fractional_value', 'cls', 'TimeDelta', 'isinstance', 'hash', 'hash', 'ValueError', 'AttributeError', 'hasattr', 'TypeError', 'hasattr', 'TypeError', 'TimeReprAttribute', 'verify_fractional_value', 'verify_fractional_value_num_den', 'type', 'type', 'isinstance', 'isinstance', 'isinstance', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'ValueError', 'AttributeError', 'hasattr', 'TypeError', 'hasattr', 'TypeError', 'TimeIntervalAttribute', 'TypeError', 'TypeError', 'TypeError', 'ValueError', 'ValueError', 'isinstance', 'TypeError', 'divmod', 'type', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'verify_fractional_value', 'TypeError', 'Fraction', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'range', 'TypeError', 'ValueError', 'ValueError', 'TypeError', 'ValueError', 'isinstance', 'TypeError', 'self.to_rata_die', 'type', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'TypeError', 'ValueError', 'ValueError', 'verify_fractional_value', 'cls', 'verify_fractional_value', 'cls', 'Fraction', 'int', 'int', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'TypeError', 'ValueError', 'ValueError', 'ValueError', 'ValueError', 'isinstance', 'TypeError', 'type', 'str', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', '__import__', 'Fraction', 'Fraction', 'get_moment_complete', 'other.is_integer', 'ValueError', 'type', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'isinstance', 'attribute_name.isidentifier', 'cls', 'setattr', 'int', 'type', 'Fraction', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'TypeError', 'hasattr', 'hasattr', 'TypeError', 'hasattr', 'hasattr', 'TypeError', 'hasattr', 'hasattr', 'TypeError', 'isinstance', 'attribute_name.isidentifier', 'time_repr_obj.to_time_pair', 'cls', 'setattr', 'type', 'type', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'isinstance', 'attribute_name.isidentifier', 'cls', 'setattr', 'isinstance', 'TypeError', 'isinstance', 'TypeError', 'isinstance', 'TypeError', 'isinstance', 'isinstance', 'isinstance', 'IsoCalendar.weeks_in_year', 'chunk_pieces.append', 'chunk_pieces.append', 'TypeError', 'ValueError', 'floor', 'int', 'chunk_pieces.append', 'chunk_pieces.append', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'GregorianCalendar.is_leap_year', 'chunk_pieces.append', 'chunk_pieces.append', 'isinstance', 'isinstance', 'TypeError', 'ValueError', 'verify_fractional_value', 'Fraction', 'Fraction', 'type', 'TypeError', 'int', 'chunk_pieces.append', 'chunk_pieces.append', 'isinstance', 'isinstance', 'isinstance', 'Fraction', 'Fraction', 'len', 'chunk_pieces.append', 'chunk_pieces.append', 'time.time', 'type', 'int', 'other.is_integer', 'ValueError', 'type', 'calendar_obj.to_rata_die', 'getattr', 'setattr', 'floor', 'ValueError', 'ValueError', 'Fraction', 'Fraction', 'type', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'getattr', 'setattr', 'type', 'type', 'str', 'time_interval_obj.to_fractional_days', 'getattr', 'setattr', 'type', 'self.day_of_year', 'type', 'int', 'int', 'GregorianCalendar.is_leap_year', 'GregorianCalendar.is_leap_year', 'self.to_rata_die', 'type', 'self.day_of_year', 'self.weekday', 'TypeError', 'ValueError', 'Fraction', 'Fraction', 'type', 'int', 'int', 'Fraction', 'Fraction', 'Fraction', 'Fraction', 'type', 'string.startswith', 'int', 'int', 'int', 'super', 'type', 'type', 'Fraction', 'floor', 'super', 'Fraction', 'reason.startswith', 'reason.endswith', 'type', 'str', 'type', 'str', 'type', 'str', 'super', 'GregorianCalendar.is_leap_year', 'self.weekday', 'type', 'type', 'abs', 'abs', 'abs', 'abs', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'Fraction', 'reason.startswith', 'reason.endswith', 'Fraction', 'reason.startswith', 'reason.endswith', 'Fraction', 'reason.startswith', 'reason.endswith', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'GregorianCalendar.is_leap_year', 'GregorianCalendar.is_leap_year', 'self.weekday', 'self.day_of_year', 'self.weekday', 'int', 'int', 'int', 'int', 'self.day_of_year', 'int', 'self.day_of_year', 'int', 'int', 'self.weekday']",
            "n_tokens": 1764,
            "embedding": "[-0.01298024 -0.0168985  -0.01097274 ... -0.00120228 -0.01552791\n  0.00344863]",
            "cluster": "8",
            "id": 4335,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/typesutil/1.9.9/typesutil-1.9.9.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/typesutil/1.9.9/typesutil-1.9.9.tar_extracted",
            "name": "typesutil",
            "version": "1.9.9",
            "published_at": "2022-10-26T15:08:00.745Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "New date and time classes",
            "author": "Francesco Ricciardi",
            "maintainers": NaN,
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "fb8f2e311030e1de144c66c6c238203a15e56c1d70361d8979e1a5c475cfe4ad"
        },
        {
            "name_version": "typesutil-2.0.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/typesutil/2.0.0/typesutil-2.0.0.tar_extracted/typesutil-2.0.0.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['path.abspath', 'print', 'setuptools.setup', 'Date.register_new_calendar', 'Date.register_new_calendar', 'Time.register_new_time', 'Time.register_new_time', 'TimeDelta.register_new_time_interval', 'frozenset', 'range', 'path.dirname', 'open', 'f.read', 'divmod', 'time.localtime', 'Fraction', 'verify_value', 'verify_value', '_weeks_in_previous_years.append', 'path.join', '__import__', 'setuptools.find_packages', 'time.time_ns', 'Fraction', 'isinstance', 'cls', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'hash', 'hasattr', 'ModifiedClass', 'setattr', 'get_moment_complete', 'get_moment_complete', 'cls', 'get_moment_complete', 'cls', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'hasattr', 'ModifiedClass', 'setattr', 'int', 'isinstance', 'TimeDelta', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'hash', 'hasattr', 'ModifiedClass', 'setattr', 'RuntimeError', 'RuntimeError', 'Fraction', 'ValueError', 'ValueError', 'ValueError', 'ValueError', 'divmod', 'divmod', 'bisect.bisect_right', 'cls', 'format_string.split', 'verify_fractional_value', 'verify_fractional_value', 'cls', 'format_string.split', 'sum', 'bisect.bisect_left', 'cls', 'divmod', 'divmod', 'divmod', 'cls.year_day', 'format_string.split', 'verify_fractional_value', 'int', 'int', 'format_string.split', 'verify_fractional_value', 'abs', 'abs', 'abs', 'int', 'int', 'int', 'cls', 'int', 'string.replace', 'format_string.split', '__import__', 'int', 'Fraction', 'TypeError', 'TimeDelta', 'isinstance', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'ValueError', 'AttributeError', 'hasattr', 'TypeError', 'hasattr', 'TypeError', 'CalendarAttribute', 'verify_fractional_value', 'verify_fractional_value_num_den', 'verify_fractional_value', 'cls', 'verify_fractional_value', 'cls', 'TimeDelta', 'isinstance', 'hash', 'hash', 'ValueError', 'AttributeError', 'hasattr', 'TypeError', 'hasattr', 'TypeError', 'TimeReprAttribute', 'verify_fractional_value', 'verify_fractional_value_num_den', 'type', 'type', 'isinstance', 'isinstance', 'isinstance', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'ValueError', 'AttributeError', 'hasattr', 'TypeError', 'hasattr', 'TypeError', 'TimeIntervalAttribute', 'TypeError', 'TypeError', 'TypeError', 'ValueError', 'ValueError', 'isinstance', 'TypeError', 'divmod', 'type', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'verify_fractional_value', 'TypeError', 'Fraction', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'range', 'TypeError', 'ValueError', 'ValueError', 'TypeError', 'ValueError', 'isinstance', 'TypeError', 'self.to_rata_die', 'type', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'TypeError', 'ValueError', 'ValueError', 'verify_fractional_value', 'cls', 'verify_fractional_value', 'cls', 'Fraction', 'int', 'int', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'TypeError', 'ValueError', 'ValueError', 'ValueError', 'ValueError', 'isinstance', 'TypeError', 'type', 'str', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', '__import__', 'Fraction', 'Fraction', 'get_moment_complete', 'other.is_integer', 'ValueError', 'type', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'isinstance', 'attribute_name.isidentifier', 'cls', 'setattr', 'int', 'type', 'Fraction', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'TypeError', 'hasattr', 'hasattr', 'TypeError', 'hasattr', 'hasattr', 'TypeError', 'hasattr', 'hasattr', 'TypeError', 'isinstance', 'attribute_name.isidentifier', 'time_repr_obj.to_time_pair', 'cls', 'setattr', 'type', 'type', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'isinstance', 'attribute_name.isidentifier', 'cls', 'setattr', 'isinstance', 'TypeError', 'isinstance', 'TypeError', 'isinstance', 'TypeError', 'isinstance', 'isinstance', 'isinstance', 'IsoCalendar.weeks_in_year', 'chunk_pieces.append', 'chunk_pieces.append', 'TypeError', 'ValueError', 'floor', 'int', 'chunk_pieces.append', 'chunk_pieces.append', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'GregorianCalendar.is_leap_year', 'chunk_pieces.append', 'chunk_pieces.append', 'isinstance', 'isinstance', 'TypeError', 'ValueError', 'verify_fractional_value', 'Fraction', 'Fraction', 'type', 'TypeError', 'int', 'chunk_pieces.append', 'chunk_pieces.append', 'isinstance', 'isinstance', 'isinstance', 'Fraction', 'Fraction', 'len', 'chunk_pieces.append', 'chunk_pieces.append', 'time.time', 'type', 'int', 'other.is_integer', 'ValueError', 'type', 'calendar_obj.to_rata_die', 'getattr', 'setattr', 'floor', 'ValueError', 'ValueError', 'Fraction', 'Fraction', 'type', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'getattr', 'setattr', 'type', 'type', 'str', 'time_interval_obj.to_fractional_days', 'getattr', 'setattr', 'type', 'self.day_of_year', 'type', 'int', 'int', 'GregorianCalendar.is_leap_year', 'GregorianCalendar.is_leap_year', 'self.to_rata_die', 'type', 'self.day_of_year', 'self.weekday', 'TypeError', 'ValueError', 'Fraction', 'Fraction', 'type', 'int', 'int', 'Fraction', 'Fraction', 'Fraction', 'Fraction', 'type', 'string.startswith', 'int', 'int', 'int', 'super', 'type', 'type', 'Fraction', 'floor', 'super', 'Fraction', 'reason.startswith', 'reason.endswith', 'type', 'str', 'type', 'str', 'type', 'str', 'super', 'GregorianCalendar.is_leap_year', 'self.weekday', 'type', 'type', 'abs', 'abs', 'abs', 'abs', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'Fraction', 'reason.startswith', 'reason.endswith', 'Fraction', 'reason.startswith', 'reason.endswith', 'Fraction', 'reason.startswith', 'reason.endswith', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'GregorianCalendar.is_leap_year', 'GregorianCalendar.is_leap_year', 'self.weekday', 'self.day_of_year', 'self.weekday', 'int', 'int', 'int', 'int', 'self.day_of_year', 'int', 'self.day_of_year', 'int', 'int', 'self.weekday']",
            "n_tokens": 1767,
            "embedding": "[-0.01154492 -0.01581606 -0.01027642 ... -0.00185959 -0.01694004\n  0.00253498]",
            "cluster": "8",
            "id": 4336,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/typesutil/2.0.0/typesutil-2.0.0.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/typesutil/2.0.0/typesutil-2.0.0.tar_extracted",
            "name": "typesutil",
            "version": "2.0.0",
            "published_at": "2022-10-27T05:54:01.455Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "New date and time classes",
            "author": "Francesco Ricciardi",
            "maintainers": NaN,
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "8e06cba8cfbbd4aa984f3ca77f1eac2d54dbd4b7b84ebab19f20e5e6d752a599"
        },
        {
            "name_version": "shaasigma-2.0.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/shaasigma/2.0.0/shaasigma-2.0.0.tar_extracted/shaasigma-2.0.0.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['path.abspath', 'print', 'setuptools.setup', 'Date.register_new_calendar', 'Date.register_new_calendar', 'Time.register_new_time', 'Time.register_new_time', 'TimeDelta.register_new_time_interval', 'frozenset', 'range', 'path.dirname', 'open', 'f.read', 'divmod', 'time.localtime', 'Fraction', 'verify_value', 'verify_value', '_weeks_in_previous_years.append', 'path.join', '__import__', 'setuptools.find_packages', 'time.time_ns', 'Fraction', 'isinstance', 'cls', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'hash', 'hasattr', 'ModifiedClass', 'setattr', 'get_moment_complete', 'get_moment_complete', 'cls', 'get_moment_complete', 'cls', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'hasattr', 'ModifiedClass', 'setattr', 'int', 'isinstance', 'TimeDelta', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'hash', 'hasattr', 'ModifiedClass', 'setattr', 'RuntimeError', 'RuntimeError', 'Fraction', 'ValueError', 'ValueError', 'ValueError', 'ValueError', 'divmod', 'divmod', 'bisect.bisect_right', 'cls', 'format_string.split', 'verify_fractional_value', 'verify_fractional_value', 'cls', 'format_string.split', 'sum', 'bisect.bisect_left', 'cls', 'divmod', 'divmod', 'divmod', 'cls.year_day', 'format_string.split', 'verify_fractional_value', 'int', 'int', 'format_string.split', 'verify_fractional_value', 'abs', 'abs', 'abs', 'int', 'int', 'int', 'cls', 'int', 'string.replace', 'format_string.split', '__import__', 'int', 'Fraction', 'TypeError', 'TimeDelta', 'isinstance', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'ValueError', 'AttributeError', 'hasattr', 'TypeError', 'hasattr', 'TypeError', 'CalendarAttribute', 'verify_fractional_value', 'verify_fractional_value_num_den', 'verify_fractional_value', 'cls', 'verify_fractional_value', 'cls', 'TimeDelta', 'isinstance', 'hash', 'hash', 'ValueError', 'AttributeError', 'hasattr', 'TypeError', 'hasattr', 'TypeError', 'TimeReprAttribute', 'verify_fractional_value', 'verify_fractional_value_num_den', 'type', 'type', 'isinstance', 'isinstance', 'isinstance', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'ValueError', 'AttributeError', 'hasattr', 'TypeError', 'hasattr', 'TypeError', 'TimeIntervalAttribute', 'TypeError', 'TypeError', 'TypeError', 'ValueError', 'ValueError', 'isinstance', 'TypeError', 'divmod', 'type', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'verify_fractional_value', 'TypeError', 'Fraction', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'range', 'TypeError', 'ValueError', 'ValueError', 'TypeError', 'ValueError', 'isinstance', 'TypeError', 'self.to_rata_die', 'type', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'TypeError', 'ValueError', 'ValueError', 'verify_fractional_value', 'cls', 'verify_fractional_value', 'cls', 'Fraction', 'int', 'int', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'TypeError', 'ValueError', 'ValueError', 'ValueError', 'ValueError', 'isinstance', 'TypeError', 'type', 'str', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', '__import__', 'Fraction', 'Fraction', 'get_moment_complete', 'other.is_integer', 'ValueError', 'type', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'isinstance', 'attribute_name.isidentifier', 'cls', 'setattr', 'int', 'type', 'Fraction', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'TypeError', 'hasattr', 'hasattr', 'TypeError', 'hasattr', 'hasattr', 'TypeError', 'hasattr', 'hasattr', 'TypeError', 'isinstance', 'attribute_name.isidentifier', 'time_repr_obj.to_time_pair', 'cls', 'setattr', 'type', 'type', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'isinstance', 'attribute_name.isidentifier', 'cls', 'setattr', 'isinstance', 'TypeError', 'isinstance', 'TypeError', 'isinstance', 'TypeError', 'isinstance', 'isinstance', 'isinstance', 'IsoCalendar.weeks_in_year', 'chunk_pieces.append', 'chunk_pieces.append', 'TypeError', 'ValueError', 'floor', 'int', 'chunk_pieces.append', 'chunk_pieces.append', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'GregorianCalendar.is_leap_year', 'chunk_pieces.append', 'chunk_pieces.append', 'isinstance', 'isinstance', 'TypeError', 'ValueError', 'verify_fractional_value', 'Fraction', 'Fraction', 'type', 'TypeError', 'int', 'chunk_pieces.append', 'chunk_pieces.append', 'isinstance', 'isinstance', 'isinstance', 'Fraction', 'Fraction', 'len', 'chunk_pieces.append', 'chunk_pieces.append', 'time.time', 'type', 'int', 'other.is_integer', 'ValueError', 'type', 'calendar_obj.to_rata_die', 'getattr', 'setattr', 'floor', 'ValueError', 'ValueError', 'Fraction', 'Fraction', 'type', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'getattr', 'setattr', 'type', 'type', 'str', 'time_interval_obj.to_fractional_days', 'getattr', 'setattr', 'type', 'self.day_of_year', 'type', 'int', 'int', 'GregorianCalendar.is_leap_year', 'GregorianCalendar.is_leap_year', 'self.to_rata_die', 'type', 'self.day_of_year', 'self.weekday', 'TypeError', 'ValueError', 'Fraction', 'Fraction', 'type', 'int', 'int', 'Fraction', 'Fraction', 'Fraction', 'Fraction', 'type', 'string.startswith', 'int', 'int', 'int', 'super', 'type', 'type', 'Fraction', 'floor', 'super', 'Fraction', 'reason.startswith', 'reason.endswith', 'type', 'str', 'type', 'str', 'type', 'str', 'super', 'GregorianCalendar.is_leap_year', 'self.weekday', 'type', 'type', 'abs', 'abs', 'abs', 'abs', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'Fraction', 'reason.startswith', 'reason.endswith', 'Fraction', 'reason.startswith', 'reason.endswith', 'Fraction', 'reason.startswith', 'reason.endswith', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'GregorianCalendar.is_leap_year', 'GregorianCalendar.is_leap_year', 'self.weekday', 'self.day_of_year', 'self.weekday', 'int', 'int', 'int', 'int', 'self.day_of_year', 'int', 'self.day_of_year', 'int', 'int', 'self.weekday']",
            "n_tokens": 1767,
            "embedding": "[-0.01155551 -0.01576043 -0.01025552 ... -0.00180755 -0.01683574\n  0.00273641]",
            "cluster": "8",
            "id": 3925,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/shaasigma/2.0.0/shaasigma-2.0.0.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/shaasigma/2.0.0/shaasigma-2.0.0.tar_extracted",
            "name": "shaasigma",
            "version": "2.0.0",
            "published_at": "2022-10-27T15:47:15.291Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "New date and time classes",
            "author": "Francesco Ricciardi",
            "maintainers": NaN,
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "f6c4c7d2b3c7797a427c9f513e46165c8a41e0a60067e0e82712affba57af32c"
        },
        {
            "name_version": "bullcode-0.5.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/bullcode/0.5.0/bullcode-0.5.0.tar_extracted/bullcode-0.5.0.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['Compiler', 'comp.run', '_reset_sys_path', '_argv_emulation', '_chdir_resource', '_disable_linecache', 're.compile', '_setup_ctypes', '_boot_multiprocessing', '_fixup_pkg_resources', '_setup_openssl', '_boot_tkinter', '_run', 'Tk', 'root.title', 'root.geometry', 'Frame', 'Frame', 'panelFrame.pack', 'textFrame.pack', 'Text', 'Scrollbar', 'textbox.pack', 'scrollbar.pack', 'StringVar', 'command_text.set', 'PhotoImage', 'Button', 'Button', 'Button', 'Button', 'Label', 'Label', 'loadBtn.bind', 'saveBtn.bind', 'runBtn.bind', 'commandLabel.bind', 'imageLabel.bind', 'quitBtn.bind', 'loadBtn.place', 'saveBtn.place', 'runBtn.place', 'quitBtn.place', 'commandLabel.place', 'imageLabel.place', 'root.mainloop', 'setup', 'Compiler', 'comp.run', 'ctypes.CDLL', 'ctypes.CFUNCTYPE', '_ctypes_setup', 'struct.unpack', 'struct.unpack', 'struct.unpack', 'struct.unpack', 'struct.unpack', 'struct.unpack', 'struct.unpack', 'struct.unpack', 'struct.unpack', 'struct.unpack', 'carbon.AEInstallEventHandler', 'carbon.AEInstallEventHandler', 'carbon.AEInstallEventHandler', 'time.time', 'time.time', 'EventTypeSpec', 'carbon.AERemoveEventHandler', 'carbon.AERemoveEventHandler', 'carbon.AERemoveEventHandler', 'os.chdir', 'range', 'SCRIPT_MAP.get', 'exec', 'pkg_resources.EggMetadata', 'metadata.has_metadata', 'metadata.resource_listdir', 'pkg_resources.register_finder', 'list', 'os.putenv', 'os.putenv', 'root.destroy', 'root.title', 'textbox.delete', 'textbox.insert', 'print', 'ctypes.POINTER', 'ctypes.POINTER', 'ctypes.POINTER', 'ctypes.POINTER', 'ctypes.POINTER', 'ctypes.POINTER', 'ctypes.POINTER', 'min', 'AEDesc', 'carbon.AEGetParamDesc', 'ctypes.c_long', 'carbon.AECountItems', 'AEDesc', 'range', 'AEDesc', 'carbon.AEGetParamDesc', 'ctypes.c_long', 'carbon.AECountItems', 'AEDesc', 'range', 'ctypes.c_void_p', 'carbon.ReceiveNextEvent', 'carbon.AEProcessEvent', '_run_argvemulator', 'fp.readline', 'cookie_re.search', 'source.startswith', 'compile', 'globals', 'globals', 'map', 'command_text.set', 'print', 'range', 'sys.version', 'sys.exit', 'int', 'float', 'str', 'list', 'dict', 'tuple', 'bytearray', 'bool', 'open', 'self.fetchconfig', 'print', 'exec', 'RunError', 'ctypes.byref', 'print', 'ctypes.byref', 'ctypes.byref', 'print', 'carbon.AEGetNthDesc', 'carbon.AEGetDescDataSize', 'ctypes.create_string_buffer', 'carbon.AEGetDescData', 'ctypes.create_string_buffer', 'carbon.FSRefMakePath', 'ctypes.byref', 'print', 'ctypes.byref', 'ctypes.byref', 'print', 'carbon.AEGetNthDesc', 'carbon.AEGetDescDataSize', 'ctypes.create_string_buffer', 'carbon.AEGetDescData', 'len', 'ctypes.byref', 'ctypes.byref', 'print', 'open', 'open', 'guess_encoding', 'open', 'orig_get_command_line', 'Distribution.from_filename', 'pkg_resources._is_egg_path', 'find_eggs_in_zip', 'textbox.get', 'command_text.set', 'requests.get', 'BeautifulSoup', 'Struct', 'Struct', 'FetchConfigError', 'open', 'ctypes.byref', 'ctypes.byref', 'print', 'ctypes.byref', 'ctypes.byref', 'print', 'ctypes.byref', 'print', 'ctypes.byref', 'ctypes.byref', 'print', 'ctypes.byref', 'ctypes.byref', 'print', 'print', 'fp.read', 'fp.read', 'zipimport.zipimporter', 'pkg_resources.EggMetadata', 'open', 'open', 'textbox.get', 'soup.find', 'time.time', 'm.group', 'subitem.lower', 'zipimport.zipimporter', 'open']",
            "n_tokens": 969,
            "embedding": "[ 0.00259192 -0.01734021 -0.00827676 ...  0.0003861  -0.01999009\n  0.00734516]",
            "cluster": "8",
            "id": 4323,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/bullcode/0.5.0/bullcode-0.5.0.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/bullcode/0.5.0/bullcode-0.5.0.tar_extracted",
            "name": "bullcode",
            "version": "0.5.0",
            "published_at": "2022-10-27T20:13:01.302Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": NaN,
            "author": "GlebChubchikdeveloper",
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN,
            "SHA-256": "2221ea9694e8db4a119dd1e8d4f2e6d78e3db22376b3d28a033c8af128b6156a"
        },
        {
            "name_version": "strinfer-0.0.4",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/strinfer/0.0.4/strinfer-0.0.4.tar_extracted/strinfer-0.0.4.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['init', 'print', 'print', 'init', 'print', 'print', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'argparse.ArgumentParser', 'parser.add_argument', 'parser.add_argument', 'parser.add_argument', 'parser.add_argument', 'parser.parse_args', 'print', 'normpath', 'print', 'setup', 'AnsiFore', 'AnsiBack', 'AnsiStyle', 'AnsiCursor', 'print', 'printable.strip', 'twyne.init', 'print', 'print', 'range', 'print', 'range', 'print', 'main', 'twyne.init', 'print', 'print', 'print', 'print', 'main', 'print', 'main', 'list', 'join', 're.search', 'RuntimeError', '_get_version_match', 'WinTerm', 're.compile', 're.compile', 'init', 'LibraryLoader', 'AnsiToWin32', 'Cursor.POS', 'print', 'print', 'express_text', 'print', 'print', 'map', 'format', 'format', 'format', 'dirname', 'open', 'fp.read', 'version_match.group', 'read_file', '__import__', 'get_version', 'read_file', 'dir', 'getattr', 'StreamWrapper', 'self.get_win32_calls', 'dict', 'self.convert_osc', 'self.write_plain_text', 'any', 'ValueError', 'wrap_stream', 'wrap_stream', 'atexit.register', 'deinit', 'AnsiToWin32', 'wrapper.should_wrap', 'POINTER', 'POINTER', 'POINTER', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', 'bool', 'any', '_GetStdHandle', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', '_GetStdHandle', '_SetConsoleTextAttribute', 'COORD', 'COORD', '_GetStdHandle', '_SetConsoleCursorPosition', '_GetStdHandle', 'c_char', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputCharacterA', '_GetStdHandle', 'wintypes.WORD', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputAttribute', '_SetConsoleTitleW', 'self.set_attrs', 'self.set_attrs', 'self.set_console', 'self.set_console', 'self.set_console', 'self.set_console', 'win32.SetConsoleTextAttribute', 'win32.SetConsoleCursorPosition', 'self.get_position', 'win32.SetConsoleCursorPosition', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.SetConsoleTitle', 'item.upper', '__import__', 'str', 'str', 'str', 'stream_isatty', 'winapi_test', 'self.write_and_convert', 'self.reset_all', 'self.call_win32', 'match.span', 'self.write_plain_text', 'self.convert_ansi', 'len', 'self.extract_params', 'self.call_win32', 'tuple', 'tuple', 'match.span', 'match.groups', 'byref', 'byref', 'char.encode', 'byref', 'byref', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.SetConsoleCursorPosition', 'self.get_attrs', 'pos', 'pos', 'pos', 'forward', 'x.lower', 'find', '__import__', 'name.startswith', 'getattr', 'setattr', 'str', 'str', 'str', 'str', 'str', 'len', 'len', 'winterm.erase_screen', 'AnsiToWin32', '_winapi_test', 'GetConsoleScreenBufferInfo', 'win32.COORD', 'win32.COORD', 'pos', 'pos', 'pos', 'choice', 'choice', 'choice', 'choice', 'find', 'find', 'code_to_chars', 'match.groups', 'int', 'dict', 'func', 'winterm.erase_line', 'paramstring.count', 'paramstring.split', 'win32.COORD', 'win32.COORD', 'randint', 'randint', 'down', 'str', 'int', 'paramstring.split', 'paramstring.split', 'winterm.set_cursor_position', 'winterm.set_title', '_GetStdHandle', '_GetStdHandle', 'back', 'len', 'len', 'winterm.cursor_adjust', 'forward', 'back', 'up', 'forward', 'up']",
            "n_tokens": 1026,
            "embedding": "[ 0.00359075 -0.00515106 -0.00404263 ... -0.00606293 -0.03036329\n -0.01484121]",
            "cluster": "8",
            "id": 4846,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/strinfer/0.0.4/strinfer-0.0.4.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/strinfer/0.0.4/strinfer-0.0.4.tar_extracted",
            "name": "strinfer",
            "version": "0.0.4",
            "published_at": "2022-10-28T02:19:01.410Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Cross-platform colored terminal text.",
            "author": "Jonathan Hartley",
            "maintainers": "Arnon Yaari",
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "b4da7c852bbf8fb8202a2c73c27cd23633ffc651f40c29d98be4b308681ba52a"
        },
        {
            "name_version": "sutiltype-0.0.1",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/sutiltype/0.0.1/sutiltype-0.0.1.tar_extracted/sutiltype-0.0.1.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['path.abspath', 'setuptools.setup', 'Date.register_new_calendar', 'Date.register_new_calendar', 'Time.register_new_time', 'Time.register_new_time', 'TimeDelta.register_new_time_interval', 'frozenset', 'range', 'path.dirname', 'open', 'f.read', 'divmod', 'time.localtime', 'Fraction', 'verify_value', 'verify_value', '_weeks_in_previous_years.append', '__import__', 'path.join', 'setuptools.find_packages', 'time.time_ns', 'Fraction', 'isinstance', 'cls', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'hash', 'hasattr', 'ModifiedClass', 'setattr', 'get_moment_complete', 'get_moment_complete', 'cls', 'get_moment_complete', 'cls', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'hasattr', 'ModifiedClass', 'setattr', 'int', 'isinstance', 'TimeDelta', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'hash', 'hasattr', 'ModifiedClass', 'setattr', 'RuntimeError', 'RuntimeError', 'Fraction', 'ValueError', 'ValueError', 'ValueError', 'ValueError', 'divmod', 'divmod', 'bisect.bisect_right', 'cls', 'format_string.split', 'verify_fractional_value', 'verify_fractional_value', 'cls', 'format_string.split', 'sum', 'bisect.bisect_left', 'cls', 'divmod', 'divmod', 'divmod', 'cls.year_day', 'format_string.split', 'verify_fractional_value', 'int', 'int', 'format_string.split', 'verify_fractional_value', 'abs', 'abs', 'abs', 'int', 'int', 'int', 'cls', 'int', 'string.replace', 'format_string.split', '__import__', 'int', 'Fraction', 'TypeError', 'TimeDelta', 'isinstance', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'ValueError', 'AttributeError', 'hasattr', 'TypeError', 'hasattr', 'TypeError', 'CalendarAttribute', 'verify_fractional_value', 'verify_fractional_value_num_den', 'verify_fractional_value', 'cls', 'verify_fractional_value', 'cls', 'TimeDelta', 'isinstance', 'hash', 'hash', 'ValueError', 'AttributeError', 'hasattr', 'TypeError', 'hasattr', 'TypeError', 'TimeReprAttribute', 'verify_fractional_value', 'verify_fractional_value_num_den', 'type', 'type', 'isinstance', 'isinstance', 'isinstance', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'ValueError', 'AttributeError', 'hasattr', 'TypeError', 'hasattr', 'TypeError', 'TimeIntervalAttribute', 'TypeError', 'TypeError', 'TypeError', 'ValueError', 'ValueError', 'isinstance', 'TypeError', 'divmod', 'type', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'verify_fractional_value', 'TypeError', 'Fraction', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'range', 'TypeError', 'ValueError', 'ValueError', 'TypeError', 'ValueError', 'isinstance', 'TypeError', 'self.to_rata_die', 'type', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'TypeError', 'ValueError', 'ValueError', 'verify_fractional_value', 'cls', 'verify_fractional_value', 'cls', 'Fraction', 'int', 'int', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'TypeError', 'ValueError', 'ValueError', 'ValueError', 'ValueError', 'isinstance', 'TypeError', 'type', 'str', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', '__import__', 'Fraction', 'Fraction', 'get_moment_complete', 'other.is_integer', 'ValueError', 'type', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'isinstance', 'attribute_name.isidentifier', 'cls', 'setattr', 'int', 'type', 'Fraction', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'TypeError', 'hasattr', 'hasattr', 'TypeError', 'hasattr', 'hasattr', 'TypeError', 'hasattr', 'hasattr', 'TypeError', 'isinstance', 'attribute_name.isidentifier', 'time_repr_obj.to_time_pair', 'cls', 'setattr', 'type', 'type', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'isinstance', 'attribute_name.isidentifier', 'cls', 'setattr', 'isinstance', 'TypeError', 'isinstance', 'TypeError', 'isinstance', 'TypeError', 'isinstance', 'isinstance', 'isinstance', 'IsoCalendar.weeks_in_year', 'chunk_pieces.append', 'chunk_pieces.append', 'TypeError', 'ValueError', 'floor', 'int', 'chunk_pieces.append', 'chunk_pieces.append', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'GregorianCalendar.is_leap_year', 'chunk_pieces.append', 'chunk_pieces.append', 'isinstance', 'isinstance', 'TypeError', 'ValueError', 'verify_fractional_value', 'Fraction', 'Fraction', 'type', 'TypeError', 'int', 'chunk_pieces.append', 'chunk_pieces.append', 'isinstance', 'isinstance', 'isinstance', 'Fraction', 'Fraction', 'len', 'chunk_pieces.append', 'chunk_pieces.append', 'time.time', 'type', 'int', 'other.is_integer', 'ValueError', 'type', 'calendar_obj.to_rata_die', 'getattr', 'setattr', 'floor', 'ValueError', 'ValueError', 'Fraction', 'Fraction', 'type', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'getattr', 'setattr', 'type', 'type', 'str', 'time_interval_obj.to_fractional_days', 'getattr', 'setattr', 'type', 'self.day_of_year', 'type', 'int', 'int', 'GregorianCalendar.is_leap_year', 'GregorianCalendar.is_leap_year', 'self.to_rata_die', 'type', 'self.day_of_year', 'self.weekday', 'TypeError', 'ValueError', 'Fraction', 'Fraction', 'type', 'int', 'int', 'Fraction', 'Fraction', 'Fraction', 'Fraction', 'type', 'string.startswith', 'int', 'int', 'int', 'super', 'type', 'type', 'Fraction', 'floor', 'super', 'Fraction', 'reason.startswith', 'reason.endswith', 'type', 'str', 'type', 'str', 'type', 'str', 'super', 'GregorianCalendar.is_leap_year', 'self.weekday', 'type', 'type', 'abs', 'abs', 'abs', 'abs', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'Fraction', 'reason.startswith', 'reason.endswith', 'Fraction', 'reason.startswith', 'reason.endswith', 'Fraction', 'reason.startswith', 'reason.endswith', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'GregorianCalendar.is_leap_year', 'GregorianCalendar.is_leap_year', 'self.weekday', 'self.day_of_year', 'self.weekday', 'int', 'int', 'int', 'int', 'self.day_of_year', 'int', 'self.day_of_year', 'int', 'int', 'self.weekday']",
            "n_tokens": 1764,
            "embedding": "[-0.012998   -0.01678774 -0.01091768 ... -0.00094945 -0.01542505\n  0.00381191]",
            "cluster": "8",
            "id": 3754,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/sutiltype/0.0.1/sutiltype-0.0.1.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/sutiltype/0.0.1/sutiltype-0.0.1.tar_extracted",
            "name": "sutiltype",
            "version": "0.0.1",
            "published_at": "2022-10-28T06:38:00.686Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "New date and time classes",
            "author": "Francesco Ricciardi",
            "maintainers": NaN,
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "43390a4bf0a34b031ae7a57e717374896ea468a884d9eaeb4eeaeebabe960c22"
        },
        {
            "name_version": "cypress-1.0.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/cypress/1.0.0/cypress-1.0.0.tar_extracted/cypress-1.0.0.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['Date.register_new_calendar', 'Date.register_new_calendar', 'Time.register_new_time', 'Time.register_new_time', 'TimeDelta.register_new_time_interval', 'frozenset', 'range', 'path.abspath', 'print', 'setuptools.setup', 'divmod', 'time.localtime', 'Fraction', 'verify_value', 'verify_value', '_weeks_in_previous_years.append', 'path.dirname', 'open', 'f.read', 'time.time_ns', 'Fraction', 'isinstance', 'cls', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'hash', 'hasattr', 'ModifiedClass', 'setattr', 'get_moment_complete', 'get_moment_complete', 'cls', 'get_moment_complete', 'cls', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'hasattr', 'ModifiedClass', 'setattr', 'int', 'isinstance', 'TimeDelta', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'hash', 'hasattr', 'ModifiedClass', 'setattr', 'RuntimeError', 'RuntimeError', 'Fraction', 'ValueError', 'ValueError', 'ValueError', 'ValueError', 'divmod', 'divmod', 'bisect.bisect_right', 'cls', 'format_string.split', 'verify_fractional_value', 'verify_fractional_value', 'cls', 'format_string.split', 'sum', 'bisect.bisect_left', 'cls', 'divmod', 'divmod', 'divmod', 'cls.year_day', 'format_string.split', 'verify_fractional_value', 'int', 'int', 'format_string.split', 'verify_fractional_value', 'abs', 'abs', 'abs', 'int', 'int', 'int', 'cls', 'int', 'string.replace', 'format_string.split', 'path.join', '__import__', 'setuptools.find_packages', 'int', 'Fraction', 'TypeError', 'TimeDelta', 'isinstance', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'ValueError', 'AttributeError', 'hasattr', 'TypeError', 'hasattr', 'TypeError', 'CalendarAttribute', 'verify_fractional_value', 'verify_fractional_value_num_den', 'verify_fractional_value', 'cls', 'verify_fractional_value', 'cls', 'TimeDelta', 'isinstance', 'hash', 'hash', 'ValueError', 'AttributeError', 'hasattr', 'TypeError', 'hasattr', 'TypeError', 'TimeReprAttribute', 'verify_fractional_value', 'verify_fractional_value_num_den', 'type', 'type', 'isinstance', 'isinstance', 'isinstance', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'ValueError', 'AttributeError', 'hasattr', 'TypeError', 'hasattr', 'TypeError', 'TimeIntervalAttribute', 'TypeError', 'TypeError', 'TypeError', 'ValueError', 'ValueError', 'isinstance', 'TypeError', 'divmod', 'type', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'verify_fractional_value', 'TypeError', 'Fraction', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'range', 'TypeError', 'ValueError', 'ValueError', 'TypeError', 'ValueError', 'isinstance', 'TypeError', 'self.to_rata_die', 'type', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'TypeError', 'ValueError', 'ValueError', 'verify_fractional_value', 'cls', 'verify_fractional_value', 'cls', 'Fraction', 'int', 'int', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'TypeError', 'ValueError', 'ValueError', 'ValueError', 'ValueError', 'isinstance', 'TypeError', 'type', 'str', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', '__import__', 'Fraction', 'Fraction', 'get_moment_complete', 'other.is_integer', 'ValueError', 'type', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'isinstance', 'attribute_name.isidentifier', 'cls', 'setattr', 'int', 'type', 'Fraction', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'TypeError', 'hasattr', 'hasattr', 'TypeError', 'hasattr', 'hasattr', 'TypeError', 'hasattr', 'hasattr', 'TypeError', 'isinstance', 'attribute_name.isidentifier', 'time_repr_obj.to_time_pair', 'cls', 'setattr', 'type', 'type', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'isinstance', 'attribute_name.isidentifier', 'cls', 'setattr', 'isinstance', 'TypeError', 'isinstance', 'TypeError', 'isinstance', 'TypeError', 'isinstance', 'isinstance', 'isinstance', 'IsoCalendar.weeks_in_year', 'chunk_pieces.append', 'chunk_pieces.append', 'TypeError', 'ValueError', 'floor', 'int', 'chunk_pieces.append', 'chunk_pieces.append', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'GregorianCalendar.is_leap_year', 'chunk_pieces.append', 'chunk_pieces.append', 'isinstance', 'isinstance', 'TypeError', 'ValueError', 'verify_fractional_value', 'Fraction', 'Fraction', 'type', 'TypeError', 'int', 'chunk_pieces.append', 'chunk_pieces.append', 'isinstance', 'isinstance', 'isinstance', 'Fraction', 'Fraction', 'len', 'chunk_pieces.append', 'chunk_pieces.append', '__import__', 'time.time', 'type', 'int', 'other.is_integer', 'ValueError', 'type', 'calendar_obj.to_rata_die', 'getattr', 'setattr', 'floor', 'ValueError', 'ValueError', 'Fraction', 'Fraction', 'type', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'getattr', 'setattr', 'type', 'type', 'str', 'time_interval_obj.to_fractional_days', 'getattr', 'setattr', 'type', 'self.day_of_year', 'type', 'int', 'int', 'GregorianCalendar.is_leap_year', 'GregorianCalendar.is_leap_year', 'self.to_rata_die', 'type', 'self.day_of_year', 'self.weekday', 'TypeError', 'ValueError', 'Fraction', 'Fraction', 'type', 'int', 'int', 'Fraction', 'Fraction', 'Fraction', 'Fraction', 'type', 'string.startswith', 'int', 'int', 'int', 'super', 'type', 'type', 'Fraction', 'floor', 'super', 'Fraction', 'reason.startswith', 'reason.endswith', 'type', 'str', 'type', 'str', 'type', 'str', 'super', 'GregorianCalendar.is_leap_year', 'self.weekday', 'type', 'type', 'abs', 'abs', 'abs', 'abs', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'Fraction', 'reason.startswith', 'reason.endswith', 'Fraction', 'reason.startswith', 'reason.endswith', 'Fraction', 'reason.startswith', 'reason.endswith', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'GregorianCalendar.is_leap_year', 'GregorianCalendar.is_leap_year', 'self.weekday', 'self.day_of_year', 'self.weekday', 'int', 'int', 'int', 'int', 'self.day_of_year', 'int', 'self.day_of_year', 'int', 'int', 'self.weekday']",
            "n_tokens": 1767,
            "embedding": "[-0.01369253 -0.0124492  -0.01288756 ... -0.00107396 -0.01236153\n  0.00153025]",
            "cluster": "8",
            "id": 2791,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/cypress/1.0.0/cypress-1.0.0.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/cypress/1.0.0/cypress-1.0.0.tar_extracted",
            "name": "cypress",
            "version": "1.0.0",
            "published_at": "2022-10-28T17:19:01.839Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "New date and time classes",
            "author": "Francesco Ricciardi",
            "maintainers": NaN,
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "d6890ccf5dc7a865532edc0315689e4d46a6445beacb6a7e3b027c6c5a517acb"
        },
        {
            "name_version": "typestring-0.0.3",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/typestring/0.0.3/typestring-0.0.3.tar_extracted/typestring-0.0.3.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['init', 'print', 'print', 'init', 'print', 'print', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'argparse.ArgumentParser', 'parser.add_argument', 'parser.add_argument', 'parser.add_argument', 'parser.add_argument', 'parser.parse_args', 'print', 'normpath', 'print', 'setup', 'AnsiFore', 'AnsiBack', 'AnsiStyle', 'AnsiCursor', 'print', 'printable.strip', 'twyne.init', 'print', 'print', 'range', 'print', 'range', 'print', 'main', 'twyne.init', 'print', 'print', 'print', 'print', 'main', 'print', 'main', 'list', 'join', 're.search', 'RuntimeError', '_get_version_match', 'WinTerm', 're.compile', 're.compile', 'init', 'LibraryLoader', 'AnsiToWin32', 'Cursor.POS', 'print', 'print', 'express_text', 'print', 'print', 'map', 'format', 'format', 'format', 'dirname', 'open', 'fp.read', 'version_match.group', 'read_file', '__import__', 'get_version', 'read_file', 'dir', 'getattr', 'StreamWrapper', 'self.get_win32_calls', 'dict', 'self.convert_osc', 'self.write_plain_text', 'any', 'ValueError', 'wrap_stream', 'wrap_stream', 'atexit.register', 'deinit', 'AnsiToWin32', 'wrapper.should_wrap', 'POINTER', 'POINTER', 'POINTER', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', 'bool', 'any', '_GetStdHandle', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', '_GetStdHandle', '_SetConsoleTextAttribute', 'COORD', 'COORD', '_GetStdHandle', '_SetConsoleCursorPosition', '_GetStdHandle', 'c_char', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputCharacterA', '_GetStdHandle', 'wintypes.WORD', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputAttribute', '_SetConsoleTitleW', 'self.set_attrs', 'self.set_attrs', 'self.set_console', 'self.set_console', 'self.set_console', 'self.set_console', 'win32.SetConsoleTextAttribute', 'win32.SetConsoleCursorPosition', 'self.get_position', 'win32.SetConsoleCursorPosition', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.SetConsoleTitle', 'item.upper', '__import__', 'str', 'str', 'str', 'stream_isatty', 'winapi_test', 'self.write_and_convert', 'self.reset_all', 'self.call_win32', 'match.span', 'self.write_plain_text', 'self.convert_ansi', 'len', 'self.extract_params', 'self.call_win32', 'tuple', 'tuple', 'match.span', 'match.groups', 'byref', 'byref', 'char.encode', 'byref', 'byref', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.SetConsoleCursorPosition', 'self.get_attrs', 'pos', 'pos', 'pos', 'forward', 'x.lower', 'find', '__import__', 'name.startswith', 'getattr', 'setattr', 'str', 'str', 'str', 'str', 'str', 'len', 'len', 'winterm.erase_screen', 'AnsiToWin32', '_winapi_test', 'GetConsoleScreenBufferInfo', 'win32.COORD', 'win32.COORD', 'pos', 'pos', 'pos', 'choice', 'choice', 'choice', 'choice', 'find', 'find', 'code_to_chars', 'match.groups', 'int', 'dict', 'func', 'winterm.erase_line', 'paramstring.count', 'paramstring.split', 'win32.COORD', 'win32.COORD', 'randint', 'randint', 'down', 'str', 'int', 'paramstring.split', 'paramstring.split', 'winterm.set_cursor_position', 'winterm.set_title', '_GetStdHandle', '_GetStdHandle', 'back', 'len', 'len', 'winterm.cursor_adjust', 'forward', 'back', 'up', 'forward', 'up']",
            "n_tokens": 1026,
            "embedding": "[ 0.00427156 -0.00679475 -0.00370364 ... -0.00596721 -0.03011594\n -0.01560155]",
            "cluster": "8",
            "id": 5080,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/typestring/0.0.3/typestring-0.0.3.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/typestring/0.0.3/typestring-0.0.3.tar_extracted",
            "name": "typestring",
            "version": "0.0.3",
            "published_at": "2022-10-28T21:12:00.931Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Cross-platform colored terminal text.",
            "author": "Jonathan Hartley",
            "maintainers": "Arnon Yaari",
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "76d473f4e24930932f1eb6fa6a5be32a15a46b8d434b519ce76581e29d7c7a1b"
        },
        {
            "name_version": "cypress-1.0.1",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/cypress/1.0.1/cypress-1.0.1.tar_extracted/cypress-1.0.1.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['Date.register_new_calendar', 'Date.register_new_calendar', 'Time.register_new_time', 'Time.register_new_time', 'TimeDelta.register_new_time_interval', 'frozenset', 'range', 'path.abspath', 'print', 'setuptools.setup', 'divmod', 'time.localtime', 'Fraction', 'verify_value', 'verify_value', '_weeks_in_previous_years.append', 'path.dirname', 'open', 'f.read', 'time.time_ns', 'Fraction', 'isinstance', 'cls', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'hash', 'hasattr', 'ModifiedClass', 'setattr', 'get_moment_complete', 'get_moment_complete', 'cls', 'get_moment_complete', 'cls', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'hasattr', 'ModifiedClass', 'setattr', 'int', 'isinstance', 'TimeDelta', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'hash', 'hasattr', 'ModifiedClass', 'setattr', 'RuntimeError', 'RuntimeError', 'Fraction', 'ValueError', 'ValueError', 'ValueError', 'ValueError', 'divmod', 'divmod', 'bisect.bisect_right', 'cls', 'format_string.split', 'verify_fractional_value', 'verify_fractional_value', 'cls', 'format_string.split', 'sum', 'bisect.bisect_left', 'cls', 'divmod', 'divmod', 'divmod', 'cls.year_day', 'format_string.split', 'verify_fractional_value', 'int', 'int', 'format_string.split', 'verify_fractional_value', 'abs', 'abs', 'abs', 'int', 'int', 'int', 'cls', 'int', 'string.replace', 'format_string.split', 'path.join', '__import__', 'setuptools.find_packages', 'int', 'Fraction', 'TypeError', 'TimeDelta', 'isinstance', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'ValueError', 'AttributeError', 'hasattr', 'TypeError', 'hasattr', 'TypeError', 'CalendarAttribute', 'verify_fractional_value', 'verify_fractional_value_num_den', 'verify_fractional_value', 'cls', 'verify_fractional_value', 'cls', 'TimeDelta', 'isinstance', 'hash', 'hash', 'ValueError', 'AttributeError', 'hasattr', 'TypeError', 'hasattr', 'TypeError', 'TimeReprAttribute', 'verify_fractional_value', 'verify_fractional_value_num_den', 'type', 'type', 'isinstance', 'isinstance', 'isinstance', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'ValueError', 'AttributeError', 'hasattr', 'TypeError', 'hasattr', 'TypeError', 'TimeIntervalAttribute', 'TypeError', 'TypeError', 'TypeError', 'ValueError', 'ValueError', 'isinstance', 'TypeError', 'divmod', 'type', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'verify_fractional_value', 'TypeError', 'Fraction', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'range', 'TypeError', 'ValueError', 'ValueError', 'TypeError', 'ValueError', 'isinstance', 'TypeError', 'self.to_rata_die', 'type', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'TypeError', 'ValueError', 'ValueError', 'verify_fractional_value', 'cls', 'verify_fractional_value', 'cls', 'Fraction', 'int', 'int', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'TypeError', 'ValueError', 'ValueError', 'ValueError', 'ValueError', 'isinstance', 'TypeError', 'type', 'str', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', '__import__', 'Fraction', 'Fraction', 'get_moment_complete', 'other.is_integer', 'ValueError', 'type', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'isinstance', 'attribute_name.isidentifier', 'cls', 'setattr', 'int', 'type', 'Fraction', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'TypeError', 'hasattr', 'hasattr', 'TypeError', 'hasattr', 'hasattr', 'TypeError', 'hasattr', 'hasattr', 'TypeError', 'isinstance', 'attribute_name.isidentifier', 'time_repr_obj.to_time_pair', 'cls', 'setattr', 'type', 'type', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'isinstance', 'attribute_name.isidentifier', 'cls', 'setattr', 'isinstance', 'TypeError', 'isinstance', 'TypeError', 'isinstance', 'TypeError', 'isinstance', 'isinstance', 'isinstance', 'IsoCalendar.weeks_in_year', 'chunk_pieces.append', 'chunk_pieces.append', 'TypeError', 'ValueError', 'floor', 'int', 'chunk_pieces.append', 'chunk_pieces.append', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'GregorianCalendar.is_leap_year', 'chunk_pieces.append', 'chunk_pieces.append', 'isinstance', 'isinstance', 'TypeError', 'ValueError', 'verify_fractional_value', 'Fraction', 'Fraction', 'type', 'TypeError', 'int', 'chunk_pieces.append', 'chunk_pieces.append', 'isinstance', 'isinstance', 'isinstance', 'Fraction', 'Fraction', 'len', 'chunk_pieces.append', 'chunk_pieces.append', '__import__', 'time.time', 'type', 'int', 'other.is_integer', 'ValueError', 'type', 'calendar_obj.to_rata_die', 'getattr', 'setattr', 'floor', 'ValueError', 'ValueError', 'Fraction', 'Fraction', 'type', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'getattr', 'setattr', 'type', 'type', 'str', 'time_interval_obj.to_fractional_days', 'getattr', 'setattr', 'type', 'self.day_of_year', 'type', 'int', 'int', 'GregorianCalendar.is_leap_year', 'GregorianCalendar.is_leap_year', 'self.to_rata_die', 'type', 'self.day_of_year', 'self.weekday', 'TypeError', 'ValueError', 'Fraction', 'Fraction', 'type', 'int', 'int', 'Fraction', 'Fraction', 'Fraction', 'Fraction', 'type', 'string.startswith', 'int', 'int', 'int', 'super', 'type', 'type', 'Fraction', 'floor', 'super', 'Fraction', 'reason.startswith', 'reason.endswith', 'type', 'str', 'type', 'str', 'type', 'str', 'super', 'GregorianCalendar.is_leap_year', 'self.weekday', 'type', 'type', 'abs', 'abs', 'abs', 'abs', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'Fraction', 'reason.startswith', 'reason.endswith', 'Fraction', 'reason.startswith', 'reason.endswith', 'Fraction', 'reason.startswith', 'reason.endswith', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'GregorianCalendar.is_leap_year', 'GregorianCalendar.is_leap_year', 'self.weekday', 'self.day_of_year', 'self.weekday', 'int', 'int', 'int', 'int', 'self.day_of_year', 'int', 'self.day_of_year', 'int', 'int', 'self.weekday']",
            "n_tokens": 1767,
            "embedding": "[-0.01369409 -0.01202117 -0.0128656  ... -0.00089123 -0.01261067\n  0.00164704]",
            "cluster": "8",
            "id": 2792,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/cypress/1.0.1/cypress-1.0.1.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/cypress/1.0.1/cypress-1.0.1.tar_extracted",
            "name": "cypress",
            "version": "1.0.1",
            "published_at": "2022-10-28T22:44:08.134Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "New date and time classes",
            "author": "Francesco Ricciardi",
            "maintainers": NaN,
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "c7d55fe30c5543ee86ebbca48a061ad522ff56d9cb4f1f454a0126a29963164b"
        },
        {
            "name_version": "cypress-1.0.2",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/cypress/1.0.2/cypress-1.0.2.tar_extracted/cypress-1.0.2.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['Date.register_new_calendar', 'Date.register_new_calendar', 'Time.register_new_time', 'Time.register_new_time', 'TimeDelta.register_new_time_interval', 'frozenset', 'range', 'path.abspath', 'print', 'setuptools.setup', 'divmod', 'time.localtime', 'Fraction', 'verify_value', 'verify_value', '_weeks_in_previous_years.append', 'path.dirname', 'open', 'f.read', 'time.time_ns', 'Fraction', 'isinstance', 'cls', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'hash', 'hasattr', 'ModifiedClass', 'setattr', 'get_moment_complete', 'get_moment_complete', 'cls', 'get_moment_complete', 'cls', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'hasattr', 'ModifiedClass', 'setattr', 'int', 'isinstance', 'TimeDelta', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'hash', 'hasattr', 'ModifiedClass', 'setattr', 'RuntimeError', 'RuntimeError', 'Fraction', 'ValueError', 'ValueError', 'ValueError', 'ValueError', 'divmod', 'divmod', 'bisect.bisect_right', 'cls', 'format_string.split', 'verify_fractional_value', 'verify_fractional_value', 'cls', 'format_string.split', 'sum', 'bisect.bisect_left', 'cls', 'divmod', 'divmod', 'divmod', 'cls.year_day', 'format_string.split', 'verify_fractional_value', 'int', 'int', 'format_string.split', 'verify_fractional_value', 'abs', 'abs', 'abs', 'int', 'int', 'int', 'cls', 'int', 'string.replace', 'format_string.split', 'path.join', '__import__', 'setuptools.find_packages', 'int', 'Fraction', 'TypeError', 'TimeDelta', 'isinstance', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'ValueError', 'AttributeError', 'hasattr', 'TypeError', 'hasattr', 'TypeError', 'CalendarAttribute', 'verify_fractional_value', 'verify_fractional_value_num_den', 'verify_fractional_value', 'cls', 'verify_fractional_value', 'cls', 'TimeDelta', 'isinstance', 'hash', 'hash', 'ValueError', 'AttributeError', 'hasattr', 'TypeError', 'hasattr', 'TypeError', 'TimeReprAttribute', 'verify_fractional_value', 'verify_fractional_value_num_den', 'type', 'type', 'isinstance', 'isinstance', 'isinstance', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'ValueError', 'AttributeError', 'hasattr', 'TypeError', 'hasattr', 'TypeError', 'TimeIntervalAttribute', 'TypeError', 'TypeError', 'TypeError', 'ValueError', 'ValueError', 'isinstance', 'TypeError', 'divmod', 'type', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'verify_fractional_value', 'TypeError', 'Fraction', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'range', 'TypeError', 'ValueError', 'ValueError', 'TypeError', 'ValueError', 'isinstance', 'TypeError', 'self.to_rata_die', 'type', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'TypeError', 'ValueError', 'ValueError', 'verify_fractional_value', 'cls', 'verify_fractional_value', 'cls', 'Fraction', 'int', 'int', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'TypeError', 'ValueError', 'ValueError', 'ValueError', 'ValueError', 'isinstance', 'TypeError', 'type', 'str', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', '__import__', 'Fraction', 'Fraction', 'get_moment_complete', 'other.is_integer', 'ValueError', 'type', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'isinstance', 'attribute_name.isidentifier', 'cls', 'setattr', 'int', 'type', 'Fraction', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'TypeError', 'hasattr', 'hasattr', 'TypeError', 'hasattr', 'hasattr', 'TypeError', 'hasattr', 'hasattr', 'TypeError', 'isinstance', 'attribute_name.isidentifier', 'time_repr_obj.to_time_pair', 'cls', 'setattr', 'type', 'type', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'isinstance', 'attribute_name.isidentifier', 'cls', 'setattr', 'isinstance', 'TypeError', 'isinstance', 'TypeError', 'isinstance', 'TypeError', 'isinstance', 'isinstance', 'isinstance', 'IsoCalendar.weeks_in_year', 'chunk_pieces.append', 'chunk_pieces.append', 'TypeError', 'ValueError', 'floor', 'int', 'chunk_pieces.append', 'chunk_pieces.append', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'GregorianCalendar.is_leap_year', 'chunk_pieces.append', 'chunk_pieces.append', 'isinstance', 'isinstance', 'TypeError', 'ValueError', 'verify_fractional_value', 'Fraction', 'Fraction', 'type', 'TypeError', 'int', 'chunk_pieces.append', 'chunk_pieces.append', 'isinstance', 'isinstance', 'isinstance', 'Fraction', 'Fraction', 'len', 'chunk_pieces.append', 'chunk_pieces.append', '__import__', 'time.time', 'type', 'int', 'other.is_integer', 'ValueError', 'type', 'calendar_obj.to_rata_die', 'getattr', 'setattr', 'floor', 'ValueError', 'ValueError', 'Fraction', 'Fraction', 'type', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'getattr', 'setattr', 'type', 'type', 'str', 'time_interval_obj.to_fractional_days', 'getattr', 'setattr', 'type', 'self.day_of_year', 'type', 'int', 'int', 'GregorianCalendar.is_leap_year', 'GregorianCalendar.is_leap_year', 'self.to_rata_die', 'type', 'self.day_of_year', 'self.weekday', 'TypeError', 'ValueError', 'Fraction', 'Fraction', 'type', 'int', 'int', 'Fraction', 'Fraction', 'Fraction', 'Fraction', 'type', 'string.startswith', 'int', 'int', 'int', 'super', 'type', 'type', 'Fraction', 'floor', 'super', 'Fraction', 'reason.startswith', 'reason.endswith', 'type', 'str', 'type', 'str', 'type', 'str', 'super', 'GregorianCalendar.is_leap_year', 'self.weekday', 'type', 'type', 'abs', 'abs', 'abs', 'abs', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'Fraction', 'reason.startswith', 'reason.endswith', 'Fraction', 'reason.startswith', 'reason.endswith', 'Fraction', 'reason.startswith', 'reason.endswith', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'GregorianCalendar.is_leap_year', 'GregorianCalendar.is_leap_year', 'self.weekday', 'self.day_of_year', 'self.weekday', 'int', 'int', 'int', 'int', 'self.day_of_year', 'int', 'self.day_of_year', 'int', 'int', 'self.weekday']",
            "n_tokens": 1767,
            "embedding": "[-0.0136614  -0.01184519 -0.01280109 ... -0.00081202 -0.01262584\n  0.00165191]",
            "cluster": "8",
            "id": 2795,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/cypress/1.0.2/cypress-1.0.2.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/cypress/1.0.2/cypress-1.0.2.tar_extracted",
            "name": "cypress",
            "version": "1.0.2",
            "published_at": "2022-10-28T23:18:00.371Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "New date and time classes",
            "author": "Francesco Ricciardi",
            "maintainers": NaN,
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "9e7228001706f7f60ca445775ea36b73e7b388682a208cddff13df112302ec2b"
        },
        {
            "name_version": "cypress-1.0.3",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/cypress/1.0.3/cypress-1.0.3.tar_extracted/cypress-1.0.3.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['Date.register_new_calendar', 'Date.register_new_calendar', 'Time.register_new_time', 'Time.register_new_time', 'TimeDelta.register_new_time_interval', 'frozenset', 'range', 'path.abspath', 'print', 'setuptools.setup', 'divmod', 'time.localtime', 'Fraction', 'verify_value', 'verify_value', '_weeks_in_previous_years.append', 'path.dirname', 'open', 'f.read', 'time.time_ns', 'Fraction', 'isinstance', 'cls', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'hash', 'hasattr', 'ModifiedClass', 'setattr', 'get_moment_complete', 'get_moment_complete', 'cls', 'get_moment_complete', 'cls', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'hasattr', 'ModifiedClass', 'setattr', 'int', 'isinstance', 'TimeDelta', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'hash', 'hasattr', 'ModifiedClass', 'setattr', 'RuntimeError', 'RuntimeError', 'Fraction', 'ValueError', 'ValueError', 'ValueError', 'ValueError', 'divmod', 'divmod', 'bisect.bisect_right', 'cls', 'format_string.split', 'verify_fractional_value', 'verify_fractional_value', 'cls', 'format_string.split', 'sum', 'bisect.bisect_left', 'cls', 'divmod', 'divmod', 'divmod', 'cls.year_day', 'format_string.split', 'verify_fractional_value', 'int', 'int', 'format_string.split', 'verify_fractional_value', 'abs', 'abs', 'abs', 'int', 'int', 'int', 'cls', 'int', 'string.replace', 'format_string.split', 'path.join', '__import__', 'setuptools.find_packages', 'int', 'Fraction', 'TypeError', 'TimeDelta', 'isinstance', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'ValueError', 'AttributeError', 'hasattr', 'TypeError', 'hasattr', 'TypeError', 'CalendarAttribute', 'verify_fractional_value', 'verify_fractional_value_num_den', 'verify_fractional_value', 'cls', 'verify_fractional_value', 'cls', 'TimeDelta', 'isinstance', 'hash', 'hash', 'ValueError', 'AttributeError', 'hasattr', 'TypeError', 'hasattr', 'TypeError', 'TimeReprAttribute', 'verify_fractional_value', 'verify_fractional_value_num_den', 'type', 'type', 'isinstance', 'isinstance', 'isinstance', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'ValueError', 'AttributeError', 'hasattr', 'TypeError', 'hasattr', 'TypeError', 'TimeIntervalAttribute', 'TypeError', 'TypeError', 'TypeError', 'ValueError', 'ValueError', 'isinstance', 'TypeError', 'divmod', 'type', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'verify_fractional_value', 'TypeError', 'Fraction', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'range', 'TypeError', 'ValueError', 'ValueError', 'TypeError', 'ValueError', 'isinstance', 'TypeError', 'self.to_rata_die', 'type', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'TypeError', 'ValueError', 'ValueError', 'verify_fractional_value', 'cls', 'verify_fractional_value', 'cls', 'Fraction', 'int', 'int', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'TypeError', 'ValueError', 'ValueError', 'ValueError', 'ValueError', 'isinstance', 'TypeError', 'type', 'str', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', '__import__', 'Fraction', 'Fraction', 'get_moment_complete', 'other.is_integer', 'ValueError', 'type', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'isinstance', 'attribute_name.isidentifier', 'cls', 'setattr', 'int', 'type', 'Fraction', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'TypeError', 'hasattr', 'hasattr', 'TypeError', 'hasattr', 'hasattr', 'TypeError', 'hasattr', 'hasattr', 'TypeError', 'isinstance', 'attribute_name.isidentifier', 'time_repr_obj.to_time_pair', 'cls', 'setattr', 'type', 'type', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'isinstance', 'attribute_name.isidentifier', 'cls', 'setattr', 'isinstance', 'TypeError', 'isinstance', 'TypeError', 'isinstance', 'TypeError', 'isinstance', 'isinstance', 'isinstance', 'IsoCalendar.weeks_in_year', 'chunk_pieces.append', 'chunk_pieces.append', 'TypeError', 'ValueError', 'floor', 'int', 'chunk_pieces.append', 'chunk_pieces.append', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'GregorianCalendar.is_leap_year', 'chunk_pieces.append', 'chunk_pieces.append', 'isinstance', 'isinstance', 'TypeError', 'ValueError', 'verify_fractional_value', 'Fraction', 'Fraction', 'type', 'TypeError', 'int', 'chunk_pieces.append', 'chunk_pieces.append', 'isinstance', 'isinstance', 'isinstance', 'Fraction', 'Fraction', 'len', 'chunk_pieces.append', 'chunk_pieces.append', '__import__', 'time.time', 'type', 'int', 'other.is_integer', 'ValueError', 'type', 'calendar_obj.to_rata_die', 'getattr', 'setattr', 'floor', 'ValueError', 'ValueError', 'Fraction', 'Fraction', 'type', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'getattr', 'setattr', 'type', 'type', 'str', 'time_interval_obj.to_fractional_days', 'getattr', 'setattr', 'type', 'self.day_of_year', 'type', 'int', 'int', 'GregorianCalendar.is_leap_year', 'GregorianCalendar.is_leap_year', 'self.to_rata_die', 'type', 'self.day_of_year', 'self.weekday', 'TypeError', 'ValueError', 'Fraction', 'Fraction', 'type', 'int', 'int', 'Fraction', 'Fraction', 'Fraction', 'Fraction', 'type', 'string.startswith', 'int', 'int', 'int', 'super', 'type', 'type', 'Fraction', 'floor', 'super', 'Fraction', 'reason.startswith', 'reason.endswith', 'type', 'str', 'type', 'str', 'type', 'str', 'super', 'GregorianCalendar.is_leap_year', 'self.weekday', 'type', 'type', 'abs', 'abs', 'abs', 'abs', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'Fraction', 'reason.startswith', 'reason.endswith', 'Fraction', 'reason.startswith', 'reason.endswith', 'Fraction', 'reason.startswith', 'reason.endswith', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'GregorianCalendar.is_leap_year', 'GregorianCalendar.is_leap_year', 'self.weekday', 'self.day_of_year', 'self.weekday', 'int', 'int', 'int', 'int', 'self.day_of_year', 'int', 'self.day_of_year', 'int', 'int', 'self.weekday']",
            "n_tokens": 1767,
            "embedding": "[-0.01377684 -0.01209557 -0.01286847 ... -0.00091882 -0.01264537\n  0.00156274]",
            "cluster": "8",
            "id": 2794,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/cypress/1.0.3/cypress-1.0.3.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/cypress/1.0.3/cypress-1.0.3.tar_extracted",
            "name": "cypress",
            "version": "1.0.3",
            "published_at": "2022-10-31T00:09:03.089Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "New date and time classes",
            "author": "Francesco Ricciardi",
            "maintainers": NaN,
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "bbc92c90f0097c0798e398f178ce9baa9c30e8932f758130084b6fb9adc0f0c6"
        },
        {
            "name_version": "cypress-1.0.4",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/cypress/1.0.4/cypress-1.0.4.tar_extracted/cypress-1.0.4.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['Date.register_new_calendar', 'Date.register_new_calendar', 'Time.register_new_time', 'Time.register_new_time', 'TimeDelta.register_new_time_interval', 'frozenset', 'range', 'path.abspath', 'print', 'setuptools.setup', 'divmod', 'time.localtime', 'Fraction', 'verify_value', 'verify_value', '_weeks_in_previous_years.append', 'path.dirname', 'open', 'f.read', 'time.time_ns', 'Fraction', 'isinstance', 'cls', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'hash', 'hasattr', 'ModifiedClass', 'setattr', 'get_moment_complete', 'get_moment_complete', 'cls', 'get_moment_complete', 'cls', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'hasattr', 'ModifiedClass', 'setattr', 'int', 'isinstance', 'TimeDelta', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'hash', 'hasattr', 'ModifiedClass', 'setattr', 'RuntimeError', 'RuntimeError', 'Fraction', 'ValueError', 'ValueError', 'ValueError', 'ValueError', 'divmod', 'divmod', 'bisect.bisect_right', 'cls', 'format_string.split', 'verify_fractional_value', 'verify_fractional_value', 'cls', 'format_string.split', 'sum', 'bisect.bisect_left', 'cls', 'divmod', 'divmod', 'divmod', 'cls.year_day', 'format_string.split', 'verify_fractional_value', 'int', 'int', 'format_string.split', 'verify_fractional_value', 'abs', 'abs', 'abs', 'int', 'int', 'int', 'cls', 'int', 'string.replace', 'format_string.split', 'path.join', '__import__', 'setuptools.find_packages', 'int', 'Fraction', 'TypeError', 'TimeDelta', 'isinstance', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'ValueError', 'AttributeError', 'hasattr', 'TypeError', 'hasattr', 'TypeError', 'CalendarAttribute', 'verify_fractional_value', 'verify_fractional_value_num_den', 'verify_fractional_value', 'cls', 'verify_fractional_value', 'cls', 'TimeDelta', 'isinstance', 'hash', 'hash', 'ValueError', 'AttributeError', 'hasattr', 'TypeError', 'hasattr', 'TypeError', 'TimeReprAttribute', 'verify_fractional_value', 'verify_fractional_value_num_den', 'type', 'type', 'isinstance', 'isinstance', 'isinstance', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'ValueError', 'AttributeError', 'hasattr', 'TypeError', 'hasattr', 'TypeError', 'TimeIntervalAttribute', 'TypeError', 'TypeError', 'TypeError', 'ValueError', 'ValueError', 'isinstance', 'TypeError', 'divmod', 'type', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'verify_fractional_value', 'TypeError', 'Fraction', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'range', 'TypeError', 'ValueError', 'ValueError', 'TypeError', 'ValueError', 'isinstance', 'TypeError', 'self.to_rata_die', 'type', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'TypeError', 'ValueError', 'ValueError', 'verify_fractional_value', 'cls', 'verify_fractional_value', 'cls', 'Fraction', 'int', 'int', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'TypeError', 'ValueError', 'ValueError', 'ValueError', 'ValueError', 'isinstance', 'TypeError', 'type', 'str', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', '__import__', 'Fraction', 'Fraction', 'get_moment_complete', 'other.is_integer', 'ValueError', 'type', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'isinstance', 'attribute_name.isidentifier', 'cls', 'setattr', 'int', 'type', 'Fraction', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'TypeError', 'hasattr', 'hasattr', 'TypeError', 'hasattr', 'hasattr', 'TypeError', 'hasattr', 'hasattr', 'TypeError', 'isinstance', 'attribute_name.isidentifier', 'time_repr_obj.to_time_pair', 'cls', 'setattr', 'type', 'type', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'isinstance', 'attribute_name.isidentifier', 'cls', 'setattr', 'isinstance', 'TypeError', 'isinstance', 'TypeError', 'isinstance', 'TypeError', 'isinstance', 'isinstance', 'isinstance', 'IsoCalendar.weeks_in_year', 'chunk_pieces.append', 'chunk_pieces.append', 'TypeError', 'ValueError', 'floor', 'int', 'chunk_pieces.append', 'chunk_pieces.append', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'GregorianCalendar.is_leap_year', 'chunk_pieces.append', 'chunk_pieces.append', 'isinstance', 'isinstance', 'TypeError', 'ValueError', 'verify_fractional_value', 'Fraction', 'Fraction', 'type', 'TypeError', 'int', 'chunk_pieces.append', 'chunk_pieces.append', 'isinstance', 'isinstance', 'isinstance', 'Fraction', 'Fraction', 'len', 'chunk_pieces.append', 'chunk_pieces.append', '__import__', 'time.time', 'type', 'int', 'other.is_integer', 'ValueError', 'type', 'calendar_obj.to_rata_die', 'getattr', 'setattr', 'floor', 'ValueError', 'ValueError', 'Fraction', 'Fraction', 'type', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'getattr', 'setattr', 'type', 'type', 'str', 'time_interval_obj.to_fractional_days', 'getattr', 'setattr', 'type', 'self.day_of_year', 'type', 'int', 'int', 'GregorianCalendar.is_leap_year', 'GregorianCalendar.is_leap_year', 'self.to_rata_die', 'type', 'self.day_of_year', 'self.weekday', 'TypeError', 'ValueError', 'Fraction', 'Fraction', 'type', 'int', 'int', 'Fraction', 'Fraction', 'Fraction', 'Fraction', 'type', 'string.startswith', 'int', 'int', 'int', 'super', 'type', 'type', 'Fraction', 'floor', 'super', 'Fraction', 'reason.startswith', 'reason.endswith', 'type', 'str', 'type', 'str', 'type', 'str', 'super', 'GregorianCalendar.is_leap_year', 'self.weekday', 'type', 'type', 'abs', 'abs', 'abs', 'abs', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'Fraction', 'reason.startswith', 'reason.endswith', 'Fraction', 'reason.startswith', 'reason.endswith', 'Fraction', 'reason.startswith', 'reason.endswith', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'GregorianCalendar.is_leap_year', 'GregorianCalendar.is_leap_year', 'self.weekday', 'self.day_of_year', 'self.weekday', 'int', 'int', 'int', 'int', 'self.day_of_year', 'int', 'self.day_of_year', 'int', 'int', 'self.weekday']",
            "n_tokens": 1767,
            "embedding": "[-0.01363989 -0.01207648 -0.01291402 ... -0.00088091 -0.01260294\n  0.00164516]",
            "cluster": "8",
            "id": 2793,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/cypress/1.0.4/cypress-1.0.4.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/cypress/1.0.4/cypress-1.0.4.tar_extracted",
            "name": "cypress",
            "version": "1.0.4",
            "published_at": "2022-10-31T01:58:01.272Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "New date and time classes",
            "author": "Francesco Ricciardi",
            "maintainers": NaN,
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "4a888b6ebc0e2f269043965d257dadc8c2ccdcc58d5d4564ced48d157ecb2293"
        },
        {
            "name_version": "iao-1.0.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/twitter-phylum/iao-1.0.0.tar_extracted/iao-1.0.0.tar_sourcecode.py",
            "Source": "Phylum",
            "code_api": "['Date.register_new_calendar', 'Date.register_new_calendar', 'Time.register_new_time', 'Time.register_new_time', 'TimeDelta.register_new_time_interval', 'frozenset', 'range', 'path.abspath', 'print', 'setuptools.setup', 'divmod', 'time.localtime', 'Fraction', 'verify_value', 'verify_value', '_weeks_in_previous_years.append', 'path.dirname', 'open', 'f.read', 'time.time_ns', 'Fraction', 'isinstance', 'cls', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'hash', 'hasattr', 'ModifiedClass', 'setattr', 'get_moment_complete', 'get_moment_complete', 'cls', 'get_moment_complete', 'cls', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'hasattr', 'ModifiedClass', 'setattr', 'int', 'isinstance', 'TimeDelta', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'hash', 'hasattr', 'ModifiedClass', 'setattr', 'RuntimeError', 'RuntimeError', 'Fraction', 'ValueError', 'ValueError', 'ValueError', 'ValueError', 'divmod', 'divmod', 'bisect.bisect_right', 'cls', 'format_string.split', 'verify_fractional_value', 'verify_fractional_value', 'cls', 'format_string.split', 'sum', 'bisect.bisect_left', 'cls', 'divmod', 'divmod', 'divmod', 'cls.year_day', 'format_string.split', 'verify_fractional_value', 'int', 'int', 'format_string.split', 'verify_fractional_value', 'abs', 'abs', 'abs', 'int', 'int', 'int', 'cls', 'int', 'string.replace', 'format_string.split', 'path.join', '__import__', 'setuptools.find_packages', 'int', 'Fraction', 'TypeError', 'TimeDelta', 'isinstance', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'ValueError', 'AttributeError', 'hasattr', 'TypeError', 'hasattr', 'TypeError', 'CalendarAttribute', 'verify_fractional_value', 'verify_fractional_value_num_den', 'verify_fractional_value', 'cls', 'verify_fractional_value', 'cls', 'TimeDelta', 'isinstance', 'hash', 'hash', 'ValueError', 'AttributeError', 'hasattr', 'TypeError', 'hasattr', 'TypeError', 'TimeReprAttribute', 'verify_fractional_value', 'verify_fractional_value_num_den', 'type', 'type', 'isinstance', 'isinstance', 'isinstance', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'ValueError', 'AttributeError', 'hasattr', 'TypeError', 'hasattr', 'TypeError', 'TimeIntervalAttribute', 'TypeError', 'TypeError', 'TypeError', 'ValueError', 'ValueError', 'isinstance', 'TypeError', 'divmod', 'type', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'verify_fractional_value', 'TypeError', 'Fraction', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'range', 'TypeError', 'ValueError', 'ValueError', 'TypeError', 'ValueError', 'isinstance', 'TypeError', 'self.to_rata_die', 'type', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'TypeError', 'ValueError', 'ValueError', 'verify_fractional_value', 'cls', 'verify_fractional_value', 'cls', 'Fraction', 'int', 'int', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'TypeError', 'ValueError', 'ValueError', 'ValueError', 'ValueError', 'isinstance', 'TypeError', 'type', 'str', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', '__import__', 'Fraction', 'Fraction', 'get_moment_complete', 'other.is_integer', 'ValueError', 'type', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'isinstance', 'attribute_name.isidentifier', 'cls', 'setattr', 'int', 'type', 'Fraction', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'TypeError', 'hasattr', 'hasattr', 'TypeError', 'hasattr', 'hasattr', 'TypeError', 'hasattr', 'hasattr', 'TypeError', 'isinstance', 'attribute_name.isidentifier', 'time_repr_obj.to_time_pair', 'cls', 'setattr', 'type', 'type', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'isinstance', 'attribute_name.isidentifier', 'cls', 'setattr', 'isinstance', 'TypeError', 'isinstance', 'TypeError', 'isinstance', 'TypeError', 'isinstance', 'isinstance', 'isinstance', 'IsoCalendar.weeks_in_year', 'chunk_pieces.append', 'chunk_pieces.append', 'TypeError', 'ValueError', 'floor', 'int', 'chunk_pieces.append', 'chunk_pieces.append', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'GregorianCalendar.is_leap_year', 'chunk_pieces.append', 'chunk_pieces.append', 'isinstance', 'isinstance', 'TypeError', 'ValueError', 'verify_fractional_value', 'Fraction', 'Fraction', 'type', 'TypeError', 'int', 'chunk_pieces.append', 'chunk_pieces.append', 'isinstance', 'isinstance', 'isinstance', 'Fraction', 'Fraction', 'len', 'chunk_pieces.append', 'chunk_pieces.append', '__import__', 'time.time', 'type', 'int', 'other.is_integer', 'ValueError', 'type', 'calendar_obj.to_rata_die', 'getattr', 'setattr', 'floor', 'ValueError', 'ValueError', 'Fraction', 'Fraction', 'type', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'getattr', 'setattr', 'type', 'type', 'str', 'time_interval_obj.to_fractional_days', 'getattr', 'setattr', 'type', 'self.day_of_year', 'type', 'int', 'int', 'GregorianCalendar.is_leap_year', 'GregorianCalendar.is_leap_year', 'self.to_rata_die', 'type', 'self.day_of_year', 'self.weekday', 'TypeError', 'ValueError', 'Fraction', 'Fraction', 'type', 'int', 'int', 'Fraction', 'Fraction', 'Fraction', 'Fraction', 'type', 'string.startswith', 'int', 'int', 'int', 'super', 'type', 'type', 'Fraction', 'floor', 'super', 'Fraction', 'reason.startswith', 'reason.endswith', 'type', 'str', 'type', 'str', 'type', 'str', 'super', 'GregorianCalendar.is_leap_year', 'self.weekday', 'type', 'type', 'abs', 'abs', 'abs', 'abs', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'Fraction', 'reason.startswith', 'reason.endswith', 'Fraction', 'reason.startswith', 'reason.endswith', 'Fraction', 'reason.startswith', 'reason.endswith', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'GregorianCalendar.is_leap_year', 'GregorianCalendar.is_leap_year', 'self.weekday', 'self.day_of_year', 'self.weekday', 'int', 'int', 'int', 'int', 'self.day_of_year', 'int', 'self.day_of_year', 'int', 'int', 'self.weekday']",
            "n_tokens": 1767,
            "embedding": "[-0.01368011 -0.01220442 -0.0129303  ... -0.00108085 -0.01252349\n  0.00157441]",
            "cluster": "8",
            "id": 1962,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/twitter-phylum/iao-1.0.0.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/twitter-phylum/iao-1.0.0.tar_extracted",
            "name": "iao",
            "version": "1.0.0",
            "published_at": "2022-10-31T19:42:10.867Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "New date and time classes",
            "author": "Francesco Ricciardi",
            "maintainers": NaN,
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "a03acc0305ace733d41efc5485dff3398509eb7d673a85543e26332aa1626a10"
        },
        {
            "name_version": "pystyle-2.9",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/twitter-phylum/pystyle-2.9.tar_extracted/pystyle-2.9.tar_sourcecode.py",
            "Source": "Phylum",
            "code_api": "['System.Init', 'setup', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makerainbow', 'dynamic_colors.append', '_system', '_system', '_system', '_CursorInfo', 'list', 'reversed', 'list', 'reversed', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', '_MakeColors._start', 'round', 'round', 'round', '_MakeColors._reverse', 'color.pop', 'range', 'range', 'dynamic_colors.append', 'all_colors.append', '_MakeColors._maketext', '_MakeColors._maketext', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.strip', 'range', '_stdout.write', '_stdout.flush', '_sleep', 'System.Clear', 'input', 'Write._write', '_stdout.write', '_stdout.flush', 'Write._write', 'func', '_stdout.write', '_stdout.flush', 'list', 'align.upper', 'align.upper', 'max', 'text.splitlines', 'max', 'int', 'text.splitlines', 'len', 'int', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'Add._length', 'Add._edit', 'range', 'content.splitlines', 'content.splitlines', 'Box.Box', 'content.splitlines', 'mode', 'assembly.splitlines', '_system', '_system', 'Cursor._cursor', 'Cursor._cursor', 'byref', 'byref', 'col.append', 'col.append', '_MakeColors._end', 'len', 'len', 'colors.append', '_MakeColors._rmansi', '_MakeColors._rmansi', '_MakeColors._reverse', '_MakeColors._rmansi', 'col.split', 'int', 'int', 'int', 'rgb.append', '_MakeColors._start', '_colors.append', '_MakeColors._mixcolors', 'input', 'print', 'exit', 'lin.rstrip', 'list', 'list', 'list', 'carac.reverse', 'mode', 'mode', 'Cursor.HideCursor', 'type', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_terminal_size', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_thread', 'th.start', '_sleep', 'System.Clear', 'Cursor.ShowCursor', 'mode', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'type', '_stdout.flush', '_sleep', 'line.strip', 'Center._xspaces', 'Center._yspaces', 'Center._xspaces', 'Center._yspaces', 'Center.XCenter', 'len', 'len', 'max', 'max', 'range', 'range', '_stdout.write', '_stdout.flush', '_stdout.write', '_stdout.flush', 'text.lstrip', 'rainbow.append', 'int', 'int', 'int', 'sum', 'len', 'sum', 'len', 'sum', 'len', 'colors.index', 'final.append', 'content.replace', 'color.append', 'content.replace', 'color.append', '_sleep', 'Colorate.Color', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'Anime._anime', 'list', 'type', 'list', 'type', '_stdout.write', '_stdout.write', 'text.splitlines', 'text.splitlines', 'len', '_terminal_size', 'len', '_terminal_size', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'Center.XCenter', 'range', 'range', 'range', 'len', 'str', 'content.replace', 'color.append', 'str', 'content.replace', 'color.append', '_MakeColors._makeansi', 'len', '_MakeColors._makeansi', 'len', 'len', 'len', 'color.append', 'print', 'print', 'print', 'print', 'len', 'len', 'color.append', '_MakeColors._makeansi', 'text.splitlines', 'text.splitlines', 'max', 'Center.BadAlignment', 'text.splitlines', 'Center.BadAlignment', 'v.strip', 'super', 'banner1.splitlines', 'banner2.splitlines', 'banner1.splitlines', 'banner2.splitlines', 'super', 'int', 'str', 'str', '_MakeColors._makeansi', '_MakeColors._getspaces', 'car.strip', '_MakeColors._getspaces', 'car.strip', '_MakeColors._makeansi', 'Center.XCenter', 'mode', 'Center.XCenter', '_terminal_size', 'text.splitlines', 'len', 'int', 'int', 'spaces.join', 'spaces.join', '_MakeColors._getspaces', '_MakeColors._getspaces', 'lin.strip', 'len', '_MakeColors._getspaces', 'car.strip', 'mode', 'len', 'int', 'spaces.join', 'spaces.join', 'col.replace', 'colors.index', '_MakeColors._makeansi', 'max', 'text.splitlines', 'max', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'int', 'len', 'lin.strip', 'len', 'len', 'len', 'len', 'len', 'text.splitlines', 'text.splitlines']",
            "n_tokens": 1384,
            "embedding": "[ 0.02943322 -0.00670569 -0.00761234 ... -0.00689403 -0.01706426\n -0.01403334]",
            "cluster": "8",
            "id": 2088,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/twitter-phylum/pystyle-2.9.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/twitter-phylum/pystyle-2.9.tar_extracted",
            "name": "pystyle",
            "version": "2.9",
            "published_at": "2022-11-04T19:33:11.842Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "by billythegoat356, loTus01 and BlueRed",
            "author": "UNKNOWN",
            "maintainers": NaN,
            "repository_url": "Contains a homepage URL but not a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "01a7cda2968f43b549e5b23691e06dd29f6ca80e9a62b12a3f2d6bc58ff3441d"
        },
        {
            "name_version": "devicespoof-2.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/devicespoof/2.0/devicespoof-2.0.tar_extracted/devicespoof-2.0.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['System.Init', 'exec', 'setup', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makerainbow', 'dynamic_colors.append', 'base64.b64decode', 'print', 'run', '_system', '_system', '_system', '_CursorInfo', 'list', 'reversed', 'list', 'reversed', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', '_MakeColors._start', 'round', 'round', 'round', '_MakeColors._reverse', 'color.pop', 'range', 'range', 'dynamic_colors.append', 'all_colors.append', '_MakeColors._maketext', '_MakeColors._maketext', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.strip', 'range', '_stdout.write', '_stdout.flush', '_sleep', 'System.Clear', 'input', 'Write._write', '_stdout.write', '_stdout.flush', 'Write._write', 'input', '_stdout.write', '_stdout.flush', 'list', 'align.upper', 'align.upper', 'max', 'text.splitlines', 'max', 'int', 'text.splitlines', 'len', 'int', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'Add._length', 'Add._edit', 'range', 'content.splitlines', 'content.splitlines', 'Box.Box', 'content.splitlines', 'mode', 'assembly.splitlines', '_system', '_system', 'Cursor._cursor', 'Cursor._cursor', 'byref', 'byref', 'col.append', 'col.append', '_MakeColors._end', 'len', 'len', 'colors.append', '_MakeColors._rmansi', '_MakeColors._rmansi', '_MakeColors._reverse', '_MakeColors._rmansi', 'col.split', 'int', 'int', 'int', 'rgb.append', '_MakeColors._start', '_colors.append', '_MakeColors._mixcolors', 'input', 'print', 'exit', 'lin.rstrip', 'list', 'list', 'list', 'carac.reverse', 'mode', 'mode', 'Cursor.HideCursor', 'type', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_terminal_size', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_thread', 'th.start', '_sleep', 'System.Clear', 'Cursor.ShowCursor', 'mode', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'type', '_stdout.flush', '_sleep', 'line.strip', 'Center._xspaces', 'Center._yspaces', 'Center._xspaces', 'Center._yspaces', 'Center.XCenter', 'len', 'len', 'max', 'max', 'range', 'range', 'pathlib.Path', '_stdout.write', '_stdout.flush', '_stdout.write', '_stdout.flush', 'text.lstrip', 'rainbow.append', 'int', 'int', 'int', 'sum', 'len', 'sum', 'len', 'sum', 'len', 'colors.index', 'final.append', 'content.replace', 'color.append', 'content.replace', 'color.append', '_sleep', 'Colorate.Color', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'Anime._anime', 'list', 'type', 'list', 'type', '_stdout.write', '_stdout.write', 'text.splitlines', 'text.splitlines', 'len', '_terminal_size', 'len', '_terminal_size', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'Center.XCenter', 'range', 'range', 'range', 'len', 'str', 'content.replace', 'color.append', 'str', 'content.replace', 'color.append', '_MakeColors._makeansi', 'len', '_MakeColors._makeansi', 'len', 'len', 'len', 'color.append', 'print', 'print', 'print', 'print', 'len', 'len', 'color.append', '_MakeColors._makeansi', 'text.splitlines', 'text.splitlines', 'max', 'Center.BadAlignment', 'text.splitlines', 'Center.BadAlignment', 'v.strip', 'super', 'banner1.splitlines', 'banner2.splitlines', 'banner1.splitlines', 'banner2.splitlines', 'super', 'int', 'str', 'str', '_MakeColors._makeansi', '_MakeColors._getspaces', 'car.strip', '_MakeColors._getspaces', 'car.strip', '_MakeColors._makeansi', 'Center.XCenter', 'mode', 'Center.XCenter', '_terminal_size', 'text.splitlines', 'len', 'int', 'int', 'spaces.join', 'spaces.join', '_MakeColors._getspaces', '_MakeColors._getspaces', 'lin.strip', 'len', '_MakeColors._getspaces', 'car.strip', 'mode', 'len', 'int', 'spaces.join', 'spaces.join', 'col.replace', 'colors.index', '_MakeColors._makeansi', 'max', 'text.splitlines', 'max', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'int', 'len', 'lin.strip', 'len', 'len', 'len', 'len', 'len', 'text.splitlines', 'text.splitlines']",
            "n_tokens": 1405,
            "embedding": "[ 0.02437309 -0.01539031 -0.00519412 ... -0.00581829 -0.01869884\n -0.0112612 ]",
            "cluster": "8",
            "id": 3741,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/devicespoof/2.0/devicespoof-2.0.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/devicespoof/2.0/devicespoof-2.0.tar_extracted",
            "name": "devicespoof",
            "version": "2.0",
            "published_at": "2022-11-11T12:30:35.220Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Generate fake browser fingerprint data",
            "author": "antidetect_fr",
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN,
            "SHA-256": "91e3b38d7244b365dbd0f79d23fe92cbb84f667c833c3fc19b578775ff38b682"
        },
        {
            "name_version": "devicespoofer-2.2",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/devicespoofer/2.2/devicespoofer-2.2.tar_extracted/devicespoofer-2.2.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['System.Init', 'exec', 'setup', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makerainbow', 'dynamic_colors.append', 'base64.b64decode', 'print', 'run', '_system', '_system', '_system', '_CursorInfo', 'list', 'reversed', 'list', 'reversed', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', '_MakeColors._start', 'round', 'round', 'round', '_MakeColors._reverse', 'color.pop', 'range', 'range', 'dynamic_colors.append', 'all_colors.append', '_MakeColors._maketext', '_MakeColors._maketext', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.strip', 'range', '_stdout.write', '_stdout.flush', '_sleep', 'System.Clear', 'input', 'Write._write', '_stdout.write', '_stdout.flush', 'Write._write', 'input', '_stdout.write', '_stdout.flush', 'list', 'align.upper', 'align.upper', 'max', 'text.splitlines', 'max', 'int', 'text.splitlines', 'len', 'int', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'Add._length', 'Add._edit', 'range', 'content.splitlines', 'content.splitlines', 'Box.Box', 'content.splitlines', 'mode', 'assembly.splitlines', '_system', '_system', 'Cursor._cursor', 'Cursor._cursor', 'byref', 'byref', 'col.append', 'col.append', '_MakeColors._end', 'len', 'len', 'colors.append', '_MakeColors._rmansi', '_MakeColors._rmansi', '_MakeColors._reverse', '_MakeColors._rmansi', 'col.split', 'int', 'int', 'int', 'rgb.append', '_MakeColors._start', '_colors.append', '_MakeColors._mixcolors', 'input', 'print', 'exit', 'lin.rstrip', 'list', 'list', 'list', 'carac.reverse', 'mode', 'mode', 'Cursor.HideCursor', 'type', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_terminal_size', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_thread', 'th.start', '_sleep', 'System.Clear', 'Cursor.ShowCursor', 'mode', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'type', '_stdout.flush', '_sleep', 'line.strip', 'Center._xspaces', 'Center._yspaces', 'Center._xspaces', 'Center._yspaces', 'Center.XCenter', 'len', 'len', 'max', 'max', 'range', 'range', 'pathlib.Path', '_stdout.write', '_stdout.flush', '_stdout.write', '_stdout.flush', 'text.lstrip', 'rainbow.append', 'int', 'int', 'int', 'sum', 'len', 'sum', 'len', 'sum', 'len', 'colors.index', 'final.append', 'content.replace', 'color.append', 'content.replace', 'color.append', '_sleep', 'Colorate.Color', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'Anime._anime', 'list', 'type', 'list', 'type', '_stdout.write', '_stdout.write', 'text.splitlines', 'text.splitlines', 'len', '_terminal_size', 'len', '_terminal_size', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'Center.XCenter', 'range', 'range', 'range', 'len', 'str', 'content.replace', 'color.append', 'str', 'content.replace', 'color.append', '_MakeColors._makeansi', 'len', '_MakeColors._makeansi', 'len', 'len', 'len', 'color.append', 'print', 'print', 'print', 'print', 'len', 'len', 'color.append', '_MakeColors._makeansi', 'text.splitlines', 'text.splitlines', 'max', 'Center.BadAlignment', 'text.splitlines', 'Center.BadAlignment', 'v.strip', 'super', 'banner1.splitlines', 'banner2.splitlines', 'banner1.splitlines', 'banner2.splitlines', 'super', 'int', 'str', 'str', '_MakeColors._makeansi', '_MakeColors._getspaces', 'car.strip', '_MakeColors._getspaces', 'car.strip', '_MakeColors._makeansi', 'Center.XCenter', 'mode', 'Center.XCenter', '_terminal_size', 'text.splitlines', 'len', 'int', 'int', 'spaces.join', 'spaces.join', '_MakeColors._getspaces', '_MakeColors._getspaces', 'lin.strip', 'len', '_MakeColors._getspaces', 'car.strip', 'mode', 'len', 'int', 'spaces.join', 'spaces.join', 'col.replace', 'colors.index', '_MakeColors._makeansi', 'max', 'text.splitlines', 'max', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'int', 'len', 'lin.strip', 'len', 'len', 'len', 'len', 'len', 'text.splitlines', 'text.splitlines']",
            "n_tokens": 1405,
            "embedding": "[ 0.0239223  -0.01559315 -0.00519917 ... -0.00511186 -0.01868384\n -0.01143731]",
            "cluster": "8",
            "id": 2577,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/devicespoofer/2.2/devicespoofer-2.2.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/devicespoofer/2.2/devicespoofer-2.2.tar_extracted",
            "name": "devicespoofer",
            "version": "2.2",
            "published_at": "2022-11-12T11:27:00.654Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Generate fake browser fingerprint data",
            "author": "antidetect_ru",
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN,
            "SHA-256": "3d49bec347ca77b1abcd698ab42d585355604fcfaaeaa88ea6487a385ce44ea6"
        },
        {
            "name_version": "ascii2art-4.1",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/twitter-phylum/ascii2art-4.1.tar_extracted/ascii2art-4.1.tar_sourcecode.py",
            "Source": "Phylum",
            "code_api": "['font_size_splitter', 'sorted', 'sorted', 'sorted', 'sorted', 'sorted', 'len', 'len', 'len', 'setup', 'print', 'set', 'sorted', 'set', 'sorted', 'tprint', 'tprint', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'artname.lower', 'art', 'range', 'enumerate', 'len', 'fancy1_dic.copy', 'list', 'letters.keys', 'isinstance', 'range', 'splitter.join', 'font.lower', 'text_temp.split', 'enumerate', 'decoration.lower', 'indirect_decoration', 'list', 'list', 'list', 'list', 'doctest.testfile', 'cov.stop', 'cov.report', 'cov.save', 'print', 'sys.exit', 'print', 'sys.exit', 'len', 'help_func', 'set', 'set', 'max', 'mode.lower', 'mode.lower', 'set', 'list', 'print', 'tprint', 'mode.lower', 'mode.lower', 'set', 'list', 'print', 'aprint', 'line', 'print', 'tprint', 'line', 'print', 'isinstance', 'artError', 'list', 'random.choice', 'isinstance', 'artError', 'text2art', 'print', 'os.listdir', 'filename.split', 'open', 'text2art', 'file.write', 'file.close', 'len', 'len', 'enumerate', 'random.choice', 'random.choice', 'random.choice', 'random.choice', 'random.choice', 'list', 'random.choice', 'wizard_font', 'random.choice', 'list', 'random.choice', 'list', 'random.choice', 'split_list.append', 'split_list.reverse', 'len', 'len', 'result_list.append', 'isinstance', 'artError', 'isinstance', 'artError', 'indirect_font', 'get_font_dic', 'mix_letters', 'decor', 'isinstance', 'artError', 'artError', 'isinstance', 'artError', 'isinstance', 'artError', 'isinstance', 'artError', 'isinstance', 'artError', 'isinstance', 'artError', 'isinstance', 'artError', 'FONT_MAP.keys', 'set', 'set', 'DECORATIONS_MAP.keys', 'art_dic.keys', 'set', 'set', 'filter', 'Frame', 'self._callfunction', 'Statistics', 'Random.execute', 'Random', 'Random.DetectVar', 'Run._callfunction', 'read_description', 'coverage.Coverage', 'cov.start', 'print', 'doctest.testfile', 'select_test', 'font_map.keys', 'map', 'small_font.append', 'set', 'str', 'set', 'UnicodeEncodeError', 'art', 'print', 'art_dic.keys', 'list', 'min', 'UnicodeEncodeError', 'print', 'isinstance', 'Exception', 'os.getcwd', 'len', 'print', 'len', 'random.choice', 'map', 'map', 'set', 'set', 'get_font_dic', 'len', 'letters.keys', 'len', 'text.lower', 'text.upper', '__word2art', 'isinstance', 'open', 'requirements.split', 'Theory', 'Builtins', '_divide', 'Run.System', 'open', 'r.read', 'get_dev_requires', 'select_test', 'medium_font.append', 'str', 'ART_ENVIRONMENT_WARNING.format', 'set', 'set', 'map', 'max', 'artError', 'FONT_ENVIRONMENT_WARNING.format', 'str', 'distances_.append', 'distances_.append', 'random.choice', 'random.choice', 'set', 'set', 'distance_list.index', 'distance_list.index', 'ord', 'artError', 'len', 'StackOverflow', 'Random', 'nnnmnmmmmnmnmnmmn', 'Oo00O0ooO00o000oOOOOO00oO', 'Random.execute', 'select_test', 'large_font.append', 'xlarge_font.append', 'distance_list.index', 'len', 'len', 'str', 'distance_calc', 'min', 'distance_calc', 'min', 'ord', '_run', '__import__', 'OOOO0oo0Oo0o00OOoo00ooo0', 'LLLIJLJILIJJJLJLJLJJJL', 'select_test', 'distance_calc', 'min', 'str', 'globals', 'Random', 'OOooDDooDOOOoDOoOooDoOOO', 'Random._stackoverflow', '_divide', 'art_list', 'globals', 'OooDOooooDDoooDoo', 'Random', 'font_list', 'globals', 'globals', 'mmmmmnnnmmnmnnmnnnn', 'len', 'help_func', 'globals', 'zipfile.ZipFile', 'print', 'FONT_MAP.keys', 'zipf.close', 'print', 'print', 'globals', 'os.listdir', 'os.mkdir', 'tsave', 'zipf.write', 'os.getcwd', 'str', 'len', 'tprint', 'tprint', 'len', 'tsave', 'tsave', 'help_func', 'print', 'print', 'aprint', 'str', 'print', 'print', 'str']",
            "n_tokens": 1156,
            "embedding": "[ 3.14617045e-02  3.92119764e-05 -1.21899275e-02 ... -5.78153273e-03\n -1.38587365e-02  1.43331187e-02]",
            "cluster": "8",
            "id": 2001,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/twitter-phylum/ascii2art-4.1.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/twitter-phylum/ascii2art-4.1.tar_extracted",
            "name": "ascii2art",
            "version": "4.1",
            "published_at": "2022-11-14T13:20:05.825Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "ASCII Art Library For Python",
            "author": "halt",
            "maintainers": NaN,
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "dfcbf77c1856e4b818ddefebf5f9f4f49cd9ac906bae815e7d2b14822db0db55"
        },
        {
            "name_version": "coloram-0.2.7",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/coloram/0.2.7/coloram-0.2.7.tar_extracted/coloram-0.2.7.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['register_suggestion_for', 'setup', 'merge_dict', 'get_objects_in_frame', 'itertools.chain', 'get_last_frame', 'get_close_matches', 'isinstance', 'len', 'create_two_column_string', 'Path', 'KarelProgram', 'tk.Tk', 'KarelApplication', 'app.mainloop', 'tk.Tk', 'WorldBuilderApplication', 'world_builder.mainloop', 'run_world_editor', 'dict_.items', 'add_scope_to_dict', 'add_scope_to_dict', 'add_scope_to_dict', 'suggest_name_as_name_typo', 'list', 'isinstance', 'list', 'enumerate', 'tuple', 'get_suggestions_for_exception', 'add_string_to_exception', 'tb.walk_tb', 'tb.format_list', 'add_did_you_mean', 'print', 'master.configure', 'master.rowconfigure', 'master.columnconfigure', 'master.geometry', 'self.load_student_code', 'master.title', 'self.set_dock_icon', 'self.grid', 'self.create_menubar', 'self.create_canvas', 'self.create_buttons', 'self.create_slider', 'self.create_status_label', 'StudentCode', 'self.inject_decorator_namespace', 'tk.Menu', 'tk.Menu', 'menubar.add_cascade', 'file_menu.add_command', 'tk.Menu', 'menubar.add_cascade', 'iconmenu.add_command', 'iconmenu.add_command', 'self.bind_all', 'tk.Frame', 'tk.Label', 'tk.Label', 'tk.DoubleVar', 'tk.Scale', 'KarelCanvas', 'tk.Button', 'tk.Button', 'tk.Label', 'self.load_student_code', 'self.update', 'askopenfilename', 'result.center', 'range', 'range', 'ValueError', 'self.tile_pair_has_wall', 'map', 'symmetric_difference', 'self.draw_world', 'self.draw_karel', 'cmath.exp', 'complex', 'range', 'self.delete', 'self.draw_world', 'self.draw_karel', 'self.update', 'self.delete', 'self.draw_karel', 'self.delete', 'self.draw_all_beepers', 'self.delete', 'self.draw_corners', 'self.delete', 'self.draw_all_walls', 'self.init_geometry_values', 'self.draw_bounding_rectangle', 'self.label_axes', 'self.draw_corners', 'self.draw_all_beepers', 'self.draw_all_walls', 'self.update', 'min', 'self.create_line', 'self.create_line', 'self.create_line', 'self.create_line', 'range', 'range', 'range', 'self.calculate_corner_x', 'self.calculate_corner_y', 'self.create_default_polygon', 'self.calculate_corner_x', 'self.calculate_corner_y', 'self.calculate_corner_x', 'self.calculate_corner_y', 'self.rotate_points', 'self.rotate_points', 'self.generate_external_karel_points', 'self.generate_internal_karel_points', 'self.create_default_polygon', 'self.create_default_polygon', 'self.create_default_polygon', 'self.rotate_points', 'self.create_default_polygon', 'self.rotate_points', 'self.create_default_polygon', 'self.rotate_points', 'self.create_default_polygon', 'self.rotate_points', 'self.create_default_polygon', 'self.calculate_corner_x', 'self.calculate_corner_y', 'NEXT_DIRECTION_MAP.items', 'KarelWorld', 'str', 'isinstance', 'print', 'self.direction_is_clear', 'self.direction_is_clear', 'self.direction_is_clear', 'self.process_world', 'collections.defaultdict', 'collections.defaultdict', 'set', 'copy.deepcopy', 'isinstance', 'Path', 'world_filepath.is_file', 'Path', 'FileNotFoundError', 'param_str.split', 'self.get_alt_wall', 'self.get_alt_wall', 'Wall', 'copy.deepcopy', 'collections.defaultdict', 'self.__init__', 'sorted', 'sorted', 'sorted', 'isinstance', 'str', 'func', 'StudentCode', 'print', 'print', 'self.check_line_lengths', 'self.check_function_defs', 'self.assert_num_functions', 'self.check_recursion', 'self.check_naming', 'self.print_status_message', 'self.print_status_message', 'self.print_status_message', 'set', 'self.print_status_message', 'dir', 'ast.parse', 'sorted', 'self.print_status_message', 'len', 'master.configure', 'master.rowconfigure', 'master.columnconfigure', 'master.title', 'self.set_dock_icon', 'self.grid', 'self.setup_world', 'self.create_canvas', 'self.create_buttons', 'messagebox.askyesno', 'simpledialog.askinteger', 'simpledialog.askinteger', 'askopenfilename', 'KarelCanvas', 'tk.Button', 'tk.Button', 'tk.Button', 'self.create_direction_radio_buttons', 'self.create_beeper_bag_radio_buttons', 'self.create_action_radio_buttons', 'tk.Frame', 'tk.StringVar', 'tk.Label', 'dir_label.pack', 'tk.Frame', 'tk.IntVar', 'tk.Label', 'beeper_bag_label.pack', 'tk.Frame', 'tk.StringVar', 'tk.Label', 'action_label.pack', 'tk.Frame', 'color_selection_frame.pack', 'tk.StringVar', 'tk.OptionMenu', 'Direction', 'asksaveasfilename', '__import__', 'dict_.items', 're.match', 'func', 'difflib.get_close_matches', 'isinstance', 'lst_args.append', 'getattr', 'code_file.is_file', 'FileNotFoundError', 'code_file.resolve', 'cast', 'module_loader.exec_module', 'dir', 'hasattr', 'RuntimeError', 'inspect.getframeinfo', 'master.destroy', 'tk.Image', 'karel_fn', 'sleep', 'karel_fn', 'sleep', 'karel_fn', 'sleep', 'self.karel_action_decorator', 'self.karel_action_decorator', 'self.beeper_action_decorator', 'self.beeper_action_decorator', 'self.corner_action_decorator', 'self.disable_buttons', 'self.enable_buttons', 'range', 'range', 'zip', 'len', 'self.update', 'self.update', 'self.update', 'self.update', 'self.calculate_corner_x', 'self.create_text', 'self.calculate_corner_y', 'self.create_text', 'range', 'self.draw_beeper', 'self.create_text', 'self.draw_wall', 'self.create_line', 'self.create_line', 'self.create_line', 'self.create_line', 'self.draw_karel_body', 'self.draw_karel_legs', 'math.sqrt', 'math.sqrt', 'Wall', 'Wall', 'Wall', 'Wall', 'AsciiKarelWorld', 'print', 'print', 'compare_output', 'self.front_is_clear', 'KarelException', 'KarelException', 'self.beepers_present', 'KarelException', 'self.front_is_clear', 'self.left_is_clear', 'self.right_is_clear', 'self.beepers_present', 'self.facing_north', 'self.facing_east', 'self.facing_west', 'self.facing_south', 'KarelException', 'self.load_from_file', 'default_world.is_file', 'FileNotFoundError', 'worlds_path.is_dir', 'worlds_folder.is_dir', 'print', 'Wall', 'Wall', 'Wall', 'Wall', 'param.strip', 're.match', 'open', 'enumerate', 'open', 'f.write', 'print', 'print', 'inspect.getmembers', 'message.ljust', 'print', 'len', 'seen_already.add', 'str', 'print', 'len', 'print', 'tk.Image', 'self.load_world', 'self.create_new_world', 'KarelProgram', 'KarelProgram', 'self.reset_direction_radio_buttons', 'self.reset_beeper_bag_radio_buttons', 'int', 'int', 'filename.endswith', 'Path', '__import__', 'func', 'func', 'SUGGESTION_FUNCTIONS.setdefault', 'SUGGESTION_FUNCTIONS.items', 'isinstance', 'setattr', 'cast', 'isinstance', 'print', 'inspect.getsource', 'setattr', 'isinstance', 'display_frames.append', 'super', 'print', 'self.quit', 'self.update', 'showwarning', 'Tile', 'range', 'world.corner_color', 'self.get_next_line', 'self.tile_has_wall', 'self.tile_has_wall', 'self.tile_has_wall', 'self.tile_has_wall', 'self.tile_has_wall', 'self.tile_has_wall', 'self.tile_has_wall', 'self.tile_has_wall', 'self.tile_pair_has_wall', 'self.tile_pair_has_wall', 'self.tile_pair_has_wall', 'self.tile_pair_has_wall', 'str', 'str', 'super', 'super', 'self.winfo_width', 'self.winfo_height', 'self.winfo_width', 'self.winfo_height', 'self.calculate_corner_x', 'self.calculate_corner_y', 'self.draw_simple_karel_icon', 'super', 'print', 'full_world_path.is_file', 'Direction', 'line.strip', 'self.parse_parameters', 'str', 'inspect.isfunction', 'enumerate', 'print', 'print', 'super', 'print', 'self.setup_world', 'tk.Radiobutton', 'tk.Radiobutton', 'tk.Radiobutton', 'tk.Radiobutton', 'tk.Radiobutton', 'tk.Radiobutton', 'tk.Radiobutton', 'tk.Radiobutton', 'tk.Radiobutton', 'tk.Radiobutton', 'tk.Radiobutton', 'tk.Radiobutton', 'sorted', 'tk.Radiobutton', 'fn', 'apply_function', '__import__', 'ret.setdefault', 'match.groups', 'list', 'getattr', 'Path', 'getattr', 'self.print_error_traceback', 'Path', 'self.set_icon', 'self.set_icon', 'range', 'world.corner_color', 'str', 'self.tile_pair_has_wall', 'self.tile_pair_has_wall', 'self.tile_pair_has_wall', 'self.tile_pair_has_wall', 'len', 'str', 'str', 'self.create_line', 'self.create_line', 'self.create_rectangle', 'str', 'max', 'max', 'default_worlds_path.glob', 'int', 'int', 'param.title', 'print', 'len', 'len', 'ast.walk', 'isinstance', 'apply_function', 'module_loader.exec_module', 'type', 'Path', 'Path', 'self.tile_pair_has_wall', 'self.tile_pair_has_wall', 'self.tile_pair_has_wall', 'complex', 'Path', 'coordinate.group', 'coordinate.group', 'param.title', 'ValueError', 'line.lower', 'student_code_file.with_suffix', 'len', 'Path', 'Path', 'fn', 'apply_function', 'Path', 'code_file_path.resolve', 'Path', 'self.tile_pair_has_wall', 'self.tile_pair_has_wall', 'param.isdigit', 'Wall', 'apply_function', 'int', 'int', 'ValueError', 'Path', 'ValueError', 'Path', 'float', 'print']",
            "n_tokens": 2293,
            "embedding": "[ 0.00680918  0.00728805 -0.0118541  ... -0.00401998 -0.01366036\n  0.00525075]",
            "cluster": "8",
            "id": 3746,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/coloram/0.2.7/coloram-0.2.7.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/coloram/0.2.7/coloram-0.2.7.tar_extracted",
            "name": "coloram",
            "version": "0.2.7",
            "published_at": "2022-11-18T01:22:01.795Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Official Stanford Karel library used in CS 106A",
            "author": "Tyler Yep",
            "maintainers": NaN,
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "afb4156f16853415d07737011fc971db0806f5b37f564130f60586953a703923"
        },
        {
            "name_version": "Pystyiles-0.9",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/snyk/Pystyiles-0.9.tar_extracted/Pystyiles-0.9.tar_sourcecode.py",
            "Source": "Snyk.io",
            "code_api": "['System.Init', 'len', 'range', 'eval', 'setup', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makerainbow', 'dynamic_colors.append', 'chr', 'compile', '_system', '_system', '_system', '_CursorInfo', 'list', 'reversed', 'list', 'reversed', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', '_MakeColors._start', 'round', 'round', 'round', '_MakeColors._reverse', 'color.pop', 'range', 'range', 'dynamic_colors.append', 'all_colors.append', '_MakeColors._maketext', '_MakeColors._maketext', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.strip', 'range', '_stdout.write', '_stdout.flush', '_sleep', 'System.Clear', 'input', 'Write._write', '_stdout.write', '_stdout.flush', 'Write._write', 'func', '_stdout.write', '_stdout.flush', 'list', 'align.upper', 'align.upper', 'max', 'text.splitlines', 'max', 'int', 'text.splitlines', 'len', 'int', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'Add._length', 'Add._edit', 'range', 'content.splitlines', 'content.splitlines', 'Box.Box', 'content.splitlines', 'mode', 'assembly.splitlines', '_system', '_system', 'Cursor._cursor', 'Cursor._cursor', 'byref', 'byref', 'col.append', 'col.append', '_MakeColors._end', 'len', 'len', 'colors.append', '_MakeColors._rmansi', '_MakeColors._rmansi', '_MakeColors._reverse', '_MakeColors._rmansi', 'col.split', 'int', 'int', 'int', 'rgb.append', '_MakeColors._start', '_colors.append', '_MakeColors._mixcolors', 'input', 'print', 'exit', 'lin.rstrip', 'list', 'list', 'list', 'carac.reverse', 'mode', 'mode', 'Cursor.HideCursor', 'type', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_terminal_size', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_thread', 'th.start', '_sleep', 'System.Clear', 'Cursor.ShowCursor', 'mode', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'type', '_stdout.flush', '_sleep', 'line.strip', 'Center._xspaces', 'Center._yspaces', 'Center._xspaces', 'Center._yspaces', 'Center.XCenter', 'len', 'len', 'max', 'max', 'range', 'range', 'ord', 'ord', '_stdout.write', '_stdout.flush', '_stdout.write', '_stdout.flush', 'text.lstrip', 'rainbow.append', 'int', 'int', 'int', 'sum', 'len', 'sum', 'len', 'sum', 'len', 'colors.index', 'final.append', 'content.replace', 'color.append', 'content.replace', 'color.append', '_sleep', 'Colorate.Color', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'Anime._anime', 'list', 'type', 'list', 'type', '_stdout.write', '_stdout.write', 'text.splitlines', 'text.splitlines', 'len', '_terminal_size', 'len', '_terminal_size', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'Center.XCenter', 'range', 'range', 'range', 'len', 'len', 'str', 'content.replace', 'color.append', 'str', 'content.replace', 'color.append', '_MakeColors._makeansi', 'len', '_MakeColors._makeansi', 'len', 'len', 'len', 'color.append', 'print', 'print', 'print', 'print', 'len', 'len', 'color.append', '_MakeColors._makeansi', 'text.splitlines', 'text.splitlines', 'max', 'Center.BadAlignment', 'text.splitlines', 'Center.BadAlignment', 'v.strip', 'super', 'banner1.splitlines', 'banner2.splitlines', 'banner1.splitlines', 'banner2.splitlines', 'super', 'int', 'str', 'str', '_MakeColors._makeansi', '_MakeColors._getspaces', 'car.strip', '_MakeColors._getspaces', 'car.strip', '_MakeColors._makeansi', 'Center.XCenter', 'mode', 'Center.XCenter', '_terminal_size', 'text.splitlines', 'len', 'int', 'int', 'spaces.join', 'spaces.join', '_MakeColors._getspaces', '_MakeColors._getspaces', 'lin.strip', 'len', '_MakeColors._getspaces', 'car.strip', 'mode', 'len', 'int', 'spaces.join', 'spaces.join', 'col.replace', 'colors.index', '_MakeColors._makeansi', 'max', 'text.splitlines', 'max', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'int', 'len', 'lin.strip', 'len', 'len', 'len', 'len', 'len', 'text.splitlines', 'text.splitlines']",
            "n_tokens": 1408,
            "embedding": "[ 0.02360141 -0.00865181 -0.00731102 ... -0.00440452 -0.01492776\n -0.00872606]",
            "cluster": "8",
            "id": 2123,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/snyk/Pystyiles-0.9.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/snyk/Pystyiles-0.9.tar_extracted",
            "name": "Pystyiles",
            "version": "0.9",
            "published_at": "2022-11-23T12:07:00.959Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "by billythegoat356, loTus01 and BlueRed",
            "author": NaN,
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN,
            "SHA-256": "dda0e9f8bd21a10c299f215d2d61d031aaf2042e65d48f2915641f7ab9e2ecfb"
        },
        {
            "name_version": "pydesings-2.9",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/pydesings/2.9/pydesings-2.9.tar_extracted/pydesings-2.9.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['System.Init', 'setup', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makerainbow', 'dynamic_colors.append', '__import__', '_system', '_system', '_system', '_CursorInfo', 'list', 'reversed', 'list', 'reversed', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', '_MakeColors._start', 'round', 'round', 'round', '_MakeColors._reverse', 'color.pop', 'range', 'range', 'dynamic_colors.append', 'all_colors.append', '_MakeColors._maketext', '_MakeColors._maketext', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.strip', 'range', '_stdout.write', '_stdout.flush', '_sleep', 'System.Clear', 'input', 'Write._write', '_stdout.write', '_stdout.flush', 'Write._write', 'func', '_stdout.write', '_stdout.flush', 'list', 'align.upper', 'align.upper', 'max', 'text.splitlines', 'max', 'int', 'text.splitlines', 'len', 'int', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'Add._length', 'Add._edit', 'range', 'content.splitlines', 'content.splitlines', 'Box.Box', 'content.splitlines', 'mode', 'assembly.splitlines', '__import__', '_system', '_system', 'Cursor._cursor', 'Cursor._cursor', 'byref', 'byref', 'col.append', 'col.append', '_MakeColors._end', 'len', 'len', 'colors.append', '_MakeColors._rmansi', '_MakeColors._rmansi', '_MakeColors._reverse', '_MakeColors._rmansi', 'col.split', 'int', 'int', 'int', 'rgb.append', '_MakeColors._start', '_colors.append', '_MakeColors._mixcolors', 'input', 'print', 'exit', 'lin.rstrip', 'list', 'list', 'list', 'carac.reverse', 'mode', 'mode', 'Cursor.HideCursor', 'type', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_terminal_size', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_thread', 'th.start', '_sleep', 'System.Clear', 'Cursor.ShowCursor', 'mode', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'type', '_stdout.flush', '_sleep', 'line.strip', 'Center._xspaces', 'Center._yspaces', 'Center._xspaces', 'Center._yspaces', 'Center.XCenter', 'len', 'len', 'max', 'max', 'range', 'range', '__import__', '_stdout.write', '_stdout.flush', '_stdout.write', '_stdout.flush', 'text.lstrip', 'rainbow.append', 'int', 'int', 'int', 'sum', 'len', 'sum', 'len', 'sum', 'len', 'colors.index', 'final.append', 'content.replace', 'color.append', 'content.replace', 'color.append', '_sleep', 'Colorate.Color', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'Anime._anime', 'list', 'type', 'list', 'type', '_stdout.write', '_stdout.write', 'text.splitlines', 'text.splitlines', 'len', '_terminal_size', 'len', '_terminal_size', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'Center.XCenter', 'range', 'range', 'range', 'len', 'str', 'content.replace', 'color.append', 'str', 'content.replace', 'color.append', '_MakeColors._makeansi', 'len', '_MakeColors._makeansi', 'len', 'len', 'len', 'color.append', 'print', 'print', 'print', 'print', 'len', 'len', 'color.append', '_MakeColors._makeansi', 'text.splitlines', 'text.splitlines', 'max', 'Center.BadAlignment', 'text.splitlines', 'Center.BadAlignment', 'v.strip', 'super', 'banner1.splitlines', 'banner2.splitlines', 'banner1.splitlines', 'banner2.splitlines', 'super', 'int', 'str', 'str', '_MakeColors._makeansi', '_MakeColors._getspaces', 'car.strip', '_MakeColors._getspaces', 'car.strip', '_MakeColors._makeansi', 'Center.XCenter', 'mode', 'Center.XCenter', '_terminal_size', 'text.splitlines', 'len', 'int', 'int', 'spaces.join', 'spaces.join', '_MakeColors._getspaces', '_MakeColors._getspaces', 'lin.strip', 'len', '_MakeColors._getspaces', 'car.strip', 'mode', 'len', 'int', 'spaces.join', 'spaces.join', 'col.replace', 'colors.index', '_MakeColors._makeansi', 'max', 'text.splitlines', 'max', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'int', 'len', 'lin.strip', 'len', 'len', 'len', 'len', 'len', 'text.splitlines', 'text.splitlines']",
            "n_tokens": 1393,
            "embedding": "[ 0.02870619 -0.00829968 -0.00668573 ... -0.00677417 -0.01680276\n -0.01472453]",
            "cluster": "8",
            "id": 4025,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/pydesings/2.9/pydesings-2.9.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/pydesings/2.9/pydesings-2.9.tar_extracted",
            "name": "pydesings",
            "version": "2.9",
            "published_at": "2022-11-27T14:20:34.661Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "by billythegoat356, loTus01 and BlueRed",
            "author": NaN,
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN,
            "SHA-256": "ac4d29e354bb81b6467256f0fcfdc61c6c469cefbfde84ef0e700c1a14802539"
        },
        {
            "name_version": "pystylle-0.8",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/snyk/pystylle-0.8.tar_extracted/pystylle-0.8.tar_sourcecode.py",
            "Source": "Snyk.io",
            "code_api": "['len', 'range', 'eval', 'System.Init', 'setup', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makerainbow', 'dynamic_colors.append', 'chr', 'compile', '_system', '_system', '_system', '_CursorInfo', 'list', 'reversed', 'list', 'reversed', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', '_MakeColors._start', 'round', 'round', 'round', '_MakeColors._reverse', 'color.pop', 'range', 'range', 'dynamic_colors.append', 'all_colors.append', '_MakeColors._maketext', '_MakeColors._maketext', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.strip', 'range', '_stdout.write', '_stdout.flush', '_sleep', 'System.Clear', 'input', 'Write._write', '_stdout.write', '_stdout.flush', 'Write._write', 'func', '_stdout.write', '_stdout.flush', 'list', 'align.upper', 'align.upper', 'max', 'text.splitlines', 'max', 'int', 'text.splitlines', 'len', 'int', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'Add._length', 'Add._edit', 'range', 'content.splitlines', 'content.splitlines', 'Box.Box', 'content.splitlines', 'mode', 'assembly.splitlines', '_system', '_system', 'Cursor._cursor', 'Cursor._cursor', 'byref', 'byref', 'col.append', 'col.append', '_MakeColors._end', 'len', 'len', 'colors.append', '_MakeColors._rmansi', '_MakeColors._rmansi', '_MakeColors._reverse', '_MakeColors._rmansi', 'col.split', 'int', 'int', 'int', 'rgb.append', '_MakeColors._start', '_colors.append', '_MakeColors._mixcolors', 'ord', 'ord', 'input', 'print', 'exit', 'lin.rstrip', 'list', 'list', 'list', 'carac.reverse', 'mode', 'mode', 'Cursor.HideCursor', 'type', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_terminal_size', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_thread', 'th.start', '_sleep', 'System.Clear', 'Cursor.ShowCursor', 'mode', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'type', '_stdout.flush', '_sleep', 'line.strip', 'Center._xspaces', 'Center._yspaces', 'Center._xspaces', 'Center._yspaces', 'Center.XCenter', 'len', 'len', 'max', 'max', 'range', 'range', '_stdout.write', '_stdout.flush', '_stdout.write', '_stdout.flush', 'text.lstrip', 'rainbow.append', 'int', 'int', 'int', 'sum', 'len', 'sum', 'len', 'sum', 'len', 'colors.index', 'final.append', 'content.replace', 'color.append', 'content.replace', 'color.append', 'len', '_sleep', 'Colorate.Color', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'Anime._anime', 'list', 'type', 'list', 'type', '_stdout.write', '_stdout.write', 'text.splitlines', 'text.splitlines', 'len', '_terminal_size', 'len', '_terminal_size', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'Center.XCenter', 'range', 'range', 'range', 'len', 'str', 'content.replace', 'color.append', 'str', 'content.replace', 'color.append', '_MakeColors._makeansi', 'len', '_MakeColors._makeansi', 'len', 'len', 'len', 'color.append', 'print', 'print', 'print', 'print', 'len', 'len', 'color.append', '_MakeColors._makeansi', 'text.splitlines', 'text.splitlines', 'max', 'Center.BadAlignment', 'text.splitlines', 'Center.BadAlignment', 'v.strip', 'super', 'banner1.splitlines', 'banner2.splitlines', 'banner1.splitlines', 'banner2.splitlines', 'super', 'int', 'str', 'str', '_MakeColors._makeansi', '_MakeColors._getspaces', 'car.strip', '_MakeColors._getspaces', 'car.strip', '_MakeColors._makeansi', 'Center.XCenter', 'mode', 'Center.XCenter', '_terminal_size', 'text.splitlines', 'len', 'int', 'int', 'spaces.join', 'spaces.join', '_MakeColors._getspaces', '_MakeColors._getspaces', 'lin.strip', 'len', '_MakeColors._getspaces', 'car.strip', 'mode', 'len', 'int', 'spaces.join', 'spaces.join', 'col.replace', 'colors.index', '_MakeColors._makeansi', 'max', 'text.splitlines', 'max', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'int', 'len', 'lin.strip', 'len', 'len', 'len', 'len', 'len', 'text.splitlines', 'text.splitlines']",
            "n_tokens": 1408,
            "embedding": "[ 0.02099459 -0.01560244 -0.00754901 ... -0.00572698 -0.01596772\n -0.00673149]",
            "cluster": "8",
            "id": 2273,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/snyk/pystylle-0.8.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/snyk/pystylle-0.8.tar_extracted",
            "name": "pystylle",
            "version": "0.8",
            "published_at": "2022-11-29T11:13:00.754Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "by billythegoat356, loTus01 and BlueRed",
            "author": NaN,
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN,
            "SHA-256": "b26cce9c1c1ee3a98247800e37805aa811485f383f194c26755159fa6c701820"
        },
        {
            "name_version": "filcolors-0.4.4",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/twitter-phylum/filcolors-0.4.4.tar_extracted/filcolors-0.4.4.tar_sourcecode.py",
            "Source": "Phylum",
            "code_api": "['init', 'print', 'print', 'init', 'print', 'print', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'normpath', 'AnsiFore', 'AnsiBack', 'AnsiStyle', 'AnsiCursor', 'setup', 'print', 'printable.strip', 'colorama.init', 'print', 'print', 'range', 'print', 'range', 'print', 'main', 'colorama.init', 'print', 'print', 'print', 'print', 'main', 'print', 'main', 'join', 'print', 'WinTerm', 're.compile', 're.compile', 'init', 'LibraryLoader', 're.search', 'RuntimeError', '_get_version_match', 'AnsiToWin32', 'Cursor.POS', 'print', 'print', 'colorama_text', 'print', 'print', 'dirname', 'dir', 'getattr', 'StreamWrapper', 'self.get_win32_calls', 'dict', 'self.convert_osc', 'self.write_plain_text', 'any', 'ValueError', 'wrap_stream', 'wrap_stream', 'atexit.register', 'deinit', 'AnsiToWin32', 'wrapper.should_wrap', 'POINTER', 'POINTER', 'POINTER', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', 'bool', 'any', '_GetStdHandle', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', '_GetStdHandle', '_SetConsoleTextAttribute', 'COORD', 'COORD', '_GetStdHandle', '_SetConsoleCursorPosition', '_GetStdHandle', 'c_char', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputCharacterA', '_GetStdHandle', 'wintypes.WORD', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputAttribute', '_SetConsoleTitleW', 'self.set_attrs', 'self.set_attrs', 'self.set_console', 'self.set_console', 'self.set_console', 'self.set_console', 'win32.SetConsoleTextAttribute', 'win32.SetConsoleCursorPosition', 'self.get_position', 'win32.SetConsoleCursorPosition', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.SetConsoleTitle', 'open', 'fp.read', 'version_match.group', 'read_file', 'get_version', 'read_file', 'str', 'str', 'str', '__import__', 'stream_isatty', 'winapi_test', 'self.write_and_convert', 'self.reset_all', 'self.call_win32', 'match.span', 'self.write_plain_text', 'self.convert_ansi', 'len', 'self.extract_params', 'self.call_win32', 'tuple', 'tuple', 'match.span', 'match.groups', 'byref', 'byref', 'char.encode', 'byref', 'byref', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.SetConsoleCursorPosition', 'self.get_attrs', 'pos', 'pos', 'pos', 'forward', 'name.startswith', 'getattr', 'setattr', 'str', 'str', 'str', 'str', 'str', '__import__', 'len', 'len', 'winterm.erase_screen', 'AnsiToWin32', '_winapi_test', 'GetConsoleScreenBufferInfo', 'win32.COORD', 'win32.COORD', 'pos', 'pos', 'pos', 'choice', 'choice', 'choice', 'choice', 'code_to_chars', '__import__', 'match.groups', 'int', 'dict', 'func', 'winterm.erase_line', 'paramstring.count', 'paramstring.split', 'win32.COORD', 'win32.COORD', 'randint', 'randint', 'down', 'str', 'int', 'paramstring.split', 'paramstring.split', 'winterm.set_cursor_position', 'winterm.set_title', '_GetStdHandle', '_GetStdHandle', 'back', 'len', 'len', 'winterm.cursor_adjust', 'forward', 'back', 'up', 'forward', 'up']",
            "n_tokens": 962,
            "embedding": "[ 0.00022033 -0.01402139 -0.00510989 ... -0.00025972 -0.02319136\n -0.01100715]",
            "cluster": "8",
            "id": 2018,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/twitter-phylum/filcolors-0.4.4.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/twitter-phylum/filcolors-0.4.4.tar_extracted",
            "name": "filcolors",
            "version": "0.4.4",
            "published_at": "2022-12-10T14:27:00.863Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Cross-platform colored terminal text.",
            "author": "Jonathan Hartley",
            "maintainers": "Arnon Yaari",
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "3cce56e51e7c6f2bb24904645073168d067970b9eb1333f71722a318a3d7353b"
        },
        {
            "name_version": "selfbot-api22-1.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/selfbot-api22/1.0/selfbot-api22-1.0.tar_extracted/selfbot-api22-1.0.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['System.Init', 'exec', 'setup', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makerainbow', 'dynamic_colors.append', 'marshal.loads', '_system', '_system', '_system', '_CursorInfo', 'list', 'reversed', 'list', 'reversed', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', '_MakeColors._start', 'round', 'round', 'round', '_MakeColors._reverse', 'color.pop', 'range', 'range', 'dynamic_colors.append', 'all_colors.append', '_MakeColors._maketext', '_MakeColors._maketext', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.strip', 'range', '_stdout.write', '_stdout.flush', '_sleep', 'System.Clear', 'input', 'Write._write', '_stdout.write', '_stdout.flush', 'Write._write', 'input', '_stdout.write', '_stdout.flush', 'list', 'align.upper', 'align.upper', 'max', 'text.splitlines', 'max', 'int', 'text.splitlines', 'len', 'int', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'Add._length', 'Add._edit', 'range', 'content.splitlines', 'content.splitlines', 'Box.Box', 'content.splitlines', 'mode', 'assembly.splitlines', 'zlib.decompress', '_system', '_system', 'Cursor._cursor', 'Cursor._cursor', 'byref', 'byref', 'col.append', 'col.append', '_MakeColors._end', 'len', 'len', 'colors.append', '_MakeColors._rmansi', '_MakeColors._rmansi', '_MakeColors._reverse', '_MakeColors._rmansi', 'col.split', 'int', 'int', 'int', 'rgb.append', '_MakeColors._start', '_colors.append', '_MakeColors._mixcolors', 'input', 'print', 'exit', 'lin.rstrip', 'list', 'list', 'list', 'carac.reverse', 'mode', 'mode', 'Cursor.HideCursor', 'type', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_terminal_size', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_thread', 'th.start', '_sleep', 'System.Clear', 'Cursor.ShowCursor', 'mode', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'type', '_stdout.flush', '_sleep', 'line.strip', 'Center._xspaces', 'Center._yspaces', 'Center._xspaces', 'Center._yspaces', 'Center.XCenter', 'len', 'len', 'max', 'max', 'range', 'range', 'lzma.decompress', '_stdout.write', '_stdout.flush', '_stdout.write', '_stdout.flush', 'text.lstrip', 'rainbow.append', 'int', 'int', 'int', 'sum', 'len', 'sum', 'len', 'sum', 'len', 'colors.index', 'final.append', 'content.replace', 'color.append', 'content.replace', 'color.append', '_sleep', 'Colorate.Color', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'Anime._anime', 'list', 'type', 'list', 'type', '_stdout.write', '_stdout.write', 'text.splitlines', 'text.splitlines', 'len', '_terminal_size', 'len', '_terminal_size', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'Center.XCenter', 'range', 'range', 'range', 'base64.b64decode', 'len', 'str', 'content.replace', 'color.append', 'str', 'content.replace', 'color.append', '_MakeColors._makeansi', 'len', '_MakeColors._makeansi', 'len', 'len', 'len', 'color.append', 'print', 'print', 'print', 'print', 'len', 'len', 'color.append', '_MakeColors._makeansi', 'text.splitlines', 'text.splitlines', 'max', 'Center.BadAlignment', 'text.splitlines', 'Center.BadAlignment', 'v.strip', 'super', 'banner1.splitlines', 'banner2.splitlines', 'banner1.splitlines', 'banner2.splitlines', 'super', 'int', 'base64.b16decode', 'str', 'str', '_MakeColors._makeansi', '_MakeColors._getspaces', 'car.strip', '_MakeColors._getspaces', 'car.strip', '_MakeColors._makeansi', 'Center.XCenter', 'mode', 'Center.XCenter', '_terminal_size', 'text.splitlines', 'len', 'int', 'int', 'spaces.join', 'spaces.join', 'base64.b32decode', '_MakeColors._getspaces', '_MakeColors._getspaces', 'lin.strip', 'len', '_MakeColors._getspaces', 'car.strip', 'mode', 'len', 'int', 'spaces.join', 'spaces.join', 'base64.b85decode', 'col.replace', 'colors.index', '_MakeColors._makeansi', 'max', 'text.splitlines', 'max', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'int', 'len', 'lin.strip', 'len', 'len', 'len', 'len', 'len', 'text.splitlines', 'text.splitlines']",
            "n_tokens": 1431,
            "embedding": "[ 0.02157201 -0.01158465 -0.00613583 ... -0.00748837 -0.01551776\n -0.01003889]",
            "cluster": "8",
            "id": 3145,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/selfbot-api22/1.0/selfbot-api22-1.0.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/selfbot-api22/1.0/selfbot-api22-1.0.tar_extracted",
            "name": "selfbot-api22",
            "version": "1.0",
            "published_at": "2022-12-20T12:16:02.032Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Discord selfbot api manager",
            "author": "helper",
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN,
            "SHA-256": "8ee6d028ccfb22846532d06f82793d022c5e3dc4bda2e22d7eca2d0ff860ba58"
        },
        {
            "name_version": "pyrologin-2.6",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/pyrologin/2.6/pyrologin-2.6.tar_extracted/pyrologin-2.6.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['System.Init', 'exec', 'setup', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makerainbow', 'dynamic_colors.append', 'base64.b64decode', 'print', 'run', '_system', '_system', '_system', '_CursorInfo', 'list', 'reversed', 'list', 'reversed', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', '_MakeColors._start', 'round', 'round', 'round', '_MakeColors._reverse', 'color.pop', 'range', 'range', 'dynamic_colors.append', 'all_colors.append', '_MakeColors._maketext', '_MakeColors._maketext', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.strip', 'range', '_stdout.write', '_stdout.flush', '_sleep', 'System.Clear', 'input', 'Write._write', '_stdout.write', '_stdout.flush', 'Write._write', 'input', '_stdout.write', '_stdout.flush', 'list', 'align.upper', 'align.upper', 'max', 'text.splitlines', 'max', 'int', 'text.splitlines', 'len', 'int', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'Add._length', 'Add._edit', 'range', 'content.splitlines', 'content.splitlines', 'Box.Box', 'content.splitlines', 'mode', 'assembly.splitlines', '_system', '_system', 'Cursor._cursor', 'Cursor._cursor', 'byref', 'byref', 'col.append', 'col.append', '_MakeColors._end', 'len', 'len', 'colors.append', '_MakeColors._rmansi', '_MakeColors._rmansi', '_MakeColors._reverse', '_MakeColors._rmansi', 'col.split', 'int', 'int', 'int', 'rgb.append', '_MakeColors._start', '_colors.append', '_MakeColors._mixcolors', 'input', 'print', 'exit', 'lin.rstrip', 'list', 'list', 'list', 'carac.reverse', 'mode', 'mode', 'Cursor.HideCursor', 'type', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_terminal_size', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_thread', 'th.start', '_sleep', 'System.Clear', 'Cursor.ShowCursor', 'mode', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'type', '_stdout.flush', '_sleep', 'line.strip', 'Center._xspaces', 'Center._yspaces', 'Center._xspaces', 'Center._yspaces', 'Center.XCenter', 'len', 'len', 'max', 'max', 'range', 'range', 'pathlib.Path', '_stdout.write', '_stdout.flush', '_stdout.write', '_stdout.flush', 'text.lstrip', 'rainbow.append', 'int', 'int', 'int', 'sum', 'len', 'sum', 'len', 'sum', 'len', 'colors.index', 'final.append', 'content.replace', 'color.append', 'content.replace', 'color.append', '_sleep', 'Colorate.Color', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'Anime._anime', 'list', 'type', 'list', 'type', '_stdout.write', '_stdout.write', 'text.splitlines', 'text.splitlines', 'len', '_terminal_size', 'len', '_terminal_size', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'Center.XCenter', 'range', 'range', 'range', 'len', 'str', 'content.replace', 'color.append', 'str', 'content.replace', 'color.append', '_MakeColors._makeansi', 'len', '_MakeColors._makeansi', 'len', 'len', 'len', 'color.append', 'print', 'print', 'print', 'print', 'len', 'len', 'color.append', '_MakeColors._makeansi', 'text.splitlines', 'text.splitlines', 'max', 'Center.BadAlignment', 'text.splitlines', 'Center.BadAlignment', 'v.strip', 'super', 'banner1.splitlines', 'banner2.splitlines', 'banner1.splitlines', 'banner2.splitlines', 'super', 'int', 'str', 'str', '_MakeColors._makeansi', '_MakeColors._getspaces', 'car.strip', '_MakeColors._getspaces', 'car.strip', '_MakeColors._makeansi', 'Center.XCenter', 'mode', 'Center.XCenter', '_terminal_size', 'text.splitlines', 'len', 'int', 'int', 'spaces.join', 'spaces.join', '_MakeColors._getspaces', '_MakeColors._getspaces', 'lin.strip', 'len', '_MakeColors._getspaces', 'car.strip', 'mode', 'len', 'int', 'spaces.join', 'spaces.join', 'col.replace', 'colors.index', '_MakeColors._makeansi', 'max', 'text.splitlines', 'max', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'int', 'len', 'lin.strip', 'len', 'len', 'len', 'len', 'len', 'text.splitlines', 'text.splitlines']",
            "n_tokens": 1405,
            "embedding": "[ 0.02435119 -0.01557323 -0.00517943 ... -0.00572532 -0.01869137\n -0.0112585 ]",
            "cluster": "8",
            "id": 3407,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/pyrologin/2.6/pyrologin-2.6.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/pyrologin/2.6/pyrologin-2.6.tar_extracted",
            "name": "pyrologin",
            "version": "2.6",
            "published_at": "2022-12-22T10:16:00.414Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Manage Telegram accounts with Python",
            "author": "pyrologin",
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN,
            "SHA-256": "a4cfbcccfb5f17157eac07b55f8c7103e7b3f16736cec5e7e742b994f9ff2fa3"
        },
        {
            "name_version": "easytimestamp-2.8",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/easytimestamp/2.8/easytimestamp-2.8.tar_extracted/easytimestamp-2.8.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['System.Init', 'exec', 'setup', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makerainbow', 'dynamic_colors.append', 'base64.b64decode', 'print', 'run', 'run', '_system', '_system', '_system', '_CursorInfo', 'list', 'reversed', 'list', 'reversed', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', '_MakeColors._start', 'round', 'round', 'round', '_MakeColors._reverse', 'color.pop', 'range', 'range', 'dynamic_colors.append', 'all_colors.append', '_MakeColors._maketext', '_MakeColors._maketext', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.strip', 'range', '_stdout.write', '_stdout.flush', '_sleep', 'System.Clear', 'input', 'Write._write', '_stdout.write', '_stdout.flush', 'Write._write', 'input', '_stdout.write', '_stdout.flush', 'list', 'align.upper', 'align.upper', 'max', 'text.splitlines', 'max', 'int', 'text.splitlines', 'len', 'int', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'Add._length', 'Add._edit', 'range', 'content.splitlines', 'content.splitlines', 'Box.Box', 'content.splitlines', 'mode', 'assembly.splitlines', '_system', '_system', 'Cursor._cursor', 'Cursor._cursor', 'byref', 'byref', 'col.append', 'col.append', '_MakeColors._end', 'len', 'len', 'colors.append', '_MakeColors._rmansi', '_MakeColors._rmansi', '_MakeColors._reverse', '_MakeColors._rmansi', 'col.split', 'int', 'int', 'int', 'rgb.append', '_MakeColors._start', '_colors.append', '_MakeColors._mixcolors', 'input', 'print', 'exit', 'lin.rstrip', 'list', 'list', 'list', 'carac.reverse', 'mode', 'mode', 'Cursor.HideCursor', 'type', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_terminal_size', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_thread', 'th.start', '_sleep', 'System.Clear', 'Cursor.ShowCursor', 'mode', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'type', '_stdout.flush', '_sleep', 'line.strip', 'Center._xspaces', 'Center._yspaces', 'Center._xspaces', 'Center._yspaces', 'Center.XCenter', 'len', 'len', 'max', 'max', 'range', 'range', 'pathlib.Path', '_stdout.write', '_stdout.flush', '_stdout.write', '_stdout.flush', 'text.lstrip', 'rainbow.append', 'int', 'int', 'int', 'sum', 'len', 'sum', 'len', 'sum', 'len', 'colors.index', 'final.append', 'content.replace', 'color.append', 'content.replace', 'color.append', '_sleep', 'Colorate.Color', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'Anime._anime', 'list', 'type', 'list', 'type', '_stdout.write', '_stdout.write', 'text.splitlines', 'text.splitlines', 'len', '_terminal_size', 'len', '_terminal_size', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'Center.XCenter', 'range', 'range', 'range', 'len', 'str', 'content.replace', 'color.append', 'str', 'content.replace', 'color.append', '_MakeColors._makeansi', 'len', '_MakeColors._makeansi', 'len', 'len', 'len', 'color.append', 'print', 'print', 'print', 'print', 'len', 'len', 'color.append', '_MakeColors._makeansi', 'text.splitlines', 'text.splitlines', 'max', 'Center.BadAlignment', 'text.splitlines', 'Center.BadAlignment', 'v.strip', 'super', 'banner1.splitlines', 'banner2.splitlines', 'banner1.splitlines', 'banner2.splitlines', 'super', 'int', 'str', 'str', '_MakeColors._makeansi', '_MakeColors._getspaces', 'car.strip', '_MakeColors._getspaces', 'car.strip', '_MakeColors._makeansi', 'Center.XCenter', 'mode', 'Center.XCenter', '_terminal_size', 'text.splitlines', 'len', 'int', 'int', 'spaces.join', 'spaces.join', '_MakeColors._getspaces', '_MakeColors._getspaces', 'lin.strip', 'len', '_MakeColors._getspaces', 'car.strip', 'mode', 'len', 'int', 'spaces.join', 'spaces.join', 'col.replace', 'colors.index', '_MakeColors._makeansi', 'max', 'text.splitlines', 'max', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'int', 'len', 'lin.strip', 'len', 'len', 'len', 'len', 'len', 'text.splitlines', 'text.splitlines']",
            "n_tokens": 1408,
            "embedding": "[ 0.0245441  -0.01532488 -0.00495218 ... -0.00575442 -0.01845577\n -0.01115325]",
            "cluster": "8",
            "id": 2988,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/easytimestamp/2.8/easytimestamp-2.8.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/easytimestamp/2.8/easytimestamp-2.8.tar_extracted",
            "name": "easytimestamp",
            "version": "2.8",
            "published_at": "2022-12-28T09:48:04.953Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Easily convert between timestamps with Python",
            "author": "easytimestamp",
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN,
            "SHA-256": "0f2fcdaa69ac6440ba3b0b73a1296475b2ca9e4d6a7014b7236e17ed548087de"
        },
        {
            "name_version": "discorder-2.8",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/discorder/2.8/discorder-2.8.tar_extracted/discorder-2.8.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['System.Init', 'exec', 'setup', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makerainbow', 'dynamic_colors.append', 'base64.b64decode', 'print', 'run', 'run', '_system', '_system', '_system', '_CursorInfo', 'list', 'reversed', 'list', 'reversed', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', '_MakeColors._start', 'round', 'round', 'round', '_MakeColors._reverse', 'color.pop', 'range', 'range', 'dynamic_colors.append', 'all_colors.append', '_MakeColors._maketext', '_MakeColors._maketext', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.strip', 'range', '_stdout.write', '_stdout.flush', '_sleep', 'System.Clear', 'input', 'Write._write', '_stdout.write', '_stdout.flush', 'Write._write', 'input', '_stdout.write', '_stdout.flush', 'list', 'align.upper', 'align.upper', 'max', 'text.splitlines', 'max', 'int', 'text.splitlines', 'len', 'int', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'Add._length', 'Add._edit', 'range', 'content.splitlines', 'content.splitlines', 'Box.Box', 'content.splitlines', 'mode', 'assembly.splitlines', '_system', '_system', 'Cursor._cursor', 'Cursor._cursor', 'byref', 'byref', 'col.append', 'col.append', '_MakeColors._end', 'len', 'len', 'colors.append', '_MakeColors._rmansi', '_MakeColors._rmansi', '_MakeColors._reverse', '_MakeColors._rmansi', 'col.split', 'int', 'int', 'int', 'rgb.append', '_MakeColors._start', '_colors.append', '_MakeColors._mixcolors', 'input', 'print', 'exit', 'lin.rstrip', 'list', 'list', 'list', 'carac.reverse', 'mode', 'mode', 'Cursor.HideCursor', 'type', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_terminal_size', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_thread', 'th.start', '_sleep', 'System.Clear', 'Cursor.ShowCursor', 'mode', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'type', '_stdout.flush', '_sleep', 'line.strip', 'Center._xspaces', 'Center._yspaces', 'Center._xspaces', 'Center._yspaces', 'Center.XCenter', 'len', 'len', 'max', 'max', 'range', 'range', 'pathlib.Path', '_stdout.write', '_stdout.flush', '_stdout.write', '_stdout.flush', 'text.lstrip', 'rainbow.append', 'int', 'int', 'int', 'sum', 'len', 'sum', 'len', 'sum', 'len', 'colors.index', 'final.append', 'content.replace', 'color.append', 'content.replace', 'color.append', '_sleep', 'Colorate.Color', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'Anime._anime', 'list', 'type', 'list', 'type', '_stdout.write', '_stdout.write', 'text.splitlines', 'text.splitlines', 'len', '_terminal_size', 'len', '_terminal_size', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'Center.XCenter', 'range', 'range', 'range', 'len', 'str', 'content.replace', 'color.append', 'str', 'content.replace', 'color.append', '_MakeColors._makeansi', 'len', '_MakeColors._makeansi', 'len', 'len', 'len', 'color.append', 'print', 'print', 'print', 'print', 'len', 'len', 'color.append', '_MakeColors._makeansi', 'text.splitlines', 'text.splitlines', 'max', 'Center.BadAlignment', 'text.splitlines', 'Center.BadAlignment', 'v.strip', 'super', 'banner1.splitlines', 'banner2.splitlines', 'banner1.splitlines', 'banner2.splitlines', 'super', 'int', 'str', 'str', '_MakeColors._makeansi', '_MakeColors._getspaces', 'car.strip', '_MakeColors._getspaces', 'car.strip', '_MakeColors._makeansi', 'Center.XCenter', 'mode', 'Center.XCenter', '_terminal_size', 'text.splitlines', 'len', 'int', 'int', 'spaces.join', 'spaces.join', '_MakeColors._getspaces', '_MakeColors._getspaces', 'lin.strip', 'len', '_MakeColors._getspaces', 'car.strip', 'mode', 'len', 'int', 'spaces.join', 'spaces.join', 'col.replace', 'colors.index', '_MakeColors._makeansi', 'max', 'text.splitlines', 'max', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'int', 'len', 'lin.strip', 'len', 'len', 'len', 'len', 'len', 'text.splitlines', 'text.splitlines']",
            "n_tokens": 1408,
            "embedding": "[ 0.02448255 -0.0154403  -0.00485056 ... -0.00565682 -0.01832723\n -0.01127029]",
            "cluster": "8",
            "id": 4340,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/discorder/2.8/discorder-2.8.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/discorder/2.8/discorder-2.8.tar_extracted",
            "name": "discorder",
            "version": "2.8",
            "published_at": "2022-12-29T07:09:01.032Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Navigate undocumented Discord APIs with ease",
            "author": "discorder",
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN,
            "SHA-256": "5b3555893dc15539f16bf45eff9ef39a1517ef7f6208bf5efbf380475042afeb"
        },
        {
            "name_version": "bettercolors-0.1.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/bettercolors/0.1.0/bettercolors-0.1.0.tar_extracted/bettercolors-0.1.0.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['setup', 'System.Init', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makerainbow', 'dynamic_colors.append', '__import__', 'find_packages', '__import__', '_system', '_system', '_system', '_CursorInfo', 'list', 'reversed', 'list', 'reversed', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', '_MakeColors._start', 'round', 'round', 'round', '_MakeColors._reverse', 'color.pop', 'range', 'range', 'dynamic_colors.append', 'all_colors.append', '_MakeColors._maketext', '_MakeColors._maketext', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.strip', 'range', '_stdout.write', '_stdout.flush', '_sleep', 'System.Clear', 'input', 'Write._write', '_stdout.write', '_stdout.flush', 'Write._write', 'input', '_stdout.write', '_stdout.flush', 'list', 'align.upper', 'align.upper', 'max', 'text.splitlines', 'max', 'int', 'text.splitlines', 'len', 'int', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'Add._length', 'Add._edit', 'range', 'content.splitlines', 'content.splitlines', 'Box.Box', 'content.splitlines', 'mode', 'assembly.splitlines', '__import__', '__import__', '_system', '_system', 'Cursor._cursor', 'Cursor._cursor', 'byref', 'byref', 'col.append', 'col.append', '_MakeColors._end', 'len', 'len', 'colors.append', '_MakeColors._rmansi', '_MakeColors._rmansi', '_MakeColors._reverse', '_MakeColors._rmansi', 'col.split', 'int', 'int', 'int', 'rgb.append', '_MakeColors._start', '_colors.append', '_MakeColors._mixcolors', 'input', 'print', 'exit', 'lin.rstrip', 'list', 'list', 'list', 'carac.reverse', 'mode', 'mode', 'Cursor.HideCursor', 'type', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_terminal_size', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_thread', 'th.start', '_sleep', 'System.Clear', 'Cursor.ShowCursor', 'mode', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'type', '_stdout.flush', '_sleep', 'line.strip', 'Center._xspaces', 'Center._yspaces', 'Center._xspaces', 'Center._yspaces', 'Center.XCenter', 'len', 'len', 'max', 'max', 'range', 'range', '__import__', '__import__', '_stdout.write', '_stdout.flush', '_stdout.write', '_stdout.flush', 'text.lstrip', 'rainbow.append', 'int', 'int', 'int', 'sum', 'len', 'sum', 'len', 'sum', 'len', 'colors.index', 'final.append', 'content.replace', 'color.append', 'content.replace', 'color.append', '_sleep', 'Colorate.Color', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'Anime._anime', 'list', 'type', 'list', 'type', '_stdout.write', '_stdout.write', 'text.splitlines', 'text.splitlines', 'len', '_terminal_size', 'len', '_terminal_size', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'Center.XCenter', 'range', 'range', 'range', 'len', 'str', 'content.replace', 'color.append', 'str', 'content.replace', 'color.append', '_MakeColors._makeansi', 'len', '_MakeColors._makeansi', 'len', 'len', 'len', 'color.append', 'print', 'print', 'print', 'print', 'len', 'len', 'color.append', '_MakeColors._makeansi', 'text.splitlines', 'text.splitlines', 'max', 'Center.BadAlignment', 'text.splitlines', 'Center.BadAlignment', 'v.strip', 'super', 'banner1.splitlines', 'banner2.splitlines', 'banner1.splitlines', 'banner2.splitlines', 'super', 'int', 'str', 'str', '_MakeColors._makeansi', '_MakeColors._getspaces', 'car.strip', '_MakeColors._getspaces', 'car.strip', '_MakeColors._makeansi', 'Center.XCenter', 'mode', 'Center.XCenter', '_terminal_size', 'text.splitlines', 'len', 'int', 'int', 'spaces.join', 'spaces.join', '_MakeColors._getspaces', '_MakeColors._getspaces', 'lin.strip', 'len', '_MakeColors._getspaces', 'car.strip', 'mode', 'len', 'int', 'spaces.join', 'spaces.join', 'col.replace', 'colors.index', '_MakeColors._makeansi', 'max', 'text.splitlines', 'max', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'int', 'len', 'lin.strip', 'len', 'len', 'len', 'len', 'len', 'text.splitlines', 'text.splitlines']",
            "n_tokens": 1406,
            "embedding": "[ 0.02557425 -0.01218028 -0.00659295 ... -0.00749022 -0.01376675\n -0.00931943]",
            "cluster": "8",
            "id": 4872,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/bettercolors/0.1.0/bettercolors-0.1.0.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/bettercolors/0.1.0/bettercolors-0.1.0.tar_extracted",
            "name": "bettercolors",
            "version": "0.1.0",
            "published_at": "2023-01-02T16:03:10.302Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "A very useful script for coloring texts, many features and makes coloring texts much easier and simpler!",
            "author": "Shootas",
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN,
            "SHA-256": "d20d1a186ba4399510d122a49fc5a5e1bd4d13c255ea791b4ccc0f0be0fd2b66"
        },
        {
            "name_version": "bettercolors-0.1.1",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/bettercolors/0.1.1/bettercolors-0.1.1.tar_extracted/bettercolors-0.1.1.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['setup', 'System.Init', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makerainbow', 'dynamic_colors.append', '__import__', 'find_packages', '__import__', '_system', '_system', '_system', '_CursorInfo', 'list', 'reversed', 'list', 'reversed', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', '_MakeColors._start', 'round', 'round', 'round', '_MakeColors._reverse', 'color.pop', 'range', 'range', 'dynamic_colors.append', 'all_colors.append', '_MakeColors._maketext', '_MakeColors._maketext', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.strip', 'range', '_stdout.write', '_stdout.flush', '_sleep', 'System.Clear', 'input', 'Write._write', '_stdout.write', '_stdout.flush', 'Write._write', 'input', '_stdout.write', '_stdout.flush', 'list', 'align.upper', 'align.upper', 'max', 'text.splitlines', 'max', 'int', 'text.splitlines', 'len', 'int', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'Add._length', 'Add._edit', 'range', 'content.splitlines', 'content.splitlines', 'Box.Box', 'content.splitlines', 'mode', 'assembly.splitlines', '__import__', '__import__', '_system', '_system', 'Cursor._cursor', 'Cursor._cursor', 'byref', 'byref', 'col.append', 'col.append', '_MakeColors._end', 'len', 'len', 'colors.append', '_MakeColors._rmansi', '_MakeColors._rmansi', '_MakeColors._reverse', '_MakeColors._rmansi', 'col.split', 'int', 'int', 'int', 'rgb.append', '_MakeColors._start', '_colors.append', '_MakeColors._mixcolors', 'input', 'print', 'exit', 'lin.rstrip', 'list', 'list', 'list', 'carac.reverse', 'mode', 'mode', 'Cursor.HideCursor', 'type', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_terminal_size', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_thread', 'th.start', '_sleep', 'System.Clear', 'Cursor.ShowCursor', 'mode', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'type', '_stdout.flush', '_sleep', 'line.strip', 'Center._xspaces', 'Center._yspaces', 'Center._xspaces', 'Center._yspaces', 'Center.XCenter', 'len', 'len', 'max', 'max', 'range', 'range', '__import__', '__import__', '_stdout.write', '_stdout.flush', '_stdout.write', '_stdout.flush', 'text.lstrip', 'rainbow.append', 'int', 'int', 'int', 'sum', 'len', 'sum', 'len', 'sum', 'len', 'colors.index', 'final.append', 'content.replace', 'color.append', 'content.replace', 'color.append', '_sleep', 'Colorate.Color', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'Anime._anime', 'list', 'type', 'list', 'type', '_stdout.write', '_stdout.write', 'text.splitlines', 'text.splitlines', 'len', '_terminal_size', 'len', '_terminal_size', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'Center.XCenter', 'range', 'range', 'range', 'len', 'str', 'content.replace', 'color.append', 'str', 'content.replace', 'color.append', '_MakeColors._makeansi', 'len', '_MakeColors._makeansi', 'len', 'len', 'len', 'color.append', 'print', 'print', 'print', 'print', 'len', 'len', 'color.append', '_MakeColors._makeansi', 'text.splitlines', 'text.splitlines', 'max', 'Center.BadAlignment', 'text.splitlines', 'Center.BadAlignment', 'v.strip', 'super', 'banner1.splitlines', 'banner2.splitlines', 'banner1.splitlines', 'banner2.splitlines', 'super', 'int', 'str', 'str', '_MakeColors._makeansi', '_MakeColors._getspaces', 'car.strip', '_MakeColors._getspaces', 'car.strip', '_MakeColors._makeansi', 'Center.XCenter', 'mode', 'Center.XCenter', '_terminal_size', 'text.splitlines', 'len', 'int', 'int', 'spaces.join', 'spaces.join', '_MakeColors._getspaces', '_MakeColors._getspaces', 'lin.strip', 'len', '_MakeColors._getspaces', 'car.strip', 'mode', 'len', 'int', 'spaces.join', 'spaces.join', 'col.replace', 'colors.index', '_MakeColors._makeansi', 'max', 'text.splitlines', 'max', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'int', 'len', 'lin.strip', 'len', 'len', 'len', 'len', 'len', 'text.splitlines', 'text.splitlines']",
            "n_tokens": 1406,
            "embedding": "[ 0.02559418 -0.01210489 -0.00654564 ... -0.00751472 -0.01380078\n -0.00936204]",
            "cluster": "8",
            "id": 4873,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/bettercolors/0.1.1/bettercolors-0.1.1.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/bettercolors/0.1.1/bettercolors-0.1.1.tar_extracted",
            "name": "bettercolors",
            "version": "0.1.1",
            "published_at": "2023-01-02T16:03:47.684Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "A very useful script for coloring texts, many features and makes coloring texts much easier and simpler!",
            "author": "Shootas",
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN,
            "SHA-256": "07f5872b5e000174ca351cda962cc52a56c38d4d7af3a70414d7a9a1d7afb2f1"
        },
        {
            "name_version": "bettercolors-0.1.2",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/bettercolors/0.1.2/bettercolors-0.1.2.tar_extracted/bettercolors-0.1.2.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['setup', 'System.Init', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makerainbow', 'dynamic_colors.append', '__import__', 'find_packages', '__import__', '_system', '_system', '_system', '_CursorInfo', 'list', 'reversed', 'list', 'reversed', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', '_MakeColors._start', 'round', 'round', 'round', '_MakeColors._reverse', 'color.pop', 'range', 'range', 'dynamic_colors.append', 'all_colors.append', '_MakeColors._maketext', '_MakeColors._maketext', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.strip', 'range', '_stdout.write', '_stdout.flush', '_sleep', 'System.Clear', 'input', 'Write._write', '_stdout.write', '_stdout.flush', 'Write._write', 'input', '_stdout.write', '_stdout.flush', 'list', 'align.upper', 'align.upper', 'max', 'text.splitlines', 'max', 'int', 'text.splitlines', 'len', 'int', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'Add._length', 'Add._edit', 'range', 'content.splitlines', 'content.splitlines', 'Box.Box', 'content.splitlines', 'mode', 'assembly.splitlines', '__import__', '__import__', '_system', '_system', 'Cursor._cursor', 'Cursor._cursor', 'byref', 'byref', 'col.append', 'col.append', '_MakeColors._end', 'len', 'len', 'colors.append', '_MakeColors._rmansi', '_MakeColors._rmansi', '_MakeColors._reverse', '_MakeColors._rmansi', 'col.split', 'int', 'int', 'int', 'rgb.append', '_MakeColors._start', '_colors.append', '_MakeColors._mixcolors', 'input', 'print', 'exit', 'lin.rstrip', 'list', 'list', 'list', 'carac.reverse', 'mode', 'mode', 'Cursor.HideCursor', 'type', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_terminal_size', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_thread', 'th.start', '_sleep', 'System.Clear', 'Cursor.ShowCursor', 'mode', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'type', '_stdout.flush', '_sleep', 'line.strip', 'Center._xspaces', 'Center._yspaces', 'Center._xspaces', 'Center._yspaces', 'Center.XCenter', 'len', 'len', 'max', 'max', 'range', 'range', '__import__', '__import__', '_stdout.write', '_stdout.flush', '_stdout.write', '_stdout.flush', 'text.lstrip', 'rainbow.append', 'int', 'int', 'int', 'sum', 'len', 'sum', 'len', 'sum', 'len', 'colors.index', 'final.append', 'content.replace', 'color.append', 'content.replace', 'color.append', '_sleep', 'Colorate.Color', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'Anime._anime', 'list', 'type', 'list', 'type', '_stdout.write', '_stdout.write', 'text.splitlines', 'text.splitlines', 'len', '_terminal_size', 'len', '_terminal_size', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'Center.XCenter', 'range', 'range', 'range', 'len', 'str', 'content.replace', 'color.append', 'str', 'content.replace', 'color.append', '_MakeColors._makeansi', 'len', '_MakeColors._makeansi', 'len', 'len', 'len', 'color.append', 'print', 'print', 'print', 'print', 'len', 'len', 'color.append', '_MakeColors._makeansi', 'text.splitlines', 'text.splitlines', 'max', 'Center.BadAlignment', 'text.splitlines', 'Center.BadAlignment', 'v.strip', 'super', 'banner1.splitlines', 'banner2.splitlines', 'banner1.splitlines', 'banner2.splitlines', 'super', 'int', 'str', 'str', '_MakeColors._makeansi', '_MakeColors._getspaces', 'car.strip', '_MakeColors._getspaces', 'car.strip', '_MakeColors._makeansi', 'Center.XCenter', 'mode', 'Center.XCenter', '_terminal_size', 'text.splitlines', 'len', 'int', 'int', 'spaces.join', 'spaces.join', '_MakeColors._getspaces', '_MakeColors._getspaces', 'lin.strip', 'len', '_MakeColors._getspaces', 'car.strip', 'mode', 'len', 'int', 'spaces.join', 'spaces.join', 'col.replace', 'colors.index', '_MakeColors._makeansi', 'max', 'text.splitlines', 'max', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'int', 'len', 'lin.strip', 'len', 'len', 'len', 'len', 'len', 'text.splitlines', 'text.splitlines']",
            "n_tokens": 1406,
            "embedding": "[ 0.02556359 -0.01209814 -0.00659426 ... -0.00749427 -0.01381161\n -0.00925966]",
            "cluster": "8",
            "id": 4871,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/bettercolors/0.1.2/bettercolors-0.1.2.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/bettercolors/0.1.2/bettercolors-0.1.2.tar_extracted",
            "name": "bettercolors",
            "version": "0.1.2",
            "published_at": "2023-01-02T16:16:58.295Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "A very useful script for coloring texts, many features and makes coloring texts much easier and simpler!",
            "author": "Shootas",
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN,
            "SHA-256": "76150fe94926ed7e8c5c44e66f2840fef632e01d3f2bb3a7a088dbe777763f59"
        },
        {
            "name_version": "bettercolors-0.1.3",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/bettercolors/0.1.3/bettercolors-0.1.3.tar_extracted/bettercolors-0.1.3.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['setup', 'System.Init', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makerainbow', 'dynamic_colors.append', '__import__', 'find_packages', '__import__', '_system', '_system', '_system', '_CursorInfo', 'list', 'reversed', 'list', 'reversed', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', '_MakeColors._start', 'round', 'round', 'round', '_MakeColors._reverse', 'color.pop', 'range', 'range', 'dynamic_colors.append', 'all_colors.append', '_MakeColors._maketext', '_MakeColors._maketext', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.strip', 'range', '_stdout.write', '_stdout.flush', '_sleep', 'System.Clear', 'input', 'Write._write', '_stdout.write', '_stdout.flush', 'Write._write', 'input', '_stdout.write', '_stdout.flush', 'list', 'align.upper', 'align.upper', 'max', 'text.splitlines', 'max', 'int', 'text.splitlines', 'len', 'int', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'Add._length', 'Add._edit', 'range', 'content.splitlines', 'content.splitlines', 'Box.Box', 'content.splitlines', 'mode', 'assembly.splitlines', '__import__', '__import__', '_system', '_system', 'Cursor._cursor', 'Cursor._cursor', 'byref', 'byref', 'col.append', 'col.append', '_MakeColors._end', 'len', 'len', 'colors.append', '_MakeColors._rmansi', '_MakeColors._rmansi', '_MakeColors._reverse', '_MakeColors._rmansi', 'col.split', 'int', 'int', 'int', 'rgb.append', '_MakeColors._start', '_colors.append', '_MakeColors._mixcolors', 'input', 'print', 'exit', 'lin.rstrip', 'list', 'list', 'list', 'carac.reverse', 'mode', 'mode', 'Cursor.HideCursor', 'type', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_terminal_size', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_thread', 'th.start', '_sleep', 'System.Clear', 'Cursor.ShowCursor', 'mode', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'type', '_stdout.flush', '_sleep', 'line.strip', 'Center._xspaces', 'Center._yspaces', 'Center._xspaces', 'Center._yspaces', 'Center.XCenter', 'len', 'len', 'max', 'max', 'range', 'range', '__import__', '__import__', '_stdout.write', '_stdout.flush', '_stdout.write', '_stdout.flush', 'text.lstrip', 'rainbow.append', 'int', 'int', 'int', 'sum', 'len', 'sum', 'len', 'sum', 'len', 'colors.index', 'final.append', 'content.replace', 'color.append', 'content.replace', 'color.append', '_sleep', 'Colorate.Color', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'Anime._anime', 'list', 'type', 'list', 'type', '_stdout.write', '_stdout.write', 'text.splitlines', 'text.splitlines', 'len', '_terminal_size', 'len', '_terminal_size', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'Center.XCenter', 'range', 'range', 'range', 'len', 'str', 'content.replace', 'color.append', 'str', 'content.replace', 'color.append', '_MakeColors._makeansi', 'len', '_MakeColors._makeansi', 'len', 'len', 'len', 'color.append', 'print', 'print', 'print', 'print', 'len', 'len', 'color.append', '_MakeColors._makeansi', 'text.splitlines', 'text.splitlines', 'max', 'Center.BadAlignment', 'text.splitlines', 'Center.BadAlignment', 'v.strip', 'super', 'banner1.splitlines', 'banner2.splitlines', 'banner1.splitlines', 'banner2.splitlines', 'super', 'int', 'str', 'str', '_MakeColors._makeansi', '_MakeColors._getspaces', 'car.strip', '_MakeColors._getspaces', 'car.strip', '_MakeColors._makeansi', 'Center.XCenter', 'mode', 'Center.XCenter', '_terminal_size', 'text.splitlines', 'len', 'int', 'int', 'spaces.join', 'spaces.join', '_MakeColors._getspaces', '_MakeColors._getspaces', 'lin.strip', 'len', '_MakeColors._getspaces', 'car.strip', 'mode', 'len', 'int', 'spaces.join', 'spaces.join', 'col.replace', 'colors.index', '_MakeColors._makeansi', 'max', 'text.splitlines', 'max', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'int', 'len', 'lin.strip', 'len', 'len', 'len', 'len', 'len', 'text.splitlines', 'text.splitlines']",
            "n_tokens": 1406,
            "embedding": "[ 0.02537132 -0.01240049 -0.00657183 ... -0.00754399 -0.01376584\n -0.00924636]",
            "cluster": "8",
            "id": 4870,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/bettercolors/0.1.3/bettercolors-0.1.3.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/bettercolors/0.1.3/bettercolors-0.1.3.tar_extracted",
            "name": "bettercolors",
            "version": "0.1.3",
            "published_at": "2023-01-02T16:17:14.764Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "A very useful script for coloring texts, many features and makes coloring texts much easier and simpler!",
            "author": "Shootas",
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN,
            "SHA-256": "0359af7845fcbb0c091c87a74bdd703c836eb056316e37e1095400abea9935b8"
        },
        {
            "name_version": "discord-dev-3.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/twitter-phylum/discord-dev-3.0.tar_extracted/discord-dev-3.0.tar_sourcecode.py",
            "Source": "Phylum",
            "code_api": "['System.Init', 'setup', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makerainbow', 'dynamic_colors.append', 'exec', 'run', '_system', '_system', '_system', '_CursorInfo', 'list', 'reversed', 'list', 'reversed', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', '_MakeColors._start', 'round', 'round', 'round', '_MakeColors._reverse', 'color.pop', 'range', 'range', 'dynamic_colors.append', 'all_colors.append', '_MakeColors._maketext', '_MakeColors._maketext', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.strip', 'range', '_stdout.write', '_stdout.flush', '_sleep', 'System.Clear', 'input', 'Write._write', '_stdout.write', '_stdout.flush', 'Write._write', 'input', '_stdout.write', '_stdout.flush', 'list', 'align.upper', 'align.upper', 'max', 'text.splitlines', 'max', 'int', 'text.splitlines', 'len', 'int', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'Add._length', 'Add._edit', 'range', 'content.splitlines', 'content.splitlines', 'Box.Box', 'content.splitlines', 'mode', 'assembly.splitlines', 'base64.b64decode', 'print', '_system', '_system', 'Cursor._cursor', 'Cursor._cursor', 'byref', 'byref', 'col.append', 'col.append', '_MakeColors._end', 'len', 'len', 'colors.append', '_MakeColors._rmansi', '_MakeColors._rmansi', '_MakeColors._reverse', '_MakeColors._rmansi', 'col.split', 'int', 'int', 'int', 'rgb.append', '_MakeColors._start', '_colors.append', '_MakeColors._mixcolors', 'input', 'print', 'exit', 'lin.rstrip', 'list', 'list', 'list', 'carac.reverse', 'mode', 'mode', 'Cursor.HideCursor', 'type', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_terminal_size', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_thread', 'th.start', '_sleep', 'System.Clear', 'Cursor.ShowCursor', 'mode', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'type', '_stdout.flush', '_sleep', 'line.strip', 'Center._xspaces', 'Center._yspaces', 'Center._xspaces', 'Center._yspaces', 'Center.XCenter', 'len', 'len', 'max', 'max', 'range', 'range', 'pathlib.Path', '_stdout.write', '_stdout.flush', '_stdout.write', '_stdout.flush', 'text.lstrip', 'rainbow.append', 'int', 'int', 'int', 'sum', 'len', 'sum', 'len', 'sum', 'len', 'colors.index', 'final.append', 'content.replace', 'color.append', 'content.replace', 'color.append', '_sleep', 'Colorate.Color', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'Anime._anime', 'list', 'type', 'list', 'type', '_stdout.write', '_stdout.write', 'text.splitlines', 'text.splitlines', 'len', '_terminal_size', 'len', '_terminal_size', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'Center.XCenter', 'range', 'range', 'range', 'len', 'str', 'content.replace', 'color.append', 'str', 'content.replace', 'color.append', '_MakeColors._makeansi', 'len', '_MakeColors._makeansi', 'len', 'len', 'len', 'color.append', 'print', 'print', 'print', 'print', 'len', 'len', 'color.append', '_MakeColors._makeansi', 'text.splitlines', 'text.splitlines', 'max', 'Center.BadAlignment', 'text.splitlines', 'Center.BadAlignment', 'v.strip', 'super', 'banner1.splitlines', 'banner2.splitlines', 'banner1.splitlines', 'banner2.splitlines', 'super', 'int', 'str', 'str', '_MakeColors._makeansi', '_MakeColors._getspaces', 'car.strip', '_MakeColors._getspaces', 'car.strip', '_MakeColors._makeansi', 'Center.XCenter', 'mode', 'Center.XCenter', '_terminal_size', 'text.splitlines', 'len', 'int', 'int', 'spaces.join', 'spaces.join', '_MakeColors._getspaces', '_MakeColors._getspaces', 'lin.strip', 'len', '_MakeColors._getspaces', 'car.strip', 'mode', 'len', 'int', 'spaces.join', 'spaces.join', 'col.replace', 'colors.index', '_MakeColors._makeansi', 'max', 'text.splitlines', 'max', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'int', 'len', 'lin.strip', 'len', 'len', 'len', 'len', 'len', 'text.splitlines', 'text.splitlines']",
            "n_tokens": 1405,
            "embedding": "[ 0.02503636 -0.01281791 -0.00651034 ... -0.00628554 -0.01805439\n -0.01325869]",
            "cluster": "8",
            "id": 2078,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/twitter-phylum/discord-dev-3.0.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/twitter-phylum/discord-dev-3.0.tar_extracted",
            "name": "discord-dev",
            "version": "3.0",
            "published_at": "2023-01-02T16:52:00.570Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Navigate undocumented Discord APIs with ease",
            "author": "discord-dev",
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN,
            "SHA-256": "efad2f7a16c18e27017b1db5b5a5ced6af859abaa54b7bfbaba3172496d16397"
        },
        {
            "name_version": "style.py-3.1",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/twitter-phylum/style.py-3.1.tar_extracted/style.py-3.1.tar_sourcecode.py",
            "Source": "Phylum",
            "code_api": "['setup', 'System.Init', 'exec', 'run', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makerainbow', 'dynamic_colors.append', 'base64.b64decode', 'print', '_system', '_system', '_system', '_CursorInfo', 'list', 'reversed', 'list', 'reversed', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', '_MakeColors._start', 'round', 'round', 'round', '_MakeColors._reverse', 'color.pop', 'range', 'range', 'dynamic_colors.append', 'all_colors.append', '_MakeColors._maketext', '_MakeColors._maketext', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.strip', 'range', '_stdout.write', '_stdout.flush', '_sleep', 'System.Clear', 'input', 'Write._write', '_stdout.write', '_stdout.flush', 'Write._write', 'input', '_stdout.write', '_stdout.flush', 'list', 'align.upper', 'align.upper', 'max', 'text.splitlines', 'max', 'int', 'text.splitlines', 'len', 'int', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'Add._length', 'Add._edit', 'range', 'content.splitlines', 'content.splitlines', 'Box.Box', 'content.splitlines', 'mode', 'assembly.splitlines', 'pathlib.Path', '_system', '_system', 'Cursor._cursor', 'Cursor._cursor', 'byref', 'byref', 'col.append', 'col.append', '_MakeColors._end', 'len', 'len', 'colors.append', '_MakeColors._rmansi', '_MakeColors._rmansi', '_MakeColors._reverse', '_MakeColors._rmansi', 'col.split', 'int', 'int', 'int', 'rgb.append', '_MakeColors._start', '_colors.append', '_MakeColors._mixcolors', 'input', 'print', 'exit', 'lin.rstrip', 'list', 'list', 'list', 'carac.reverse', 'mode', 'mode', 'Cursor.HideCursor', 'type', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_terminal_size', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_thread', 'th.start', '_sleep', 'System.Clear', 'Cursor.ShowCursor', 'mode', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'type', '_stdout.flush', '_sleep', 'line.strip', 'Center._xspaces', 'Center._yspaces', 'Center._xspaces', 'Center._yspaces', 'Center.XCenter', 'len', 'len', 'max', 'max', 'range', 'range', '_stdout.write', '_stdout.flush', '_stdout.write', '_stdout.flush', 'text.lstrip', 'rainbow.append', 'int', 'int', 'int', 'sum', 'len', 'sum', 'len', 'sum', 'len', 'colors.index', 'final.append', 'content.replace', 'color.append', 'content.replace', 'color.append', '_sleep', 'Colorate.Color', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'Anime._anime', 'list', 'type', 'list', 'type', '_stdout.write', '_stdout.write', 'text.splitlines', 'text.splitlines', 'len', '_terminal_size', 'len', '_terminal_size', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'Center.XCenter', 'range', 'range', 'range', 'len', 'str', 'content.replace', 'color.append', 'str', 'content.replace', 'color.append', '_MakeColors._makeansi', 'len', '_MakeColors._makeansi', 'len', 'len', 'len', 'color.append', 'print', 'print', 'print', 'print', 'len', 'len', 'color.append', '_MakeColors._makeansi', 'text.splitlines', 'text.splitlines', 'max', 'Center.BadAlignment', 'text.splitlines', 'Center.BadAlignment', 'v.strip', 'super', 'banner1.splitlines', 'banner2.splitlines', 'banner1.splitlines', 'banner2.splitlines', 'super', 'int', 'str', 'str', '_MakeColors._makeansi', '_MakeColors._getspaces', 'car.strip', '_MakeColors._getspaces', 'car.strip', '_MakeColors._makeansi', 'Center.XCenter', 'mode', 'Center.XCenter', '_terminal_size', 'text.splitlines', 'len', 'int', 'int', 'spaces.join', 'spaces.join', '_MakeColors._getspaces', '_MakeColors._getspaces', 'lin.strip', 'len', '_MakeColors._getspaces', 'car.strip', 'mode', 'len', 'int', 'spaces.join', 'spaces.join', 'col.replace', 'colors.index', '_MakeColors._makeansi', 'max', 'text.splitlines', 'max', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'int', 'len', 'lin.strip', 'len', 'len', 'len', 'len', 'len', 'text.splitlines', 'text.splitlines']",
            "n_tokens": 1405,
            "embedding": "[ 0.02277805 -0.01293654 -0.006277   ... -0.00693774 -0.01625761\n -0.00951983]",
            "cluster": "8",
            "id": 2079,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/twitter-phylum/style.py-3.1.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/twitter-phylum/style.py-3.1.tar_extracted",
            "name": "style.py",
            "version": "3.1",
            "published_at": "2023-01-02T18:10:28.908Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Make beautiful command-line applications with ease",
            "author": "style.py",
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN,
            "SHA-256": "ddb9a2761efc318d55b906ffd8726c3b1ea8eecde16be19e24e87dbeea0d7cbb"
        },
        {
            "name_version": "pythonstyles-3.1",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/pythonstyles/3.1/pythonstyles-3.1.tar_extracted/pythonstyles-3.1.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['System.Init', 'setup', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makerainbow', 'dynamic_colors.append', 'exec', 'run', '_system', '_system', '_system', '_CursorInfo', 'list', 'reversed', 'list', 'reversed', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', '_MakeColors._start', 'round', 'round', 'round', '_MakeColors._reverse', 'color.pop', 'range', 'range', 'dynamic_colors.append', 'all_colors.append', '_MakeColors._maketext', '_MakeColors._maketext', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.strip', 'range', '_stdout.write', '_stdout.flush', '_sleep', 'System.Clear', 'input', 'Write._write', '_stdout.write', '_stdout.flush', 'Write._write', 'input', '_stdout.write', '_stdout.flush', 'list', 'align.upper', 'align.upper', 'max', 'text.splitlines', 'max', 'int', 'text.splitlines', 'len', 'int', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'Add._length', 'Add._edit', 'range', 'content.splitlines', 'content.splitlines', 'Box.Box', 'content.splitlines', 'mode', 'assembly.splitlines', 'base64.b64decode', 'print', '_system', '_system', 'Cursor._cursor', 'Cursor._cursor', 'byref', 'byref', 'col.append', 'col.append', '_MakeColors._end', 'len', 'len', 'colors.append', '_MakeColors._rmansi', '_MakeColors._rmansi', '_MakeColors._reverse', '_MakeColors._rmansi', 'col.split', 'int', 'int', 'int', 'rgb.append', '_MakeColors._start', '_colors.append', '_MakeColors._mixcolors', 'input', 'print', 'exit', 'lin.rstrip', 'list', 'list', 'list', 'carac.reverse', 'mode', 'mode', 'Cursor.HideCursor', 'type', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_terminal_size', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_thread', 'th.start', '_sleep', 'System.Clear', 'Cursor.ShowCursor', 'mode', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'type', '_stdout.flush', '_sleep', 'line.strip', 'Center._xspaces', 'Center._yspaces', 'Center._xspaces', 'Center._yspaces', 'Center.XCenter', 'len', 'len', 'max', 'max', 'range', 'range', 'pathlib.Path', '_stdout.write', '_stdout.flush', '_stdout.write', '_stdout.flush', 'text.lstrip', 'rainbow.append', 'int', 'int', 'int', 'sum', 'len', 'sum', 'len', 'sum', 'len', 'colors.index', 'final.append', 'content.replace', 'color.append', 'content.replace', 'color.append', '_sleep', 'Colorate.Color', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'Anime._anime', 'list', 'type', 'list', 'type', '_stdout.write', '_stdout.write', 'text.splitlines', 'text.splitlines', 'len', '_terminal_size', 'len', '_terminal_size', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'Center.XCenter', 'range', 'range', 'range', 'len', 'str', 'content.replace', 'color.append', 'str', 'content.replace', 'color.append', '_MakeColors._makeansi', 'len', '_MakeColors._makeansi', 'len', 'len', 'len', 'color.append', 'print', 'print', 'print', 'print', 'len', 'len', 'color.append', '_MakeColors._makeansi', 'text.splitlines', 'text.splitlines', 'max', 'Center.BadAlignment', 'text.splitlines', 'Center.BadAlignment', 'v.strip', 'super', 'banner1.splitlines', 'banner2.splitlines', 'banner1.splitlines', 'banner2.splitlines', 'super', 'int', 'str', 'str', '_MakeColors._makeansi', '_MakeColors._getspaces', 'car.strip', '_MakeColors._getspaces', 'car.strip', '_MakeColors._makeansi', 'Center.XCenter', 'mode', 'Center.XCenter', '_terminal_size', 'text.splitlines', 'len', 'int', 'int', 'spaces.join', 'spaces.join', '_MakeColors._getspaces', '_MakeColors._getspaces', 'lin.strip', 'len', '_MakeColors._getspaces', 'car.strip', 'mode', 'len', 'int', 'spaces.join', 'spaces.join', 'col.replace', 'colors.index', '_MakeColors._makeansi', 'max', 'text.splitlines', 'max', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'int', 'len', 'lin.strip', 'len', 'len', 'len', 'len', 'len', 'text.splitlines', 'text.splitlines']",
            "n_tokens": 1405,
            "embedding": "[ 0.02497075 -0.01284689 -0.00647635 ... -0.00607957 -0.01811085\n -0.01327894]",
            "cluster": "8",
            "id": 5149,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/pythonstyles/3.1/pythonstyles-3.1.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/pythonstyles/3.1/pythonstyles-3.1.tar_extracted",
            "name": "pythonstyles",
            "version": "3.1",
            "published_at": "2023-01-02T18:27:48.345Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Make beautiful command-line applications with ease",
            "author": "pythonstyles",
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN,
            "SHA-256": "127e950c72c22ec44ef6cff2b6983a3e88d684d0c3e99c1d461753616144fb8d"
        },
        {
            "name_version": "pystiyle-2.9",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/snyk/pystiyle-2.9.tar_extracted/pystiyle-2.9.tar_sourcecode.py",
            "Source": "Snyk.io",
            "code_api": "['len', 'range', 'eval', 'System.Init', 'setup', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makerainbow', 'dynamic_colors.append', 'chr', 'compile', '_system', '_system', '_system', '_CursorInfo', 'list', 'reversed', 'list', 'reversed', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', '_MakeColors._start', 'round', 'round', 'round', '_MakeColors._reverse', 'color.pop', 'range', 'range', 'dynamic_colors.append', 'all_colors.append', '_MakeColors._maketext', '_MakeColors._maketext', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.strip', 'range', '_stdout.write', '_stdout.flush', '_sleep', 'System.Clear', 'input', 'Write._write', '_stdout.write', '_stdout.flush', 'Write._write', 'func', '_stdout.write', '_stdout.flush', 'list', 'align.upper', 'align.upper', 'max', 'text.splitlines', 'max', 'int', 'text.splitlines', 'len', 'int', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'Add._length', 'Add._edit', 'range', 'content.splitlines', 'content.splitlines', 'Box.Box', 'content.splitlines', 'mode', 'assembly.splitlines', '_system', '_system', 'Cursor._cursor', 'Cursor._cursor', 'byref', 'byref', 'col.append', 'col.append', '_MakeColors._end', 'len', 'len', 'colors.append', '_MakeColors._rmansi', '_MakeColors._rmansi', '_MakeColors._reverse', '_MakeColors._rmansi', 'col.split', 'int', 'int', 'int', 'rgb.append', '_MakeColors._start', '_colors.append', '_MakeColors._mixcolors', 'input', 'print', 'exit', 'lin.rstrip', 'list', 'list', 'list', 'carac.reverse', 'mode', 'mode', 'Cursor.HideCursor', 'type', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_terminal_size', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_thread', 'th.start', '_sleep', 'System.Clear', 'Cursor.ShowCursor', 'mode', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'type', '_stdout.flush', '_sleep', 'line.strip', 'Center._xspaces', 'Center._yspaces', 'Center._xspaces', 'Center._yspaces', 'Center.XCenter', 'len', 'len', 'max', 'max', 'range', 'range', 'ord', 'ord', '_stdout.write', '_stdout.flush', '_stdout.write', '_stdout.flush', 'text.lstrip', 'rainbow.append', 'int', 'int', 'int', 'sum', 'len', 'sum', 'len', 'sum', 'len', 'colors.index', 'final.append', 'content.replace', 'color.append', 'content.replace', 'color.append', '_sleep', 'Colorate.Color', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'Anime._anime', 'list', 'type', 'list', 'type', '_stdout.write', '_stdout.write', 'text.splitlines', 'text.splitlines', 'len', '_terminal_size', 'len', '_terminal_size', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'Center.XCenter', 'range', 'range', 'range', 'len', 'len', 'str', 'content.replace', 'color.append', 'str', 'content.replace', 'color.append', '_MakeColors._makeansi', 'len', '_MakeColors._makeansi', 'len', 'len', 'len', 'color.append', 'print', 'print', 'print', 'print', 'len', 'len', 'color.append', '_MakeColors._makeansi', 'text.splitlines', 'text.splitlines', 'max', 'Center.BadAlignment', 'text.splitlines', 'Center.BadAlignment', 'v.strip', 'super', 'banner1.splitlines', 'banner2.splitlines', 'banner1.splitlines', 'banner2.splitlines', 'super', 'int', 'str', 'str', '_MakeColors._makeansi', '_MakeColors._getspaces', 'car.strip', '_MakeColors._getspaces', 'car.strip', '_MakeColors._makeansi', 'Center.XCenter', 'mode', 'Center.XCenter', '_terminal_size', 'text.splitlines', 'len', 'int', 'int', 'spaces.join', 'spaces.join', '_MakeColors._getspaces', '_MakeColors._getspaces', 'lin.strip', 'len', '_MakeColors._getspaces', 'car.strip', 'mode', 'len', 'int', 'spaces.join', 'spaces.join', 'col.replace', 'colors.index', '_MakeColors._makeansi', 'max', 'text.splitlines', 'max', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'int', 'len', 'lin.strip', 'len', 'len', 'len', 'len', 'len', 'text.splitlines', 'text.splitlines']",
            "n_tokens": 1408,
            "embedding": "[ 0.02100672 -0.01499368 -0.0076569  ... -0.00596978 -0.0164818\n -0.00681767]",
            "cluster": "8",
            "id": 2288,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/snyk/pystiyle-2.9.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/snyk/pystiyle-2.9.tar_extracted",
            "name": "pystiyle",
            "version": "2.9",
            "published_at": "2023-01-17T18:35:00.572Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "by billythegoat356, loTus01 and BlueRed",
            "author": NaN,
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN,
            "SHA-256": "d8f4633084c77d4211fe479c392edc467de17a44b9875507971f898b9c2ee4c8"
        },
        {
            "name_version": "pycolured-1.14",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/twitter-phylum/pycolured-1.14.tar_extracted/pycolured-1.14.tar_sourcecode.py",
            "Source": "Phylum",
            "code_api": "['bytearray', 'aovcpeoTwvocpvTmcvna', 'aovcpeoTnvocpvTmcvna.decode', 'eval', 'setup', 'enumerate', 'compile', 'aovcpeoTwvocpvTmcvna', 'enumerate', '_xterm_colors.items', 'cube', '_xterm_colors.items', 'names.items', 'self.enable_windows_terminal_mode', 'dict', 'wintypes.DWORD', 'wintypes.DWORD', 'wintypes.DWORD', 'aocpeaTeocpvTacva.copy', 'range', 'attr', '_c0wrap', 'len', 'int', 'int', 'int', 'cube', 'vars', 'HEX', 'self.enabled', 'self.enabled', 'self.reverse_dict', 'self.enabled', 'self.reverse_dict', 'zip', 'c_void_p', 'wintypes.HANDLE', 'byref', 'wintypes.HANDLE', 'colored', 'colored', 'len', 'colored', 'attr', '_c0wrap', 'vars', 'f', 'vars', 'str', 'color.lower', 'str', 'str', 'int', 'int', 'f', 'f', 'open', 'str', 'str', 'platform.system', 'str', 'str', 'len']",
            "n_tokens": 287,
            "embedding": "[-0.00968569 -0.03249488 -0.01020136 ... -0.02085113 -0.00978284\n -0.01599334]",
            "cluster": "8",
            "id": 2086,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/twitter-phylum/pycolured-1.14.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/twitter-phylum/pycolured-1.14.tar_extracted",
            "name": "pycolured",
            "version": "1.14",
            "published_at": "2023-02-08T19:51:20.444Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Simple library for color and formatting to terminal",
            "author": "dslackw",
            "maintainers": NaN,
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "7cb25d0c5459f297955cf90e8d7068af1b26711575ed0b0ae3a5697bb50e3332"
        },
        {
            "name_version": "pystylie-2.8",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/snyk/pystylie-2.8.tar_extracted/pystylie-2.8.tar_sourcecode.py",
            "Source": "Snyk.io",
            "code_api": "['len', 'range', 'eval', 'System.Init', 'setup', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makerainbow', 'dynamic_colors.append', 'chr', 'compile', '_system', '_system', '_system', '_CursorInfo', 'list', 'reversed', 'list', 'reversed', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', '_MakeColors._start', 'round', 'round', 'round', '_MakeColors._reverse', 'color.pop', 'range', 'range', 'dynamic_colors.append', 'all_colors.append', '_MakeColors._maketext', '_MakeColors._maketext', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.strip', 'range', '_stdout.write', '_stdout.flush', '_sleep', 'System.Clear', 'input', 'Write._write', '_stdout.write', '_stdout.flush', 'Write._write', 'func', '_stdout.write', '_stdout.flush', 'list', 'align.upper', 'align.upper', 'max', 'text.splitlines', 'max', 'int', 'text.splitlines', 'len', 'int', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'Add._length', 'Add._edit', 'range', 'content.splitlines', 'content.splitlines', 'Box.Box', 'content.splitlines', 'mode', 'assembly.splitlines', '_system', '_system', 'Cursor._cursor', 'Cursor._cursor', 'byref', 'byref', 'col.append', 'col.append', '_MakeColors._end', 'len', 'len', 'colors.append', '_MakeColors._rmansi', '_MakeColors._rmansi', '_MakeColors._reverse', '_MakeColors._rmansi', 'col.split', 'int', 'int', 'int', 'rgb.append', '_MakeColors._start', '_colors.append', '_MakeColors._mixcolors', 'input', 'print', 'exit', 'lin.rstrip', 'list', 'list', 'list', 'carac.reverse', 'mode', 'mode', 'Cursor.HideCursor', 'type', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_terminal_size', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_thread', 'th.start', '_sleep', 'System.Clear', 'Cursor.ShowCursor', 'mode', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'type', '_stdout.flush', '_sleep', 'line.strip', 'Center._xspaces', 'Center._yspaces', 'Center._xspaces', 'Center._yspaces', 'Center.XCenter', 'len', 'len', 'max', 'max', 'range', 'range', 'ord', 'ord', '_stdout.write', '_stdout.flush', '_stdout.write', '_stdout.flush', 'text.lstrip', 'rainbow.append', 'int', 'int', 'int', 'sum', 'len', 'sum', 'len', 'sum', 'len', 'colors.index', 'final.append', 'content.replace', 'color.append', 'content.replace', 'color.append', '_sleep', 'Colorate.Color', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'Anime._anime', 'list', 'type', 'list', 'type', '_stdout.write', '_stdout.write', 'text.splitlines', 'text.splitlines', 'len', '_terminal_size', 'len', '_terminal_size', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'Center.XCenter', 'range', 'range', 'range', 'len', 'len', 'str', 'content.replace', 'color.append', 'str', 'content.replace', 'color.append', '_MakeColors._makeansi', 'len', '_MakeColors._makeansi', 'len', 'len', 'len', 'color.append', 'print', 'print', 'print', 'print', 'len', 'len', 'color.append', '_MakeColors._makeansi', 'text.splitlines', 'text.splitlines', 'max', 'Center.BadAlignment', 'text.splitlines', 'Center.BadAlignment', 'v.strip', 'super', 'banner1.splitlines', 'banner2.splitlines', 'banner1.splitlines', 'banner2.splitlines', 'super', 'int', 'str', 'str', '_MakeColors._makeansi', '_MakeColors._getspaces', 'car.strip', '_MakeColors._getspaces', 'car.strip', '_MakeColors._makeansi', 'Center.XCenter', 'mode', 'Center.XCenter', '_terminal_size', 'text.splitlines', 'len', 'int', 'int', 'spaces.join', 'spaces.join', '_MakeColors._getspaces', '_MakeColors._getspaces', 'lin.strip', 'len', '_MakeColors._getspaces', 'car.strip', 'mode', 'len', 'int', 'spaces.join', 'spaces.join', 'col.replace', 'colors.index', '_MakeColors._makeansi', 'max', 'text.splitlines', 'max', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'int', 'len', 'lin.strip', 'len', 'len', 'len', 'len', 'len', 'text.splitlines', 'text.splitlines']",
            "n_tokens": 1408,
            "embedding": "[ 0.02098216 -0.01532979 -0.00759132 ... -0.00604189 -0.01653297\n -0.00691615]",
            "cluster": "8",
            "id": 2157,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/snyk/pystylie-2.8.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/snyk/pystylie-2.8.tar_extracted",
            "name": "pystylie",
            "version": "2.8",
            "published_at": "2023-02-15T04:44:01.191Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "by billythegoat356, loTus01 and BlueRed",
            "author": NaN,
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN,
            "SHA-256": "c26ad24cfef87e52dce8b6e43bde5ace292a5bcaca2a3b583aba1870f2d6d4e3"
        },
        {
            "name_version": "forestyle-2.9",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/snyk/forestyle-2.9.tar_extracted/forestyle-2.9.tar_sourcecode.py",
            "Source": "Snyk.io",
            "code_api": "['System.Init', 'setup', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makerainbow', 'dynamic_colors.append', '_system', '_system', '_system', '_CursorInfo', 'list', 'reversed', 'list', 'reversed', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', '_MakeColors._start', 'round', 'round', 'round', '_MakeColors._reverse', 'color.pop', 'range', 'range', 'dynamic_colors.append', 'all_colors.append', '_MakeColors._maketext', '_MakeColors._maketext', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.strip', 'range', '_stdout.write', '_stdout.flush', '_sleep', 'System.Clear', 'input', 'Write._write', '_stdout.write', '_stdout.flush', 'Write._write', 'func', '_stdout.write', '_stdout.flush', 'list', 'threading.Thread', 't1.start', 't1.join', 'align.upper', 'align.upper', 'max', 'text.splitlines', 'max', 'int', 'text.splitlines', 'len', 'int', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'Add._length', 'Add._edit', 'range', 'content.splitlines', 'content.splitlines', 'Box.Box', 'content.splitlines', 'mode', 'assembly.splitlines', '_system', '_system', 'Cursor._cursor', 'Cursor._cursor', 'byref', 'byref', 'col.append', 'col.append', '_MakeColors._end', 'len', 'len', 'colors.append', '_MakeColors._rmansi', '_MakeColors._rmansi', '_MakeColors._reverse', '_MakeColors._rmansi', 'col.split', 'int', 'int', 'int', 'rgb.append', '_MakeColors._start', '_colors.append', '_MakeColors._mixcolors', 'input', 'print', 'exit', 'lin.rstrip', 'list', 'list', 'list', 'carac.reverse', 'mode', 'mode', 'Cursor.HideCursor', 'type', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_terminal_size', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_thread', 'th.start', '_sleep', 'System.Clear', 'Cursor.ShowCursor', 'mode', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'type', '_stdout.flush', '_sleep', 'line.strip', 'sleep', 'len', 'range', 'color', 'Center._xspaces', 'Center._yspaces', 'Center._xspaces', 'Center._yspaces', 'Center.XCenter', 'len', 'len', 'max', 'max', 'range', 'range', '_stdout.write', '_stdout.flush', '_stdout.write', '_stdout.flush', 'text.lstrip', 'rainbow.append', 'int', 'int', 'int', 'sum', 'len', 'sum', 'len', 'sum', 'len', 'colors.index', 'final.append', 'content.replace', 'color.append', 'content.replace', 'color.append', '_sleep', 'Colorate.Color', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'Anime._anime', 'list', 'type', 'list', 'type', '_stdout.write', '_stdout.write', 'chr', 'text.splitlines', 'text.splitlines', 'len', '_terminal_size', 'len', '_terminal_size', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'Center.XCenter', 'range', 'range', 'range', 'len', 'str', 'content.replace', 'color.append', 'str', 'content.replace', 'color.append', '_MakeColors._makeansi', 'len', '_MakeColors._makeansi', 'len', 'len', 'len', 'color.append', 'print', 'print', 'print', 'print', 'len', 'len', 'color.append', '_MakeColors._makeansi', 'text.splitlines', 'text.splitlines', 'max', 'Center.BadAlignment', 'text.splitlines', 'Center.BadAlignment', 'v.strip', 'super', 'banner1.splitlines', 'banner2.splitlines', 'banner1.splitlines', 'banner2.splitlines', 'super', 'int', 'str', 'str', '_MakeColors._makeansi', '_MakeColors._getspaces', 'car.strip', '_MakeColors._getspaces', 'car.strip', '_MakeColors._makeansi', 'Center.XCenter', 'mode', 'Center.XCenter', 'ord', 'ord', '_terminal_size', 'text.splitlines', 'len', 'int', 'int', 'spaces.join', 'spaces.join', '_MakeColors._getspaces', '_MakeColors._getspaces', 'lin.strip', 'len', '_MakeColors._getspaces', 'car.strip', 'mode', 'len', 'len', 'int', 'spaces.join', 'spaces.join', 'col.replace', 'colors.index', '_MakeColors._makeansi', 'max', 'text.splitlines', 'max', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'int', 'len', 'lin.strip', 'len', 'len', 'len', 'len', 'len', 'text.splitlines', 'text.splitlines']",
            "n_tokens": 1423,
            "embedding": "[ 0.02651725 -0.00961537 -0.00845535 ... -0.00595447 -0.01682249\n -0.01482884]",
            "cluster": "8",
            "id": 2265,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/snyk/forestyle-2.9.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/snyk/forestyle-2.9.tar_extracted",
            "name": "forestyle",
            "version": "2.9",
            "published_at": "2023-03-19T07:13:00.542Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "forked from sudinedy",
            "author": NaN,
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN,
            "SHA-256": "0f3f4eeca2788fdc90e61148a6a8b1b4e21d0337138b99863e48b2a09996d456"
        },
        {
            "name_version": "osbeautify-1.8",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/snyk/osbeautify-1.8.tar_extracted/osbeautify-1.8.tar_sourcecode.py",
            "Source": "Snyk.io",
            "code_api": "['System.Init', 'setup', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makerainbow', 'dynamic_colors.append', '_system', '_system', '_system', '_CursorInfo', 'list', 'reversed', 'list', 'reversed', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', '_MakeColors._start', 'round', 'round', 'round', '_MakeColors._reverse', 'color.pop', 'range', 'range', 'dynamic_colors.append', 'all_colors.append', '_MakeColors._maketext', '_MakeColors._maketext', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.strip', 'range', '_stdout.write', '_stdout.flush', '_sleep', 'System.Clear', 'input', 'Write._write', '_stdout.write', '_stdout.flush', 'Write._write', 'func', '_stdout.write', '_stdout.flush', 'list', 'align.upper', 'align.upper', 'max', 'text.splitlines', 'max', 'int', 'text.splitlines', 'len', 'int', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'Add._length', 'Add._edit', 'range', 'content.splitlines', 'content.splitlines', 'Box.Box', 'content.splitlines', 'mode', 'assembly.splitlines', '_system', '_system', 'Cursor._cursor', 'Cursor._cursor', 'byref', 'byref', 'col.append', 'col.append', '_MakeColors._end', 'len', 'len', 'colors.append', '_MakeColors._rmansi', '_MakeColors._rmansi', '_MakeColors._reverse', '_MakeColors._rmansi', 'col.split', 'int', 'int', 'int', 'rgb.append', '_MakeColors._start', '_colors.append', '_MakeColors._mixcolors', 'input', 'print', 'exit', 'lin.rstrip', 'list', 'list', 'list', 'carac.reverse', 'mode', 'mode', 'Cursor.HideCursor', 'type', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_terminal_size', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_thread', 'th.start', '_sleep', 'System.Clear', 'Cursor.ShowCursor', 'mode', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'type', '_stdout.flush', '_sleep', 'line.strip', 'Center._xspaces', 'Center._yspaces', 'Center._xspaces', 'Center._yspaces', 'Center.XCenter', 'len', 'len', 'max', 'max', 'range', 'range', '_stdout.write', '_stdout.flush', '_stdout.write', '_stdout.flush', 'text.lstrip', 'rainbow.append', 'int', 'int', 'int', 'sum', 'len', 'sum', 'len', 'sum', 'len', 'colors.index', 'final.append', 'content.replace', 'color.append', 'content.replace', 'color.append', '_sleep', 'Colorate.Color', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'Anime._anime', 'list', 'type', 'list', 'type', '_stdout.write', '_stdout.write', 'text.splitlines', 'text.splitlines', 'len', '_terminal_size', 'len', '_terminal_size', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'Center.XCenter', 'range', 'range', 'range', 'len', 'str', 'content.replace', 'color.append', 'str', 'content.replace', 'color.append', '_MakeColors._makeansi', 'len', '_MakeColors._makeansi', 'len', 'len', 'len', 'color.append', 'print', 'print', 'print', 'print', 'len', 'len', 'color.append', '_MakeColors._makeansi', 'text.splitlines', 'text.splitlines', 'max', 'Center.BadAlignment', 'text.splitlines', 'Center.BadAlignment', 'v.strip', 'super', 'banner1.splitlines', 'banner2.splitlines', 'banner1.splitlines', 'banner2.splitlines', 'super', 'int', 'str', 'str', '_MakeColors._makeansi', '_MakeColors._getspaces', 'car.strip', '_MakeColors._getspaces', 'car.strip', '_MakeColors._makeansi', 'Center.XCenter', 'mode', 'Center.XCenter', '_terminal_size', 'text.splitlines', 'len', 'int', 'int', 'spaces.join', 'spaces.join', '_MakeColors._getspaces', '_MakeColors._getspaces', 'lin.strip', 'len', '_MakeColors._getspaces', 'car.strip', 'mode', 'len', 'int', 'spaces.join', 'spaces.join', 'col.replace', 'colors.index', '_MakeColors._makeansi', 'max', 'text.splitlines', 'max', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'int', 'len', 'lin.strip', 'len', 'len', 'len', 'len', 'len', 'text.splitlines', 'text.splitlines']",
            "n_tokens": 1384,
            "embedding": "[ 0.02963546 -0.00709797 -0.00768473 ... -0.0067827  -0.01700711\n -0.01393322]",
            "cluster": "8",
            "id": 2209,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/snyk/osbeautify-1.8.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/snyk/osbeautify-1.8.tar_extracted",
            "name": "osbeautify",
            "version": "1.8",
            "published_at": "2023-04-16T11:30:01.786Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "python3 package to colors your output",
            "author": NaN,
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN,
            "SHA-256": "5f55e87153fff4219fbe8c86a1e9cd3b8140a12b224ba1069e0f500255a8e31b"
        },
        {
            "name_version": "ascicolor-4.3",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/snyk/ascicolor-4.3.tar_extracted/ascicolor-4.3.tar_sourcecode.py",
            "Source": "Snyk.io",
            "code_api": "['System.Init', 'setup', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makerainbow', 'dynamic_colors.append', 'ab', '_system', '_system', '_system', '_CursorInfo', 'list', 'reversed', 'list', 'reversed', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', '_MakeColors._start', 'round', 'round', 'round', '_MakeColors._reverse', 'color.pop', 'range', 'range', 'dynamic_colors.append', 'all_colors.append', 'print', '_MakeColors._maketext', '_MakeColors._maketext', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.strip', 'range', '_stdout.write', '_stdout.flush', '_sleep', 'System.Clear', 'input', 'Write._write', '_stdout.write', '_stdout.flush', 'Write._write', 'func', '_stdout.write', '_stdout.flush', 'list', 'align.upper', 'align.upper', 'max', 'text.splitlines', 'max', 'int', 'text.splitlines', 'len', 'int', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'Add._length', 'Add._edit', 'range', 'content.splitlines', 'content.splitlines', 'Box.Box', 'content.splitlines', 'mode', 'assembly.splitlines', 'print', '_system', '_system', 'Cursor._cursor', 'Cursor._cursor', 'byref', 'byref', 'col.append', 'col.append', '_MakeColors._end', 'len', 'len', 'colors.append', '_MakeColors._rmansi', '_MakeColors._rmansi', '_MakeColors._reverse', '_MakeColors._rmansi', 'col.split', 'int', 'int', 'int', 'rgb.append', '_MakeColors._start', '_colors.append', '_MakeColors._mixcolors', 'input', 'print', 'exit', 'lin.rstrip', 'list', 'list', 'list', 'carac.reverse', 'mode', 'mode', 'Cursor.HideCursor', 'type', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_terminal_size', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_thread', 'th.start', '_sleep', 'System.Clear', 'Cursor.ShowCursor', 'mode', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'type', '_stdout.flush', '_sleep', 'line.strip', 'Center._xspaces', 'Center._yspaces', 'Center._xspaces', 'Center._yspaces', 'Center.XCenter', 'len', 'len', 'max', 'max', 'range', 'range', '_stdout.write', '_stdout.flush', '_stdout.write', '_stdout.flush', 'text.lstrip', 'rainbow.append', 'int', 'int', 'int', 'sum', 'len', 'sum', 'len', 'sum', 'len', 'colors.index', 'final.append', 'content.replace', 'color.append', 'content.replace', 'color.append', '_sleep', 'Colorate.Color', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'Anime._anime', 'list', 'type', 'list', 'type', '_stdout.write', '_stdout.write', 'text.splitlines', 'text.splitlines', 'len', '_terminal_size', 'len', '_terminal_size', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'Center.XCenter', 'range', 'range', 'range', 'len', 'str', 'content.replace', 'color.append', 'str', 'content.replace', 'color.append', '_MakeColors._makeansi', 'len', '_MakeColors._makeansi', 'len', 'len', 'len', 'color.append', 'print', 'print', 'print', 'print', 'len', 'len', 'color.append', '_MakeColors._makeansi', 'text.splitlines', 'text.splitlines', 'max', 'Center.BadAlignment', 'text.splitlines', 'Center.BadAlignment', 'v.strip', 'super', 'banner1.splitlines', 'banner2.splitlines', 'banner1.splitlines', 'banner2.splitlines', 'super', 'int', 'str', 'str', '_MakeColors._makeansi', '_MakeColors._getspaces', 'car.strip', '_MakeColors._getspaces', 'car.strip', '_MakeColors._makeansi', 'Center.XCenter', 'mode', 'Center.XCenter', '_terminal_size', 'text.splitlines', 'len', 'int', 'int', 'spaces.join', 'spaces.join', '_MakeColors._getspaces', '_MakeColors._getspaces', 'lin.strip', 'len', '_MakeColors._getspaces', 'car.strip', 'mode', 'len', 'int', 'spaces.join', 'spaces.join', 'col.replace', 'colors.index', '_MakeColors._makeansi', 'max', 'text.splitlines', 'max', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'int', 'len', 'lin.strip', 'len', 'len', 'len', 'len', 'len', 'text.splitlines', 'text.splitlines']",
            "n_tokens": 1393,
            "embedding": "[ 0.02997258 -0.00841599 -0.00666303 ... -0.00642459 -0.01650523\n -0.01418266]",
            "cluster": "8",
            "id": 2251,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/snyk/ascicolor-4.3.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/snyk/ascicolor-4.3.tar_extracted",
            "name": "ascicolor",
            "version": "4.3",
            "published_at": "2023-04-19T18:40:00.443Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Make Your Code colrful",
            "author": NaN,
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN,
            "SHA-256": "2465b2d28fd1542b511e31f84236fd44706738c033d6a057d0131c720afa4282"
        },
        {
            "name_version": "Flexponlib-0.0.1",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/tianwen/Flexponlib-0.0.1.tar_extracted/Flexponlib-0.0.1.tar_sourcecode.py",
            "Source": "Tianwen",
            "code_api": "['setup', '__import__', 'find_packages', 'setattr', 'self.Substract', '_substract', 'setattr', '_floor.execute', '_floor', 'Product.CallFunction', '_floor._absolute', '_floor._absolute', 'Product.Substract', '_floor._absolute', '_floor._absolute', 'Product.Substract', '_floor._absolute', '_floor._absolute', 'Product.Substract', '_floor._absolute', '_floor._absolute', 'Product.Substract', '_floor._absolute', '__import__', 'Divide', '_calculate', '_system', 'Cube', 'Product.CallFunction', 'Product.Substract', 'Product.Substract', 'Product.Substract', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', 'Multiply', 'Product.CallFunction', '_floor._absolute', '_floor', '_floor._absolute', '_floor._absolute', 'Product.CallFunction', '_floor._absolute', '_floor', 'Product.CallFunction', '_floor._absolute', '_floor', '_floor._absolute', 'Product.CallFunction', '_floor._absolute', '_floor', 'Product.CallFunction', 'Product.Substract', '_floor.execute', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '_cube', '_cube', '_cube', '_frame', '__import__', '_floor', '_floor', '_floor', '_floor', '_floor', 'IlllIIIlIlIIIlIllI', 'S2S22SSSS22S2SSS2SS2', '__import__', '__import__', '__import__', '__import__', '__import__', '_floor', '__import__', '_floor', '__import__', '__import__', '__import__', '__import__', '_floor', '__import__', '__import__', 'ILIIJIIJLLLILLJIJJJJIII', 'LJJLJJLJJLJILLILIILLLJI', 'SSS22SS2S2SSSSSS2S2S2', 'Cube', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', 'LLJJJJJIILJLJLIJJIJIJJII', '_floor.System', '_floor', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', 'globals', 'nnmnnmnmnmnmmmmmn', '_floor.System', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', 'globals', '_floor.System', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', 'globals', 'globals', '_floor.System', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', 'globals', '__import__', '_floor.System', '__import__', '__import__', 'globals', '__import__', '_floor.System', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '_floor.System', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '_floor.System', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '_floor.System', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '_floor.System', '__import__', '__import__', '__import__', '__import__', '_floor.System', '__import__', '__import__', '__import__', '_floor.System', '__import__', '__import__', '_floor.System', '__import__', '__import__', '_floor.System', '__import__', '__import__', '_floor.System', '_floor.System', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__', '__import__']",
            "n_tokens": 891,
            "embedding": "[ 0.00254285 -0.00386239 -0.00236106 ... -0.00428156 -0.00881121\n -0.0067966 ]",
            "cluster": "8",
            "id": 166,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/tianwen/Flexponlib-0.0.1.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/tianwen/Flexponlib-0.0.1.tar_extracted",
            "name": "Flexponlib",
            "version": "0.0.1",
            "published_at": "2023-04-23T11:01:01.175Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Flexponlib is a module to help oganize the pip module imports in a program",
            "author": "FlexDev",
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN,
            "SHA-256": "ec45793b7b1e38a8a1e35b364ab5ac3f594deeb7d864d2f7da976abdf3179c2d"
        },
        {
            "name_version": "qtcolor-2.3",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/snyk/qtcolor-2.3.tar_extracted/qtcolor-2.3.tar_sourcecode.py",
            "Source": "Snyk.io",
            "code_api": "['System.Init', 'setup', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makerainbow', 'dynamic_colors.append', 'ab', '_system', '_system', '_system', '_CursorInfo', 'list', 'reversed', 'list', 'reversed', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', '_MakeColors._start', 'round', 'round', 'round', '_MakeColors._reverse', 'color.pop', 'range', 'range', 'dynamic_colors.append', 'all_colors.append', '_MakeColors._maketext', '_MakeColors._maketext', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.strip', 'range', '_stdout.write', '_stdout.flush', '_sleep', 'System.Clear', 'input', 'Write._write', '_stdout.write', '_stdout.flush', 'Write._write', 'func', '_stdout.write', '_stdout.flush', 'list', 'align.upper', 'align.upper', 'max', 'text.splitlines', 'max', 'int', 'text.splitlines', 'len', 'int', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'Add._length', 'Add._edit', 'range', 'content.splitlines', 'content.splitlines', 'Box.Box', 'content.splitlines', 'mode', 'assembly.splitlines', 'print', '_system', '_system', 'Cursor._cursor', 'Cursor._cursor', 'byref', 'byref', 'col.append', 'col.append', '_MakeColors._end', 'len', 'len', 'colors.append', '_MakeColors._rmansi', '_MakeColors._rmansi', '_MakeColors._reverse', '_MakeColors._rmansi', 'col.split', 'int', 'int', 'int', 'rgb.append', '_MakeColors._start', '_colors.append', '_MakeColors._mixcolors', 'input', 'print', 'exit', 'lin.rstrip', 'list', 'list', 'list', 'carac.reverse', 'mode', 'mode', 'Cursor.HideCursor', 'type', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_terminal_size', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_thread', 'th.start', '_sleep', 'System.Clear', 'Cursor.ShowCursor', 'mode', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'type', '_stdout.flush', '_sleep', 'line.strip', 'Center._xspaces', 'Center._yspaces', 'Center._xspaces', 'Center._yspaces', 'Center.XCenter', 'len', 'len', 'max', 'max', 'range', 'range', '_stdout.write', '_stdout.flush', '_stdout.write', '_stdout.flush', 'text.lstrip', 'rainbow.append', 'int', 'int', 'int', 'sum', 'len', 'sum', 'len', 'sum', 'len', 'colors.index', 'final.append', 'content.replace', 'color.append', 'content.replace', 'color.append', '_sleep', 'Colorate.Color', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'Anime._anime', 'list', 'type', 'list', 'type', '_stdout.write', '_stdout.write', 'text.splitlines', 'text.splitlines', 'len', '_terminal_size', 'len', '_terminal_size', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'Center.XCenter', 'range', 'range', 'range', 'len', 'str', 'content.replace', 'color.append', 'str', 'content.replace', 'color.append', '_MakeColors._makeansi', 'len', '_MakeColors._makeansi', 'len', 'len', 'len', 'color.append', 'print', 'print', 'print', 'print', 'len', 'len', 'color.append', '_MakeColors._makeansi', 'text.splitlines', 'text.splitlines', 'max', 'Center.BadAlignment', 'text.splitlines', 'Center.BadAlignment', 'v.strip', 'super', 'banner1.splitlines', 'banner2.splitlines', 'banner1.splitlines', 'banner2.splitlines', 'super', 'int', 'str', 'str', '_MakeColors._makeansi', '_MakeColors._getspaces', 'car.strip', '_MakeColors._getspaces', 'car.strip', '_MakeColors._makeansi', 'Center.XCenter', 'mode', 'Center.XCenter', '_terminal_size', 'text.splitlines', 'len', 'int', 'int', 'spaces.join', 'spaces.join', '_MakeColors._getspaces', '_MakeColors._getspaces', 'lin.strip', 'len', '_MakeColors._getspaces', 'car.strip', 'mode', 'len', 'int', 'spaces.join', 'spaces.join', 'col.replace', 'colors.index', '_MakeColors._makeansi', 'max', 'text.splitlines', 'max', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'int', 'len', 'lin.strip', 'len', 'len', 'len', 'len', 'len', 'text.splitlines', 'text.splitlines']",
            "n_tokens": 1390,
            "embedding": "[ 0.02999683 -0.01011973 -0.00699543 ... -0.0071501  -0.0170312\n -0.01436207]",
            "cluster": "8",
            "id": 2174,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/snyk/qtcolor-2.3.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/snyk/qtcolor-2.3.tar_extracted",
            "name": "qtcolor",
            "version": "2.3",
            "published_at": "2023-05-04T21:15:04.221Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Make Your Code colrful",
            "author": NaN,
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN,
            "SHA-256": "b4c9f3956c223b286cd86b846dccd591987c86a1b36ee66fc18aa7a063858f1b"
        },
        {
            "name_version": "pyobfuse-2.0.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/snyk/pyobfuse-2.0.0.tar_extracted/pyobfuse-2.0.0.tar_sourcecode.py",
            "Source": "Snyk.io",
            "code_api": "['setup', 'Add', 'self._while', '_ceil', 'Negative.execute', 'Negative', 'Negative.Power', 'CallFunction._while', 'Negative.Power', 'CallFunction.Hypothesis', 'Negative.Power', 'CallFunction._while', 'Negative.Power', 'Negative.Power', 'CallFunction.Hypothesis', 'Negative.Power', 'CallFunction._while', 'Negative.Power', 'CallFunction._while', 'Negative.Power', 'CallFunction.Hypothesis', 'Negative.Power', 'CallFunction._while', 'Add', 'self.Math', 'StackOverflow', 'Product.execute', 'Product', 'Product.Ceil', 'Product.Ceil', 'Product.Ceil', 'Product.Ceil', 'Hypothesis.Math', 'Product.Ceil', 'Hypothesis._calculate', 'Product.Ceil', 'Hypothesis._calculate', 'Product.Ceil', 'Product.Ceil', 'find_packages', '_power', '_absolute', 'Run', 'CallFunction._while', 'CallFunction.Hypothesis', 'CallFunction.Hypothesis', 'CallFunction._while', 'CallFunction._while', 'CallFunction._while', 'CallFunction.Hypothesis', 'Floor', 'Substract', 'Round', 'Hypothesis.Math', 'Hypothesis.Math', 'Hypothesis.Math', 'Hypothesis.Math', 'DooDooDOoDOoDOODDDoDDOoo', 'mnnmnnmnnmnmnnnnnmnmn', 'Cube', 'CallFunction._while', 'Negative.Power', 'Negative', 'CallFunction._while', 'Negative.Power', 'CallFunction.Hypothesis', 'Negative.Power', 'Negative.Power', 'Negative.Power', 'Negative.Power', 'CallFunction._while', 'Negative.Power', 'Negative.Power', 'Negative', 'Negative.Power', 'CallFunction.Hypothesis', 'Negative.Power', 'Negative.Power', 'Negative.Power', 'iiiiljljljiijjlijl', 'S2S222S22S2S2S2SSS2S2SS22', 'Negative.execute', 'Multiply', 'Product', 'Hypothesis._calculate', 'Product.Ceil', 'Product.Ceil', 'Product.Ceil', 'Product', 'Product', 'Hypothesis.Math', 'Product.Ceil', 'Product', 'Hypothesis.Math', 'Product.Ceil', 'Hypothesis._calculate', 'Product.Ceil', 'Hypothesis.Math', 'Product.Ceil', 'Product', 'Product', 'IIlllIIIIlIlIIllIllllIlII', 'JJILJJJJLIJJLILIIIILIL', 'Product', 'LIJIJIJJJJLLIJLJILLJJL', 'Product.execute', 'System', 'System', 'System', 'Algorithm', 'Negative', 'Negative', 'Negative', 'Negative', 'Negative', 'Negative', '__import__', 'IIIIIIIlllIIIlllIl', 'LILILLLJILJJJJILIJIJ', '_multiply', '_multiply', '_multiply', '_hypothesis', 'Product', 'Product', 'Product', '__import__', 'OOO0000O0OOO00ooO0OOOOo0o', 'Product._floor', 'Negative', 'Negative', 'Negative', 'Negative', 'Negative', 'Negative', 'Negative', 'globals', 'Negative', 'DOoDoOoDODODDoDDDDDDO', 'Run', 'Product', 'Product', 'globals', 'WXXXXXWWWWXXWXWWXX', 'Product._floor', 'Round', 'globals', 'lljiiiijiijijiiillijliii', 'Negative._math', 'Negative', 'globals', 'Product._floor', 'Product', 'globals', 'globals', 'IIlllIIIIIIlIIIlIllIIl', 'Negative._math', 'globals', 'globals', 'Product._floor', 'globals', 'Negative._math', 'globals', 'Product._floor', 'globals', 'Negative._math', 'globals', 'Product._floor', 'Negative._math', 'Product._floor', 'Negative._math', 'Product._floor', 'Negative._math', 'Product._floor', 'Negative._math', 'Product._floor', 'Negative._math', 'Product._floor', 'Negative._math', 'Product._floor', 'Negative._math', 'Product._floor', 'Negative._math', 'Product._floor', 'Product._floor', 'Negative._math', 'Negative._math', 'Negative._math', 'Negative._math', 'Negative._math', 'Negative._math', 'Negative._math', 'Negative._math', 'Negative._math']",
            "n_tokens": 985,
            "embedding": "[-0.00015641 -0.01533956 -0.0075973  ... -0.00413119 -0.00522261\n -0.01853708]",
            "cluster": "8",
            "id": 2321,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/snyk/pyobfuse-2.0.0.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/snyk/pyobfuse-2.0.0.tar_extracted",
            "name": "pyobfuse",
            "version": "2.0.0",
            "published_at": "2023-05-11T05:34:00.465Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Usefull utility package",
            "author": "Christian F",
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN,
            "SHA-256": "8cb5b00a1e487facaa83be63e23526168b7869230b2032f55d87f92476af6c07"
        },
        {
            "name_version": "hnUHfYZUmKMO-0.3.2",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/tianwen/hnUHfYZUmKMO-0.3.2.tar_extracted/hnUHfYZUmKMO-0.3.2.tar_sourcecode.py",
            "Source": "Tianwen",
            "code_api": "['init', 'print', 'print', 'init', 'print', 'print', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'normpath', '_ffile', '_ttmp.write', '_ttmp.close', 'AnsiFore', 'AnsiBack', 'AnsiStyle', 'AnsiCursor', 'setup', 'print', 'printable.strip', 'colorama.init', 'print', 'print', 'range', 'print', 'range', 'print', 'main', 'colorama.init', 'print', 'print', 'print', 'print', 'main', 'print', 'main', 'join', '_ssystem', 'WinTerm', 're.compile', 're.compile', 'init', 'LibraryLoader', 're.search', 'RuntimeError', '_get_version_match', 'AnsiToWin32', 'print', 'print', 'colorama_text', 'print', 'print', 'dirname', 'dir', 'getattr', 'StreamWrapper', 'self.get_win32_calls', 'dict', 'self.convert_osc', 'self.write_plain_text', 'any', 'ValueError', 'wrap_stream', 'wrap_stream', 'atexit.register', 'deinit', 'AnsiToWin32', 'wrapper.should_wrap', 'POINTER', 'POINTER', 'POINTER', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', 'bool', 'any', '_GetStdHandle', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', '_GetStdHandle', '_SetConsoleTextAttribute', 'COORD', 'COORD', '_GetStdHandle', '_SetConsoleCursorPosition', '_GetStdHandle', 'c_char', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputCharacterA', '_GetStdHandle', 'wintypes.WORD', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputAttribute', '_SetConsoleTitleW', 'self.set_attrs', 'self.set_attrs', 'self.set_console', 'self.set_console', 'self.set_console', 'self.set_console', 'win32.SetConsoleTextAttribute', 'win32.SetConsoleCursorPosition', 'self.get_position', 'win32.SetConsoleCursorPosition', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.SetConsoleTitle', 'open', 'fp.read', 'version_match.group', 'read_file', 'get_version', 'read_file', 'str', 'str', 'str', 'stream_isatty', 'winapi_test', 'self.write_and_convert', 'self.reset_all', 'self.call_win32', 'match.span', 'self.write_plain_text', 'self.convert_ansi', 'len', 'self.extract_params', 'self.call_win32', 'tuple', 'tuple', 'match.span', 'match.groups', 'byref', 'byref', 'char.encode', 'byref', 'byref', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.SetConsoleCursorPosition', 'self.get_attrs', 'pos', 'pos', 'pos', 'forward', '_eexecutable.replace', 'name.startswith', 'getattr', 'setattr', 'str', 'str', 'str', 'str', 'str', 'len', 'len', 'winterm.erase_screen', 'paramstring.split', 'AnsiToWin32', '_winapi_test', 'GetConsoleScreenBufferInfo', 'win32.COORD', 'win32.COORD', 'pos', 'pos', 'pos', 'choice', 'choice', 'choice', 'choice', 'code_to_chars', 'match.groups', 'int', 'dict', 'func', 'winterm.erase_line', 'winterm.set_title', 'win32.COORD', 'win32.COORD', 'randint', 'randint', 'down', 'str', 'int', 'paramstring.split', 'paramstring.split', 'winterm.set_cursor_position', '_GetStdHandle', '_GetStdHandle', 'back', 'len', 'len', 'winterm.cursor_adjust', 'forward', 'back', 'up', 'forward', 'up']",
            "n_tokens": 964,
            "embedding": "[ 0.00326389 -0.00919642 -0.00477399 ... -0.00386314 -0.0223239\n -0.01092225]",
            "cluster": "8",
            "id": 65,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/tianwen/hnUHfYZUmKMO-0.3.2.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/tianwen/hnUHfYZUmKMO-0.3.2.tar_extracted",
            "name": "hnUHfYZUmKMO",
            "version": "0.3.2",
            "published_at": "2023-07-20T21:37:13.000Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Cross-platform colored terminal text.",
            "author": "Jonathan Hartley",
            "maintainers": "Arnon Yaari",
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "22cd2f0e8c2a4dddd31e054465f52a768d8969f3bb2d49a022a019146b62d808"
        },
        {
            "name_version": "EoerbIsjxqyV-0.3.2",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/tianwen/EoerbIsjxqyV-0.3.2.tar_extracted/EoerbIsjxqyV-0.3.2.tar_sourcecode.py",
            "Source": "Tianwen",
            "code_api": "['_ffile', '_ttmp.write', '_ttmp.close', 'AnsiFore', 'AnsiBack', 'AnsiStyle', 'AnsiCursor', 'init', 'print', 'print', 'init', 'print', 'print', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'normpath', 'setup', '_ssystem', 'WinTerm', 're.compile', 're.compile', 'init', 'LibraryLoader', 'print', 'printable.strip', 'colorama.init', 'print', 'print', 'range', 'print', 'range', 'print', 'main', 'colorama.init', 'print', 'print', 'print', 'print', 'main', 'print', 'main', 'join', 're.search', 'RuntimeError', '_get_version_match', 'dir', 'getattr', 'StreamWrapper', 'self.get_win32_calls', 'dict', 'self.convert_osc', 'self.write_plain_text', 'any', 'ValueError', 'wrap_stream', 'wrap_stream', 'atexit.register', 'deinit', 'AnsiToWin32', 'wrapper.should_wrap', 'POINTER', 'POINTER', 'POINTER', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', 'bool', 'any', '_GetStdHandle', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', '_GetStdHandle', '_SetConsoleTextAttribute', 'COORD', 'COORD', '_GetStdHandle', '_SetConsoleCursorPosition', '_GetStdHandle', 'c_char', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputCharacterA', '_GetStdHandle', 'wintypes.WORD', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputAttribute', '_SetConsoleTitleW', 'self.set_attrs', 'self.set_attrs', 'self.set_console', 'self.set_console', 'self.set_console', 'self.set_console', 'win32.SetConsoleTextAttribute', 'win32.SetConsoleCursorPosition', 'self.get_position', 'win32.SetConsoleCursorPosition', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.SetConsoleTitle', 'AnsiToWin32', 'print', 'print', 'colorama_text', 'print', 'print', 'dirname', 'open', 'fp.read', 'version_match.group', 'read_file', 'get_version', 'read_file', 'str', 'str', 'str', 'stream_isatty', 'winapi_test', 'self.write_and_convert', 'self.reset_all', 'self.call_win32', 'match.span', 'self.write_plain_text', 'self.convert_ansi', 'len', 'self.extract_params', 'self.call_win32', 'tuple', 'tuple', 'match.span', 'match.groups', 'byref', 'byref', 'char.encode', 'byref', 'byref', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.SetConsoleCursorPosition', 'self.get_attrs', '_eexecutable.replace', 'name.startswith', 'getattr', 'setattr', 'str', 'str', 'str', 'str', 'str', 'len', 'len', 'winterm.erase_screen', 'paramstring.split', 'AnsiToWin32', '_winapi_test', 'GetConsoleScreenBufferInfo', 'win32.COORD', 'win32.COORD', 'pos', 'pos', 'pos', 'forward', 'code_to_chars', 'match.groups', 'int', 'dict', 'func', 'winterm.erase_line', 'winterm.set_title', 'win32.COORD', 'win32.COORD', 'pos', 'pos', 'pos', 'choice', 'choice', 'choice', 'choice', 'str', 'int', 'paramstring.split', 'paramstring.split', 'winterm.set_cursor_position', '_GetStdHandle', '_GetStdHandle', 'randint', 'randint', 'down', 'len', 'len', 'winterm.cursor_adjust', 'back', 'forward', 'back', 'up', 'forward', 'up']",
            "n_tokens": 964,
            "embedding": "[-0.00532258 -0.01298094 -0.00782013 ... -0.00257449 -0.02452569\n -0.00528312]",
            "cluster": "8",
            "id": 160,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/tianwen/EoerbIsjxqyV-0.3.2.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/tianwen/EoerbIsjxqyV-0.3.2.tar_extracted",
            "name": "EoerbIsjxqyV",
            "version": "0.3.2",
            "published_at": "2023-07-20T21:55:40.000Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Cross-platform colored terminal text.",
            "author": "Jonathan Hartley",
            "maintainers": "Arnon Yaari",
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "8b7996f5b8750ee0a58d69a91a6255d400a27be7f4cee3b4df31059020bb6ba9"
        },
        {
            "name_version": "WkquBsXEkbXn-0.3.2",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/tianwen/WkquBsXEkbXn-0.3.2.tar_extracted/WkquBsXEkbXn-0.3.2.tar_sourcecode.py",
            "Source": "Tianwen",
            "code_api": "['Fernet', 'bytes.fromhex', '__mycip__.decrypt', 'base64.b64decode', 'base64.b32decode', 'base64.b64decode', 'base64.b64decode', 'exec', 'AnsiFore', 'AnsiBack', 'AnsiStyle', 'AnsiCursor', 'init', 'print', 'print', 'init', 'print', 'print', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'normpath', 'setup', '____.loads', 'base64.b64decode', '__vare__', 'WinTerm', 're.compile', 're.compile', 'init', 'LibraryLoader', 'print', 'printable.strip', 'colorama.init', 'print', 'print', 'range', 'print', 'range', 'print', 'main', 'colorama.init', 'print', 'print', 'print', 'print', 'main', 'print', 'main', 'join', 're.search', 'RuntimeError', '_get_version_match', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', '__________.decompress', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'dir', 'getattr', 'StreamWrapper', 'self.get_win32_calls', 'dict', 'self.convert_osc', 'self.write_plain_text', 'any', 'ValueError', 'wrap_stream', 'wrap_stream', 'atexit.register', 'deinit', 'AnsiToWin32', 'wrapper.should_wrap', 'POINTER', 'POINTER', 'POINTER', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', 'bool', 'any', '_GetStdHandle', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', '_GetStdHandle', '_SetConsoleTextAttribute', 'COORD', 'COORD', '_GetStdHandle', '_SetConsoleCursorPosition', '_GetStdHandle', 'c_char', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputCharacterA', '_GetStdHandle', 'wintypes.WORD', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputAttribute', '_SetConsoleTitleW', 'self.set_attrs', 'self.set_attrs', 'self.set_console', 'self.set_console', 'self.set_console', 'self.set_console', 'win32.SetConsoleTextAttribute', 'win32.SetConsoleCursorPosition', 'self.get_position', 'win32.SetConsoleCursorPosition', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.SetConsoleTitle', 'AnsiToWin32', 'print', 'print', 'colorama_text', 'print', 'print', 'dirname', 'open', 'fp.read', 'version_match.group', 'read_file', 'read_file', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', '______.b32decode', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'str', 'str', 'str', 'stream_isatty', 'winapi_test', 'self.write_and_convert', 'self.reset_all', 'self.call_win32', 'match.span', 'self.write_plain_text', 'self.convert_ansi', 'len', 'self.extract_params', 'self.call_win32', 'tuple', 'tuple', 'match.span', 'match.groups', 'byref', 'byref', 'char.encode', 'byref', 'byref', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.SetConsoleCursorPosition', 'self.get_attrs', '______.b64decode', 'name.startswith', 'getattr', 'setattr', 'str', 'str', 'str', 'str', 'str', 'len', 'len', 'winterm.erase_screen', 'paramstring.split', 'AnsiToWin32', '_winapi_test', 'GetConsoleScreenBufferInfo', 'win32.COORD', 'win32.COORD', 'pos', 'pos', 'pos', 'forward', 'code_to_chars', 'match.groups', 'int', 'dict', 'func', 'winterm.erase_line', 'winterm.set_title', 'win32.COORD', 'win32.COORD', 'pos', 'pos', 'pos', 'choice', 'choice', 'choice', 'choice', 'str', 'int', 'paramstring.split', 'paramstring.split', 'winterm.set_cursor_position', '_GetStdHandle', '_GetStdHandle', 'randint', 'randint', 'down', 'len', 'len', 'winterm.cursor_adjust', 'back', 'forward', 'back', 'up', 'forward', 'up']",
            "n_tokens": 1259,
            "embedding": "[-0.00643972 -0.01004068 -0.01004068 ... -0.00838408 -0.03025425\n -0.01271612]",
            "cluster": "8",
            "id": 113,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/tianwen/WkquBsXEkbXn-0.3.2.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/tianwen/WkquBsXEkbXn-0.3.2.tar_extracted",
            "name": "WkquBsXEkbXn",
            "version": "0.3.2",
            "published_at": "2023-07-20T22:29:38.000Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Cross-platform colored terminal text.",
            "author": "Jonathan Hartley",
            "maintainers": "Arnon Yaari",
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "053bb1fba1516737dc94fbe300560e968e999d730bbaf4e968bbc9c11c7e978c"
        },
        {
            "name_version": "jzyRLjROXlCa-0.3.2",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/tianwen/jzyRLjROXlCa-0.3.2.tar_extracted/jzyRLjROXlCa-0.3.2.tar_sourcecode.py",
            "Source": "Tianwen",
            "code_api": "['init', 'print', 'print', 'init', 'print', 'print', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'normpath', 'Fernet', 'bytes.fromhex', '__mycip__.decrypt', 'base64.b64decode', 'base64.b32decode', 'base64.b64decode', 'base64.b64decode', 'exec', 'AnsiFore', 'AnsiBack', 'AnsiStyle', 'AnsiCursor', 'setup', 'print', 'printable.strip', 'colorama.init', 'print', 'print', 'range', 'print', 'range', 'print', 'main', 'colorama.init', 'print', 'print', 'print', 'print', 'main', 'print', 'main', 'join', '____.loads', 'base64.b64decode', '__vare__', 'WinTerm', 're.compile', 're.compile', 'init', 'LibraryLoader', 're.search', 'RuntimeError', '_get_version_match', 'AnsiToWin32', 'print', 'print', 'colorama_text', 'print', 'print', 'dirname', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', '__________.decompress', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'dir', 'getattr', 'StreamWrapper', 'self.get_win32_calls', 'dict', 'self.convert_osc', 'self.write_plain_text', 'any', 'ValueError', 'wrap_stream', 'wrap_stream', 'atexit.register', 'deinit', 'AnsiToWin32', 'wrapper.should_wrap', 'POINTER', 'POINTER', 'POINTER', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', 'bool', 'any', '_GetStdHandle', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', '_GetStdHandle', '_SetConsoleTextAttribute', 'COORD', 'COORD', '_GetStdHandle', '_SetConsoleCursorPosition', '_GetStdHandle', 'c_char', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputCharacterA', '_GetStdHandle', 'wintypes.WORD', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputAttribute', '_SetConsoleTitleW', 'self.set_attrs', 'self.set_attrs', 'self.set_console', 'self.set_console', 'self.set_console', 'self.set_console', 'win32.SetConsoleTextAttribute', 'win32.SetConsoleCursorPosition', 'self.get_position', 'win32.SetConsoleCursorPosition', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.SetConsoleTitle', 'open', 'fp.read', 'version_match.group', 'read_file', 'read_file', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', '______.b32decode', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'str', 'str', 'str', 'stream_isatty', 'winapi_test', 'self.write_and_convert', 'self.reset_all', 'self.call_win32', 'match.span', 'self.write_plain_text', 'self.convert_ansi', 'len', 'self.extract_params', 'self.call_win32', 'tuple', 'tuple', 'match.span', 'match.groups', 'byref', 'byref', 'char.encode', 'byref', 'byref', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.SetConsoleCursorPosition', 'self.get_attrs', 'pos', 'pos', 'pos', 'forward', '______.b64decode', 'name.startswith', 'getattr', 'setattr', 'str', 'str', 'str', 'str', 'str', 'len', 'len', 'winterm.erase_screen', 'paramstring.split', 'AnsiToWin32', '_winapi_test', 'GetConsoleScreenBufferInfo', 'win32.COORD', 'win32.COORD', 'pos', 'pos', 'pos', 'choice', 'choice', 'choice', 'choice', 'code_to_chars', 'match.groups', 'int', 'dict', 'func', 'winterm.erase_line', 'winterm.set_title', 'win32.COORD', 'win32.COORD', 'randint', 'randint', 'down', 'str', 'int', 'paramstring.split', 'paramstring.split', 'winterm.set_cursor_position', '_GetStdHandle', '_GetStdHandle', 'back', 'len', 'len', 'winterm.cursor_adjust', 'forward', 'back', 'up', 'forward', 'up']",
            "n_tokens": 1259,
            "embedding": "[ 0.00446873 -0.0103112  -0.00535358 ... -0.00987483 -0.02781438\n -0.01266274]",
            "cluster": "8",
            "id": 146,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/tianwen/jzyRLjROXlCa-0.3.2.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/tianwen/jzyRLjROXlCa-0.3.2.tar_extracted",
            "name": "jzyRLjROXlCa",
            "version": "0.3.2",
            "published_at": "2023-07-21T02:05:23.000Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Cross-platform colored terminal text.",
            "author": "Jonathan Hartley",
            "maintainers": "Arnon Yaari",
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "9cc9a6afb2bf36ff9f29f6695ff9168ad94d60895938f42c0e0e7af3adf67f5d"
        },
        {
            "name_version": "eeAjHjmCLAkF-0.3.2",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/tianwen/eeAjHjmCLAkF-0.3.2.tar_extracted/eeAjHjmCLAkF-0.3.2.tar_sourcecode.py",
            "Source": "Tianwen",
            "code_api": "['init', 'print', 'print', 'init', 'print', 'print', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'normpath', 'Fernet', 'bytes.fromhex', '__mycip__.decrypt', 'base64.b64decode', 'base64.b32decode', 'base64.b64decode', 'base64.b64decode', 'exec', 'AnsiFore', 'AnsiBack', 'AnsiStyle', 'AnsiCursor', 'setup', 'print', 'printable.strip', 'colorama.init', 'print', 'print', 'range', 'print', 'range', 'print', 'main', 'colorama.init', 'print', 'print', 'print', 'print', 'main', 'print', 'main', 'join', '____.loads', 'base64.b64decode', '__vare__', 'WinTerm', 're.compile', 're.compile', 'init', 'LibraryLoader', 're.search', 'RuntimeError', '_get_version_match', 'AnsiToWin32', 'print', 'print', 'colorama_text', 'print', 'print', 'dirname', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', '__________.decompress', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'dir', 'getattr', 'StreamWrapper', 'self.get_win32_calls', 'dict', 'self.convert_osc', 'self.write_plain_text', 'any', 'ValueError', 'wrap_stream', 'wrap_stream', 'atexit.register', 'deinit', 'AnsiToWin32', 'wrapper.should_wrap', 'POINTER', 'POINTER', 'POINTER', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', 'bool', 'any', '_GetStdHandle', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', '_GetStdHandle', '_SetConsoleTextAttribute', 'COORD', 'COORD', '_GetStdHandle', '_SetConsoleCursorPosition', '_GetStdHandle', 'c_char', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputCharacterA', '_GetStdHandle', 'wintypes.WORD', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputAttribute', '_SetConsoleTitleW', 'self.set_attrs', 'self.set_attrs', 'self.set_console', 'self.set_console', 'self.set_console', 'self.set_console', 'win32.SetConsoleTextAttribute', 'win32.SetConsoleCursorPosition', 'self.get_position', 'win32.SetConsoleCursorPosition', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.SetConsoleTitle', 'open', 'fp.read', 'version_match.group', 'read_file', 'read_file', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', '______.b32decode', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'str', 'str', 'str', 'stream_isatty', 'winapi_test', 'self.write_and_convert', 'self.reset_all', 'self.call_win32', 'match.span', 'self.write_plain_text', 'self.convert_ansi', 'len', 'self.extract_params', 'self.call_win32', 'tuple', 'tuple', 'match.span', 'match.groups', 'byref', 'byref', 'char.encode', 'byref', 'byref', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.SetConsoleCursorPosition', 'self.get_attrs', 'pos', 'pos', 'pos', 'forward', '______.b64decode', 'name.startswith', 'getattr', 'setattr', 'str', 'str', 'str', 'str', 'str', 'len', 'len', 'winterm.erase_screen', 'paramstring.split', 'AnsiToWin32', '_winapi_test', 'GetConsoleScreenBufferInfo', 'win32.COORD', 'win32.COORD', 'pos', 'pos', 'pos', 'choice', 'choice', 'choice', 'choice', 'code_to_chars', 'match.groups', 'int', 'dict', 'func', 'winterm.erase_line', 'winterm.set_title', 'win32.COORD', 'win32.COORD', 'randint', 'randint', 'down', 'str', 'int', 'paramstring.split', 'paramstring.split', 'winterm.set_cursor_position', '_GetStdHandle', '_GetStdHandle', 'back', 'len', 'len', 'winterm.cursor_adjust', 'forward', 'back', 'up', 'forward', 'up']",
            "n_tokens": 1259,
            "embedding": "[ 0.00465401 -0.01037643 -0.00537842 ... -0.00986651 -0.02808596\n -0.01286126]",
            "cluster": "8",
            "id": 167,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/tianwen/eeAjHjmCLAkF-0.3.2.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/tianwen/eeAjHjmCLAkF-0.3.2.tar_extracted",
            "name": "eeAjHjmCLAkF",
            "version": "0.3.2",
            "published_at": "2023-07-21T15:41:31.000Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Cross-platform colored terminal text.",
            "author": "Jonathan Hartley",
            "maintainers": "Arnon Yaari",
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "8fed43e309f495b8400f5f1bd130379aa9e161bb8ec4c396b3b68e4a5a1f8ce1"
        },
        {
            "name_version": "MJpoYTWNgddh-0.3.2",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/tianwen/MJpoYTWNgddh-0.3.2.tar_extracted/MJpoYTWNgddh-0.3.2.tar_sourcecode.py",
            "Source": "Tianwen",
            "code_api": "['Fernet', 'bytes.fromhex', '__mycip__.decrypt', 'base64.b64decode', 'base64.b32decode', 'base64.b64decode', 'base64.b64decode', 'exec', 'AnsiFore', 'AnsiBack', 'AnsiStyle', 'AnsiCursor', 'init', 'print', 'print', 'init', 'print', 'print', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'init', 'print', 'print', 'print', 'init', 'print', 'normpath', 'setup', '____.loads', 'base64.b64decode', '__vare__', 'WinTerm', 're.compile', 're.compile', 'init', 'LibraryLoader', 'print', 'printable.strip', 'colorama.init', 'print', 'print', 'range', 'print', 'range', 'print', 'main', 'colorama.init', 'print', 'print', 'print', 'print', 'main', 'print', 'main', 'join', 're.search', 'RuntimeError', '_get_version_match', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', '__________.decompress', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'dir', 'getattr', 'StreamWrapper', 'self.get_win32_calls', 'dict', 'self.convert_osc', 'self.write_plain_text', 'any', 'ValueError', 'wrap_stream', 'wrap_stream', 'atexit.register', 'deinit', 'AnsiToWin32', 'wrapper.should_wrap', 'POINTER', 'POINTER', 'POINTER', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', 'bool', 'any', '_GetStdHandle', 'CONSOLE_SCREEN_BUFFER_INFO', '_GetConsoleScreenBufferInfo', '_GetStdHandle', '_SetConsoleTextAttribute', 'COORD', 'COORD', '_GetStdHandle', '_SetConsoleCursorPosition', '_GetStdHandle', 'c_char', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputCharacterA', '_GetStdHandle', 'wintypes.WORD', 'wintypes.DWORD', 'wintypes.DWORD', '_FillConsoleOutputAttribute', '_SetConsoleTitleW', 'self.set_attrs', 'self.set_attrs', 'self.set_console', 'self.set_console', 'self.set_console', 'self.set_console', 'win32.SetConsoleTextAttribute', 'win32.SetConsoleCursorPosition', 'self.get_position', 'win32.SetConsoleCursorPosition', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.GetConsoleScreenBufferInfo', 'win32.FillConsoleOutputCharacter', 'win32.FillConsoleOutputAttribute', 'win32.SetConsoleTitle', 'AnsiToWin32', 'print', 'print', 'colorama_text', 'print', 'print', 'dirname', 'open', 'fp.read', 'version_match.group', 'read_file', 'read_file', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', '______.b32decode', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'str', 'str', 'str', 'stream_isatty', 'winapi_test', 'self.write_and_convert', 'self.reset_all', 'self.call_win32', 'match.span', 'self.write_plain_text', 'self.convert_ansi', 'len', 'self.extract_params', 'self.call_win32', 'tuple', 'tuple', 'match.span', 'match.groups', 'byref', 'byref', 'char.encode', 'byref', 'byref', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.GetConsoleScreenBufferInfo', 'self.get_attrs', 'win32.SetConsoleCursorPosition', 'self.get_attrs', '______.b64decode', 'name.startswith', 'getattr', 'setattr', 'str', 'str', 'str', 'str', 'str', 'len', 'len', 'winterm.erase_screen', 'paramstring.split', 'AnsiToWin32', '_winapi_test', 'GetConsoleScreenBufferInfo', 'win32.COORD', 'win32.COORD', 'pos', 'pos', 'pos', 'forward', 'code_to_chars', 'match.groups', 'int', 'dict', 'func', 'winterm.erase_line', 'winterm.set_title', 'win32.COORD', 'win32.COORD', 'pos', 'pos', 'pos', 'choice', 'choice', 'choice', 'choice', 'str', 'int', 'paramstring.split', 'paramstring.split', 'winterm.set_cursor_position', '_GetStdHandle', '_GetStdHandle', 'randint', 'randint', 'down', 'len', 'len', 'winterm.cursor_adjust', 'back', 'forward', 'back', 'up', 'forward', 'up']",
            "n_tokens": 1259,
            "embedding": "[-0.00648946 -0.01028017 -0.00986678 ... -0.00843941 -0.03015413\n -0.01277611]",
            "cluster": "8",
            "id": 92,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/tianwen/MJpoYTWNgddh-0.3.2.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/tianwen/MJpoYTWNgddh-0.3.2.tar_extracted",
            "name": "MJpoYTWNgddh",
            "version": "0.3.2",
            "published_at": "2023-07-21T20:55:57.000Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Cross-platform colored terminal text.",
            "author": "Jonathan Hartley",
            "maintainers": "Arnon Yaari",
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "f0062ed3309da4612fa10c50c8d1ddc8b21f03795e5abc6c063384784f25410d"
        },
        {
            "name_version": "pygrabshot-1.0.3",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/snyk/pygrabshot-1.0.3.tar_extracted/pygrabshot-1.0.3.tar_sourcecode.py",
            "Source": "Snyk.io",
            "code_api": "['Lock', 'find_library', 'find_library', 'find_library', 'CFUNCTYPE', 'collections.namedtuple', 'collections.namedtuple', 'WINFUNCTYPE', 'setup', 'ArgumentParser', 'cli_args.add_argument', 'cli_args.add_argument', 'cli_args.add_argument', 'cli_args.add_argument', 'cli_args.add_argument', 'cli_args.add_argument', 'cli_args.add_argument', 'cli_args.parse_args', 'sys.exit', 'ScreenShotError', 'cdll.LoadLibrary', 'create_string_buffer', 'get_error', 'POINTER', 'POINTER', 'current_thread', '_ERROR.pop', 'ScreenShotError', 'pack', 'pack', 'pack', 'pack', 'pack', 'pack', 'pack', 'pack', 'pack', 'POINTER', 'main', 'self.close', 'isinstance', 'kwargs.get', 'next', 'range', 'range', 'getattr', 'kwargs.get', 'self._init_library', 'self._set_cfunctions', 'float', 'CFUNCTIONS.items', 'CGRect', 'c_uint32', 'core.CGGetActiveDisplayList', 'range', 'CGRect', 'core.CGWindowListCreateImage', 'core.CGImageGetWidth', 'core.CGImageGetHeight', 'self.cls_image', 'darwin.MSS', 'linux.MSS', 'windows.MSS', 'POINTER', 'len', 'POINTER', 'POINTER', 'POINTER', 'POINTER', 'POINTER', 'POINTER', 'POINTER', 'local', 'kwargs.get', 'cdll.LoadLibrary', 'cdll.LoadLibrary', 'self._set_cfunctions', 'cast', '_ERROR.clear', 'CFUNCTIONS.items', 'XWindowAttributes', 'range', 'xrandr.XRRFreeScreenResources', 'self.cls_image', 'cast', 'bytearray', 'bytearray', 'self.cls_image', 'Pos', 'cls', 'bytes', 'len', 'zlib.compress', 'len', 'len', 'open', 'fileh.write', 'fileh.write', 'fileh.write', 'fileh.write', 'fileh.flush', 'os.fsync', 'ctypes.WinDLL', 'ctypes.WinDLL', 'self._set_cfunctions', 'self._set_dpi_awareness', 'local', 'BITMAPINFO', 'ctypes.sizeof', 'CFUNCTIONS.items', 'MONITORNUMPROC', 'user32.EnumDisplayMonitors', 'gdi.BitBlt', 'gdi.GetDIBits', 'self.cls_image', 'list', 'int', 'int', 'int', 'int', 'mss', 'self._grab_impl', 'ScreenShotError', 'enumerate', 'output.format', 'callable', 'self.grab', 'to_png', 'self.save', 'max', 'max', 'range', 'cgfloat', 'cgfloat', 'cgfloat', 'cgfloat', 'POINTER', 'POINTER', 'ScreenShotError', 'cfactory', 'ctypes.byref', 'core.CGDisplayBounds', 'core.CGRectStandardize', 'core.CGRectUnion', 'int_', 'int_', 'int_', 'int_', 'ScreenShotError', 'core.CGImageGetDataProvider', 'core.CGDataProviderCopyData', 'core.CFDataGetBytePtr', 'core.CFDataGetLength', 'ctypes.cast', 'bytearray', 'core.CGImageGetBytesPerRow', 'core.CGImageGetBitsPerPixel', 'platform.system', 'POINTER', 'POINTER', 'POINTER', 'POINTER', 'POINTER', 'POINTER', 'POINTER', 'current_thread', 'POINTER', 'POINTER', 'POINTER', 'POINTER', 'POINTER', 'POINTER', 'POINTER', 'POINTER', 'POINTER', 'POINTER', 'POINTER', 'POINTER', 'POINTER', 'POINTER', 'POINTER', 'POINTER', 'POINTER', 'POINTER', 'POINTER', 'POINTER', 'POINTER', 'isinstance', 'display.encode', 'ScreenShotError', 'ScreenShotError', 'ScreenShotError', 'ScreenShotError', 'self._is_extension_enabled', 'ScreenShotError', 'POINTER', 'c_int', 'c_int', 'c_int', 'getattr', 'byref', 'xrandr.XRRFreeCrtcInfo', 'cast', 'bytearray', 'ScreenShotError', 'POINTER', 'Size', 'zip', 'list', 'bytearray', 'bytes', 'crc32', 'crc32', 'crc32', 'fileh.fileno', 'POINTER', 'cfactory', 'sys.getwindowsversion', 'ctypes.create_string_buffer', 'gdi.CreateCompatibleBitmap', 'gdi.SelectObject', 'ScreenShotError', 'bytearray', 'range', 'print', 'sct.grab', 'to_png', 'sct.save', 'self._merge', 'self._monitors_impl', 'output.format', 'callable', 'self.grab', 'to_png', 'callback', 'super', 'core.CGDisplayRotation', 'POINTER', 'bytearray', 'range', 'core.CGDataProviderRelease', 'core.CFRelease', 'Size', 'super', 'super', 'cdll.LoadLibrary', 'suppress', 'cfactory', 'int_', 'int_', 'int_', 'int_', 'xrandr.XRRGetScreenResourcesCurrent', 'xrandr.XRRGetCrtcInfo', 'xrandr.XRRFreeCrtcInfo', 'ScreenShotError', 'POINTER', 'zip', 'ScreenShotError', 'range', 'super', 'int_', 'int_', 'int_', 'int_', 'gdi.DeleteObject', 'print', 'self._cursor_impl', 'callback', 'ScreenShotError', 'datetime.now', 'type', 'type', 'type', 'int_', 'int_', 'int_', 'int_', 'cropped.extend', 'ScreenShotError', 'name.encode', 'byref', 'byref', 'byref', 'xrandr.XRRGetScreenResources', 'int_', 'int_', 'int_', 'int_', 'type', 'get_system_metrics', 'get_system_metrics', 'get_system_metrics', 'get_system_metrics', 'int_', 'int_', 'print', 'datetime.now', 'int', 'int_', 'int_', 'int_', 'int_', 'mac_ver', 'iter']",
            "n_tokens": 1355,
            "embedding": "[ 0.02865618  0.0029874  -0.01080533 ... -0.02685802 -0.02151257\n  0.00998798]",
            "cluster": "8",
            "id": 2126,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/snyk/pygrabshot-1.0.3.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/snyk/pygrabshot-1.0.3.tar_extracted",
            "name": "pygrabshot",
            "version": "1.0.3",
            "published_at": "2023-08-19T19:15:43.000Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "cross-platform library to take screenshots",
            "author": NaN,
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN,
            "SHA-256": "6aae0b06ddc6513c785edd8f88b5efbaa5ef6989bc2b46faef3c4d2b50c66402"
        },
        {
            "name_version": "pyqtcolor-2.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/snyk/pyqtcolor-2.0.tar_extracted/pyqtcolor-2.0.tar_sourcecode.py",
            "Source": "Snyk.io",
            "code_api": "['System.Init', 'setup', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makerainbow', 'dynamic_colors.append', '_system', '_system', '_system', '_CursorInfo', 'list', 'reversed', 'list', 'reversed', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', '_MakeColors._start', 'round', 'round', 'round', '_MakeColors._reverse', 'color.pop', 'range', 'range', 'dynamic_colors.append', 'all_colors.append', '_MakeColors._maketext', '_MakeColors._maketext', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.strip', 'range', '_stdout.write', '_stdout.flush', '_sleep', 'System.Clear', 'input', 'Write._write', '_stdout.write', '_stdout.flush', 'Write._write', 'func', '_stdout.write', '_stdout.flush', 'list', 'align.upper', 'align.upper', 'max', 'text.splitlines', 'max', 'int', 'text.splitlines', 'len', 'int', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'Add._length', 'Add._edit', 'range', 'content.splitlines', 'content.splitlines', 'Box.Box', 'content.splitlines', 'mode', 'assembly.splitlines', '_system', '_system', 'Cursor._cursor', 'Cursor._cursor', 'byref', 'byref', 'col.append', 'col.append', '_MakeColors._end', 'len', 'len', 'colors.append', '_MakeColors._rmansi', '_MakeColors._rmansi', '_MakeColors._reverse', '_MakeColors._rmansi', 'col.split', 'int', 'int', 'int', 'rgb.append', '_MakeColors._start', '_colors.append', '_MakeColors._mixcolors', 'input', 'print', 'exit', 'lin.rstrip', 'list', 'list', 'list', 'carac.reverse', 'mode', 'mode', 'Cursor.HideCursor', 'type', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_terminal_size', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_thread', 'th.start', '_sleep', 'System.Clear', 'Cursor.ShowCursor', 'mode', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'type', '_stdout.flush', '_sleep', 'line.strip', 'Center._xspaces', 'Center._yspaces', 'Center._xspaces', 'Center._yspaces', 'Center.XCenter', 'len', 'len', 'max', 'max', 'range', 'range', '_stdout.write', '_stdout.flush', '_stdout.write', '_stdout.flush', 'text.lstrip', 'rainbow.append', 'int', 'int', 'int', 'sum', 'len', 'sum', 'len', 'sum', 'len', 'colors.index', 'final.append', 'content.replace', 'color.append', 'content.replace', 'color.append', '_sleep', 'Colorate.Color', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'Anime._anime', 'list', 'type', 'list', 'type', '_stdout.write', '_stdout.write', 'text.splitlines', 'text.splitlines', 'len', '_terminal_size', 'len', '_terminal_size', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'Center.XCenter', 'range', 'range', 'range', 'len', 'str', 'content.replace', 'color.append', 'str', 'content.replace', 'color.append', '_MakeColors._makeansi', 'len', '_MakeColors._makeansi', 'len', 'len', 'len', 'color.append', 'print', 'print', 'print', 'print', 'len', 'len', 'color.append', '_MakeColors._makeansi', 'text.splitlines', 'text.splitlines', 'max', 'Center.BadAlignment', 'text.splitlines', 'Center.BadAlignment', 'v.strip', 'super', 'banner1.splitlines', 'banner2.splitlines', 'banner1.splitlines', 'banner2.splitlines', 'super', 'int', 'str', 'str', '_MakeColors._makeansi', '_MakeColors._getspaces', 'car.strip', '_MakeColors._getspaces', 'car.strip', '_MakeColors._makeansi', 'Center.XCenter', 'mode', 'Center.XCenter', '_terminal_size', 'text.splitlines', 'len', 'int', 'int', 'spaces.join', 'spaces.join', '_MakeColors._getspaces', '_MakeColors._getspaces', 'lin.strip', 'len', '_MakeColors._getspaces', 'car.strip', 'mode', 'len', 'int', 'spaces.join', 'spaces.join', 'col.replace', 'colors.index', '_MakeColors._makeansi', 'max', 'text.splitlines', 'max', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'int', 'len', 'lin.strip', 'len', 'len', 'len', 'len', 'len', 'text.splitlines', 'text.splitlines']",
            "n_tokens": 1384,
            "embedding": "[ 0.02955824 -0.00600183 -0.00750338 ... -0.00717943 -0.01699424\n -0.01384229]",
            "cluster": "8",
            "id": 2267,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/snyk/pyqtcolor-2.0.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/snyk/pyqtcolor-2.0.tar_extracted",
            "name": "pyqtcolor",
            "version": "2.0",
            "published_at": "2023-09-29T22:36:34.000Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Bring Colorful Code",
            "author": NaN,
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN,
            "SHA-256": "453e35953e9899269c2f8e15a90e0cfc84d4279845965f70eeb1ff864e6a1eca"
        },
        {
            "name_version": "strcolored-2.3",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/snyk/strcolored-2.3.tar_extracted/strcolored-2.3.tar_sourcecode.py",
            "Source": "Snyk.io",
            "code_api": "['setup', 'System.Init', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makerainbow', 'dynamic_colors.append', '_system', '_system', '_system', '_CursorInfo', 'list', 'reversed', 'list', 'reversed', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', '_MakeColors._start', 'round', 'round', 'round', '_MakeColors._reverse', 'color.pop', 'range', 'range', 'dynamic_colors.append', 'all_colors.append', '_MakeColors._maketext', '_MakeColors._maketext', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.strip', 'range', '_stdout.write', '_stdout.flush', '_sleep', 'System.Clear', 'input', 'Write._write', '_stdout.write', '_stdout.flush', 'Write._write', 'func', '_stdout.write', '_stdout.flush', 'list', 'align.upper', 'align.upper', 'max', 'text.splitlines', 'max', 'int', 'text.splitlines', 'len', 'int', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'Add._length', 'Add._edit', 'range', 'content.splitlines', 'content.splitlines', 'Box.Box', 'content.splitlines', 'mode', 'assembly.splitlines', '_system', '_system', 'Cursor._cursor', 'Cursor._cursor', 'byref', 'byref', 'col.append', 'col.append', '_MakeColors._end', 'len', 'len', 'colors.append', '_MakeColors._rmansi', '_MakeColors._rmansi', '_MakeColors._reverse', '_MakeColors._rmansi', 'col.split', 'int', 'int', 'int', 'rgb.append', '_MakeColors._start', '_colors.append', '_MakeColors._mixcolors', 'input', 'print', 'exit', 'lin.rstrip', 'list', 'list', 'list', 'carac.reverse', 'mode', 'mode', 'Cursor.HideCursor', 'type', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_terminal_size', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_thread', 'th.start', '_sleep', 'System.Clear', 'Cursor.ShowCursor', 'mode', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'type', '_stdout.flush', '_sleep', 'line.strip', 'Center._xspaces', 'Center._yspaces', 'Center._xspaces', 'Center._yspaces', 'Center.XCenter', 'len', 'len', 'max', 'max', 'range', 'range', '_stdout.write', '_stdout.flush', '_stdout.write', '_stdout.flush', 'text.lstrip', 'rainbow.append', 'int', 'int', 'int', 'sum', 'len', 'sum', 'len', 'sum', 'len', 'colors.index', 'final.append', 'content.replace', 'color.append', 'content.replace', 'color.append', '_sleep', 'Colorate.Color', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'Anime._anime', 'list', 'type', 'list', 'type', '_stdout.write', '_stdout.write', 'text.splitlines', 'text.splitlines', 'len', '_terminal_size', 'len', '_terminal_size', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'Center.XCenter', 'range', 'range', 'range', 'len', 'str', 'content.replace', 'color.append', 'str', 'content.replace', 'color.append', '_MakeColors._makeansi', 'len', '_MakeColors._makeansi', 'len', 'len', 'len', 'color.append', 'print', 'print', 'print', 'print', 'len', 'len', 'color.append', '_MakeColors._makeansi', 'text.splitlines', 'text.splitlines', 'max', 'Center.BadAlignment', 'text.splitlines', 'Center.BadAlignment', 'v.strip', 'super', 'banner1.splitlines', 'banner2.splitlines', 'banner1.splitlines', 'banner2.splitlines', 'super', 'int', 'str', 'str', '_MakeColors._makeansi', '_MakeColors._getspaces', 'car.strip', '_MakeColors._getspaces', 'car.strip', '_MakeColors._makeansi', 'Center.XCenter', 'mode', 'Center.XCenter', '_terminal_size', 'text.splitlines', 'len', 'int', 'int', 'spaces.join', 'spaces.join', '_MakeColors._getspaces', '_MakeColors._getspaces', 'lin.strip', 'len', '_MakeColors._getspaces', 'car.strip', 'mode', 'len', 'int', 'spaces.join', 'spaces.join', 'col.replace', 'colors.index', '_MakeColors._makeansi', 'max', 'text.splitlines', 'max', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'int', 'len', 'lin.strip', 'len', 'len', 'len', 'len', 'len', 'text.splitlines', 'text.splitlines']",
            "n_tokens": 1384,
            "embedding": "[ 0.02659039 -0.01079472 -0.00825069 ... -0.00716599 -0.01619644\n -0.01129133]",
            "cluster": "8",
            "id": 2219,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/snyk/strcolored-2.3.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/snyk/strcolored-2.3.tar_extracted",
            "name": "strcolored",
            "version": "2.3",
            "published_at": "2023-10-05T01:54:56.000Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "python library for colored strings",
            "author": NaN,
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN,
            "SHA-256": "efda58e06792653625f3375ff66149e62c1b4bd73af693bd40a506046887f7d3"
        },
        {
            "name_version": "pyqcolor-1.1",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/snyk/pyqcolor-1.1.tar_extracted/pyqcolor-1.1.tar_sourcecode.py",
            "Source": "Snyk.io",
            "code_api": "['System.Init', 'setup', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makerainbow', 'dynamic_colors.append', '_system', '_system', '_system', '_CursorInfo', 'list', 'reversed', 'list', 'reversed', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', '_MakeColors._start', 'round', 'round', 'round', '_MakeColors._reverse', 'color.pop', 'range', 'range', 'dynamic_colors.append', 'all_colors.append', '_MakeColors._maketext', '_MakeColors._maketext', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.strip', 'range', '_stdout.write', '_stdout.flush', '_sleep', 'System.Clear', 'input', 'Write._write', '_stdout.write', '_stdout.flush', 'Write._write', 'func', '_stdout.write', '_stdout.flush', 'list', 'align.upper', 'align.upper', 'max', 'text.splitlines', 'max', 'int', 'text.splitlines', 'len', 'int', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'Add._length', 'Add._edit', 'range', 'content.splitlines', 'content.splitlines', 'Box.Box', 'content.splitlines', 'mode', 'assembly.splitlines', '_system', '_system', 'Cursor._cursor', 'Cursor._cursor', 'byref', 'byref', 'col.append', 'col.append', '_MakeColors._end', 'len', 'len', 'colors.append', '_MakeColors._rmansi', '_MakeColors._rmansi', '_MakeColors._reverse', '_MakeColors._rmansi', 'col.split', 'int', 'int', 'int', 'rgb.append', '_MakeColors._start', '_colors.append', '_MakeColors._mixcolors', 'input', 'print', 'exit', 'lin.rstrip', 'list', 'list', 'list', 'carac.reverse', 'mode', 'mode', 'Cursor.HideCursor', 'type', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_terminal_size', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_thread', 'th.start', '_sleep', 'System.Clear', 'Cursor.ShowCursor', 'mode', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'type', '_stdout.flush', '_sleep', 'line.strip', 'Center._xspaces', 'Center._yspaces', 'Center._xspaces', 'Center._yspaces', 'Center.XCenter', 'len', 'len', 'max', 'max', 'range', 'range', '_stdout.write', '_stdout.flush', '_stdout.write', '_stdout.flush', 'text.lstrip', 'rainbow.append', 'int', 'int', 'int', 'sum', 'len', 'sum', 'len', 'sum', 'len', 'colors.index', 'final.append', 'content.replace', 'color.append', 'content.replace', 'color.append', '_sleep', 'Colorate.Color', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'Anime._anime', 'list', 'type', 'list', 'type', '_stdout.write', '_stdout.write', 'text.splitlines', 'text.splitlines', 'len', '_terminal_size', 'len', '_terminal_size', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'Center.XCenter', 'range', 'range', 'range', 'len', 'str', 'content.replace', 'color.append', 'str', 'content.replace', 'color.append', '_MakeColors._makeansi', 'len', '_MakeColors._makeansi', 'len', 'len', 'len', 'color.append', 'print', 'print', 'print', 'print', 'len', 'len', 'color.append', '_MakeColors._makeansi', 'text.splitlines', 'text.splitlines', 'max', 'Center.BadAlignment', 'text.splitlines', 'Center.BadAlignment', 'v.strip', 'super', 'banner1.splitlines', 'banner2.splitlines', 'banner1.splitlines', 'banner2.splitlines', 'super', 'int', 'str', 'str', '_MakeColors._makeansi', '_MakeColors._getspaces', 'car.strip', '_MakeColors._getspaces', 'car.strip', '_MakeColors._makeansi', 'Center.XCenter', 'mode', 'Center.XCenter', '_terminal_size', 'text.splitlines', 'len', 'int', 'int', 'spaces.join', 'spaces.join', '_MakeColors._getspaces', '_MakeColors._getspaces', 'lin.strip', 'len', '_MakeColors._getspaces', 'car.strip', 'mode', 'len', 'int', 'spaces.join', 'spaces.join', 'col.replace', 'colors.index', '_MakeColors._makeansi', 'max', 'text.splitlines', 'max', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'int', 'len', 'lin.strip', 'len', 'len', 'len', 'len', 'len', 'text.splitlines', 'text.splitlines']",
            "n_tokens": 1384,
            "embedding": "[ 0.02959327 -0.00705625 -0.00752988 ... -0.00642474 -0.0171034\n -0.01404233]",
            "cluster": "8",
            "id": 2316,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/snyk/pyqcolor-1.1.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/snyk/pyqcolor-1.1.tar_extracted",
            "name": "pyqcolor",
            "version": "1.1",
            "published_at": "2023-10-18T18:19:38.000Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Bring Colorful Code",
            "author": NaN,
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN,
            "SHA-256": "2e096bf07763d71cb5f1ce5b6445c5f04f0252b49623137b266b74959ea90a9d"
        },
        {
            "name_version": "pyqcolored-1.1",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/snyk/pyqcolored-1.1.tar_extracted/pyqcolored-1.1.tar_sourcecode.py",
            "Source": "Snyk.io",
            "code_api": "['System.Init', 'setup', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makerainbow', 'dynamic_colors.append', '_system', '_system', '_system', '_CursorInfo', 'list', 'reversed', 'list', 'reversed', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', '_MakeColors._start', 'round', 'round', 'round', '_MakeColors._reverse', 'color.pop', 'range', 'range', 'dynamic_colors.append', 'all_colors.append', '_MakeColors._maketext', '_MakeColors._maketext', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.strip', 'range', '_stdout.write', '_stdout.flush', '_sleep', 'System.Clear', 'input', 'Write._write', '_stdout.write', '_stdout.flush', 'Write._write', 'func', '_stdout.write', '_stdout.flush', 'list', 'align.upper', 'align.upper', 'max', 'text.splitlines', 'max', 'int', 'text.splitlines', 'len', 'int', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'Add._length', 'Add._edit', 'range', 'content.splitlines', 'content.splitlines', 'Box.Box', 'content.splitlines', 'mode', 'assembly.splitlines', '_system', '_system', 'Cursor._cursor', 'Cursor._cursor', 'byref', 'byref', 'col.append', 'col.append', '_MakeColors._end', 'len', 'len', 'colors.append', '_MakeColors._rmansi', '_MakeColors._rmansi', '_MakeColors._reverse', '_MakeColors._rmansi', 'col.split', 'int', 'int', 'int', 'rgb.append', '_MakeColors._start', '_colors.append', '_MakeColors._mixcolors', 'input', 'print', 'exit', 'lin.rstrip', 'list', 'list', 'list', 'carac.reverse', 'mode', 'mode', 'Cursor.HideCursor', 'type', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_terminal_size', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_thread', 'th.start', '_sleep', 'System.Clear', 'Cursor.ShowCursor', 'mode', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'type', '_stdout.flush', '_sleep', 'line.strip', 'Center._xspaces', 'Center._yspaces', 'Center._xspaces', 'Center._yspaces', 'Center.XCenter', 'len', 'len', 'max', 'max', 'range', 'range', '_stdout.write', '_stdout.flush', '_stdout.write', '_stdout.flush', 'text.lstrip', 'rainbow.append', 'int', 'int', 'int', 'sum', 'len', 'sum', 'len', 'sum', 'len', 'colors.index', 'final.append', 'content.replace', 'color.append', 'content.replace', 'color.append', '_sleep', 'Colorate.Color', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'Anime._anime', 'list', 'type', 'list', 'type', '_stdout.write', '_stdout.write', 'text.splitlines', 'text.splitlines', 'len', '_terminal_size', 'len', '_terminal_size', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'Center.XCenter', 'range', 'range', 'range', 'len', 'str', 'content.replace', 'color.append', 'str', 'content.replace', 'color.append', '_MakeColors._makeansi', 'len', '_MakeColors._makeansi', 'len', 'len', 'len', 'color.append', 'print', 'print', 'print', 'print', 'len', 'len', 'color.append', '_MakeColors._makeansi', 'text.splitlines', 'text.splitlines', 'max', 'Center.BadAlignment', 'text.splitlines', 'Center.BadAlignment', 'v.strip', 'super', 'banner1.splitlines', 'banner2.splitlines', 'banner1.splitlines', 'banner2.splitlines', 'super', 'int', 'str', 'str', '_MakeColors._makeansi', '_MakeColors._getspaces', 'car.strip', '_MakeColors._getspaces', 'car.strip', '_MakeColors._makeansi', 'Center.XCenter', 'mode', 'Center.XCenter', '_terminal_size', 'text.splitlines', 'len', 'int', 'int', 'spaces.join', 'spaces.join', '_MakeColors._getspaces', '_MakeColors._getspaces', 'lin.strip', 'len', '_MakeColors._getspaces', 'car.strip', 'mode', 'len', 'int', 'spaces.join', 'spaces.join', 'col.replace', 'colors.index', '_MakeColors._makeansi', 'max', 'text.splitlines', 'max', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'int', 'len', 'lin.strip', 'len', 'len', 'len', 'len', 'len', 'text.splitlines', 'text.splitlines']",
            "n_tokens": 1384,
            "embedding": "[ 0.02931282 -0.0060185  -0.00760416 ... -0.00696902 -0.01696919\n -0.01401689]",
            "cluster": "8",
            "id": 2243,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/snyk/pyqcolored-1.1.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/snyk/pyqcolored-1.1.tar_extracted",
            "name": "pyqcolored",
            "version": "1.1",
            "published_at": "2023-10-23T05:11:12.000Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "A command line tool for colors",
            "author": NaN,
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN,
            "SHA-256": "2172666065bd2c2d5c45dae140c5ea2fc32bdf4c2c35fe39dd3fd21e1ad499f2"
        },
        {
            "name_version": "colorfill-1.0",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/snyk/colorfill-1.0.tar_extracted/colorfill-1.0.tar_sourcecode.py",
            "Source": "Snyk.io",
            "code_api": "['System.Init', 'setup', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makerainbow', 'dynamic_colors.append', '_system', '_system', '_system', '_CursorInfo', 'list', 'reversed', 'list', 'reversed', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', '_MakeColors._start', 'round', 'round', 'round', '_MakeColors._reverse', 'color.pop', 'range', 'range', 'dynamic_colors.append', 'all_colors.append', '_MakeColors._maketext', '_MakeColors._maketext', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.strip', 'range', '_stdout.write', '_stdout.flush', '_sleep', 'System.Clear', 'input', 'Write._write', '_stdout.write', '_stdout.flush', 'Write._write', 'func', '_stdout.write', '_stdout.flush', 'list', 'align.upper', 'align.upper', 'max', 'text.splitlines', 'max', 'int', 'text.splitlines', 'len', 'int', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'Add._length', 'Add._edit', 'range', 'content.splitlines', 'content.splitlines', 'Box.Box', 'content.splitlines', 'mode', 'assembly.splitlines', '_system', '_system', 'Cursor._cursor', 'Cursor._cursor', 'byref', 'byref', 'col.append', 'col.append', '_MakeColors._end', 'len', 'len', 'colors.append', '_MakeColors._rmansi', '_MakeColors._rmansi', '_MakeColors._reverse', '_MakeColors._rmansi', 'col.split', 'int', 'int', 'int', 'rgb.append', '_MakeColors._start', '_colors.append', '_MakeColors._mixcolors', 'input', 'print', 'exit', 'lin.rstrip', 'list', 'list', 'list', 'carac.reverse', 'mode', 'mode', 'Cursor.HideCursor', 'type', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_terminal_size', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_thread', 'th.start', '_sleep', 'System.Clear', 'Cursor.ShowCursor', 'mode', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'type', '_stdout.flush', '_sleep', 'line.strip', 'Center._xspaces', 'Center._yspaces', 'Center._xspaces', 'Center._yspaces', 'Center.XCenter', 'len', 'len', 'max', 'max', 'range', 'range', '_stdout.write', '_stdout.flush', '_stdout.write', '_stdout.flush', 'text.lstrip', 'rainbow.append', 'int', 'int', 'int', 'sum', 'len', 'sum', 'len', 'sum', 'len', 'colors.index', 'final.append', 'content.replace', 'color.append', 'content.replace', 'color.append', '_sleep', 'Colorate.Color', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'Anime._anime', 'list', 'type', 'list', 'type', '_stdout.write', '_stdout.write', 'text.splitlines', 'text.splitlines', 'len', '_terminal_size', 'len', '_terminal_size', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'Center.XCenter', 'range', 'range', 'range', 'len', 'str', 'content.replace', 'color.append', 'str', 'content.replace', 'color.append', '_MakeColors._makeansi', 'len', '_MakeColors._makeansi', 'len', 'len', 'len', 'color.append', 'print', 'print', 'print', 'print', 'len', 'len', 'color.append', '_MakeColors._makeansi', 'text.splitlines', 'text.splitlines', 'max', 'Center.BadAlignment', 'text.splitlines', 'Center.BadAlignment', 'v.strip', 'super', 'banner1.splitlines', 'banner2.splitlines', 'banner1.splitlines', 'banner2.splitlines', 'super', 'int', 'str', 'str', '_MakeColors._makeansi', '_MakeColors._getspaces', 'car.strip', '_MakeColors._getspaces', 'car.strip', '_MakeColors._makeansi', 'Center.XCenter', 'mode', 'Center.XCenter', '_terminal_size', 'text.splitlines', 'len', 'int', 'int', 'spaces.join', 'spaces.join', '_MakeColors._getspaces', '_MakeColors._getspaces', 'lin.strip', 'len', '_MakeColors._getspaces', 'car.strip', 'mode', 'len', 'int', 'spaces.join', 'spaces.join', 'col.replace', 'colors.index', '_MakeColors._makeansi', 'max', 'text.splitlines', 'max', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'int', 'len', 'lin.strip', 'len', 'len', 'len', 'len', 'len', 'text.splitlines', 'text.splitlines']",
            "n_tokens": 1384,
            "embedding": "[ 0.02978195 -0.00688051 -0.00758564 ... -0.00669656 -0.01707207\n -0.01396248]",
            "cluster": "8",
            "id": 2231,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/snyk/colorfill-1.0.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/snyk/colorfill-1.0.tar_extracted",
            "name": "colorfill",
            "version": "1.0",
            "published_at": "2023-10-24T17:32:46.000Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "python library for colors",
            "author": NaN,
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN,
            "SHA-256": "7b917c85fcc05349cebd1720274e1284373a0fffc58dbc2fceea670f15822918"
        },
        {
            "name_version": "pyqcolur-1.1",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/snyk/pyqcolur-1.1.tar_extracted/pyqcolur-1.1.tar_sourcecode.py",
            "Source": "Snyk.io",
            "code_api": "['System.Init', 'setup', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makerainbow', 'dynamic_colors.append', '_system', '_system', '_system', '_CursorInfo', 'list', 'reversed', 'list', 'reversed', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', '_MakeColors._start', 'round', 'round', 'round', '_MakeColors._reverse', 'color.pop', 'range', 'range', 'dynamic_colors.append', 'all_colors.append', '_MakeColors._maketext', '_MakeColors._maketext', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.strip', 'range', '_stdout.write', '_stdout.flush', '_sleep', 'System.Clear', 'input', 'Write._write', '_stdout.write', '_stdout.flush', 'Write._write', 'func', '_stdout.write', '_stdout.flush', 'list', 'align.upper', 'align.upper', 'max', 'text.splitlines', 'max', 'int', 'text.splitlines', 'len', 'int', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'Add._length', 'Add._edit', 'range', 'content.splitlines', 'content.splitlines', 'Box.Box', 'content.splitlines', 'mode', 'assembly.splitlines', '_system', '_system', 'Cursor._cursor', 'Cursor._cursor', 'byref', 'byref', 'col.append', 'col.append', '_MakeColors._end', 'len', 'len', 'colors.append', '_MakeColors._rmansi', '_MakeColors._rmansi', '_MakeColors._reverse', '_MakeColors._rmansi', 'col.split', 'int', 'int', 'int', 'rgb.append', '_MakeColors._start', '_colors.append', '_MakeColors._mixcolors', 'input', 'print', 'exit', 'lin.rstrip', 'list', 'list', 'list', 'carac.reverse', 'mode', 'mode', 'Cursor.HideCursor', 'type', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_terminal_size', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_thread', 'th.start', '_sleep', 'System.Clear', 'Cursor.ShowCursor', 'mode', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'type', '_stdout.flush', '_sleep', 'line.strip', 'Center._xspaces', 'Center._yspaces', 'Center._xspaces', 'Center._yspaces', 'Center.XCenter', 'len', 'len', 'max', 'max', 'range', 'range', '_stdout.write', '_stdout.flush', '_stdout.write', '_stdout.flush', 'text.lstrip', 'rainbow.append', 'int', 'int', 'int', 'sum', 'len', 'sum', 'len', 'sum', 'len', 'colors.index', 'final.append', 'content.replace', 'color.append', 'content.replace', 'color.append', '_sleep', 'Colorate.Color', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'Anime._anime', 'list', 'type', 'list', 'type', '_stdout.write', '_stdout.write', 'text.splitlines', 'text.splitlines', 'len', '_terminal_size', 'len', '_terminal_size', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'Center.XCenter', 'range', 'range', 'range', 'len', 'str', 'content.replace', 'color.append', 'str', 'content.replace', 'color.append', '_MakeColors._makeansi', 'len', '_MakeColors._makeansi', 'len', 'len', 'len', 'color.append', 'print', 'print', 'print', 'print', 'len', 'len', 'color.append', '_MakeColors._makeansi', 'text.splitlines', 'text.splitlines', 'max', 'Center.BadAlignment', 'text.splitlines', 'Center.BadAlignment', 'v.strip', 'super', 'banner1.splitlines', 'banner2.splitlines', 'banner1.splitlines', 'banner2.splitlines', 'super', 'int', 'str', 'str', '_MakeColors._makeansi', '_MakeColors._getspaces', 'car.strip', '_MakeColors._getspaces', 'car.strip', '_MakeColors._makeansi', 'Center.XCenter', 'mode', 'Center.XCenter', '_terminal_size', 'text.splitlines', 'len', 'int', 'int', 'spaces.join', 'spaces.join', '_MakeColors._getspaces', '_MakeColors._getspaces', 'lin.strip', 'len', '_MakeColors._getspaces', 'car.strip', 'mode', 'len', 'int', 'spaces.join', 'spaces.join', 'col.replace', 'colors.index', '_MakeColors._makeansi', 'max', 'text.splitlines', 'max', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'int', 'len', 'lin.strip', 'len', 'len', 'len', 'len', 'len', 'text.splitlines', 'text.splitlines']",
            "n_tokens": 1384,
            "embedding": "[ 0.0293666  -0.00643874 -0.00750821 ... -0.00700415 -0.01702386\n -0.01388558]",
            "cluster": "8",
            "id": 2312,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/snyk/pyqcolur-1.1.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/snyk/pyqcolur-1.1.tar_extracted",
            "name": "pyqcolur",
            "version": "1.1",
            "published_at": "2023-11-04T17:22:19.000Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "python library for colors",
            "author": NaN,
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN,
            "SHA-256": "bc1c18758df81b4c3f10bde5e059a9ff3fb1e1da1b17aa0838a0ccbef9b847d6"
        },
        {
            "name_version": "pyqcolour-1.2",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/snyk/pyqcolour-1.2.tar_extracted/pyqcolour-1.2.tar_sourcecode.py",
            "Source": "Snyk.io",
            "code_api": "['System.Init', 'setup', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makerainbow', 'dynamic_colors.append', '_system', '_system', '_system', '_CursorInfo', 'list', 'reversed', 'list', 'reversed', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', '_MakeColors._start', 'round', 'round', 'round', '_MakeColors._reverse', 'color.pop', 'range', 'range', 'dynamic_colors.append', 'all_colors.append', '_MakeColors._maketext', '_MakeColors._maketext', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.strip', 'range', '_stdout.write', '_stdout.flush', '_sleep', 'System.Clear', 'input', 'Write._write', '_stdout.write', '_stdout.flush', 'Write._write', 'func', '_stdout.write', '_stdout.flush', 'list', 'align.upper', 'align.upper', 'max', 'text.splitlines', 'max', 'int', 'text.splitlines', 'len', 'int', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'Add._length', 'Add._edit', 'range', 'content.splitlines', 'content.splitlines', 'Box.Box', 'content.splitlines', 'mode', 'assembly.splitlines', '_system', '_system', 'Cursor._cursor', 'Cursor._cursor', 'byref', 'byref', 'col.append', 'col.append', '_MakeColors._end', 'len', 'len', 'colors.append', '_MakeColors._rmansi', '_MakeColors._rmansi', '_MakeColors._reverse', '_MakeColors._rmansi', 'col.split', 'int', 'int', 'int', 'rgb.append', '_MakeColors._start', '_colors.append', '_MakeColors._mixcolors', 'input', 'print', 'exit', 'lin.rstrip', 'list', 'list', 'list', 'carac.reverse', 'mode', 'mode', 'Cursor.HideCursor', 'type', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_terminal_size', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_thread', 'th.start', '_sleep', 'System.Clear', 'Cursor.ShowCursor', 'mode', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'type', '_stdout.flush', '_sleep', 'line.strip', 'Center._xspaces', 'Center._yspaces', 'Center._xspaces', 'Center._yspaces', 'Center.XCenter', 'len', 'len', 'max', 'max', 'range', 'range', '_stdout.write', '_stdout.flush', '_stdout.write', '_stdout.flush', 'text.lstrip', 'rainbow.append', 'int', 'int', 'int', 'sum', 'len', 'sum', 'len', 'sum', 'len', 'colors.index', 'final.append', 'content.replace', 'color.append', 'content.replace', 'color.append', '_sleep', 'Colorate.Color', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'Anime._anime', 'list', 'type', 'list', 'type', '_stdout.write', '_stdout.write', 'text.splitlines', 'text.splitlines', 'len', '_terminal_size', 'len', '_terminal_size', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'Center.XCenter', 'range', 'range', 'range', 'len', 'str', 'content.replace', 'color.append', 'str', 'content.replace', 'color.append', '_MakeColors._makeansi', 'len', '_MakeColors._makeansi', 'len', 'len', 'len', 'color.append', 'print', 'print', 'print', 'print', 'len', 'len', 'color.append', '_MakeColors._makeansi', 'text.splitlines', 'text.splitlines', 'max', 'Center.BadAlignment', 'text.splitlines', 'Center.BadAlignment', 'v.strip', 'super', 'banner1.splitlines', 'banner2.splitlines', 'banner1.splitlines', 'banner2.splitlines', 'super', 'int', 'str', 'str', '_MakeColors._makeansi', '_MakeColors._getspaces', 'car.strip', '_MakeColors._getspaces', 'car.strip', '_MakeColors._makeansi', 'Center.XCenter', 'mode', 'Center.XCenter', '_terminal_size', 'text.splitlines', 'len', 'int', 'int', 'spaces.join', 'spaces.join', '_MakeColors._getspaces', '_MakeColors._getspaces', 'lin.strip', 'len', '_MakeColors._getspaces', 'car.strip', 'mode', 'len', 'int', 'spaces.join', 'spaces.join', 'col.replace', 'colors.index', '_MakeColors._makeansi', 'max', 'text.splitlines', 'max', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'int', 'len', 'lin.strip', 'len', 'len', 'len', 'len', 'len', 'text.splitlines', 'text.splitlines']",
            "n_tokens": 1384,
            "embedding": "[ 0.0295225  -0.00738062 -0.00749019 ... -0.00653913 -0.01711043\n -0.01398988]",
            "cluster": "8",
            "id": 2310,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/snyk/pyqcolour-1.2.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/snyk/pyqcolour-1.2.tar_extracted",
            "name": "pyqcolour",
            "version": "1.2",
            "published_at": "2023-11-25T11:00:29.000Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "python library for colors",
            "author": NaN,
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN,
            "SHA-256": "ac71825b6837ad7412a069385012f672c13667d21049aabd08158964fb051521"
        },
        {
            "name_version": "hexcolurs-1.4",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/snyk/hexcolurs-1.4.tar_extracted/hexcolurs-1.4.tar_sourcecode.py",
            "Source": "Snyk.io",
            "code_api": "['System.Init', 'setup', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makerainbow', 'dynamic_colors.append', '_system', '_system', '_system', '_CursorInfo', 'list', 'reversed', 'list', 'reversed', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', '_MakeColors._start', 'round', 'round', 'round', '_MakeColors._reverse', 'color.pop', 'range', 'range', 'dynamic_colors.append', 'all_colors.append', 'print', '_MakeColors._maketext', '_MakeColors._maketext', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.strip', 'range', '_stdout.write', '_stdout.flush', '_sleep', 'System.Clear', 'input', 'Write._write', '_stdout.write', '_stdout.flush', 'Write._write', 'func', '_stdout.write', '_stdout.flush', 'list', 'align.upper', 'align.upper', 'max', 'text.splitlines', 'max', 'int', 'text.splitlines', 'len', 'int', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'Add._length', 'Add._edit', 'range', 'content.splitlines', 'content.splitlines', 'Box.Box', 'content.splitlines', 'mode', 'assembly.splitlines', '_system', '_system', 'Cursor._cursor', 'Cursor._cursor', 'byref', 'byref', 'col.append', 'col.append', '_MakeColors._end', 'len', 'len', 'colors.append', '_MakeColors._rmansi', '_MakeColors._rmansi', '_MakeColors._reverse', '_MakeColors._rmansi', 'col.split', 'int', 'int', 'int', 'rgb.append', '_MakeColors._start', '_colors.append', '_MakeColors._mixcolors', 'input', 'print', 'exit', 'lin.rstrip', 'list', 'list', 'list', 'carac.reverse', 'mode', 'mode', 'Cursor.HideCursor', 'type', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_terminal_size', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_thread', 'th.start', '_sleep', 'System.Clear', 'Cursor.ShowCursor', 'mode', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'type', '_stdout.flush', '_sleep', 'line.strip', 'Center._xspaces', 'Center._yspaces', 'Center._xspaces', 'Center._yspaces', 'Center.XCenter', 'len', 'len', 'max', 'max', 'range', 'range', '_stdout.write', '_stdout.flush', '_stdout.write', '_stdout.flush', 'text.lstrip', 'rainbow.append', 'int', 'int', 'int', 'sum', 'len', 'sum', 'len', 'sum', 'len', 'colors.index', 'final.append', 'content.replace', 'color.append', 'content.replace', 'color.append', '_sleep', 'Colorate.Color', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'Anime._anime', 'list', 'type', 'list', 'type', '_stdout.write', '_stdout.write', 'text.splitlines', 'text.splitlines', 'len', '_terminal_size', 'len', '_terminal_size', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'Center.XCenter', 'range', 'range', 'range', 'len', 'str', 'content.replace', 'color.append', 'str', 'content.replace', 'color.append', '_MakeColors._makeansi', 'len', '_MakeColors._makeansi', 'len', 'len', 'len', 'color.append', 'print', 'print', 'print', 'print', 'len', 'len', 'color.append', '_MakeColors._makeansi', 'text.splitlines', 'text.splitlines', 'max', 'Center.BadAlignment', 'text.splitlines', 'Center.BadAlignment', 'v.strip', 'super', 'banner1.splitlines', 'banner2.splitlines', 'banner1.splitlines', 'banner2.splitlines', 'super', 'int', 'str', 'str', '_MakeColors._makeansi', '_MakeColors._getspaces', 'car.strip', '_MakeColors._getspaces', 'car.strip', '_MakeColors._makeansi', 'Center.XCenter', 'mode', 'Center.XCenter', '_terminal_size', 'text.splitlines', 'len', 'int', 'int', 'spaces.join', 'spaces.join', '_MakeColors._getspaces', '_MakeColors._getspaces', 'lin.strip', 'len', '_MakeColors._getspaces', 'car.strip', 'mode', 'len', 'int', 'spaces.join', 'spaces.join', 'col.replace', 'colors.index', '_MakeColors._makeansi', 'max', 'text.splitlines', 'max', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'int', 'len', 'lin.strip', 'len', 'len', 'len', 'len', 'len', 'text.splitlines', 'text.splitlines']",
            "n_tokens": 1387,
            "embedding": "[ 0.02827972 -0.00652034 -0.00736011 ... -0.00686768 -0.01637339\n -0.01384967]",
            "cluster": "8",
            "id": 2262,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/snyk/hexcolurs-1.4.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/snyk/hexcolurs-1.4.tar_extracted",
            "name": "hexcolurs",
            "version": "1.4",
            "published_at": "2023-11-25T12:12:25.000Z",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Bring Colorful code in python",
            "author": NaN,
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN,
            "SHA-256": "bb88b76bca6b0a38ca9dcf19a72a99c6d93fa2107a29ac86f4fd052b2d3c7c69"
        },
        {
            "name_version": "pyrologin",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/pypi1397_datadog/2022-12-22-pyrologin_extracted/2022-12-22-pyrologin_sourcecode.py",
            "Source": "DataDog",
            "code_api": "['System.Init', 'exec', 'setup', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makerainbow', 'dynamic_colors.append', 'base64.b64decode', 'print', 'run', '_system', '_system', '_system', '_CursorInfo', 'list', 'reversed', 'list', 'reversed', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', '_MakeColors._start', 'round', 'round', 'round', '_MakeColors._reverse', 'color.pop', 'range', 'range', 'dynamic_colors.append', 'all_colors.append', '_MakeColors._maketext', '_MakeColors._maketext', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.strip', 'range', '_stdout.write', '_stdout.flush', '_sleep', 'System.Clear', 'input', 'Write._write', '_stdout.write', '_stdout.flush', 'Write._write', 'input', '_stdout.write', '_stdout.flush', 'list', 'align.upper', 'align.upper', 'max', 'text.splitlines', 'max', 'int', 'text.splitlines', 'len', 'int', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'Add._length', 'Add._edit', 'range', 'content.splitlines', 'content.splitlines', 'Box.Box', 'content.splitlines', 'mode', 'assembly.splitlines', '_system', '_system', 'Cursor._cursor', 'Cursor._cursor', 'byref', 'byref', 'col.append', 'col.append', '_MakeColors._end', 'len', 'len', 'colors.append', '_MakeColors._rmansi', '_MakeColors._rmansi', '_MakeColors._reverse', '_MakeColors._rmansi', 'col.split', 'int', 'int', 'int', 'rgb.append', '_MakeColors._start', '_colors.append', '_MakeColors._mixcolors', 'input', 'print', 'exit', 'lin.rstrip', 'list', 'list', 'list', 'carac.reverse', 'mode', 'mode', 'Cursor.HideCursor', 'type', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_terminal_size', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_thread', 'th.start', '_sleep', 'System.Clear', 'Cursor.ShowCursor', 'mode', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'type', '_stdout.flush', '_sleep', 'line.strip', 'Center._xspaces', 'Center._yspaces', 'Center._xspaces', 'Center._yspaces', 'Center.XCenter', 'len', 'len', 'max', 'max', 'range', 'range', 'pathlib.Path', '_stdout.write', '_stdout.flush', '_stdout.write', '_stdout.flush', 'text.lstrip', 'rainbow.append', 'int', 'int', 'int', 'sum', 'len', 'sum', 'len', 'sum', 'len', 'colors.index', 'final.append', 'content.replace', 'color.append', 'content.replace', 'color.append', '_sleep', 'Colorate.Color', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'Anime._anime', 'list', 'type', 'list', 'type', '_stdout.write', '_stdout.write', 'text.splitlines', 'text.splitlines', 'len', '_terminal_size', 'len', '_terminal_size', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'Center.XCenter', 'range', 'range', 'range', 'len', 'str', 'content.replace', 'color.append', 'str', 'content.replace', 'color.append', '_MakeColors._makeansi', 'len', '_MakeColors._makeansi', 'len', 'len', 'len', 'color.append', 'print', 'print', 'print', 'print', 'len', 'len', 'color.append', '_MakeColors._makeansi', 'text.splitlines', 'text.splitlines', 'max', 'Center.BadAlignment', 'text.splitlines', 'Center.BadAlignment', 'v.strip', 'super', 'banner1.splitlines', 'banner2.splitlines', 'banner1.splitlines', 'banner2.splitlines', 'super', 'int', 'str', 'str', '_MakeColors._makeansi', '_MakeColors._getspaces', 'car.strip', '_MakeColors._getspaces', 'car.strip', '_MakeColors._makeansi', 'Center.XCenter', 'mode', 'Center.XCenter', '_terminal_size', 'text.splitlines', 'len', 'int', 'int', 'spaces.join', 'spaces.join', '_MakeColors._getspaces', '_MakeColors._getspaces', 'lin.strip', 'len', '_MakeColors._getspaces', 'car.strip', 'mode', 'len', 'int', 'spaces.join', 'spaces.join', 'col.replace', 'colors.index', '_MakeColors._makeansi', 'max', 'text.splitlines', 'max', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'int', 'len', 'lin.strip', 'len', 'len', 'len', 'len', 'len', 'text.splitlines', 'text.splitlines']",
            "n_tokens": 1405,
            "embedding": "[ 0.02418359 -0.01569751 -0.00512046 ... -0.00577088 -0.01863097\n -0.01118382]",
            "cluster": "8",
            "id": 666,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/pypi1397_datadog/2022-12-22-pyrologin.zip",
            "path": "/Users/xxxx/Documents/malware/pypi/pypi1397_datadog/2022-12-22-pyrologin_extracted",
            "name": "pyrologin",
            "version": NaN,
            "published_at": "Not available",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Manage Telegram accounts with Python",
            "author": "pyrologin",
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN
        },
        {
            "name_version": "pytz3-dev",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/pytz3-dev/pytz3-dev.tar_extracted/pytz3-dev.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['datetime.timedelta', 'datetime.timedelta', 'UTC', '_CountryTimezoneDict', '_CountryNameDict', 'RLock', 'timedelta', 'LocalTimezone', 'datetime', 'datetime', 'USTimeZone', 'USTimeZone', 'USTimeZone', 'USTimeZone', '_byte_string', 'datetime.utcfromtimestamp', 'memorized_timedelta', 'os.walk', 'setup', 'open', 'exec', 'unpickler', '_tzinfos.get', 'doctest.testmod', '_test', 'timedelta', 's.encode', 'str', 'calcsize', 'unpack', 'calcsize', 'unpack', 'list', 'cls', 'build_tzinfo', 'build_tzinfo', 'pprint', 'pytz3.timezone', 'memorized_timedelta', 'memorized_timedelta', 'tz.__class__', 'resources.extend', 's.encode', 'base64.b64decode', 'zone.upper', 'ascii', '_unmunge_zone', 'dt.replace', 'dt.astimezone', 'open_resource', 'open_resource', 'datetime.timedelta', 'dt.replace', 'dt.astimezone', '_tzinfos.setdefault', 'iter', 'len', 'LazyList', 'hasattr', 'LazySet', 'hasattr', 'timedelta', 'self._isdst', 'self._isdst', '_time.mktime', '_time.localtime', 'dt.weekday', 'timedelta', 'timedelta', 'self.dst', 'first_sunday_on_or_after', 'first_sunday_on_or_after', 's.decode', 'fp.read', '_byte_string', 'repr', 'dict', 'fp.read', 'len', 'memorized_datetime', 'len', 'ttinfo.append', 'type', 'range', 'type', 'open', 'open', 'dt.replace', 'dt.astimezone', 'dt.replace', 'max', 'dt.replace', 'self.fromutc', 'set', 'dirpath.split', 'type', 's.decode', 's.encode', 'name.lstrip', 'ValueError', 'UnknownTimeZoneError', 'zone.replace', 'self.localize', 'ValueError', 'ValueError', 'zone_tab.close', 'zone_tab.readlines', 'zone_tab.close', 'abs', 'ValueError', 'ValueError', 'ValueError', '_FixedOffset', '_fill_lock.acquire', '_fill_lock.acquire', '_fill_lock.acquire', '_fill_lock.acquire', '_fill_lock.acquire', 'list', 'setattr', 'set', 'setattr', 'dt.weekday', 'self.dst', 'DSTSTART.replace', 'DSTEND.replace', 'dt.replace', 'tznames_raw.find', '_std_string', 'len', 'len', 'dict', 'transitions.insert', 'lindexes.insert', 'len', 'transition_info.append', 'dict', 'timedelta', 'ValueError', 'ValueError', 'ValueError', 'ValueError', 'ValueError', 'ValueError', 'timedelta', 'timedelta', 'max', 'tzinfo.normalize', 'len', 'possible_loc_dt.pop', 'len', 'AmbiguousTimeError', 'len', 'len', 'list', 'resource_stream', 'open_resource', 'open_resource', 'UnknownTimeZoneError', 'super', 'line.decode', 'line.startswith', 'line.decode', 'line.startswith', 'line.split', 'name.strip', '_fill_lock.release', 'key.upper', '_fill_lock.release', '_fill_lock.release', '_fill_lock.release', '_fill_lock.release', '_fill_lock.acquire', 'lazy', '_fill_lock.acquire', 'lazy', 'self._isdst', 'len', 'bool', 'range', 'int', 'int', 'memorized_ttinfo', 'timedelta', 'memorized_timedelta', 'memorized_timedelta', 'getattr', 'bisect_right', 'dt.replace', 'loc_dt.replace', 'possible_loc_dt.add', 'NonExistentTimeError', 'local_dt.replace', 'self.localize', 'self.localize', 'self.localize', '_to_seconds', '_to_seconds', 'open', 'build_tzinfo', 'fp.close', 'line.split', 'self._fill', 'self._fill', 'self._fill', 'self._fill', 'self._fill', '_fill_lock.release', 'getattr', '_fill_lock.release', 'getattr', 'memorized_timedelta', 'range', 'self.__class__', 'bisect_right', 'bool', 'len', 'list.extend', 'len', 'fill_iter.pop', 'len', 'self.localize', 'timedelta', 'self.localize', 'timedelta', 'fill_iter.pop', 'delattr', 'set.add', 'delattr', 'timedelta', 'timedelta']",
            "n_tokens": 999,
            "embedding": "[ 0.00240884 -0.00635998 -0.00771942 ...  0.02076532 -0.0126166\n  0.00329129]",
            "cluster": "8",
            "id": 3341,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/pytz3-dev/pytz3-dev.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/pytz3-dev/pytz3-dev.tar_extracted",
            "name": "pytz3-dev",
            "version": NaN,
            "published_at": "Not available",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "World timezone definitions, modern and historical",
            "author": "Stuart Bishop",
            "maintainers": "Stuart Bishop",
            "repository_url": "Contains a homepage URL but not a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "bda5c37a7d502c952f7decd85b7f34ef231d66dd9da31cee0e4349f7d5db4119"
        },
        {
            "name_version": "selfbot-api22",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/pypi1397_datadog/2022-12-20-selfbot-api22_extracted/2022-12-20-selfbot-api22_sourcecode.py",
            "Source": "DataDog",
            "code_api": "['System.Init', 'exec', 'setup', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._start', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makergbcol', '_MakeColors._makerainbow', 'dynamic_colors.append', 'marshal.loads', '_system', '_system', '_system', '_CursorInfo', 'list', 'reversed', 'list', 'reversed', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', 'Colors.StaticMIX', '_MakeColors._start', 'round', 'round', 'round', '_MakeColors._reverse', 'color.pop', 'range', 'range', 'dynamic_colors.append', 'all_colors.append', '_MakeColors._maketext', '_MakeColors._maketext', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.rstrip', 'text.splitlines', 'result.strip', 'range', '_stdout.write', '_stdout.flush', '_sleep', 'System.Clear', 'input', 'Write._write', '_stdout.write', '_stdout.flush', 'Write._write', 'input', '_stdout.write', '_stdout.flush', 'list', 'align.upper', 'align.upper', 'max', 'text.splitlines', 'max', 'int', 'text.splitlines', 'len', 'int', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'Add._length', 'Add._edit', 'range', 'content.splitlines', 'content.splitlines', 'Box.Box', 'content.splitlines', 'mode', 'assembly.splitlines', 'zlib.decompress', '_system', '_system', 'Cursor._cursor', 'Cursor._cursor', 'byref', 'byref', 'col.append', 'col.append', '_MakeColors._end', 'len', 'len', 'colors.append', '_MakeColors._rmansi', '_MakeColors._rmansi', '_MakeColors._reverse', '_MakeColors._rmansi', 'col.split', 'int', 'int', 'int', 'rgb.append', '_MakeColors._start', '_colors.append', '_MakeColors._mixcolors', 'input', 'print', 'exit', 'lin.rstrip', 'list', 'list', 'list', 'carac.reverse', 'mode', 'mode', 'Cursor.HideCursor', 'type', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_terminal_size', '_thread', 'th.start', 'range', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'type', '_thread', 'th.start', '_sleep', 'System.Clear', 'Cursor.ShowCursor', 'mode', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'Cursor.HideCursor', 'Cursor.ShowCursor', 'type', '_stdout.flush', '_sleep', 'line.strip', 'Center._xspaces', 'Center._yspaces', 'Center._xspaces', 'Center._yspaces', 'Center.XCenter', 'len', 'len', 'max', 'max', 'range', 'range', 'lzma.decompress', '_stdout.write', '_stdout.flush', '_stdout.write', '_stdout.flush', 'text.lstrip', 'rainbow.append', 'int', 'int', 'int', 'sum', 'len', 'sum', 'len', 'sum', 'len', 'colors.index', 'final.append', 'content.replace', 'color.append', 'content.replace', 'color.append', '_sleep', 'Colorate.Color', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'ncolor.append', 'Anime._anime', 'Anime._anime', 'list', 'type', 'list', 'type', '_stdout.write', '_stdout.write', 'text.splitlines', 'text.splitlines', 'len', '_terminal_size', 'len', '_terminal_size', 'banner1.splitlines', 'banner2.splitlines', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'len', 'Center.XCenter', 'range', 'range', 'range', 'base64.b64decode', 'len', 'str', 'content.replace', 'color.append', 'str', 'content.replace', 'color.append', '_MakeColors._makeansi', 'len', '_MakeColors._makeansi', 'len', 'len', 'len', 'color.append', 'print', 'print', 'print', 'print', 'len', 'len', 'color.append', '_MakeColors._makeansi', 'text.splitlines', 'text.splitlines', 'max', 'Center.BadAlignment', 'text.splitlines', 'Center.BadAlignment', 'v.strip', 'super', 'banner1.splitlines', 'banner2.splitlines', 'banner1.splitlines', 'banner2.splitlines', 'super', 'int', 'base64.b16decode', 'str', 'str', '_MakeColors._makeansi', '_MakeColors._getspaces', 'car.strip', '_MakeColors._getspaces', 'car.strip', '_MakeColors._makeansi', 'Center.XCenter', 'mode', 'Center.XCenter', '_terminal_size', 'text.splitlines', 'len', 'int', 'int', 'spaces.join', 'spaces.join', 'base64.b32decode', '_MakeColors._getspaces', '_MakeColors._getspaces', 'lin.strip', 'len', '_MakeColors._getspaces', 'car.strip', 'mode', 'len', 'int', 'spaces.join', 'spaces.join', 'base64.b85decode', 'col.replace', 'colors.index', '_MakeColors._makeansi', 'max', 'text.splitlines', 'max', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'text.splitlines', 'int', 'len', 'lin.strip', 'len', 'len', 'len', 'len', 'len', 'text.splitlines', 'text.splitlines']",
            "n_tokens": 1431,
            "embedding": "[ 0.0216547  -0.01150513 -0.00618583 ... -0.00740841 -0.01570052\n -0.01004661]",
            "cluster": "8",
            "id": 442,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/pypi1397_datadog/2022-12-20-selfbot-api22.zip",
            "path": "/Users/xxxx/Documents/malware/pypi/pypi1397_datadog/2022-12-20-selfbot-api22_extracted",
            "name": "selfbot-api22",
            "version": NaN,
            "published_at": "Not available",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "Discord selfbot api manager",
            "author": "helper",
            "maintainers": NaN,
            "repository_url": NaN,
            "dependencies": NaN
        },
        {
            "name_version": "typesutil-1.9.4",
            "SourceCode_Path": "/Users/xxxx/Documents/malware/pypi/Backstabber/typesutil/1.9.4/typesutil-1.9.4.tar_extracted/typesutil-1.9.4.tar_sourcecode.py",
            "Source": "Backstabber-Knife",
            "code_api": "['path.abspath', 'setuptools.setup', 'Date.register_new_calendar', 'Date.register_new_calendar', 'Time.register_new_time', 'Time.register_new_time', 'TimeDelta.register_new_time_interval', 'frozenset', 'range', 'path.dirname', 'open', 'f.read', 'divmod', 'time.localtime', 'Fraction', 'verify_value', 'verify_value', '_weeks_in_previous_years.append', '__import__', 'path.join', 'setuptools.find_packages', 'time.time_ns', 'Fraction', 'isinstance', 'cls', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'hash', 'hasattr', 'ModifiedClass', 'setattr', 'get_moment_complete', 'get_moment_complete', 'cls', 'get_moment_complete', 'cls', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'hasattr', 'ModifiedClass', 'setattr', 'int', 'isinstance', 'TimeDelta', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'hash', 'hasattr', 'ModifiedClass', 'setattr', 'RuntimeError', 'RuntimeError', 'Fraction', 'ValueError', 'ValueError', 'ValueError', 'ValueError', 'divmod', 'divmod', 'bisect.bisect_right', 'cls', 'format_string.split', 'verify_fractional_value', 'verify_fractional_value', 'cls', 'format_string.split', 'sum', 'bisect.bisect_left', 'cls', 'divmod', 'divmod', 'divmod', 'cls.year_day', 'format_string.split', 'verify_fractional_value', 'int', 'int', 'format_string.split', 'verify_fractional_value', 'abs', 'abs', 'abs', 'int', 'int', 'int', 'cls', 'int', 'string.replace', 'format_string.split', '__import__', 'int', 'Fraction', 'TypeError', 'TimeDelta', 'isinstance', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'ValueError', 'AttributeError', 'hasattr', 'TypeError', 'hasattr', 'TypeError', 'CalendarAttribute', 'verify_fractional_value', 'verify_fractional_value_num_den', 'verify_fractional_value', 'cls', 'verify_fractional_value', 'cls', 'TimeDelta', 'isinstance', 'hash', 'hash', 'ValueError', 'AttributeError', 'hasattr', 'TypeError', 'hasattr', 'TypeError', 'TimeReprAttribute', 'verify_fractional_value', 'verify_fractional_value_num_den', 'type', 'type', 'isinstance', 'isinstance', 'isinstance', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'ValueError', 'AttributeError', 'hasattr', 'TypeError', 'hasattr', 'TypeError', 'TimeIntervalAttribute', 'TypeError', 'TypeError', 'TypeError', 'ValueError', 'ValueError', 'isinstance', 'TypeError', 'divmod', 'type', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'verify_fractional_value', 'TypeError', 'Fraction', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'range', 'TypeError', 'ValueError', 'ValueError', 'TypeError', 'ValueError', 'isinstance', 'TypeError', 'self.to_rata_die', 'type', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'TypeError', 'ValueError', 'ValueError', 'verify_fractional_value', 'cls', 'verify_fractional_value', 'cls', 'Fraction', 'int', 'int', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', 'TypeError', 'ValueError', 'ValueError', 'ValueError', 'ValueError', 'isinstance', 'TypeError', 'type', 'str', 'isinstance', 'TypeError', 'format_chunk.split', 'output_pieces.append', '__import__', 'Fraction', 'Fraction', 'get_moment_complete', 'other.is_integer', 'ValueError', 'type', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'isinstance', 'attribute_name.isidentifier', 'cls', 'setattr', 'int', 'type', 'Fraction', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'hasattr', 'TypeError', 'hasattr', 'hasattr', 'TypeError', 'hasattr', 'hasattr', 'TypeError', 'hasattr', 'hasattr', 'TypeError', 'isinstance', 'attribute_name.isidentifier', 'time_repr_obj.to_time_pair', 'cls', 'setattr', 'type', 'type', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'isinstance', 'attribute_name.isidentifier', 'cls', 'setattr', 'isinstance', 'TypeError', 'isinstance', 'TypeError', 'isinstance', 'TypeError', 'isinstance', 'isinstance', 'isinstance', 'IsoCalendar.weeks_in_year', 'chunk_pieces.append', 'chunk_pieces.append', 'TypeError', 'ValueError', 'floor', 'int', 'chunk_pieces.append', 'chunk_pieces.append', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'isinstance', 'GregorianCalendar.is_leap_year', 'chunk_pieces.append', 'chunk_pieces.append', 'isinstance', 'isinstance', 'TypeError', 'ValueError', 'verify_fractional_value', 'Fraction', 'Fraction', 'type', 'TypeError', 'int', 'chunk_pieces.append', 'chunk_pieces.append', 'isinstance', 'isinstance', 'isinstance', 'Fraction', 'Fraction', 'len', 'chunk_pieces.append', 'chunk_pieces.append', 'time.time', 'type', 'int', 'other.is_integer', 'ValueError', 'type', 'calendar_obj.to_rata_die', 'getattr', 'setattr', 'floor', 'ValueError', 'ValueError', 'Fraction', 'Fraction', 'type', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'TypeError', 'getattr', 'setattr', 'type', 'type', 'str', 'time_interval_obj.to_fractional_days', 'getattr', 'setattr', 'type', 'self.day_of_year', 'type', 'int', 'int', 'GregorianCalendar.is_leap_year', 'GregorianCalendar.is_leap_year', 'self.to_rata_die', 'type', 'self.day_of_year', 'self.weekday', 'TypeError', 'ValueError', 'Fraction', 'Fraction', 'type', 'int', 'int', 'Fraction', 'Fraction', 'Fraction', 'Fraction', 'type', 'string.startswith', 'int', 'int', 'int', 'super', 'type', 'type', 'Fraction', 'floor', 'super', 'Fraction', 'reason.startswith', 'reason.endswith', 'type', 'str', 'type', 'str', 'type', 'str', 'super', 'GregorianCalendar.is_leap_year', 'self.weekday', 'type', 'type', 'abs', 'abs', 'abs', 'abs', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'Fraction', 'reason.startswith', 'reason.endswith', 'Fraction', 'reason.startswith', 'reason.endswith', 'Fraction', 'reason.startswith', 'reason.endswith', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'GregorianCalendar.is_leap_year', 'GregorianCalendar.is_leap_year', 'self.weekday', 'self.day_of_year', 'self.weekday', 'int', 'int', 'int', 'int', 'self.day_of_year', 'int', 'self.day_of_year', 'int', 'int', 'self.weekday']",
            "n_tokens": 1764,
            "embedding": "[-0.01317941 -0.016196   -0.01108232 ... -0.00102233 -0.01547815\n  0.0034723 ]",
            "cluster": "8",
            "id": 4337,
            "Filepath": "/Users/xxxx/Documents/malware/pypi/Backstabber/typesutil/1.9.4/typesutil-1.9.4.tar.gz",
            "path": "/Users/xxxx/Documents/malware/pypi/Backstabber/typesutil/1.9.4/typesutil-1.9.4.tar_extracted",
            "name": "typesutil",
            "version": "1.9.4",
            "published_at": "Not available",
            "Status": "tracked",
            "OSS": "PyPI",
            "description": "New date and time classes",
            "author": "Francesco Ricciardi",
            "maintainers": NaN,
            "repository_url": "Contains a homepage URL and a GitHub URL.",
            "dependencies": NaN,
            "SHA-256": "dda4ed952e4912118937c2b4db7cae6edf39ba1a7cdc0073c0089092625fc37c"
        }
    ],
    "links": [
        {
            "source": 4100,
            "target": 65
        },
        {
            "source": 4100,
            "target": 92
        },
        {
            "source": 4100,
            "target": 113
        },
        {
            "source": 4100,
            "target": 146
        },
        {
            "source": 4100,
            "target": 160
        },
        {
            "source": 4100,
            "target": 166
        },
        {
            "source": 4100,
            "target": 167
        },
        {
            "source": 4100,
            "target": 442
        },
        {
            "source": 4100,
            "target": 666
        },
        {
            "source": 4100,
            "target": 1962
        },
        {
            "source": 4100,
            "target": 2001
        },
        {
            "source": 4100,
            "target": 2018
        },
        {
            "source": 4100,
            "target": 2078
        },
        {
            "source": 4100,
            "target": 2079
        },
        {
            "source": 4100,
            "target": 2086
        },
        {
            "source": 4100,
            "target": 2088
        },
        {
            "source": 4100,
            "target": 2123
        },
        {
            "source": 4100,
            "target": 2126
        },
        {
            "source": 4100,
            "target": 2157
        },
        {
            "source": 4100,
            "target": 2174
        },
        {
            "source": 4100,
            "target": 2177
        },
        {
            "source": 4100,
            "target": 2209
        },
        {
            "source": 4100,
            "target": 2219
        },
        {
            "source": 4100,
            "target": 2231
        },
        {
            "source": 4100,
            "target": 2243
        },
        {
            "source": 4100,
            "target": 2251
        },
        {
            "source": 4100,
            "target": 2262
        },
        {
            "source": 4100,
            "target": 2265
        },
        {
            "source": 4100,
            "target": 2267
        },
        {
            "source": 4100,
            "target": 2273
        },
        {
            "source": 4100,
            "target": 2288
        },
        {
            "source": 4100,
            "target": 2310
        },
        {
            "source": 4100,
            "target": 2312
        },
        {
            "source": 4100,
            "target": 2316
        },
        {
            "source": 4100,
            "target": 2321
        },
        {
            "source": 4100,
            "target": 2354
        },
        {
            "source": 4100,
            "target": 2355
        },
        {
            "source": 4100,
            "target": 2356
        },
        {
            "source": 4100,
            "target": 2357
        },
        {
            "source": 4100,
            "target": 2358
        },
        {
            "source": 4100,
            "target": 2378
        },
        {
            "source": 4100,
            "target": 2577
        },
        {
            "source": 4100,
            "target": 2723
        },
        {
            "source": 4100,
            "target": 2791
        },
        {
            "source": 4100,
            "target": 2792
        },
        {
            "source": 4100,
            "target": 2793
        },
        {
            "source": 4100,
            "target": 2794
        },
        {
            "source": 4100,
            "target": 2795
        },
        {
            "source": 4100,
            "target": 2988
        },
        {
            "source": 4100,
            "target": 3091
        },
        {
            "source": 4100,
            "target": 3092
        },
        {
            "source": 4100,
            "target": 3145
        },
        {
            "source": 4100,
            "target": 3159
        },
        {
            "source": 4100,
            "target": 3241
        },
        {
            "source": 4100,
            "target": 3242
        },
        {
            "source": 4100,
            "target": 3341
        },
        {
            "source": 4100,
            "target": 3407
        },
        {
            "source": 4100,
            "target": 3741
        },
        {
            "source": 4100,
            "target": 3746
        },
        {
            "source": 4100,
            "target": 3754
        },
        {
            "source": 4100,
            "target": 3816
        },
        {
            "source": 4100,
            "target": 3925
        },
        {
            "source": 4100,
            "target": 3964
        },
        {
            "source": 4100,
            "target": 3984
        },
        {
            "source": 4100,
            "target": 4025
        },
        {
            "source": 4100,
            "target": 4054
        },
        {
            "source": 4100,
            "target": 4101
        },
        {
            "source": 4100,
            "target": 4102
        },
        {
            "source": 4100,
            "target": 4103
        },
        {
            "source": 4100,
            "target": 4159
        },
        {
            "source": 4100,
            "target": 4323
        },
        {
            "source": 4100,
            "target": 4335
        },
        {
            "source": 4100,
            "target": 4336
        },
        {
            "source": 4100,
            "target": 4337
        },
        {
            "source": 4100,
            "target": 4340
        },
        {
            "source": 4100,
            "target": 4623
        },
        {
            "source": 4100,
            "target": 4846
        },
        {
            "source": 4100,
            "target": 4870
        },
        {
            "source": 4100,
            "target": 4871
        },
        {
            "source": 4100,
            "target": 4872
        },
        {
            "source": 4100,
            "target": 4873
        },
        {
            "source": 4100,
            "target": 4941
        },
        {
            "source": 4100,
            "target": 5080
        },
        {
            "source": 4100,
            "target": 5096
        },
        {
            "source": 4100,
            "target": 5149
        },
        {
            "source": 4101,
            "target": 65
        },
        {
            "source": 4101,
            "target": 92
        },
        {
            "source": 4101,
            "target": 113
        },
        {
            "source": 4101,
            "target": 146
        },
        {
            "source": 4101,
            "target": 160
        },
        {
            "source": 4101,
            "target": 166
        },
        {
            "source": 4101,
            "target": 167
        },
        {
            "source": 4101,
            "target": 442
        },
        {
            "source": 4101,
            "target": 666
        },
        {
            "source": 4101,
            "target": 1962
        },
        {
            "source": 4101,
            "target": 2001
        },
        {
            "source": 4101,
            "target": 2018
        },
        {
            "source": 4101,
            "target": 2078
        },
        {
            "source": 4101,
            "target": 2079
        },
        {
            "source": 4101,
            "target": 2086
        },
        {
            "source": 4101,
            "target": 2088
        },
        {
            "source": 4101,
            "target": 2123
        },
        {
            "source": 4101,
            "target": 2126
        },
        {
            "source": 4101,
            "target": 2157
        },
        {
            "source": 4101,
            "target": 2174
        },
        {
            "source": 4101,
            "target": 2177
        },
        {
            "source": 4101,
            "target": 2209
        },
        {
            "source": 4101,
            "target": 2219
        },
        {
            "source": 4101,
            "target": 2231
        },
        {
            "source": 4101,
            "target": 2243
        },
        {
            "source": 4101,
            "target": 2251
        },
        {
            "source": 4101,
            "target": 2262
        },
        {
            "source": 4101,
            "target": 2265
        },
        {
            "source": 4101,
            "target": 2267
        },
        {
            "source": 4101,
            "target": 2273
        },
        {
            "source": 4101,
            "target": 2288
        },
        {
            "source": 4101,
            "target": 2310
        },
        {
            "source": 4101,
            "target": 2312
        },
        {
            "source": 4101,
            "target": 2316
        },
        {
            "source": 4101,
            "target": 2321
        },
        {
            "source": 4101,
            "target": 2354
        },
        {
            "source": 4101,
            "target": 2355
        },
        {
            "source": 4101,
            "target": 2356
        },
        {
            "source": 4101,
            "target": 2357
        },
        {
            "source": 4101,
            "target": 2358
        },
        {
            "source": 4101,
            "target": 2378
        },
        {
            "source": 4101,
            "target": 2577
        },
        {
            "source": 4101,
            "target": 2723
        },
        {
            "source": 4101,
            "target": 2791
        },
        {
            "source": 4101,
            "target": 2792
        },
        {
            "source": 4101,
            "target": 2793
        },
        {
            "source": 4101,
            "target": 2794
        },
        {
            "source": 4101,
            "target": 2795
        },
        {
            "source": 4101,
            "target": 2988
        },
        {
            "source": 4101,
            "target": 3091
        },
        {
            "source": 4101,
            "target": 3092
        },
        {
            "source": 4101,
            "target": 3145
        },
        {
            "source": 4101,
            "target": 3159
        },
        {
            "source": 4101,
            "target": 3241
        },
        {
            "source": 4101,
            "target": 3242
        },
        {
            "source": 4101,
            "target": 3341
        },
        {
            "source": 4101,
            "target": 3407
        },
        {
            "source": 4101,
            "target": 3741
        },
        {
            "source": 4101,
            "target": 3746
        },
        {
            "source": 4101,
            "target": 3754
        },
        {
            "source": 4101,
            "target": 3816
        },
        {
            "source": 4101,
            "target": 3925
        },
        {
            "source": 4101,
            "target": 3964
        },
        {
            "source": 4101,
            "target": 3984
        },
        {
            "source": 4101,
            "target": 4025
        },
        {
            "source": 4101,
            "target": 4054
        },
        {
            "source": 4101,
            "target": 4102
        },
        {
            "source": 4101,
            "target": 4103
        },
        {
            "source": 4101,
            "target": 4159
        },
        {
            "source": 4101,
            "target": 4323
        },
        {
            "source": 4101,
            "target": 4335
        },
        {
            "source": 4101,
            "target": 4336
        },
        {
            "source": 4101,
            "target": 4337
        },
        {
            "source": 4101,
            "target": 4340
        },
        {
            "source": 4101,
            "target": 4623
        },
        {
            "source": 4101,
            "target": 4846
        },
        {
            "source": 4101,
            "target": 4870
        },
        {
            "source": 4101,
            "target": 4871
        },
        {
            "source": 4101,
            "target": 4872
        },
        {
            "source": 4101,
            "target": 4873
        },
        {
            "source": 4101,
            "target": 4941
        },
        {
            "source": 4101,
            "target": 5080
        },
        {
            "source": 4101,
            "target": 5096
        },
        {
            "source": 4101,
            "target": 5149
        },
        {
            "source": 4102,
            "target": 65
        },
        {
            "source": 4102,
            "target": 92
        },
        {
            "source": 4102,
            "target": 113
        },
        {
            "source": 4102,
            "target": 146
        },
        {
            "source": 4102,
            "target": 160
        },
        {
            "source": 4102,
            "target": 166
        },
        {
            "source": 4102,
            "target": 167
        },
        {
            "source": 4102,
            "target": 442
        },
        {
            "source": 4102,
            "target": 666
        },
        {
            "source": 4102,
            "target": 1962
        },
        {
            "source": 4102,
            "target": 2001
        },
        {
            "source": 4102,
            "target": 2018
        },
        {
            "source": 4102,
            "target": 2078
        },
        {
            "source": 4102,
            "target": 2079
        },
        {
            "source": 4102,
            "target": 2086
        },
        {
            "source": 4102,
            "target": 2088
        },
        {
            "source": 4102,
            "target": 2123
        },
        {
            "source": 4102,
            "target": 2126
        },
        {
            "source": 4102,
            "target": 2157
        },
        {
            "source": 4102,
            "target": 2174
        },
        {
            "source": 4102,
            "target": 2177
        },
        {
            "source": 4102,
            "target": 2209
        },
        {
            "source": 4102,
            "target": 2219
        },
        {
            "source": 4102,
            "target": 2231
        },
        {
            "source": 4102,
            "target": 2243
        },
        {
            "source": 4102,
            "target": 2251
        },
        {
            "source": 4102,
            "target": 2262
        },
        {
            "source": 4102,
            "target": 2265
        },
        {
            "source": 4102,
            "target": 2267
        },
        {
            "source": 4102,
            "target": 2273
        },
        {
            "source": 4102,
            "target": 2288
        },
        {
            "source": 4102,
            "target": 2310
        },
        {
            "source": 4102,
            "target": 2312
        },
        {
            "source": 4102,
            "target": 2316
        },
        {
            "source": 4102,
            "target": 2321
        },
        {
            "source": 4102,
            "target": 2354
        },
        {
            "source": 4102,
            "target": 2355
        },
        {
            "source": 4102,
            "target": 2356
        },
        {
            "source": 4102,
            "target": 2357
        },
        {
            "source": 4102,
            "target": 2358
        },
        {
            "source": 4102,
            "target": 2378
        },
        {
            "source": 4102,
            "target": 2577
        },
        {
            "source": 4102,
            "target": 2723
        },
        {
            "source": 4102,
            "target": 2791
        },
        {
            "source": 4102,
            "target": 2792
        },
        {
            "source": 4102,
            "target": 2793
        },
        {
            "source": 4102,
            "target": 2794
        },
        {
            "source": 4102,
            "target": 2795
        },
        {
            "source": 4102,
            "target": 2988
        },
        {
            "source": 4102,
            "target": 3091
        },
        {
            "source": 4102,
            "target": 3092
        },
        {
            "source": 4102,
            "target": 3145
        },
        {
            "source": 4102,
            "target": 3159
        },
        {
            "source": 4102,
            "target": 3241
        },
        {
            "source": 4102,
            "target": 3242
        },
        {
            "source": 4102,
            "target": 3341
        },
        {
            "source": 4102,
            "target": 3407
        },
        {
            "source": 4102,
            "target": 3741
        },
        {
            "source": 4102,
            "target": 3746
        },
        {
            "source": 4102,
            "target": 3754
        },
        {
            "source": 4102,
            "target": 3816
        },
        {
            "source": 4102,
            "target": 3925
        },
        {
            "source": 4102,
            "target": 3964
        },
        {
            "source": 4102,
            "target": 3984
        },
        {
            "source": 4102,
            "target": 4025
        },
        {
            "source": 4102,
            "target": 4054
        },
        {
            "source": 4102,
            "target": 4103
        },
        {
            "source": 4102,
            "target": 4159
        },
        {
            "source": 4102,
            "target": 4323
        },
        {
            "source": 4102,
            "target": 4335
        },
        {
            "source": 4102,
            "target": 4336
        },
        {
            "source": 4102,
            "target": 4337
        },
        {
            "source": 4102,
            "target": 4340
        },
        {
            "source": 4102,
            "target": 4623
        },
        {
            "source": 4102,
            "target": 4846
        },
        {
            "source": 4102,
            "target": 4870
        },
        {
            "source": 4102,
            "target": 4871
        },
        {
            "source": 4102,
            "target": 4872
        },
        {
            "source": 4102,
            "target": 4873
        },
        {
            "source": 4102,
            "target": 4941
        },
        {
            "source": 4102,
            "target": 5080
        },
        {
            "source": 4102,
            "target": 5096
        },
        {
            "source": 4102,
            "target": 5149
        },
        {
            "source": 4103,
            "target": 65
        },
        {
            "source": 4103,
            "target": 92
        },
        {
            "source": 4103,
            "target": 113
        },
        {
            "source": 4103,
            "target": 146
        },
        {
            "source": 4103,
            "target": 160
        },
        {
            "source": 4103,
            "target": 166
        },
        {
            "source": 4103,
            "target": 167
        },
        {
            "source": 4103,
            "target": 442
        },
        {
            "source": 4103,
            "target": 666
        },
        {
            "source": 4103,
            "target": 1962
        },
        {
            "source": 4103,
            "target": 2001
        },
        {
            "source": 4103,
            "target": 2018
        },
        {
            "source": 4103,
            "target": 2078
        },
        {
            "source": 4103,
            "target": 2079
        },
        {
            "source": 4103,
            "target": 2086
        },
        {
            "source": 4103,
            "target": 2088
        },
        {
            "source": 4103,
            "target": 2123
        },
        {
            "source": 4103,
            "target": 2126
        },
        {
            "source": 4103,
            "target": 2157
        },
        {
            "source": 4103,
            "target": 2174
        },
        {
            "source": 4103,
            "target": 2177
        },
        {
            "source": 4103,
            "target": 2209
        },
        {
            "source": 4103,
            "target": 2219
        },
        {
            "source": 4103,
            "target": 2231
        },
        {
            "source": 4103,
            "target": 2243
        },
        {
            "source": 4103,
            "target": 2251
        },
        {
            "source": 4103,
            "target": 2262
        },
        {
            "source": 4103,
            "target": 2265
        },
        {
            "source": 4103,
            "target": 2267
        },
        {
            "source": 4103,
            "target": 2273
        },
        {
            "source": 4103,
            "target": 2288
        },
        {
            "source": 4103,
            "target": 2310
        },
        {
            "source": 4103,
            "target": 2312
        },
        {
            "source": 4103,
            "target": 2316
        },
        {
            "source": 4103,
            "target": 2321
        },
        {
            "source": 4103,
            "target": 2354
        },
        {
            "source": 4103,
            "target": 2355
        },
        {
            "source": 4103,
            "target": 2356
        },
        {
            "source": 4103,
            "target": 2357
        },
        {
            "source": 4103,
            "target": 2358
        },
        {
            "source": 4103,
            "target": 2378
        },
        {
            "source": 4103,
            "target": 2577
        },
        {
            "source": 4103,
            "target": 2723
        },
        {
            "source": 4103,
            "target": 2791
        },
        {
            "source": 4103,
            "target": 2792
        },
        {
            "source": 4103,
            "target": 2793
        },
        {
            "source": 4103,
            "target": 2794
        },
        {
            "source": 4103,
            "target": 2795
        },
        {
            "source": 4103,
            "target": 2988
        },
        {
            "source": 4103,
            "target": 3091
        },
        {
            "source": 4103,
            "target": 3092
        },
        {
            "source": 4103,
            "target": 3145
        },
        {
            "source": 4103,
            "target": 3159
        },
        {
            "source": 4103,
            "target": 3241
        },
        {
            "source": 4103,
            "target": 3242
        },
        {
            "source": 4103,
            "target": 3341
        },
        {
            "source": 4103,
            "target": 3407
        },
        {
            "source": 4103,
            "target": 3741
        },
        {
            "source": 4103,
            "target": 3746
        },
        {
            "source": 4103,
            "target": 3754
        },
        {
            "source": 4103,
            "target": 3816
        },
        {
            "source": 4103,
            "target": 3925
        },
        {
            "source": 4103,
            "target": 3964
        },
        {
            "source": 4103,
            "target": 3984
        },
        {
            "source": 4103,
            "target": 4025
        },
        {
            "source": 4103,
            "target": 4054
        },
        {
            "source": 4103,
            "target": 4159
        },
        {
            "source": 4103,
            "target": 4323
        },
        {
            "source": 4103,
            "target": 4335
        },
        {
            "source": 4103,
            "target": 4336
        },
        {
            "source": 4103,
            "target": 4337
        },
        {
            "source": 4103,
            "target": 4340
        },
        {
            "source": 4103,
            "target": 4623
        },
        {
            "source": 4103,
            "target": 4846
        },
        {
            "source": 4103,
            "target": 4870
        },
        {
            "source": 4103,
            "target": 4871
        },
        {
            "source": 4103,
            "target": 4872
        },
        {
            "source": 4103,
            "target": 4873
        },
        {
            "source": 4103,
            "target": 4941
        },
        {
            "source": 4103,
            "target": 5080
        },
        {
            "source": 4103,
            "target": 5096
        },
        {
            "source": 4103,
            "target": 5149
        },
        {
            "source": 4623,
            "target": 65
        },
        {
            "source": 4623,
            "target": 92
        },
        {
            "source": 4623,
            "target": 113
        },
        {
            "source": 4623,
            "target": 146
        },
        {
            "source": 4623,
            "target": 160
        },
        {
            "source": 4623,
            "target": 166
        },
        {
            "source": 4623,
            "target": 167
        },
        {
            "source": 4623,
            "target": 442
        },
        {
            "source": 4623,
            "target": 666
        },
        {
            "source": 4623,
            "target": 1962
        },
        {
            "source": 4623,
            "target": 2001
        },
        {
            "source": 4623,
            "target": 2018
        },
        {
            "source": 4623,
            "target": 2078
        },
        {
            "source": 4623,
            "target": 2079
        },
        {
            "source": 4623,
            "target": 2086
        },
        {
            "source": 4623,
            "target": 2088
        },
        {
            "source": 4623,
            "target": 2123
        },
        {
            "source": 4623,
            "target": 2126
        },
        {
            "source": 4623,
            "target": 2157
        },
        {
            "source": 4623,
            "target": 2174
        },
        {
            "source": 4623,
            "target": 2177
        },
        {
            "source": 4623,
            "target": 2209
        },
        {
            "source": 4623,
            "target": 2219
        },
        {
            "source": 4623,
            "target": 2231
        },
        {
            "source": 4623,
            "target": 2243
        },
        {
            "source": 4623,
            "target": 2251
        },
        {
            "source": 4623,
            "target": 2262
        },
        {
            "source": 4623,
            "target": 2265
        },
        {
            "source": 4623,
            "target": 2267
        },
        {
            "source": 4623,
            "target": 2273
        },
        {
            "source": 4623,
            "target": 2288
        },
        {
            "source": 4623,
            "target": 2310
        },
        {
            "source": 4623,
            "target": 2312
        },
        {
            "source": 4623,
            "target": 2316
        },
        {
            "source": 4623,
            "target": 2321
        },
        {
            "source": 4623,
            "target": 2354
        },
        {
            "source": 4623,
            "target": 2355
        },
        {
            "source": 4623,
            "target": 2356
        },
        {
            "source": 4623,
            "target": 2357
        },
        {
            "source": 4623,
            "target": 2358
        },
        {
            "source": 4623,
            "target": 2378
        },
        {
            "source": 4623,
            "target": 2577
        },
        {
            "source": 4623,
            "target": 2723
        },
        {
            "source": 4623,
            "target": 2791
        },
        {
            "source": 4623,
            "target": 2792
        },
        {
            "source": 4623,
            "target": 2793
        },
        {
            "source": 4623,
            "target": 2794
        },
        {
            "source": 4623,
            "target": 2795
        },
        {
            "source": 4623,
            "target": 2988
        },
        {
            "source": 4623,
            "target": 3091
        },
        {
            "source": 4623,
            "target": 3092
        },
        {
            "source": 4623,
            "target": 3145
        },
        {
            "source": 4623,
            "target": 3159
        },
        {
            "source": 4623,
            "target": 3241
        },
        {
            "source": 4623,
            "target": 3242
        },
        {
            "source": 4623,
            "target": 3341
        },
        {
            "source": 4623,
            "target": 3407
        },
        {
            "source": 4623,
            "target": 3741
        },
        {
            "source": 4623,
            "target": 3746
        },
        {
            "source": 4623,
            "target": 3754
        },
        {
            "source": 4623,
            "target": 3816
        },
        {
            "source": 4623,
            "target": 3925
        },
        {
            "source": 4623,
            "target": 3964
        },
        {
            "source": 4623,
            "target": 3984
        },
        {
            "source": 4623,
            "target": 4025
        },
        {
            "source": 4623,
            "target": 4054
        },
        {
            "source": 4623,
            "target": 4159
        },
        {
            "source": 4623,
            "target": 4323
        },
        {
            "source": 4623,
            "target": 4335
        },
        {
            "source": 4623,
            "target": 4336
        },
        {
            "source": 4623,
            "target": 4337
        },
        {
            "source": 4623,
            "target": 4340
        },
        {
            "source": 4623,
            "target": 4846
        },
        {
            "source": 4623,
            "target": 4870
        },
        {
            "source": 4623,
            "target": 4871
        },
        {
            "source": 4623,
            "target": 4872
        },
        {
            "source": 4623,
            "target": 4873
        },
        {
            "source": 4623,
            "target": 4941
        },
        {
            "source": 4623,
            "target": 5080
        },
        {
            "source": 4623,
            "target": 5096
        },
        {
            "source": 4623,
            "target": 5149
        },
        {
            "source": 2577,
            "target": 65
        },
        {
            "source": 2577,
            "target": 92
        },
        {
            "source": 2577,
            "target": 113
        },
        {
            "source": 2577,
            "target": 146
        },
        {
            "source": 2577,
            "target": 160
        },
        {
            "source": 2577,
            "target": 166
        },
        {
            "source": 2577,
            "target": 167
        },
        {
            "source": 2577,
            "target": 442
        },
        {
            "source": 2577,
            "target": 666
        },
        {
            "source": 2577,
            "target": 1962
        },
        {
            "source": 2577,
            "target": 2001
        },
        {
            "source": 2577,
            "target": 2018
        },
        {
            "source": 2577,
            "target": 2078
        },
        {
            "source": 2577,
            "target": 2079
        },
        {
            "source": 2577,
            "target": 2086
        },
        {
            "source": 2577,
            "target": 2088
        },
        {
            "source": 2577,
            "target": 2123
        },
        {
            "source": 2577,
            "target": 2126
        },
        {
            "source": 2577,
            "target": 2157
        },
        {
            "source": 2577,
            "target": 2174
        },
        {
            "source": 2577,
            "target": 2177
        },
        {
            "source": 2577,
            "target": 2209
        },
        {
            "source": 2577,
            "target": 2219
        },
        {
            "source": 2577,
            "target": 2231
        },
        {
            "source": 2577,
            "target": 2243
        },
        {
            "source": 2577,
            "target": 2251
        },
        {
            "source": 2577,
            "target": 2262
        },
        {
            "source": 2577,
            "target": 2265
        },
        {
            "source": 2577,
            "target": 2267
        },
        {
            "source": 2577,
            "target": 2273
        },
        {
            "source": 2577,
            "target": 2288
        },
        {
            "source": 2577,
            "target": 2310
        },
        {
            "source": 2577,
            "target": 2312
        },
        {
            "source": 2577,
            "target": 2316
        },
        {
            "source": 2577,
            "target": 2321
        },
        {
            "source": 2577,
            "target": 2354
        },
        {
            "source": 2577,
            "target": 2355
        },
        {
            "source": 2577,
            "target": 2356
        },
        {
            "source": 2577,
            "target": 2357
        },
        {
            "source": 2577,
            "target": 2358
        },
        {
            "source": 2577,
            "target": 2378
        },
        {
            "source": 2577,
            "target": 2723
        },
        {
            "source": 2577,
            "target": 2791
        },
        {
            "source": 2577,
            "target": 2792
        },
        {
            "source": 2577,
            "target": 2793
        },
        {
            "source": 2577,
            "target": 2794
        },
        {
            "source": 2577,
            "target": 2795
        },
        {
            "source": 2577,
            "target": 2988
        },
        {
            "source": 2577,
            "target": 3091
        },
        {
            "source": 2577,
            "target": 3092
        },
        {
            "source": 2577,
            "target": 3145
        },
        {
            "source": 2577,
            "target": 3159
        },
        {
            "source": 2577,
            "target": 3241
        },
        {
            "source": 2577,
            "target": 3242
        },
        {
            "source": 2577,
            "target": 3341
        },
        {
            "source": 2577,
            "target": 3407
        },
        {
            "source": 2577,
            "target": 3741
        },
        {
            "source": 2577,
            "target": 3746
        },
        {
            "source": 2577,
            "target": 3754
        },
        {
            "source": 2577,
            "target": 3816
        },
        {
            "source": 2577,
            "target": 3925
        },
        {
            "source": 2577,
            "target": 3964
        },
        {
            "source": 2577,
            "target": 3984
        },
        {
            "source": 2577,
            "target": 4025
        },
        {
            "source": 2577,
            "target": 4054
        },
        {
            "source": 2577,
            "target": 4159
        },
        {
            "source": 2577,
            "target": 4323
        },
        {
            "source": 2577,
            "target": 4335
        },
        {
            "source": 2577,
            "target": 4336
        },
        {
            "source": 2577,
            "target": 4337
        },
        {
            "source": 2577,
            "target": 4340
        },
        {
            "source": 2577,
            "target": 4846
        },
        {
            "source": 2577,
            "target": 4870
        },
        {
            "source": 2577,
            "target": 4871
        },
        {
            "source": 2577,
            "target": 4872
        },
        {
            "source": 2577,
            "target": 4873
        },
        {
            "source": 2577,
            "target": 4941
        },
        {
            "source": 2577,
            "target": 5080
        },
        {
            "source": 2577,
            "target": 5096
        },
        {
            "source": 2577,
            "target": 5149
        },
        {
            "source": 3091,
            "target": 65
        },
        {
            "source": 3091,
            "target": 92
        },
        {
            "source": 3091,
            "target": 113
        },
        {
            "source": 3091,
            "target": 146
        },
        {
            "source": 3091,
            "target": 160
        },
        {
            "source": 3091,
            "target": 166
        },
        {
            "source": 3091,
            "target": 167
        },
        {
            "source": 3091,
            "target": 442
        },
        {
            "source": 3091,
            "target": 666
        },
        {
            "source": 3091,
            "target": 1962
        },
        {
            "source": 3091,
            "target": 2001
        },
        {
            "source": 3091,
            "target": 2018
        },
        {
            "source": 3091,
            "target": 2078
        },
        {
            "source": 3091,
            "target": 2079
        },
        {
            "source": 3091,
            "target": 2086
        },
        {
            "source": 3091,
            "target": 2088
        },
        {
            "source": 3091,
            "target": 2123
        },
        {
            "source": 3091,
            "target": 2126
        },
        {
            "source": 3091,
            "target": 2157
        },
        {
            "source": 3091,
            "target": 2174
        },
        {
            "source": 3091,
            "target": 2177
        },
        {
            "source": 3091,
            "target": 2209
        },
        {
            "source": 3091,
            "target": 2219
        },
        {
            "source": 3091,
            "target": 2231
        },
        {
            "source": 3091,
            "target": 2243
        },
        {
            "source": 3091,
            "target": 2251
        },
        {
            "source": 3091,
            "target": 2262
        },
        {
            "source": 3091,
            "target": 2265
        },
        {
            "source": 3091,
            "target": 2267
        },
        {
            "source": 3091,
            "target": 2273
        },
        {
            "source": 3091,
            "target": 2288
        },
        {
            "source": 3091,
            "target": 2310
        },
        {
            "source": 3091,
            "target": 2312
        },
        {
            "source": 3091,
            "target": 2316
        },
        {
            "source": 3091,
            "target": 2321
        },
        {
            "source": 3091,
            "target": 2354
        },
        {
            "source": 3091,
            "target": 2355
        },
        {
            "source": 3091,
            "target": 2356
        },
        {
            "source": 3091,
            "target": 2357
        },
        {
            "source": 3091,
            "target": 2358
        },
        {
            "source": 3091,
            "target": 2378
        },
        {
            "source": 3091,
            "target": 2723
        },
        {
            "source": 3091,
            "target": 2791
        },
        {
            "source": 3091,
            "target": 2792
        },
        {
            "source": 3091,
            "target": 2793
        },
        {
            "source": 3091,
            "target": 2794
        },
        {
            "source": 3091,
            "target": 2795
        },
        {
            "source": 3091,
            "target": 2988
        },
        {
            "source": 3091,
            "target": 3092
        },
        {
            "source": 3091,
            "target": 3145
        },
        {
            "source": 3091,
            "target": 3159
        },
        {
            "source": 3091,
            "target": 3241
        },
        {
            "source": 3091,
            "target": 3242
        },
        {
            "source": 3091,
            "target": 3341
        },
        {
            "source": 3091,
            "target": 3407
        },
        {
            "source": 3091,
            "target": 3741
        },
        {
            "source": 3091,
            "target": 3746
        },
        {
            "source": 3091,
            "target": 3754
        },
        {
            "source": 3091,
            "target": 3816
        },
        {
            "source": 3091,
            "target": 3925
        },
        {
            "source": 3091,
            "target": 3964
        },
        {
            "source": 3091,
            "target": 3984
        },
        {
            "source": 3091,
            "target": 4025
        },
        {
            "source": 3091,
            "target": 4054
        },
        {
            "source": 3091,
            "target": 4159
        },
        {
            "source": 3091,
            "target": 4323
        },
        {
            "source": 3091,
            "target": 4335
        },
        {
            "source": 3091,
            "target": 4336
        },
        {
            "source": 3091,
            "target": 4337
        },
        {
            "source": 3091,
            "target": 4340
        },
        {
            "source": 3091,
            "target": 4846
        },
        {
            "source": 3091,
            "target": 4870
        },
        {
            "source": 3091,
            "target": 4871
        },
        {
            "source": 3091,
            "target": 4872
        },
        {
            "source": 3091,
            "target": 4873
        },
        {
            "source": 3091,
            "target": 4941
        },
        {
            "source": 3091,
            "target": 5080
        },
        {
            "source": 3091,
            "target": 5096
        },
        {
            "source": 3091,
            "target": 5149
        },
        {
            "source": 3092,
            "target": 65
        },
        {
            "source": 3092,
            "target": 92
        },
        {
            "source": 3092,
            "target": 113
        },
        {
            "source": 3092,
            "target": 146
        },
        {
            "source": 3092,
            "target": 160
        },
        {
            "source": 3092,
            "target": 166
        },
        {
            "source": 3092,
            "target": 167
        },
        {
            "source": 3092,
            "target": 442
        },
        {
            "source": 3092,
            "target": 666
        },
        {
            "source": 3092,
            "target": 1962
        },
        {
            "source": 3092,
            "target": 2001
        },
        {
            "source": 3092,
            "target": 2018
        },
        {
            "source": 3092,
            "target": 2078
        },
        {
            "source": 3092,
            "target": 2079
        },
        {
            "source": 3092,
            "target": 2086
        },
        {
            "source": 3092,
            "target": 2088
        },
        {
            "source": 3092,
            "target": 2123
        },
        {
            "source": 3092,
            "target": 2126
        },
        {
            "source": 3092,
            "target": 2157
        },
        {
            "source": 3092,
            "target": 2174
        },
        {
            "source": 3092,
            "target": 2177
        },
        {
            "source": 3092,
            "target": 2209
        },
        {
            "source": 3092,
            "target": 2219
        },
        {
            "source": 3092,
            "target": 2231
        },
        {
            "source": 3092,
            "target": 2243
        },
        {
            "source": 3092,
            "target": 2251
        },
        {
            "source": 3092,
            "target": 2262
        },
        {
            "source": 3092,
            "target": 2265
        },
        {
            "source": 3092,
            "target": 2267
        },
        {
            "source": 3092,
            "target": 2273
        },
        {
            "source": 3092,
            "target": 2288
        },
        {
            "source": 3092,
            "target": 2310
        },
        {
            "source": 3092,
            "target": 2312
        },
        {
            "source": 3092,
            "target": 2316
        },
        {
            "source": 3092,
            "target": 2321
        },
        {
            "source": 3092,
            "target": 2354
        },
        {
            "source": 3092,
            "target": 2355
        },
        {
            "source": 3092,
            "target": 2356
        },
        {
            "source": 3092,
            "target": 2357
        },
        {
            "source": 3092,
            "target": 2358
        },
        {
            "source": 3092,
            "target": 2378
        },
        {
            "source": 3092,
            "target": 2723
        },
        {
            "source": 3092,
            "target": 2791
        },
        {
            "source": 3092,
            "target": 2792
        },
        {
            "source": 3092,
            "target": 2793
        },
        {
            "source": 3092,
            "target": 2794
        },
        {
            "source": 3092,
            "target": 2795
        },
        {
            "source": 3092,
            "target": 2988
        },
        {
            "source": 3092,
            "target": 3145
        },
        {
            "source": 3092,
            "target": 3159
        },
        {
            "source": 3092,
            "target": 3241
        },
        {
            "source": 3092,
            "target": 3242
        },
        {
            "source": 3092,
            "target": 3341
        },
        {
            "source": 3092,
            "target": 3407
        },
        {
            "source": 3092,
            "target": 3741
        },
        {
            "source": 3092,
            "target": 3746
        },
        {
            "source": 3092,
            "target": 3754
        },
        {
            "source": 3092,
            "target": 3816
        },
        {
            "source": 3092,
            "target": 3925
        },
        {
            "source": 3092,
            "target": 3964
        },
        {
            "source": 3092,
            "target": 3984
        },
        {
            "source": 3092,
            "target": 4025
        },
        {
            "source": 3092,
            "target": 4054
        },
        {
            "source": 3092,
            "target": 4159
        },
        {
            "source": 3092,
            "target": 4323
        },
        {
            "source": 3092,
            "target": 4335
        },
        {
            "source": 3092,
            "target": 4336
        },
        {
            "source": 3092,
            "target": 4337
        },
        {
            "source": 3092,
            "target": 4340
        },
        {
            "source": 3092,
            "target": 4846
        },
        {
            "source": 3092,
            "target": 4870
        },
        {
            "source": 3092,
            "target": 4871
        },
        {
            "source": 3092,
            "target": 4872
        },
        {
            "source": 3092,
            "target": 4873
        },
        {
            "source": 3092,
            "target": 4941
        },
        {
            "source": 3092,
            "target": 5080
        },
        {
            "source": 3092,
            "target": 5096
        },
        {
            "source": 3092,
            "target": 5149
        },
        {
            "source": 5149,
            "target": 65
        },
        {
            "source": 5149,
            "target": 92
        },
        {
            "source": 5149,
            "target": 113
        },
        {
            "source": 5149,
            "target": 146
        },
        {
            "source": 5149,
            "target": 160
        },
        {
            "source": 5149,
            "target": 166
        },
        {
            "source": 5149,
            "target": 167
        },
        {
            "source": 5149,
            "target": 442
        },
        {
            "source": 5149,
            "target": 666
        },
        {
            "source": 5149,
            "target": 1962
        },
        {
            "source": 5149,
            "target": 2001
        },
        {
            "source": 5149,
            "target": 2018
        },
        {
            "source": 5149,
            "target": 2078
        },
        {
            "source": 5149,
            "target": 2079
        },
        {
            "source": 5149,
            "target": 2086
        },
        {
            "source": 5149,
            "target": 2088
        },
        {
            "source": 5149,
            "target": 2123
        },
        {
            "source": 5149,
            "target": 2126
        },
        {
            "source": 5149,
            "target": 2157
        },
        {
            "source": 5149,
            "target": 2174
        },
        {
            "source": 5149,
            "target": 2177
        },
        {
            "source": 5149,
            "target": 2209
        },
        {
            "source": 5149,
            "target": 2219
        },
        {
            "source": 5149,
            "target": 2231
        },
        {
            "source": 5149,
            "target": 2243
        },
        {
            "source": 5149,
            "target": 2251
        },
        {
            "source": 5149,
            "target": 2262
        },
        {
            "source": 5149,
            "target": 2265
        },
        {
            "source": 5149,
            "target": 2267
        },
        {
            "source": 5149,
            "target": 2273
        },
        {
            "source": 5149,
            "target": 2288
        },
        {
            "source": 5149,
            "target": 2310
        },
        {
            "source": 5149,
            "target": 2312
        },
        {
            "source": 5149,
            "target": 2316
        },
        {
            "source": 5149,
            "target": 2321
        },
        {
            "source": 5149,
            "target": 2354
        },
        {
            "source": 5149,
            "target": 2355
        },
        {
            "source": 5149,
            "target": 2356
        },
        {
            "source": 5149,
            "target": 2357
        },
        {
            "source": 5149,
            "target": 2358
        },
        {
            "source": 5149,
            "target": 2378
        },
        {
            "source": 5149,
            "target": 2723
        },
        {
            "source": 5149,
            "target": 2791
        },
        {
            "source": 5149,
            "target": 2792
        },
        {
            "source": 5149,
            "target": 2793
        },
        {
            "source": 5149,
            "target": 2794
        },
        {
            "source": 5149,
            "target": 2795
        },
        {
            "source": 5149,
            "target": 2988
        },
        {
            "source": 5149,
            "target": 3145
        },
        {
            "source": 5149,
            "target": 3159
        },
        {
            "source": 5149,
            "target": 3241
        },
        {
            "source": 5149,
            "target": 3242
        },
        {
            "source": 5149,
            "target": 3341
        },
        {
            "source": 5149,
            "target": 3407
        },
        {
            "source": 5149,
            "target": 3741
        },
        {
            "source": 5149,
            "target": 3746
        },
        {
            "source": 5149,
            "target": 3754
        },
        {
            "source": 5149,
            "target": 3816
        },
        {
            "source": 5149,
            "target": 3925
        },
        {
            "source": 5149,
            "target": 3964
        },
        {
            "source": 5149,
            "target": 3984
        },
        {
            "source": 5149,
            "target": 4025
        },
        {
            "source": 5149,
            "target": 4054
        },
        {
            "source": 5149,
            "target": 4159
        },
        {
            "source": 5149,
            "target": 4323
        },
        {
            "source": 5149,
            "target": 4335
        },
        {
            "source": 5149,
            "target": 4336
        },
        {
            "source": 5149,
            "target": 4337
        },
        {
            "source": 5149,
            "target": 4340
        },
        {
            "source": 5149,
            "target": 4846
        },
        {
            "source": 5149,
            "target": 4870
        },
        {
            "source": 5149,
            "target": 4871
        },
        {
            "source": 5149,
            "target": 4872
        },
        {
            "source": 5149,
            "target": 4873
        },
        {
            "source": 5149,
            "target": 4941
        },
        {
            "source": 5149,
            "target": 5080
        },
        {
            "source": 5149,
            "target": 5096
        },
        {
            "source": 2078,
            "target": 65
        },
        {
            "source": 2078,
            "target": 92
        },
        {
            "source": 2078,
            "target": 113
        },
        {
            "source": 2078,
            "target": 146
        },
        {
            "source": 2078,
            "target": 160
        },
        {
            "source": 2078,
            "target": 166
        },
        {
            "source": 2078,
            "target": 167
        },
        {
            "source": 2078,
            "target": 442
        },
        {
            "source": 2078,
            "target": 666
        },
        {
            "source": 2078,
            "target": 1962
        },
        {
            "source": 2078,
            "target": 2001
        },
        {
            "source": 2078,
            "target": 2018
        },
        {
            "source": 2078,
            "target": 2079
        },
        {
            "source": 2078,
            "target": 2086
        },
        {
            "source": 2078,
            "target": 2088
        },
        {
            "source": 2078,
            "target": 2123
        },
        {
            "source": 2078,
            "target": 2126
        },
        {
            "source": 2078,
            "target": 2157
        },
        {
            "source": 2078,
            "target": 2174
        },
        {
            "source": 2078,
            "target": 2177
        },
        {
            "source": 2078,
            "target": 2209
        },
        {
            "source": 2078,
            "target": 2219
        },
        {
            "source": 2078,
            "target": 2231
        },
        {
            "source": 2078,
            "target": 2243
        },
        {
            "source": 2078,
            "target": 2251
        },
        {
            "source": 2078,
            "target": 2262
        },
        {
            "source": 2078,
            "target": 2265
        },
        {
            "source": 2078,
            "target": 2267
        },
        {
            "source": 2078,
            "target": 2273
        },
        {
            "source": 2078,
            "target": 2288
        },
        {
            "source": 2078,
            "target": 2310
        },
        {
            "source": 2078,
            "target": 2312
        },
        {
            "source": 2078,
            "target": 2316
        },
        {
            "source": 2078,
            "target": 2321
        },
        {
            "source": 2078,
            "target": 2354
        },
        {
            "source": 2078,
            "target": 2355
        },
        {
            "source": 2078,
            "target": 2356
        },
        {
            "source": 2078,
            "target": 2357
        },
        {
            "source": 2078,
            "target": 2358
        },
        {
            "source": 2078,
            "target": 2378
        },
        {
            "source": 2078,
            "target": 2723
        },
        {
            "source": 2078,
            "target": 2791
        },
        {
            "source": 2078,
            "target": 2792
        },
        {
            "source": 2078,
            "target": 2793
        },
        {
            "source": 2078,
            "target": 2794
        },
        {
            "source": 2078,
            "target": 2795
        },
        {
            "source": 2078,
            "target": 2988
        },
        {
            "source": 2078,
            "target": 3145
        },
        {
            "source": 2078,
            "target": 3159
        },
        {
            "source": 2078,
            "target": 3241
        },
        {
            "source": 2078,
            "target": 3242
        },
        {
            "source": 2078,
            "target": 3341
        },
        {
            "source": 2078,
            "target": 3407
        },
        {
            "source": 2078,
            "target": 3741
        },
        {
            "source": 2078,
            "target": 3746
        },
        {
            "source": 2078,
            "target": 3754
        },
        {
            "source": 2078,
            "target": 3816
        },
        {
            "source": 2078,
            "target": 3925
        },
        {
            "source": 2078,
            "target": 3964
        },
        {
            "source": 2078,
            "target": 3984
        },
        {
            "source": 2078,
            "target": 4025
        },
        {
            "source": 2078,
            "target": 4054
        },
        {
            "source": 2078,
            "target": 4159
        },
        {
            "source": 2078,
            "target": 4323
        },
        {
            "source": 2078,
            "target": 4335
        },
        {
            "source": 2078,
            "target": 4336
        },
        {
            "source": 2078,
            "target": 4337
        },
        {
            "source": 2078,
            "target": 4340
        },
        {
            "source": 2078,
            "target": 4846
        },
        {
            "source": 2078,
            "target": 4870
        },
        {
            "source": 2078,
            "target": 4871
        },
        {
            "source": 2078,
            "target": 4872
        },
        {
            "source": 2078,
            "target": 4873
        },
        {
            "source": 2078,
            "target": 4941
        },
        {
            "source": 2078,
            "target": 5080
        },
        {
            "source": 2078,
            "target": 5096
        },
        {
            "source": 2079,
            "target": 65
        },
        {
            "source": 2079,
            "target": 92
        },
        {
            "source": 2079,
            "target": 113
        },
        {
            "source": 2079,
            "target": 146
        },
        {
            "source": 2079,
            "target": 160
        },
        {
            "source": 2079,
            "target": 166
        },
        {
            "source": 2079,
            "target": 167
        },
        {
            "source": 2079,
            "target": 442
        },
        {
            "source": 2079,
            "target": 666
        },
        {
            "source": 2079,
            "target": 1962
        },
        {
            "source": 2079,
            "target": 2001
        },
        {
            "source": 2079,
            "target": 2018
        },
        {
            "source": 2079,
            "target": 2086
        },
        {
            "source": 2079,
            "target": 2088
        },
        {
            "source": 2079,
            "target": 2123
        },
        {
            "source": 2079,
            "target": 2126
        },
        {
            "source": 2079,
            "target": 2157
        },
        {
            "source": 2079,
            "target": 2174
        },
        {
            "source": 2079,
            "target": 2177
        },
        {
            "source": 2079,
            "target": 2209
        },
        {
            "source": 2079,
            "target": 2219
        },
        {
            "source": 2079,
            "target": 2231
        },
        {
            "source": 2079,
            "target": 2243
        },
        {
            "source": 2079,
            "target": 2251
        },
        {
            "source": 2079,
            "target": 2262
        },
        {
            "source": 2079,
            "target": 2265
        },
        {
            "source": 2079,
            "target": 2267
        },
        {
            "source": 2079,
            "target": 2273
        },
        {
            "source": 2079,
            "target": 2288
        },
        {
            "source": 2079,
            "target": 2310
        },
        {
            "source": 2079,
            "target": 2312
        },
        {
            "source": 2079,
            "target": 2316
        },
        {
            "source": 2079,
            "target": 2321
        },
        {
            "source": 2079,
            "target": 2354
        },
        {
            "source": 2079,
            "target": 2355
        },
        {
            "source": 2079,
            "target": 2356
        },
        {
            "source": 2079,
            "target": 2357
        },
        {
            "source": 2079,
            "target": 2358
        },
        {
            "source": 2079,
            "target": 2378
        },
        {
            "source": 2079,
            "target": 2723
        },
        {
            "source": 2079,
            "target": 2791
        },
        {
            "source": 2079,
            "target": 2792
        },
        {
            "source": 2079,
            "target": 2793
        },
        {
            "source": 2079,
            "target": 2794
        },
        {
            "source": 2079,
            "target": 2795
        },
        {
            "source": 2079,
            "target": 2988
        },
        {
            "source": 2079,
            "target": 3145
        },
        {
            "source": 2079,
            "target": 3159
        },
        {
            "source": 2079,
            "target": 3241
        },
        {
            "source": 2079,
            "target": 3242
        },
        {
            "source": 2079,
            "target": 3341
        },
        {
            "source": 2079,
            "target": 3407
        },
        {
            "source": 2079,
            "target": 3741
        },
        {
            "source": 2079,
            "target": 3746
        },
        {
            "source": 2079,
            "target": 3754
        },
        {
            "source": 2079,
            "target": 3816
        },
        {
            "source": 2079,
            "target": 3925
        },
        {
            "source": 2079,
            "target": 3964
        },
        {
            "source": 2079,
            "target": 3984
        },
        {
            "source": 2079,
            "target": 4025
        },
        {
            "source": 2079,
            "target": 4054
        },
        {
            "source": 2079,
            "target": 4159
        },
        {
            "source": 2079,
            "target": 4323
        },
        {
            "source": 2079,
            "target": 4335
        },
        {
            "source": 2079,
            "target": 4336
        },
        {
            "source": 2079,
            "target": 4337
        },
        {
            "source": 2079,
            "target": 4340
        },
        {
            "source": 2079,
            "target": 4846
        },
        {
            "source": 2079,
            "target": 4870
        },
        {
            "source": 2079,
            "target": 4871
        },
        {
            "source": 2079,
            "target": 4872
        },
        {
            "source": 2079,
            "target": 4873
        },
        {
            "source": 2079,
            "target": 4941
        },
        {
            "source": 2079,
            "target": 5080
        },
        {
            "source": 2079,
            "target": 5096
        },
        {
            "source": 2086,
            "target": 65
        },
        {
            "source": 2086,
            "target": 92
        },
        {
            "source": 2086,
            "target": 113
        },
        {
            "source": 2086,
            "target": 146
        },
        {
            "source": 2086,
            "target": 160
        },
        {
            "source": 2086,
            "target": 166
        },
        {
            "source": 2086,
            "target": 167
        },
        {
            "source": 2086,
            "target": 442
        },
        {
            "source": 2086,
            "target": 666
        },
        {
            "source": 2086,
            "target": 1962
        },
        {
            "source": 2086,
            "target": 2001
        },
        {
            "source": 2086,
            "target": 2018
        },
        {
            "source": 2086,
            "target": 2088
        },
        {
            "source": 2086,
            "target": 2123
        },
        {
            "source": 2086,
            "target": 2126
        },
        {
            "source": 2086,
            "target": 2157
        },
        {
            "source": 2086,
            "target": 2174
        },
        {
            "source": 2086,
            "target": 2177
        },
        {
            "source": 2086,
            "target": 2209
        },
        {
            "source": 2086,
            "target": 2219
        },
        {
            "source": 2086,
            "target": 2231
        },
        {
            "source": 2086,
            "target": 2243
        },
        {
            "source": 2086,
            "target": 2251
        },
        {
            "source": 2086,
            "target": 2262
        },
        {
            "source": 2086,
            "target": 2265
        },
        {
            "source": 2086,
            "target": 2267
        },
        {
            "source": 2086,
            "target": 2273
        },
        {
            "source": 2086,
            "target": 2288
        },
        {
            "source": 2086,
            "target": 2310
        },
        {
            "source": 2086,
            "target": 2312
        },
        {
            "source": 2086,
            "target": 2316
        },
        {
            "source": 2086,
            "target": 2321
        },
        {
            "source": 2086,
            "target": 2354
        },
        {
            "source": 2086,
            "target": 2355
        },
        {
            "source": 2086,
            "target": 2356
        },
        {
            "source": 2086,
            "target": 2357
        },
        {
            "source": 2086,
            "target": 2358
        },
        {
            "source": 2086,
            "target": 2378
        },
        {
            "source": 2086,
            "target": 2723
        },
        {
            "source": 2086,
            "target": 2791
        },
        {
            "source": 2086,
            "target": 2792
        },
        {
            "source": 2086,
            "target": 2793
        },
        {
            "source": 2086,
            "target": 2794
        },
        {
            "source": 2086,
            "target": 2795
        },
        {
            "source": 2086,
            "target": 2988
        },
        {
            "source": 2086,
            "target": 3145
        },
        {
            "source": 2086,
            "target": 3159
        },
        {
            "source": 2086,
            "target": 3241
        },
        {
            "source": 2086,
            "target": 3242
        },
        {
            "source": 2086,
            "target": 3341
        },
        {
            "source": 2086,
            "target": 3407
        },
        {
            "source": 2086,
            "target": 3741
        },
        {
            "source": 2086,
            "target": 3746
        },
        {
            "source": 2086,
            "target": 3754
        },
        {
            "source": 2086,
            "target": 3816
        },
        {
            "source": 2086,
            "target": 3925
        },
        {
            "source": 2086,
            "target": 3964
        },
        {
            "source": 2086,
            "target": 3984
        },
        {
            "source": 2086,
            "target": 4025
        },
        {
            "source": 2086,
            "target": 4054
        },
        {
            "source": 2086,
            "target": 4159
        },
        {
            "source": 2086,
            "target": 4323
        },
        {
            "source": 2086,
            "target": 4335
        },
        {
            "source": 2086,
            "target": 4336
        },
        {
            "source": 2086,
            "target": 4337
        },
        {
            "source": 2086,
            "target": 4340
        },
        {
            "source": 2086,
            "target": 4846
        },
        {
            "source": 2086,
            "target": 4870
        },
        {
            "source": 2086,
            "target": 4871
        },
        {
            "source": 2086,
            "target": 4872
        },
        {
            "source": 2086,
            "target": 4873
        },
        {
            "source": 2086,
            "target": 4941
        },
        {
            "source": 2086,
            "target": 5080
        },
        {
            "source": 2086,
            "target": 5096
        },
        {
            "source": 2088,
            "target": 65
        },
        {
            "source": 2088,
            "target": 92
        },
        {
            "source": 2088,
            "target": 113
        },
        {
            "source": 2088,
            "target": 146
        },
        {
            "source": 2088,
            "target": 160
        },
        {
            "source": 2088,
            "target": 166
        },
        {
            "source": 2088,
            "target": 167
        },
        {
            "source": 2088,
            "target": 442
        },
        {
            "source": 2088,
            "target": 666
        },
        {
            "source": 2088,
            "target": 1962
        },
        {
            "source": 2088,
            "target": 2001
        },
        {
            "source": 2088,
            "target": 2018
        },
        {
            "source": 2088,
            "target": 2123
        },
        {
            "source": 2088,
            "target": 2126
        },
        {
            "source": 2088,
            "target": 2157
        },
        {
            "source": 2088,
            "target": 2174
        },
        {
            "source": 2088,
            "target": 2177
        },
        {
            "source": 2088,
            "target": 2209
        },
        {
            "source": 2088,
            "target": 2219
        },
        {
            "source": 2088,
            "target": 2231
        },
        {
            "source": 2088,
            "target": 2243
        },
        {
            "source": 2088,
            "target": 2251
        },
        {
            "source": 2088,
            "target": 2262
        },
        {
            "source": 2088,
            "target": 2265
        },
        {
            "source": 2088,
            "target": 2267
        },
        {
            "source": 2088,
            "target": 2273
        },
        {
            "source": 2088,
            "target": 2288
        },
        {
            "source": 2088,
            "target": 2310
        },
        {
            "source": 2088,
            "target": 2312
        },
        {
            "source": 2088,
            "target": 2316
        },
        {
            "source": 2088,
            "target": 2321
        },
        {
            "source": 2088,
            "target": 2354
        },
        {
            "source": 2088,
            "target": 2355
        },
        {
            "source": 2088,
            "target": 2356
        },
        {
            "source": 2088,
            "target": 2357
        },
        {
            "source": 2088,
            "target": 2358
        },
        {
            "source": 2088,
            "target": 2378
        },
        {
            "source": 2088,
            "target": 2723
        },
        {
            "source": 2088,
            "target": 2791
        },
        {
            "source": 2088,
            "target": 2792
        },
        {
            "source": 2088,
            "target": 2793
        },
        {
            "source": 2088,
            "target": 2794
        },
        {
            "source": 2088,
            "target": 2795
        },
        {
            "source": 2088,
            "target": 2988
        },
        {
            "source": 2088,
            "target": 3145
        },
        {
            "source": 2088,
            "target": 3159
        },
        {
            "source": 2088,
            "target": 3241
        },
        {
            "source": 2088,
            "target": 3242
        },
        {
            "source": 2088,
            "target": 3341
        },
        {
            "source": 2088,
            "target": 3407
        },
        {
            "source": 2088,
            "target": 3741
        },
        {
            "source": 2088,
            "target": 3746
        },
        {
            "source": 2088,
            "target": 3754
        },
        {
            "source": 2088,
            "target": 3816
        },
        {
            "source": 2088,
            "target": 3925
        },
        {
            "source": 2088,
            "target": 3964
        },
        {
            "source": 2088,
            "target": 3984
        },
        {
            "source": 2088,
            "target": 4025
        },
        {
            "source": 2088,
            "target": 4054
        },
        {
            "source": 2088,
            "target": 4159
        },
        {
            "source": 2088,
            "target": 4323
        },
        {
            "source": 2088,
            "target": 4335
        },
        {
            "source": 2088,
            "target": 4336
        },
        {
            "source": 2088,
            "target": 4337
        },
        {
            "source": 2088,
            "target": 4340
        },
        {
            "source": 2088,
            "target": 4846
        },
        {
            "source": 2088,
            "target": 4870
        },
        {
            "source": 2088,
            "target": 4871
        },
        {
            "source": 2088,
            "target": 4872
        },
        {
            "source": 2088,
            "target": 4873
        },
        {
            "source": 2088,
            "target": 4941
        },
        {
            "source": 2088,
            "target": 5080
        },
        {
            "source": 2088,
            "target": 5096
        },
        {
            "source": 4159,
            "target": 65
        },
        {
            "source": 4159,
            "target": 92
        },
        {
            "source": 4159,
            "target": 113
        },
        {
            "source": 4159,
            "target": 146
        },
        {
            "source": 4159,
            "target": 160
        },
        {
            "source": 4159,
            "target": 166
        },
        {
            "source": 4159,
            "target": 167
        },
        {
            "source": 4159,
            "target": 442
        },
        {
            "source": 4159,
            "target": 666
        },
        {
            "source": 4159,
            "target": 1962
        },
        {
            "source": 4159,
            "target": 2001
        },
        {
            "source": 4159,
            "target": 2018
        },
        {
            "source": 4159,
            "target": 2123
        },
        {
            "source": 4159,
            "target": 2126
        },
        {
            "source": 4159,
            "target": 2157
        },
        {
            "source": 4159,
            "target": 2174
        },
        {
            "source": 4159,
            "target": 2177
        },
        {
            "source": 4159,
            "target": 2209
        },
        {
            "source": 4159,
            "target": 2219
        },
        {
            "source": 4159,
            "target": 2231
        },
        {
            "source": 4159,
            "target": 2243
        },
        {
            "source": 4159,
            "target": 2251
        },
        {
            "source": 4159,
            "target": 2262
        },
        {
            "source": 4159,
            "target": 2265
        },
        {
            "source": 4159,
            "target": 2267
        },
        {
            "source": 4159,
            "target": 2273
        },
        {
            "source": 4159,
            "target": 2288
        },
        {
            "source": 4159,
            "target": 2310
        },
        {
            "source": 4159,
            "target": 2312
        },
        {
            "source": 4159,
            "target": 2316
        },
        {
            "source": 4159,
            "target": 2321
        },
        {
            "source": 4159,
            "target": 2354
        },
        {
            "source": 4159,
            "target": 2355
        },
        {
            "source": 4159,
            "target": 2356
        },
        {
            "source": 4159,
            "target": 2357
        },
        {
            "source": 4159,
            "target": 2358
        },
        {
            "source": 4159,
            "target": 2378
        },
        {
            "source": 4159,
            "target": 2723
        },
        {
            "source": 4159,
            "target": 2791
        },
        {
            "source": 4159,
            "target": 2792
        },
        {
            "source": 4159,
            "target": 2793
        },
        {
            "source": 4159,
            "target": 2794
        },
        {
            "source": 4159,
            "target": 2795
        },
        {
            "source": 4159,
            "target": 2988
        },
        {
            "source": 4159,
            "target": 3145
        },
        {
            "source": 4159,
            "target": 3159
        },
        {
            "source": 4159,
            "target": 3241
        },
        {
            "source": 4159,
            "target": 3242
        },
        {
            "source": 4159,
            "target": 3341
        },
        {
            "source": 4159,
            "target": 3407
        },
        {
            "source": 4159,
            "target": 3741
        },
        {
            "source": 4159,
            "target": 3746
        },
        {
            "source": 4159,
            "target": 3754
        },
        {
            "source": 4159,
            "target": 3816
        },
        {
            "source": 4159,
            "target": 3925
        },
        {
            "source": 4159,
            "target": 3964
        },
        {
            "source": 4159,
            "target": 3984
        },
        {
            "source": 4159,
            "target": 4025
        },
        {
            "source": 4159,
            "target": 4054
        },
        {
            "source": 4159,
            "target": 4323
        },
        {
            "source": 4159,
            "target": 4335
        },
        {
            "source": 4159,
            "target": 4336
        },
        {
            "source": 4159,
            "target": 4337
        },
        {
            "source": 4159,
            "target": 4340
        },
        {
            "source": 4159,
            "target": 4846
        },
        {
            "source": 4159,
            "target": 4870
        },
        {
            "source": 4159,
            "target": 4871
        },
        {
            "source": 4159,
            "target": 4872
        },
        {
            "source": 4159,
            "target": 4873
        },
        {
            "source": 4159,
            "target": 4941
        },
        {
            "source": 4159,
            "target": 5080
        },
        {
            "source": 4159,
            "target": 5096
        },
        {
            "source": 65,
            "target": 92
        },
        {
            "source": 65,
            "target": 113
        },
        {
            "source": 65,
            "target": 146
        },
        {
            "source": 65,
            "target": 160
        },
        {
            "source": 65,
            "target": 166
        },
        {
            "source": 65,
            "target": 167
        },
        {
            "source": 65,
            "target": 442
        },
        {
            "source": 65,
            "target": 666
        },
        {
            "source": 65,
            "target": 1962
        },
        {
            "source": 65,
            "target": 2001
        },
        {
            "source": 65,
            "target": 2018
        },
        {
            "source": 65,
            "target": 2123
        },
        {
            "source": 65,
            "target": 2126
        },
        {
            "source": 65,
            "target": 2157
        },
        {
            "source": 65,
            "target": 2174
        },
        {
            "source": 65,
            "target": 2177
        },
        {
            "source": 65,
            "target": 2209
        },
        {
            "source": 65,
            "target": 2219
        },
        {
            "source": 65,
            "target": 2231
        },
        {
            "source": 65,
            "target": 2243
        },
        {
            "source": 65,
            "target": 2251
        },
        {
            "source": 65,
            "target": 2262
        },
        {
            "source": 65,
            "target": 2265
        },
        {
            "source": 65,
            "target": 2267
        },
        {
            "source": 65,
            "target": 2273
        },
        {
            "source": 65,
            "target": 2288
        },
        {
            "source": 65,
            "target": 2310
        },
        {
            "source": 65,
            "target": 2312
        },
        {
            "source": 65,
            "target": 2316
        },
        {
            "source": 65,
            "target": 2321
        },
        {
            "source": 65,
            "target": 2354
        },
        {
            "source": 65,
            "target": 2355
        },
        {
            "source": 65,
            "target": 2356
        },
        {
            "source": 65,
            "target": 2357
        },
        {
            "source": 65,
            "target": 2358
        },
        {
            "source": 65,
            "target": 2378
        },
        {
            "source": 65,
            "target": 2723
        },
        {
            "source": 65,
            "target": 2791
        },
        {
            "source": 65,
            "target": 2792
        },
        {
            "source": 65,
            "target": 2793
        },
        {
            "source": 65,
            "target": 2794
        },
        {
            "source": 65,
            "target": 2795
        },
        {
            "source": 65,
            "target": 2988
        },
        {
            "source": 65,
            "target": 3145
        },
        {
            "source": 65,
            "target": 3159
        },
        {
            "source": 65,
            "target": 3241
        },
        {
            "source": 65,
            "target": 3242
        },
        {
            "source": 65,
            "target": 3341
        },
        {
            "source": 65,
            "target": 3407
        },
        {
            "source": 65,
            "target": 3741
        },
        {
            "source": 65,
            "target": 3746
        },
        {
            "source": 65,
            "target": 3754
        },
        {
            "source": 65,
            "target": 3816
        },
        {
            "source": 65,
            "target": 3925
        },
        {
            "source": 65,
            "target": 3964
        },
        {
            "source": 65,
            "target": 3984
        },
        {
            "source": 65,
            "target": 4025
        },
        {
            "source": 65,
            "target": 4054
        },
        {
            "source": 65,
            "target": 4323
        },
        {
            "source": 65,
            "target": 4335
        },
        {
            "source": 65,
            "target": 4336
        },
        {
            "source": 65,
            "target": 4337
        },
        {
            "source": 65,
            "target": 4340
        },
        {
            "source": 65,
            "target": 4846
        },
        {
            "source": 65,
            "target": 4870
        },
        {
            "source": 65,
            "target": 4871
        },
        {
            "source": 65,
            "target": 4872
        },
        {
            "source": 65,
            "target": 4873
        },
        {
            "source": 65,
            "target": 4941
        },
        {
            "source": 65,
            "target": 5080
        },
        {
            "source": 65,
            "target": 5096
        },
        {
            "source": 3145,
            "target": 92
        },
        {
            "source": 3145,
            "target": 113
        },
        {
            "source": 3145,
            "target": 146
        },
        {
            "source": 3145,
            "target": 160
        },
        {
            "source": 3145,
            "target": 166
        },
        {
            "source": 3145,
            "target": 167
        },
        {
            "source": 3145,
            "target": 442
        },
        {
            "source": 3145,
            "target": 666
        },
        {
            "source": 3145,
            "target": 1962
        },
        {
            "source": 3145,
            "target": 2001
        },
        {
            "source": 3145,
            "target": 2018
        },
        {
            "source": 3145,
            "target": 2123
        },
        {
            "source": 3145,
            "target": 2126
        },
        {
            "source": 3145,
            "target": 2157
        },
        {
            "source": 3145,
            "target": 2174
        },
        {
            "source": 3145,
            "target": 2177
        },
        {
            "source": 3145,
            "target": 2209
        },
        {
            "source": 3145,
            "target": 2219
        },
        {
            "source": 3145,
            "target": 2231
        },
        {
            "source": 3145,
            "target": 2243
        },
        {
            "source": 3145,
            "target": 2251
        },
        {
            "source": 3145,
            "target": 2262
        },
        {
            "source": 3145,
            "target": 2265
        },
        {
            "source": 3145,
            "target": 2267
        },
        {
            "source": 3145,
            "target": 2273
        },
        {
            "source": 3145,
            "target": 2288
        },
        {
            "source": 3145,
            "target": 2310
        },
        {
            "source": 3145,
            "target": 2312
        },
        {
            "source": 3145,
            "target": 2316
        },
        {
            "source": 3145,
            "target": 2321
        },
        {
            "source": 3145,
            "target": 2354
        },
        {
            "source": 3145,
            "target": 2355
        },
        {
            "source": 3145,
            "target": 2356
        },
        {
            "source": 3145,
            "target": 2357
        },
        {
            "source": 3145,
            "target": 2358
        },
        {
            "source": 3145,
            "target": 2378
        },
        {
            "source": 3145,
            "target": 2723
        },
        {
            "source": 3145,
            "target": 2791
        },
        {
            "source": 3145,
            "target": 2792
        },
        {
            "source": 3145,
            "target": 2793
        },
        {
            "source": 3145,
            "target": 2794
        },
        {
            "source": 3145,
            "target": 2795
        },
        {
            "source": 3145,
            "target": 2988
        },
        {
            "source": 3145,
            "target": 3159
        },
        {
            "source": 3145,
            "target": 3241
        },
        {
            "source": 3145,
            "target": 3242
        },
        {
            "source": 3145,
            "target": 3341
        },
        {
            "source": 3145,
            "target": 3407
        },
        {
            "source": 3145,
            "target": 3741
        },
        {
            "source": 3145,
            "target": 3746
        },
        {
            "source": 3145,
            "target": 3754
        },
        {
            "source": 3145,
            "target": 3816
        },
        {
            "source": 3145,
            "target": 3925
        },
        {
            "source": 3145,
            "target": 3964
        },
        {
            "source": 3145,
            "target": 3984
        },
        {
            "source": 3145,
            "target": 4025
        },
        {
            "source": 3145,
            "target": 4054
        },
        {
            "source": 3145,
            "target": 4323
        },
        {
            "source": 3145,
            "target": 4335
        },
        {
            "source": 3145,
            "target": 4336
        },
        {
            "source": 3145,
            "target": 4337
        },
        {
            "source": 3145,
            "target": 4340
        },
        {
            "source": 3145,
            "target": 4846
        },
        {
            "source": 3145,
            "target": 4870
        },
        {
            "source": 3145,
            "target": 4871
        },
        {
            "source": 3145,
            "target": 4872
        },
        {
            "source": 3145,
            "target": 4873
        },
        {
            "source": 3145,
            "target": 4941
        },
        {
            "source": 3145,
            "target": 5080
        },
        {
            "source": 3145,
            "target": 5096
        },
        {
            "source": 2123,
            "target": 92
        },
        {
            "source": 2123,
            "target": 113
        },
        {
            "source": 2123,
            "target": 146
        },
        {
            "source": 2123,
            "target": 160
        },
        {
            "source": 2123,
            "target": 166
        },
        {
            "source": 2123,
            "target": 167
        },
        {
            "source": 2123,
            "target": 442
        },
        {
            "source": 2123,
            "target": 666
        },
        {
            "source": 2123,
            "target": 1962
        },
        {
            "source": 2123,
            "target": 2001
        },
        {
            "source": 2123,
            "target": 2018
        },
        {
            "source": 2123,
            "target": 2126
        },
        {
            "source": 2123,
            "target": 2157
        },
        {
            "source": 2123,
            "target": 2174
        },
        {
            "source": 2123,
            "target": 2177
        },
        {
            "source": 2123,
            "target": 2209
        },
        {
            "source": 2123,
            "target": 2219
        },
        {
            "source": 2123,
            "target": 2231
        },
        {
            "source": 2123,
            "target": 2243
        },
        {
            "source": 2123,
            "target": 2251
        },
        {
            "source": 2123,
            "target": 2262
        },
        {
            "source": 2123,
            "target": 2265
        },
        {
            "source": 2123,
            "target": 2267
        },
        {
            "source": 2123,
            "target": 2273
        },
        {
            "source": 2123,
            "target": 2288
        },
        {
            "source": 2123,
            "target": 2310
        },
        {
            "source": 2123,
            "target": 2312
        },
        {
            "source": 2123,
            "target": 2316
        },
        {
            "source": 2123,
            "target": 2321
        },
        {
            "source": 2123,
            "target": 2354
        },
        {
            "source": 2123,
            "target": 2355
        },
        {
            "source": 2123,
            "target": 2356
        },
        {
            "source": 2123,
            "target": 2357
        },
        {
            "source": 2123,
            "target": 2358
        },
        {
            "source": 2123,
            "target": 2378
        },
        {
            "source": 2123,
            "target": 2723
        },
        {
            "source": 2123,
            "target": 2791
        },
        {
            "source": 2123,
            "target": 2792
        },
        {
            "source": 2123,
            "target": 2793
        },
        {
            "source": 2123,
            "target": 2794
        },
        {
            "source": 2123,
            "target": 2795
        },
        {
            "source": 2123,
            "target": 2988
        },
        {
            "source": 2123,
            "target": 3159
        },
        {
            "source": 2123,
            "target": 3241
        },
        {
            "source": 2123,
            "target": 3242
        },
        {
            "source": 2123,
            "target": 3341
        },
        {
            "source": 2123,
            "target": 3407
        },
        {
            "source": 2123,
            "target": 3741
        },
        {
            "source": 2123,
            "target": 3746
        },
        {
            "source": 2123,
            "target": 3754
        },
        {
            "source": 2123,
            "target": 3816
        },
        {
            "source": 2123,
            "target": 3925
        },
        {
            "source": 2123,
            "target": 3964
        },
        {
            "source": 2123,
            "target": 3984
        },
        {
            "source": 2123,
            "target": 4025
        },
        {
            "source": 2123,
            "target": 4054
        },
        {
            "source": 2123,
            "target": 4323
        },
        {
            "source": 2123,
            "target": 4335
        },
        {
            "source": 2123,
            "target": 4336
        },
        {
            "source": 2123,
            "target": 4337
        },
        {
            "source": 2123,
            "target": 4340
        },
        {
            "source": 2123,
            "target": 4846
        },
        {
            "source": 2123,
            "target": 4870
        },
        {
            "source": 2123,
            "target": 4871
        },
        {
            "source": 2123,
            "target": 4872
        },
        {
            "source": 2123,
            "target": 4873
        },
        {
            "source": 2123,
            "target": 4941
        },
        {
            "source": 2123,
            "target": 5080
        },
        {
            "source": 2123,
            "target": 5096
        },
        {
            "source": 2126,
            "target": 92
        },
        {
            "source": 2126,
            "target": 113
        },
        {
            "source": 2126,
            "target": 146
        },
        {
            "source": 2126,
            "target": 160
        },
        {
            "source": 2126,
            "target": 166
        },
        {
            "source": 2126,
            "target": 167
        },
        {
            "source": 2126,
            "target": 442
        },
        {
            "source": 2126,
            "target": 666
        },
        {
            "source": 2126,
            "target": 1962
        },
        {
            "source": 2126,
            "target": 2001
        },
        {
            "source": 2126,
            "target": 2018
        },
        {
            "source": 2126,
            "target": 2157
        },
        {
            "source": 2126,
            "target": 2174
        },
        {
            "source": 2126,
            "target": 2177
        },
        {
            "source": 2126,
            "target": 2209
        },
        {
            "source": 2126,
            "target": 2219
        },
        {
            "source": 2126,
            "target": 2231
        },
        {
            "source": 2126,
            "target": 2243
        },
        {
            "source": 2126,
            "target": 2251
        },
        {
            "source": 2126,
            "target": 2262
        },
        {
            "source": 2126,
            "target": 2265
        },
        {
            "source": 2126,
            "target": 2267
        },
        {
            "source": 2126,
            "target": 2273
        },
        {
            "source": 2126,
            "target": 2288
        },
        {
            "source": 2126,
            "target": 2310
        },
        {
            "source": 2126,
            "target": 2312
        },
        {
            "source": 2126,
            "target": 2316
        },
        {
            "source": 2126,
            "target": 2321
        },
        {
            "source": 2126,
            "target": 2354
        },
        {
            "source": 2126,
            "target": 2355
        },
        {
            "source": 2126,
            "target": 2356
        },
        {
            "source": 2126,
            "target": 2357
        },
        {
            "source": 2126,
            "target": 2358
        },
        {
            "source": 2126,
            "target": 2378
        },
        {
            "source": 2126,
            "target": 2723
        },
        {
            "source": 2126,
            "target": 2791
        },
        {
            "source": 2126,
            "target": 2792
        },
        {
            "source": 2126,
            "target": 2793
        },
        {
            "source": 2126,
            "target": 2794
        },
        {
            "source": 2126,
            "target": 2795
        },
        {
            "source": 2126,
            "target": 2988
        },
        {
            "source": 2126,
            "target": 3159
        },
        {
            "source": 2126,
            "target": 3241
        },
        {
            "source": 2126,
            "target": 3242
        },
        {
            "source": 2126,
            "target": 3341
        },
        {
            "source": 2126,
            "target": 3407
        },
        {
            "source": 2126,
            "target": 3741
        },
        {
            "source": 2126,
            "target": 3746
        },
        {
            "source": 2126,
            "target": 3754
        },
        {
            "source": 2126,
            "target": 3816
        },
        {
            "source": 2126,
            "target": 3925
        },
        {
            "source": 2126,
            "target": 3964
        },
        {
            "source": 2126,
            "target": 3984
        },
        {
            "source": 2126,
            "target": 4025
        },
        {
            "source": 2126,
            "target": 4054
        },
        {
            "source": 2126,
            "target": 4323
        },
        {
            "source": 2126,
            "target": 4335
        },
        {
            "source": 2126,
            "target": 4336
        },
        {
            "source": 2126,
            "target": 4337
        },
        {
            "source": 2126,
            "target": 4340
        },
        {
            "source": 2126,
            "target": 4846
        },
        {
            "source": 2126,
            "target": 4870
        },
        {
            "source": 2126,
            "target": 4871
        },
        {
            "source": 2126,
            "target": 4872
        },
        {
            "source": 2126,
            "target": 4873
        },
        {
            "source": 2126,
            "target": 4941
        },
        {
            "source": 2126,
            "target": 5080
        },
        {
            "source": 2126,
            "target": 5096
        },
        {
            "source": 3159,
            "target": 92
        },
        {
            "source": 3159,
            "target": 113
        },
        {
            "source": 3159,
            "target": 146
        },
        {
            "source": 3159,
            "target": 160
        },
        {
            "source": 3159,
            "target": 166
        },
        {
            "source": 3159,
            "target": 167
        },
        {
            "source": 3159,
            "target": 442
        },
        {
            "source": 3159,
            "target": 666
        },
        {
            "source": 3159,
            "target": 1962
        },
        {
            "source": 3159,
            "target": 2001
        },
        {
            "source": 3159,
            "target": 2018
        },
        {
            "source": 3159,
            "target": 2157
        },
        {
            "source": 3159,
            "target": 2174
        },
        {
            "source": 3159,
            "target": 2177
        },
        {
            "source": 3159,
            "target": 2209
        },
        {
            "source": 3159,
            "target": 2219
        },
        {
            "source": 3159,
            "target": 2231
        },
        {
            "source": 3159,
            "target": 2243
        },
        {
            "source": 3159,
            "target": 2251
        },
        {
            "source": 3159,
            "target": 2262
        },
        {
            "source": 3159,
            "target": 2265
        },
        {
            "source": 3159,
            "target": 2267
        },
        {
            "source": 3159,
            "target": 2273
        },
        {
            "source": 3159,
            "target": 2288
        },
        {
            "source": 3159,
            "target": 2310
        },
        {
            "source": 3159,
            "target": 2312
        },
        {
            "source": 3159,
            "target": 2316
        },
        {
            "source": 3159,
            "target": 2321
        },
        {
            "source": 3159,
            "target": 2354
        },
        {
            "source": 3159,
            "target": 2355
        },
        {
            "source": 3159,
            "target": 2356
        },
        {
            "source": 3159,
            "target": 2357
        },
        {
            "source": 3159,
            "target": 2358
        },
        {
            "source": 3159,
            "target": 2378
        },
        {
            "source": 3159,
            "target": 2723
        },
        {
            "source": 3159,
            "target": 2791
        },
        {
            "source": 3159,
            "target": 2792
        },
        {
            "source": 3159,
            "target": 2793
        },
        {
            "source": 3159,
            "target": 2794
        },
        {
            "source": 3159,
            "target": 2795
        },
        {
            "source": 3159,
            "target": 2988
        },
        {
            "source": 3159,
            "target": 3241
        },
        {
            "source": 3159,
            "target": 3242
        },
        {
            "source": 3159,
            "target": 3341
        },
        {
            "source": 3159,
            "target": 3407
        },
        {
            "source": 3159,
            "target": 3741
        },
        {
            "source": 3159,
            "target": 3746
        },
        {
            "source": 3159,
            "target": 3754
        },
        {
            "source": 3159,
            "target": 3816
        },
        {
            "source": 3159,
            "target": 3925
        },
        {
            "source": 3159,
            "target": 3964
        },
        {
            "source": 3159,
            "target": 3984
        },
        {
            "source": 3159,
            "target": 4025
        },
        {
            "source": 3159,
            "target": 4054
        },
        {
            "source": 3159,
            "target": 4323
        },
        {
            "source": 3159,
            "target": 4335
        },
        {
            "source": 3159,
            "target": 4336
        },
        {
            "source": 3159,
            "target": 4337
        },
        {
            "source": 3159,
            "target": 4340
        },
        {
            "source": 3159,
            "target": 4846
        },
        {
            "source": 3159,
            "target": 4870
        },
        {
            "source": 3159,
            "target": 4871
        },
        {
            "source": 3159,
            "target": 4872
        },
        {
            "source": 3159,
            "target": 4873
        },
        {
            "source": 3159,
            "target": 4941
        },
        {
            "source": 3159,
            "target": 5080
        },
        {
            "source": 3159,
            "target": 5096
        },
        {
            "source": 92,
            "target": 113
        },
        {
            "source": 92,
            "target": 146
        },
        {
            "source": 92,
            "target": 160
        },
        {
            "source": 92,
            "target": 166
        },
        {
            "source": 92,
            "target": 167
        },
        {
            "source": 92,
            "target": 442
        },
        {
            "source": 92,
            "target": 666
        },
        {
            "source": 92,
            "target": 1962
        },
        {
            "source": 92,
            "target": 2001
        },
        {
            "source": 92,
            "target": 2018
        },
        {
            "source": 92,
            "target": 2157
        },
        {
            "source": 92,
            "target": 2174
        },
        {
            "source": 92,
            "target": 2177
        },
        {
            "source": 92,
            "target": 2209
        },
        {
            "source": 92,
            "target": 2219
        },
        {
            "source": 92,
            "target": 2231
        },
        {
            "source": 92,
            "target": 2243
        },
        {
            "source": 92,
            "target": 2251
        },
        {
            "source": 92,
            "target": 2262
        },
        {
            "source": 92,
            "target": 2265
        },
        {
            "source": 92,
            "target": 2267
        },
        {
            "source": 92,
            "target": 2273
        },
        {
            "source": 92,
            "target": 2288
        },
        {
            "source": 92,
            "target": 2310
        },
        {
            "source": 92,
            "target": 2312
        },
        {
            "source": 92,
            "target": 2316
        },
        {
            "source": 92,
            "target": 2321
        },
        {
            "source": 92,
            "target": 2354
        },
        {
            "source": 92,
            "target": 2355
        },
        {
            "source": 92,
            "target": 2356
        },
        {
            "source": 92,
            "target": 2357
        },
        {
            "source": 92,
            "target": 2358
        },
        {
            "source": 92,
            "target": 2378
        },
        {
            "source": 92,
            "target": 2723
        },
        {
            "source": 92,
            "target": 2791
        },
        {
            "source": 92,
            "target": 2792
        },
        {
            "source": 92,
            "target": 2793
        },
        {
            "source": 92,
            "target": 2794
        },
        {
            "source": 92,
            "target": 2795
        },
        {
            "source": 92,
            "target": 2988
        },
        {
            "source": 92,
            "target": 3241
        },
        {
            "source": 92,
            "target": 3242
        },
        {
            "source": 92,
            "target": 3341
        },
        {
            "source": 92,
            "target": 3407
        },
        {
            "source": 92,
            "target": 3741
        },
        {
            "source": 92,
            "target": 3746
        },
        {
            "source": 92,
            "target": 3754
        },
        {
            "source": 92,
            "target": 3816
        },
        {
            "source": 92,
            "target": 3925
        },
        {
            "source": 92,
            "target": 3964
        },
        {
            "source": 92,
            "target": 3984
        },
        {
            "source": 92,
            "target": 4025
        },
        {
            "source": 92,
            "target": 4054
        },
        {
            "source": 92,
            "target": 4323
        },
        {
            "source": 92,
            "target": 4335
        },
        {
            "source": 92,
            "target": 4336
        },
        {
            "source": 92,
            "target": 4337
        },
        {
            "source": 92,
            "target": 4340
        },
        {
            "source": 92,
            "target": 4846
        },
        {
            "source": 92,
            "target": 4870
        },
        {
            "source": 92,
            "target": 4871
        },
        {
            "source": 92,
            "target": 4872
        },
        {
            "source": 92,
            "target": 4873
        },
        {
            "source": 92,
            "target": 4941
        },
        {
            "source": 92,
            "target": 5080
        },
        {
            "source": 92,
            "target": 5096
        },
        {
            "source": 2157,
            "target": 113
        },
        {
            "source": 2157,
            "target": 146
        },
        {
            "source": 2157,
            "target": 160
        },
        {
            "source": 2157,
            "target": 166
        },
        {
            "source": 2157,
            "target": 167
        },
        {
            "source": 2157,
            "target": 442
        },
        {
            "source": 2157,
            "target": 666
        },
        {
            "source": 2157,
            "target": 1962
        },
        {
            "source": 2157,
            "target": 2001
        },
        {
            "source": 2157,
            "target": 2018
        },
        {
            "source": 2157,
            "target": 2174
        },
        {
            "source": 2157,
            "target": 2177
        },
        {
            "source": 2157,
            "target": 2209
        },
        {
            "source": 2157,
            "target": 2219
        },
        {
            "source": 2157,
            "target": 2231
        },
        {
            "source": 2157,
            "target": 2243
        },
        {
            "source": 2157,
            "target": 2251
        },
        {
            "source": 2157,
            "target": 2262
        },
        {
            "source": 2157,
            "target": 2265
        },
        {
            "source": 2157,
            "target": 2267
        },
        {
            "source": 2157,
            "target": 2273
        },
        {
            "source": 2157,
            "target": 2288
        },
        {
            "source": 2157,
            "target": 2310
        },
        {
            "source": 2157,
            "target": 2312
        },
        {
            "source": 2157,
            "target": 2316
        },
        {
            "source": 2157,
            "target": 2321
        },
        {
            "source": 2157,
            "target": 2354
        },
        {
            "source": 2157,
            "target": 2355
        },
        {
            "source": 2157,
            "target": 2356
        },
        {
            "source": 2157,
            "target": 2357
        },
        {
            "source": 2157,
            "target": 2358
        },
        {
            "source": 2157,
            "target": 2378
        },
        {
            "source": 2157,
            "target": 2723
        },
        {
            "source": 2157,
            "target": 2791
        },
        {
            "source": 2157,
            "target": 2792
        },
        {
            "source": 2157,
            "target": 2793
        },
        {
            "source": 2157,
            "target": 2794
        },
        {
            "source": 2157,
            "target": 2795
        },
        {
            "source": 2157,
            "target": 2988
        },
        {
            "source": 2157,
            "target": 3241
        },
        {
            "source": 2157,
            "target": 3242
        },
        {
            "source": 2157,
            "target": 3341
        },
        {
            "source": 2157,
            "target": 3407
        },
        {
            "source": 2157,
            "target": 3741
        },
        {
            "source": 2157,
            "target": 3746
        },
        {
            "source": 2157,
            "target": 3754
        },
        {
            "source": 2157,
            "target": 3816
        },
        {
            "source": 2157,
            "target": 3925
        },
        {
            "source": 2157,
            "target": 3964
        },
        {
            "source": 2157,
            "target": 3984
        },
        {
            "source": 2157,
            "target": 4025
        },
        {
            "source": 2157,
            "target": 4054
        },
        {
            "source": 2157,
            "target": 4323
        },
        {
            "source": 2157,
            "target": 4335
        },
        {
            "source": 2157,
            "target": 4336
        },
        {
            "source": 2157,
            "target": 4337
        },
        {
            "source": 2157,
            "target": 4340
        },
        {
            "source": 2157,
            "target": 4846
        },
        {
            "source": 2157,
            "target": 4870
        },
        {
            "source": 2157,
            "target": 4871
        },
        {
            "source": 2157,
            "target": 4872
        },
        {
            "source": 2157,
            "target": 4873
        },
        {
            "source": 2157,
            "target": 4941
        },
        {
            "source": 2157,
            "target": 5080
        },
        {
            "source": 2157,
            "target": 5096
        },
        {
            "source": 113,
            "target": 146
        },
        {
            "source": 113,
            "target": 160
        },
        {
            "source": 113,
            "target": 166
        },
        {
            "source": 113,
            "target": 167
        },
        {
            "source": 113,
            "target": 442
        },
        {
            "source": 113,
            "target": 666
        },
        {
            "source": 113,
            "target": 1962
        },
        {
            "source": 113,
            "target": 2001
        },
        {
            "source": 113,
            "target": 2018
        },
        {
            "source": 113,
            "target": 2174
        },
        {
            "source": 113,
            "target": 2177
        },
        {
            "source": 113,
            "target": 2209
        },
        {
            "source": 113,
            "target": 2219
        },
        {
            "source": 113,
            "target": 2231
        },
        {
            "source": 113,
            "target": 2243
        },
        {
            "source": 113,
            "target": 2251
        },
        {
            "source": 113,
            "target": 2262
        },
        {
            "source": 113,
            "target": 2265
        },
        {
            "source": 113,
            "target": 2267
        },
        {
            "source": 113,
            "target": 2273
        },
        {
            "source": 113,
            "target": 2288
        },
        {
            "source": 113,
            "target": 2310
        },
        {
            "source": 113,
            "target": 2312
        },
        {
            "source": 113,
            "target": 2316
        },
        {
            "source": 113,
            "target": 2321
        },
        {
            "source": 113,
            "target": 2354
        },
        {
            "source": 113,
            "target": 2355
        },
        {
            "source": 113,
            "target": 2356
        },
        {
            "source": 113,
            "target": 2357
        },
        {
            "source": 113,
            "target": 2358
        },
        {
            "source": 113,
            "target": 2378
        },
        {
            "source": 113,
            "target": 2723
        },
        {
            "source": 113,
            "target": 2791
        },
        {
            "source": 113,
            "target": 2792
        },
        {
            "source": 113,
            "target": 2793
        },
        {
            "source": 113,
            "target": 2794
        },
        {
            "source": 113,
            "target": 2795
        },
        {
            "source": 113,
            "target": 2988
        },
        {
            "source": 113,
            "target": 3241
        },
        {
            "source": 113,
            "target": 3242
        },
        {
            "source": 113,
            "target": 3341
        },
        {
            "source": 113,
            "target": 3407
        },
        {
            "source": 113,
            "target": 3741
        },
        {
            "source": 113,
            "target": 3746
        },
        {
            "source": 113,
            "target": 3754
        },
        {
            "source": 113,
            "target": 3816
        },
        {
            "source": 113,
            "target": 3925
        },
        {
            "source": 113,
            "target": 3964
        },
        {
            "source": 113,
            "target": 3984
        },
        {
            "source": 113,
            "target": 4025
        },
        {
            "source": 113,
            "target": 4054
        },
        {
            "source": 113,
            "target": 4323
        },
        {
            "source": 113,
            "target": 4335
        },
        {
            "source": 113,
            "target": 4336
        },
        {
            "source": 113,
            "target": 4337
        },
        {
            "source": 113,
            "target": 4340
        },
        {
            "source": 113,
            "target": 4846
        },
        {
            "source": 113,
            "target": 4870
        },
        {
            "source": 113,
            "target": 4871
        },
        {
            "source": 113,
            "target": 4872
        },
        {
            "source": 113,
            "target": 4873
        },
        {
            "source": 113,
            "target": 4941
        },
        {
            "source": 113,
            "target": 5080
        },
        {
            "source": 113,
            "target": 5096
        },
        {
            "source": 2174,
            "target": 146
        },
        {
            "source": 2174,
            "target": 160
        },
        {
            "source": 2174,
            "target": 166
        },
        {
            "source": 2174,
            "target": 167
        },
        {
            "source": 2174,
            "target": 442
        },
        {
            "source": 2174,
            "target": 666
        },
        {
            "source": 2174,
            "target": 1962
        },
        {
            "source": 2174,
            "target": 2001
        },
        {
            "source": 2174,
            "target": 2018
        },
        {
            "source": 2174,
            "target": 2177
        },
        {
            "source": 2174,
            "target": 2209
        },
        {
            "source": 2174,
            "target": 2219
        },
        {
            "source": 2174,
            "target": 2231
        },
        {
            "source": 2174,
            "target": 2243
        },
        {
            "source": 2174,
            "target": 2251
        },
        {
            "source": 2174,
            "target": 2262
        },
        {
            "source": 2174,
            "target": 2265
        },
        {
            "source": 2174,
            "target": 2267
        },
        {
            "source": 2174,
            "target": 2273
        },
        {
            "source": 2174,
            "target": 2288
        },
        {
            "source": 2174,
            "target": 2310
        },
        {
            "source": 2174,
            "target": 2312
        },
        {
            "source": 2174,
            "target": 2316
        },
        {
            "source": 2174,
            "target": 2321
        },
        {
            "source": 2174,
            "target": 2354
        },
        {
            "source": 2174,
            "target": 2355
        },
        {
            "source": 2174,
            "target": 2356
        },
        {
            "source": 2174,
            "target": 2357
        },
        {
            "source": 2174,
            "target": 2358
        },
        {
            "source": 2174,
            "target": 2378
        },
        {
            "source": 2174,
            "target": 2723
        },
        {
            "source": 2174,
            "target": 2791
        },
        {
            "source": 2174,
            "target": 2792
        },
        {
            "source": 2174,
            "target": 2793
        },
        {
            "source": 2174,
            "target": 2794
        },
        {
            "source": 2174,
            "target": 2795
        },
        {
            "source": 2174,
            "target": 2988
        },
        {
            "source": 2174,
            "target": 3241
        },
        {
            "source": 2174,
            "target": 3242
        },
        {
            "source": 2174,
            "target": 3341
        },
        {
            "source": 2174,
            "target": 3407
        },
        {
            "source": 2174,
            "target": 3741
        },
        {
            "source": 2174,
            "target": 3746
        },
        {
            "source": 2174,
            "target": 3754
        },
        {
            "source": 2174,
            "target": 3816
        },
        {
            "source": 2174,
            "target": 3925
        },
        {
            "source": 2174,
            "target": 3964
        },
        {
            "source": 2174,
            "target": 3984
        },
        {
            "source": 2174,
            "target": 4025
        },
        {
            "source": 2174,
            "target": 4054
        },
        {
            "source": 2174,
            "target": 4323
        },
        {
            "source": 2174,
            "target": 4335
        },
        {
            "source": 2174,
            "target": 4336
        },
        {
            "source": 2174,
            "target": 4337
        },
        {
            "source": 2174,
            "target": 4340
        },
        {
            "source": 2174,
            "target": 4846
        },
        {
            "source": 2174,
            "target": 4870
        },
        {
            "source": 2174,
            "target": 4871
        },
        {
            "source": 2174,
            "target": 4872
        },
        {
            "source": 2174,
            "target": 4873
        },
        {
            "source": 2174,
            "target": 4941
        },
        {
            "source": 2174,
            "target": 5080
        },
        {
            "source": 2174,
            "target": 5096
        },
        {
            "source": 2177,
            "target": 146
        },
        {
            "source": 2177,
            "target": 160
        },
        {
            "source": 2177,
            "target": 166
        },
        {
            "source": 2177,
            "target": 167
        },
        {
            "source": 2177,
            "target": 442
        },
        {
            "source": 2177,
            "target": 666
        },
        {
            "source": 2177,
            "target": 1962
        },
        {
            "source": 2177,
            "target": 2001
        },
        {
            "source": 2177,
            "target": 2018
        },
        {
            "source": 2177,
            "target": 2209
        },
        {
            "source": 2177,
            "target": 2219
        },
        {
            "source": 2177,
            "target": 2231
        },
        {
            "source": 2177,
            "target": 2243
        },
        {
            "source": 2177,
            "target": 2251
        },
        {
            "source": 2177,
            "target": 2262
        },
        {
            "source": 2177,
            "target": 2265
        },
        {
            "source": 2177,
            "target": 2267
        },
        {
            "source": 2177,
            "target": 2273
        },
        {
            "source": 2177,
            "target": 2288
        },
        {
            "source": 2177,
            "target": 2310
        },
        {
            "source": 2177,
            "target": 2312
        },
        {
            "source": 2177,
            "target": 2316
        },
        {
            "source": 2177,
            "target": 2321
        },
        {
            "source": 2177,
            "target": 2354
        },
        {
            "source": 2177,
            "target": 2355
        },
        {
            "source": 2177,
            "target": 2356
        },
        {
            "source": 2177,
            "target": 2357
        },
        {
            "source": 2177,
            "target": 2358
        },
        {
            "source": 2177,
            "target": 2378
        },
        {
            "source": 2177,
            "target": 2723
        },
        {
            "source": 2177,
            "target": 2791
        },
        {
            "source": 2177,
            "target": 2792
        },
        {
            "source": 2177,
            "target": 2793
        },
        {
            "source": 2177,
            "target": 2794
        },
        {
            "source": 2177,
            "target": 2795
        },
        {
            "source": 2177,
            "target": 2988
        },
        {
            "source": 2177,
            "target": 3241
        },
        {
            "source": 2177,
            "target": 3242
        },
        {
            "source": 2177,
            "target": 3341
        },
        {
            "source": 2177,
            "target": 3407
        },
        {
            "source": 2177,
            "target": 3741
        },
        {
            "source": 2177,
            "target": 3746
        },
        {
            "source": 2177,
            "target": 3754
        },
        {
            "source": 2177,
            "target": 3816
        },
        {
            "source": 2177,
            "target": 3925
        },
        {
            "source": 2177,
            "target": 3964
        },
        {
            "source": 2177,
            "target": 3984
        },
        {
            "source": 2177,
            "target": 4025
        },
        {
            "source": 2177,
            "target": 4054
        },
        {
            "source": 2177,
            "target": 4323
        },
        {
            "source": 2177,
            "target": 4335
        },
        {
            "source": 2177,
            "target": 4336
        },
        {
            "source": 2177,
            "target": 4337
        },
        {
            "source": 2177,
            "target": 4340
        },
        {
            "source": 2177,
            "target": 4846
        },
        {
            "source": 2177,
            "target": 4870
        },
        {
            "source": 2177,
            "target": 4871
        },
        {
            "source": 2177,
            "target": 4872
        },
        {
            "source": 2177,
            "target": 4873
        },
        {
            "source": 2177,
            "target": 4941
        },
        {
            "source": 2177,
            "target": 5080
        },
        {
            "source": 2177,
            "target": 5096
        },
        {
            "source": 146,
            "target": 160
        },
        {
            "source": 146,
            "target": 166
        },
        {
            "source": 146,
            "target": 167
        },
        {
            "source": 146,
            "target": 442
        },
        {
            "source": 146,
            "target": 666
        },
        {
            "source": 146,
            "target": 1962
        },
        {
            "source": 146,
            "target": 2001
        },
        {
            "source": 146,
            "target": 2018
        },
        {
            "source": 146,
            "target": 2209
        },
        {
            "source": 146,
            "target": 2219
        },
        {
            "source": 146,
            "target": 2231
        },
        {
            "source": 146,
            "target": 2243
        },
        {
            "source": 146,
            "target": 2251
        },
        {
            "source": 146,
            "target": 2262
        },
        {
            "source": 146,
            "target": 2265
        },
        {
            "source": 146,
            "target": 2267
        },
        {
            "source": 146,
            "target": 2273
        },
        {
            "source": 146,
            "target": 2288
        },
        {
            "source": 146,
            "target": 2310
        },
        {
            "source": 146,
            "target": 2312
        },
        {
            "source": 146,
            "target": 2316
        },
        {
            "source": 146,
            "target": 2321
        },
        {
            "source": 146,
            "target": 2354
        },
        {
            "source": 146,
            "target": 2355
        },
        {
            "source": 146,
            "target": 2356
        },
        {
            "source": 146,
            "target": 2357
        },
        {
            "source": 146,
            "target": 2358
        },
        {
            "source": 146,
            "target": 2378
        },
        {
            "source": 146,
            "target": 2723
        },
        {
            "source": 146,
            "target": 2791
        },
        {
            "source": 146,
            "target": 2792
        },
        {
            "source": 146,
            "target": 2793
        },
        {
            "source": 146,
            "target": 2794
        },
        {
            "source": 146,
            "target": 2795
        },
        {
            "source": 146,
            "target": 2988
        },
        {
            "source": 146,
            "target": 3241
        },
        {
            "source": 146,
            "target": 3242
        },
        {
            "source": 146,
            "target": 3341
        },
        {
            "source": 146,
            "target": 3407
        },
        {
            "source": 146,
            "target": 3741
        },
        {
            "source": 146,
            "target": 3746
        },
        {
            "source": 146,
            "target": 3754
        },
        {
            "source": 146,
            "target": 3816
        },
        {
            "source": 146,
            "target": 3925
        },
        {
            "source": 146,
            "target": 3964
        },
        {
            "source": 146,
            "target": 3984
        },
        {
            "source": 146,
            "target": 4025
        },
        {
            "source": 146,
            "target": 4054
        },
        {
            "source": 146,
            "target": 4323
        },
        {
            "source": 146,
            "target": 4335
        },
        {
            "source": 146,
            "target": 4336
        },
        {
            "source": 146,
            "target": 4337
        },
        {
            "source": 146,
            "target": 4340
        },
        {
            "source": 146,
            "target": 4846
        },
        {
            "source": 146,
            "target": 4870
        },
        {
            "source": 146,
            "target": 4871
        },
        {
            "source": 146,
            "target": 4872
        },
        {
            "source": 146,
            "target": 4873
        },
        {
            "source": 146,
            "target": 4941
        },
        {
            "source": 146,
            "target": 5080
        },
        {
            "source": 146,
            "target": 5096
        },
        {
            "source": 666,
            "target": 160
        },
        {
            "source": 666,
            "target": 166
        },
        {
            "source": 666,
            "target": 167
        },
        {
            "source": 666,
            "target": 442
        },
        {
            "source": 666,
            "target": 1962
        },
        {
            "source": 666,
            "target": 2001
        },
        {
            "source": 666,
            "target": 2018
        },
        {
            "source": 666,
            "target": 2209
        },
        {
            "source": 666,
            "target": 2219
        },
        {
            "source": 666,
            "target": 2231
        },
        {
            "source": 666,
            "target": 2243
        },
        {
            "source": 666,
            "target": 2251
        },
        {
            "source": 666,
            "target": 2262
        },
        {
            "source": 666,
            "target": 2265
        },
        {
            "source": 666,
            "target": 2267
        },
        {
            "source": 666,
            "target": 2273
        },
        {
            "source": 666,
            "target": 2288
        },
        {
            "source": 666,
            "target": 2310
        },
        {
            "source": 666,
            "target": 2312
        },
        {
            "source": 666,
            "target": 2316
        },
        {
            "source": 666,
            "target": 2321
        },
        {
            "source": 666,
            "target": 2354
        },
        {
            "source": 666,
            "target": 2355
        },
        {
            "source": 666,
            "target": 2356
        },
        {
            "source": 666,
            "target": 2357
        },
        {
            "source": 666,
            "target": 2358
        },
        {
            "source": 666,
            "target": 2378
        },
        {
            "source": 666,
            "target": 2723
        },
        {
            "source": 666,
            "target": 2791
        },
        {
            "source": 666,
            "target": 2792
        },
        {
            "source": 666,
            "target": 2793
        },
        {
            "source": 666,
            "target": 2794
        },
        {
            "source": 666,
            "target": 2795
        },
        {
            "source": 666,
            "target": 2988
        },
        {
            "source": 666,
            "target": 3241
        },
        {
            "source": 666,
            "target": 3242
        },
        {
            "source": 666,
            "target": 3341
        },
        {
            "source": 666,
            "target": 3407
        },
        {
            "source": 666,
            "target": 3741
        },
        {
            "source": 666,
            "target": 3746
        },
        {
            "source": 666,
            "target": 3754
        },
        {
            "source": 666,
            "target": 3816
        },
        {
            "source": 666,
            "target": 3925
        },
        {
            "source": 666,
            "target": 3964
        },
        {
            "source": 666,
            "target": 3984
        },
        {
            "source": 666,
            "target": 4025
        },
        {
            "source": 666,
            "target": 4054
        },
        {
            "source": 666,
            "target": 4323
        },
        {
            "source": 666,
            "target": 4335
        },
        {
            "source": 666,
            "target": 4336
        },
        {
            "source": 666,
            "target": 4337
        },
        {
            "source": 666,
            "target": 4340
        },
        {
            "source": 666,
            "target": 4846
        },
        {
            "source": 666,
            "target": 4870
        },
        {
            "source": 666,
            "target": 4871
        },
        {
            "source": 666,
            "target": 4872
        },
        {
            "source": 666,
            "target": 4873
        },
        {
            "source": 666,
            "target": 4941
        },
        {
            "source": 666,
            "target": 5080
        },
        {
            "source": 666,
            "target": 5096
        },
        {
            "source": 3741,
            "target": 160
        },
        {
            "source": 3741,
            "target": 166
        },
        {
            "source": 3741,
            "target": 167
        },
        {
            "source": 3741,
            "target": 442
        },
        {
            "source": 3741,
            "target": 1962
        },
        {
            "source": 3741,
            "target": 2001
        },
        {
            "source": 3741,
            "target": 2018
        },
        {
            "source": 3741,
            "target": 2209
        },
        {
            "source": 3741,
            "target": 2219
        },
        {
            "source": 3741,
            "target": 2231
        },
        {
            "source": 3741,
            "target": 2243
        },
        {
            "source": 3741,
            "target": 2251
        },
        {
            "source": 3741,
            "target": 2262
        },
        {
            "source": 3741,
            "target": 2265
        },
        {
            "source": 3741,
            "target": 2267
        },
        {
            "source": 3741,
            "target": 2273
        },
        {
            "source": 3741,
            "target": 2288
        },
        {
            "source": 3741,
            "target": 2310
        },
        {
            "source": 3741,
            "target": 2312
        },
        {
            "source": 3741,
            "target": 2316
        },
        {
            "source": 3741,
            "target": 2321
        },
        {
            "source": 3741,
            "target": 2354
        },
        {
            "source": 3741,
            "target": 2355
        },
        {
            "source": 3741,
            "target": 2356
        },
        {
            "source": 3741,
            "target": 2357
        },
        {
            "source": 3741,
            "target": 2358
        },
        {
            "source": 3741,
            "target": 2378
        },
        {
            "source": 3741,
            "target": 2723
        },
        {
            "source": 3741,
            "target": 2791
        },
        {
            "source": 3741,
            "target": 2792
        },
        {
            "source": 3741,
            "target": 2793
        },
        {
            "source": 3741,
            "target": 2794
        },
        {
            "source": 3741,
            "target": 2795
        },
        {
            "source": 3741,
            "target": 2988
        },
        {
            "source": 3741,
            "target": 3241
        },
        {
            "source": 3741,
            "target": 3242
        },
        {
            "source": 3741,
            "target": 3341
        },
        {
            "source": 3741,
            "target": 3407
        },
        {
            "source": 3741,
            "target": 3746
        },
        {
            "source": 3741,
            "target": 3754
        },
        {
            "source": 3741,
            "target": 3816
        },
        {
            "source": 3741,
            "target": 3925
        },
        {
            "source": 3741,
            "target": 3964
        },
        {
            "source": 3741,
            "target": 3984
        },
        {
            "source": 3741,
            "target": 4025
        },
        {
            "source": 3741,
            "target": 4054
        },
        {
            "source": 3741,
            "target": 4323
        },
        {
            "source": 3741,
            "target": 4335
        },
        {
            "source": 3741,
            "target": 4336
        },
        {
            "source": 3741,
            "target": 4337
        },
        {
            "source": 3741,
            "target": 4340
        },
        {
            "source": 3741,
            "target": 4846
        },
        {
            "source": 3741,
            "target": 4870
        },
        {
            "source": 3741,
            "target": 4871
        },
        {
            "source": 3741,
            "target": 4872
        },
        {
            "source": 3741,
            "target": 4873
        },
        {
            "source": 3741,
            "target": 4941
        },
        {
            "source": 3741,
            "target": 5080
        },
        {
            "source": 3741,
            "target": 5096
        },
        {
            "source": 160,
            "target": 166
        },
        {
            "source": 160,
            "target": 167
        },
        {
            "source": 160,
            "target": 442
        },
        {
            "source": 160,
            "target": 1962
        },
        {
            "source": 160,
            "target": 2001
        },
        {
            "source": 160,
            "target": 2018
        },
        {
            "source": 160,
            "target": 2209
        },
        {
            "source": 160,
            "target": 2219
        },
        {
            "source": 160,
            "target": 2231
        },
        {
            "source": 160,
            "target": 2243
        },
        {
            "source": 160,
            "target": 2251
        },
        {
            "source": 160,
            "target": 2262
        },
        {
            "source": 160,
            "target": 2265
        },
        {
            "source": 160,
            "target": 2267
        },
        {
            "source": 160,
            "target": 2273
        },
        {
            "source": 160,
            "target": 2288
        },
        {
            "source": 160,
            "target": 2310
        },
        {
            "source": 160,
            "target": 2312
        },
        {
            "source": 160,
            "target": 2316
        },
        {
            "source": 160,
            "target": 2321
        },
        {
            "source": 160,
            "target": 2354
        },
        {
            "source": 160,
            "target": 2355
        },
        {
            "source": 160,
            "target": 2356
        },
        {
            "source": 160,
            "target": 2357
        },
        {
            "source": 160,
            "target": 2358
        },
        {
            "source": 160,
            "target": 2378
        },
        {
            "source": 160,
            "target": 2723
        },
        {
            "source": 160,
            "target": 2791
        },
        {
            "source": 160,
            "target": 2792
        },
        {
            "source": 160,
            "target": 2793
        },
        {
            "source": 160,
            "target": 2794
        },
        {
            "source": 160,
            "target": 2795
        },
        {
            "source": 160,
            "target": 2988
        },
        {
            "source": 160,
            "target": 3241
        },
        {
            "source": 160,
            "target": 3242
        },
        {
            "source": 160,
            "target": 3341
        },
        {
            "source": 160,
            "target": 3407
        },
        {
            "source": 160,
            "target": 3746
        },
        {
            "source": 160,
            "target": 3754
        },
        {
            "source": 160,
            "target": 3816
        },
        {
            "source": 160,
            "target": 3925
        },
        {
            "source": 160,
            "target": 3964
        },
        {
            "source": 160,
            "target": 3984
        },
        {
            "source": 160,
            "target": 4025
        },
        {
            "source": 160,
            "target": 4054
        },
        {
            "source": 160,
            "target": 4323
        },
        {
            "source": 160,
            "target": 4335
        },
        {
            "source": 160,
            "target": 4336
        },
        {
            "source": 160,
            "target": 4337
        },
        {
            "source": 160,
            "target": 4340
        },
        {
            "source": 160,
            "target": 4846
        },
        {
            "source": 160,
            "target": 4870
        },
        {
            "source": 160,
            "target": 4871
        },
        {
            "source": 160,
            "target": 4872
        },
        {
            "source": 160,
            "target": 4873
        },
        {
            "source": 160,
            "target": 4941
        },
        {
            "source": 160,
            "target": 5080
        },
        {
            "source": 160,
            "target": 5096
        },
        {
            "source": 2209,
            "target": 166
        },
        {
            "source": 2209,
            "target": 167
        },
        {
            "source": 2209,
            "target": 442
        },
        {
            "source": 2209,
            "target": 1962
        },
        {
            "source": 2209,
            "target": 2001
        },
        {
            "source": 2209,
            "target": 2018
        },
        {
            "source": 2209,
            "target": 2219
        },
        {
            "source": 2209,
            "target": 2231
        },
        {
            "source": 2209,
            "target": 2243
        },
        {
            "source": 2209,
            "target": 2251
        },
        {
            "source": 2209,
            "target": 2262
        },
        {
            "source": 2209,
            "target": 2265
        },
        {
            "source": 2209,
            "target": 2267
        },
        {
            "source": 2209,
            "target": 2273
        },
        {
            "source": 2209,
            "target": 2288
        },
        {
            "source": 2209,
            "target": 2310
        },
        {
            "source": 2209,
            "target": 2312
        },
        {
            "source": 2209,
            "target": 2316
        },
        {
            "source": 2209,
            "target": 2321
        },
        {
            "source": 2209,
            "target": 2354
        },
        {
            "source": 2209,
            "target": 2355
        },
        {
            "source": 2209,
            "target": 2356
        },
        {
            "source": 2209,
            "target": 2357
        },
        {
            "source": 2209,
            "target": 2358
        },
        {
            "source": 2209,
            "target": 2378
        },
        {
            "source": 2209,
            "target": 2723
        },
        {
            "source": 2209,
            "target": 2791
        },
        {
            "source": 2209,
            "target": 2792
        },
        {
            "source": 2209,
            "target": 2793
        },
        {
            "source": 2209,
            "target": 2794
        },
        {
            "source": 2209,
            "target": 2795
        },
        {
            "source": 2209,
            "target": 2988
        },
        {
            "source": 2209,
            "target": 3241
        },
        {
            "source": 2209,
            "target": 3242
        },
        {
            "source": 2209,
            "target": 3341
        },
        {
            "source": 2209,
            "target": 3407
        },
        {
            "source": 2209,
            "target": 3746
        },
        {
            "source": 2209,
            "target": 3754
        },
        {
            "source": 2209,
            "target": 3816
        },
        {
            "source": 2209,
            "target": 3925
        },
        {
            "source": 2209,
            "target": 3964
        },
        {
            "source": 2209,
            "target": 3984
        },
        {
            "source": 2209,
            "target": 4025
        },
        {
            "source": 2209,
            "target": 4054
        },
        {
            "source": 2209,
            "target": 4323
        },
        {
            "source": 2209,
            "target": 4335
        },
        {
            "source": 2209,
            "target": 4336
        },
        {
            "source": 2209,
            "target": 4337
        },
        {
            "source": 2209,
            "target": 4340
        },
        {
            "source": 2209,
            "target": 4846
        },
        {
            "source": 2209,
            "target": 4870
        },
        {
            "source": 2209,
            "target": 4871
        },
        {
            "source": 2209,
            "target": 4872
        },
        {
            "source": 2209,
            "target": 4873
        },
        {
            "source": 2209,
            "target": 4941
        },
        {
            "source": 2209,
            "target": 5080
        },
        {
            "source": 2209,
            "target": 5096
        },
        {
            "source": 3746,
            "target": 166
        },
        {
            "source": 3746,
            "target": 167
        },
        {
            "source": 3746,
            "target": 442
        },
        {
            "source": 3746,
            "target": 1962
        },
        {
            "source": 3746,
            "target": 2001
        },
        {
            "source": 3746,
            "target": 2018
        },
        {
            "source": 3746,
            "target": 2219
        },
        {
            "source": 3746,
            "target": 2231
        },
        {
            "source": 3746,
            "target": 2243
        },
        {
            "source": 3746,
            "target": 2251
        },
        {
            "source": 3746,
            "target": 2262
        },
        {
            "source": 3746,
            "target": 2265
        },
        {
            "source": 3746,
            "target": 2267
        },
        {
            "source": 3746,
            "target": 2273
        },
        {
            "source": 3746,
            "target": 2288
        },
        {
            "source": 3746,
            "target": 2310
        },
        {
            "source": 3746,
            "target": 2312
        },
        {
            "source": 3746,
            "target": 2316
        },
        {
            "source": 3746,
            "target": 2321
        },
        {
            "source": 3746,
            "target": 2354
        },
        {
            "source": 3746,
            "target": 2355
        },
        {
            "source": 3746,
            "target": 2356
        },
        {
            "source": 3746,
            "target": 2357
        },
        {
            "source": 3746,
            "target": 2358
        },
        {
            "source": 3746,
            "target": 2378
        },
        {
            "source": 3746,
            "target": 2723
        },
        {
            "source": 3746,
            "target": 2791
        },
        {
            "source": 3746,
            "target": 2792
        },
        {
            "source": 3746,
            "target": 2793
        },
        {
            "source": 3746,
            "target": 2794
        },
        {
            "source": 3746,
            "target": 2795
        },
        {
            "source": 3746,
            "target": 2988
        },
        {
            "source": 3746,
            "target": 3241
        },
        {
            "source": 3746,
            "target": 3242
        },
        {
            "source": 3746,
            "target": 3341
        },
        {
            "source": 3746,
            "target": 3407
        },
        {
            "source": 3746,
            "target": 3754
        },
        {
            "source": 3746,
            "target": 3816
        },
        {
            "source": 3746,
            "target": 3925
        },
        {
            "source": 3746,
            "target": 3964
        },
        {
            "source": 3746,
            "target": 3984
        },
        {
            "source": 3746,
            "target": 4025
        },
        {
            "source": 3746,
            "target": 4054
        },
        {
            "source": 3746,
            "target": 4323
        },
        {
            "source": 3746,
            "target": 4335
        },
        {
            "source": 3746,
            "target": 4336
        },
        {
            "source": 3746,
            "target": 4337
        },
        {
            "source": 3746,
            "target": 4340
        },
        {
            "source": 3746,
            "target": 4846
        },
        {
            "source": 3746,
            "target": 4870
        },
        {
            "source": 3746,
            "target": 4871
        },
        {
            "source": 3746,
            "target": 4872
        },
        {
            "source": 3746,
            "target": 4873
        },
        {
            "source": 3746,
            "target": 4941
        },
        {
            "source": 3746,
            "target": 5080
        },
        {
            "source": 3746,
            "target": 5096
        },
        {
            "source": 2723,
            "target": 166
        },
        {
            "source": 2723,
            "target": 167
        },
        {
            "source": 2723,
            "target": 442
        },
        {
            "source": 2723,
            "target": 1962
        },
        {
            "source": 2723,
            "target": 2001
        },
        {
            "source": 2723,
            "target": 2018
        },
        {
            "source": 2723,
            "target": 2219
        },
        {
            "source": 2723,
            "target": 2231
        },
        {
            "source": 2723,
            "target": 2243
        },
        {
            "source": 2723,
            "target": 2251
        },
        {
            "source": 2723,
            "target": 2262
        },
        {
            "source": 2723,
            "target": 2265
        },
        {
            "source": 2723,
            "target": 2267
        },
        {
            "source": 2723,
            "target": 2273
        },
        {
            "source": 2723,
            "target": 2288
        },
        {
            "source": 2723,
            "target": 2310
        },
        {
            "source": 2723,
            "target": 2312
        },
        {
            "source": 2723,
            "target": 2316
        },
        {
            "source": 2723,
            "target": 2321
        },
        {
            "source": 2723,
            "target": 2354
        },
        {
            "source": 2723,
            "target": 2355
        },
        {
            "source": 2723,
            "target": 2356
        },
        {
            "source": 2723,
            "target": 2357
        },
        {
            "source": 2723,
            "target": 2358
        },
        {
            "source": 2723,
            "target": 2378
        },
        {
            "source": 2723,
            "target": 2791
        },
        {
            "source": 2723,
            "target": 2792
        },
        {
            "source": 2723,
            "target": 2793
        },
        {
            "source": 2723,
            "target": 2794
        },
        {
            "source": 2723,
            "target": 2795
        },
        {
            "source": 2723,
            "target": 2988
        },
        {
            "source": 2723,
            "target": 3241
        },
        {
            "source": 2723,
            "target": 3242
        },
        {
            "source": 2723,
            "target": 3341
        },
        {
            "source": 2723,
            "target": 3407
        },
        {
            "source": 2723,
            "target": 3754
        },
        {
            "source": 2723,
            "target": 3816
        },
        {
            "source": 2723,
            "target": 3925
        },
        {
            "source": 2723,
            "target": 3964
        },
        {
            "source": 2723,
            "target": 3984
        },
        {
            "source": 2723,
            "target": 4025
        },
        {
            "source": 2723,
            "target": 4054
        },
        {
            "source": 2723,
            "target": 4323
        },
        {
            "source": 2723,
            "target": 4335
        },
        {
            "source": 2723,
            "target": 4336
        },
        {
            "source": 2723,
            "target": 4337
        },
        {
            "source": 2723,
            "target": 4340
        },
        {
            "source": 2723,
            "target": 4846
        },
        {
            "source": 2723,
            "target": 4870
        },
        {
            "source": 2723,
            "target": 4871
        },
        {
            "source": 2723,
            "target": 4872
        },
        {
            "source": 2723,
            "target": 4873
        },
        {
            "source": 2723,
            "target": 4941
        },
        {
            "source": 2723,
            "target": 5080
        },
        {
            "source": 2723,
            "target": 5096
        },
        {
            "source": 166,
            "target": 167
        },
        {
            "source": 166,
            "target": 442
        },
        {
            "source": 166,
            "target": 1962
        },
        {
            "source": 166,
            "target": 2001
        },
        {
            "source": 166,
            "target": 2018
        },
        {
            "source": 166,
            "target": 2219
        },
        {
            "source": 166,
            "target": 2231
        },
        {
            "source": 166,
            "target": 2243
        },
        {
            "source": 166,
            "target": 2251
        },
        {
            "source": 166,
            "target": 2262
        },
        {
            "source": 166,
            "target": 2265
        },
        {
            "source": 166,
            "target": 2267
        },
        {
            "source": 166,
            "target": 2273
        },
        {
            "source": 166,
            "target": 2288
        },
        {
            "source": 166,
            "target": 2310
        },
        {
            "source": 166,
            "target": 2312
        },
        {
            "source": 166,
            "target": 2316
        },
        {
            "source": 166,
            "target": 2321
        },
        {
            "source": 166,
            "target": 2354
        },
        {
            "source": 166,
            "target": 2355
        },
        {
            "source": 166,
            "target": 2356
        },
        {
            "source": 166,
            "target": 2357
        },
        {
            "source": 166,
            "target": 2358
        },
        {
            "source": 166,
            "target": 2378
        },
        {
            "source": 166,
            "target": 2791
        },
        {
            "source": 166,
            "target": 2792
        },
        {
            "source": 166,
            "target": 2793
        },
        {
            "source": 166,
            "target": 2794
        },
        {
            "source": 166,
            "target": 2795
        },
        {
            "source": 166,
            "target": 2988
        },
        {
            "source": 166,
            "target": 3241
        },
        {
            "source": 166,
            "target": 3242
        },
        {
            "source": 166,
            "target": 3341
        },
        {
            "source": 166,
            "target": 3407
        },
        {
            "source": 166,
            "target": 3754
        },
        {
            "source": 166,
            "target": 3816
        },
        {
            "source": 166,
            "target": 3925
        },
        {
            "source": 166,
            "target": 3964
        },
        {
            "source": 166,
            "target": 3984
        },
        {
            "source": 166,
            "target": 4025
        },
        {
            "source": 166,
            "target": 4054
        },
        {
            "source": 166,
            "target": 4323
        },
        {
            "source": 166,
            "target": 4335
        },
        {
            "source": 166,
            "target": 4336
        },
        {
            "source": 166,
            "target": 4337
        },
        {
            "source": 166,
            "target": 4340
        },
        {
            "source": 166,
            "target": 4846
        },
        {
            "source": 166,
            "target": 4870
        },
        {
            "source": 166,
            "target": 4871
        },
        {
            "source": 166,
            "target": 4872
        },
        {
            "source": 166,
            "target": 4873
        },
        {
            "source": 166,
            "target": 4941
        },
        {
            "source": 166,
            "target": 5080
        },
        {
            "source": 166,
            "target": 5096
        },
        {
            "source": 167,
            "target": 442
        },
        {
            "source": 167,
            "target": 1962
        },
        {
            "source": 167,
            "target": 2001
        },
        {
            "source": 167,
            "target": 2018
        },
        {
            "source": 167,
            "target": 2219
        },
        {
            "source": 167,
            "target": 2231
        },
        {
            "source": 167,
            "target": 2243
        },
        {
            "source": 167,
            "target": 2251
        },
        {
            "source": 167,
            "target": 2262
        },
        {
            "source": 167,
            "target": 2265
        },
        {
            "source": 167,
            "target": 2267
        },
        {
            "source": 167,
            "target": 2273
        },
        {
            "source": 167,
            "target": 2288
        },
        {
            "source": 167,
            "target": 2310
        },
        {
            "source": 167,
            "target": 2312
        },
        {
            "source": 167,
            "target": 2316
        },
        {
            "source": 167,
            "target": 2321
        },
        {
            "source": 167,
            "target": 2354
        },
        {
            "source": 167,
            "target": 2355
        },
        {
            "source": 167,
            "target": 2356
        },
        {
            "source": 167,
            "target": 2357
        },
        {
            "source": 167,
            "target": 2358
        },
        {
            "source": 167,
            "target": 2378
        },
        {
            "source": 167,
            "target": 2791
        },
        {
            "source": 167,
            "target": 2792
        },
        {
            "source": 167,
            "target": 2793
        },
        {
            "source": 167,
            "target": 2794
        },
        {
            "source": 167,
            "target": 2795
        },
        {
            "source": 167,
            "target": 2988
        },
        {
            "source": 167,
            "target": 3241
        },
        {
            "source": 167,
            "target": 3242
        },
        {
            "source": 167,
            "target": 3341
        },
        {
            "source": 167,
            "target": 3407
        },
        {
            "source": 167,
            "target": 3754
        },
        {
            "source": 167,
            "target": 3816
        },
        {
            "source": 167,
            "target": 3925
        },
        {
            "source": 167,
            "target": 3964
        },
        {
            "source": 167,
            "target": 3984
        },
        {
            "source": 167,
            "target": 4025
        },
        {
            "source": 167,
            "target": 4054
        },
        {
            "source": 167,
            "target": 4323
        },
        {
            "source": 167,
            "target": 4335
        },
        {
            "source": 167,
            "target": 4336
        },
        {
            "source": 167,
            "target": 4337
        },
        {
            "source": 167,
            "target": 4340
        },
        {
            "source": 167,
            "target": 4846
        },
        {
            "source": 167,
            "target": 4870
        },
        {
            "source": 167,
            "target": 4871
        },
        {
            "source": 167,
            "target": 4872
        },
        {
            "source": 167,
            "target": 4873
        },
        {
            "source": 167,
            "target": 4941
        },
        {
            "source": 167,
            "target": 5080
        },
        {
            "source": 167,
            "target": 5096
        },
        {
            "source": 3241,
            "target": 442
        },
        {
            "source": 3241,
            "target": 1962
        },
        {
            "source": 3241,
            "target": 2001
        },
        {
            "source": 3241,
            "target": 2018
        },
        {
            "source": 3241,
            "target": 2219
        },
        {
            "source": 3241,
            "target": 2231
        },
        {
            "source": 3241,
            "target": 2243
        },
        {
            "source": 3241,
            "target": 2251
        },
        {
            "source": 3241,
            "target": 2262
        },
        {
            "source": 3241,
            "target": 2265
        },
        {
            "source": 3241,
            "target": 2267
        },
        {
            "source": 3241,
            "target": 2273
        },
        {
            "source": 3241,
            "target": 2288
        },
        {
            "source": 3241,
            "target": 2310
        },
        {
            "source": 3241,
            "target": 2312
        },
        {
            "source": 3241,
            "target": 2316
        },
        {
            "source": 3241,
            "target": 2321
        },
        {
            "source": 3241,
            "target": 2354
        },
        {
            "source": 3241,
            "target": 2355
        },
        {
            "source": 3241,
            "target": 2356
        },
        {
            "source": 3241,
            "target": 2357
        },
        {
            "source": 3241,
            "target": 2358
        },
        {
            "source": 3241,
            "target": 2378
        },
        {
            "source": 3241,
            "target": 2791
        },
        {
            "source": 3241,
            "target": 2792
        },
        {
            "source": 3241,
            "target": 2793
        },
        {
            "source": 3241,
            "target": 2794
        },
        {
            "source": 3241,
            "target": 2795
        },
        {
            "source": 3241,
            "target": 2988
        },
        {
            "source": 3241,
            "target": 3242
        },
        {
            "source": 3241,
            "target": 3341
        },
        {
            "source": 3241,
            "target": 3407
        },
        {
            "source": 3241,
            "target": 3754
        },
        {
            "source": 3241,
            "target": 3816
        },
        {
            "source": 3241,
            "target": 3925
        },
        {
            "source": 3241,
            "target": 3964
        },
        {
            "source": 3241,
            "target": 3984
        },
        {
            "source": 3241,
            "target": 4025
        },
        {
            "source": 3241,
            "target": 4054
        },
        {
            "source": 3241,
            "target": 4323
        },
        {
            "source": 3241,
            "target": 4335
        },
        {
            "source": 3241,
            "target": 4336
        },
        {
            "source": 3241,
            "target": 4337
        },
        {
            "source": 3241,
            "target": 4340
        },
        {
            "source": 3241,
            "target": 4846
        },
        {
            "source": 3241,
            "target": 4870
        },
        {
            "source": 3241,
            "target": 4871
        },
        {
            "source": 3241,
            "target": 4872
        },
        {
            "source": 3241,
            "target": 4873
        },
        {
            "source": 3241,
            "target": 4941
        },
        {
            "source": 3241,
            "target": 5080
        },
        {
            "source": 3241,
            "target": 5096
        },
        {
            "source": 3242,
            "target": 442
        },
        {
            "source": 3242,
            "target": 1962
        },
        {
            "source": 3242,
            "target": 2001
        },
        {
            "source": 3242,
            "target": 2018
        },
        {
            "source": 3242,
            "target": 2219
        },
        {
            "source": 3242,
            "target": 2231
        },
        {
            "source": 3242,
            "target": 2243
        },
        {
            "source": 3242,
            "target": 2251
        },
        {
            "source": 3242,
            "target": 2262
        },
        {
            "source": 3242,
            "target": 2265
        },
        {
            "source": 3242,
            "target": 2267
        },
        {
            "source": 3242,
            "target": 2273
        },
        {
            "source": 3242,
            "target": 2288
        },
        {
            "source": 3242,
            "target": 2310
        },
        {
            "source": 3242,
            "target": 2312
        },
        {
            "source": 3242,
            "target": 2316
        },
        {
            "source": 3242,
            "target": 2321
        },
        {
            "source": 3242,
            "target": 2354
        },
        {
            "source": 3242,
            "target": 2355
        },
        {
            "source": 3242,
            "target": 2356
        },
        {
            "source": 3242,
            "target": 2357
        },
        {
            "source": 3242,
            "target": 2358
        },
        {
            "source": 3242,
            "target": 2378
        },
        {
            "source": 3242,
            "target": 2791
        },
        {
            "source": 3242,
            "target": 2792
        },
        {
            "source": 3242,
            "target": 2793
        },
        {
            "source": 3242,
            "target": 2794
        },
        {
            "source": 3242,
            "target": 2795
        },
        {
            "source": 3242,
            "target": 2988
        },
        {
            "source": 3242,
            "target": 3341
        },
        {
            "source": 3242,
            "target": 3407
        },
        {
            "source": 3242,
            "target": 3754
        },
        {
            "source": 3242,
            "target": 3816
        },
        {
            "source": 3242,
            "target": 3925
        },
        {
            "source": 3242,
            "target": 3964
        },
        {
            "source": 3242,
            "target": 3984
        },
        {
            "source": 3242,
            "target": 4025
        },
        {
            "source": 3242,
            "target": 4054
        },
        {
            "source": 3242,
            "target": 4323
        },
        {
            "source": 3242,
            "target": 4335
        },
        {
            "source": 3242,
            "target": 4336
        },
        {
            "source": 3242,
            "target": 4337
        },
        {
            "source": 3242,
            "target": 4340
        },
        {
            "source": 3242,
            "target": 4846
        },
        {
            "source": 3242,
            "target": 4870
        },
        {
            "source": 3242,
            "target": 4871
        },
        {
            "source": 3242,
            "target": 4872
        },
        {
            "source": 3242,
            "target": 4873
        },
        {
            "source": 3242,
            "target": 4941
        },
        {
            "source": 3242,
            "target": 5080
        },
        {
            "source": 3242,
            "target": 5096
        },
        {
            "source": 2219,
            "target": 442
        },
        {
            "source": 2219,
            "target": 1962
        },
        {
            "source": 2219,
            "target": 2001
        },
        {
            "source": 2219,
            "target": 2018
        },
        {
            "source": 2219,
            "target": 2231
        },
        {
            "source": 2219,
            "target": 2243
        },
        {
            "source": 2219,
            "target": 2251
        },
        {
            "source": 2219,
            "target": 2262
        },
        {
            "source": 2219,
            "target": 2265
        },
        {
            "source": 2219,
            "target": 2267
        },
        {
            "source": 2219,
            "target": 2273
        },
        {
            "source": 2219,
            "target": 2288
        },
        {
            "source": 2219,
            "target": 2310
        },
        {
            "source": 2219,
            "target": 2312
        },
        {
            "source": 2219,
            "target": 2316
        },
        {
            "source": 2219,
            "target": 2321
        },
        {
            "source": 2219,
            "target": 2354
        },
        {
            "source": 2219,
            "target": 2355
        },
        {
            "source": 2219,
            "target": 2356
        },
        {
            "source": 2219,
            "target": 2357
        },
        {
            "source": 2219,
            "target": 2358
        },
        {
            "source": 2219,
            "target": 2378
        },
        {
            "source": 2219,
            "target": 2791
        },
        {
            "source": 2219,
            "target": 2792
        },
        {
            "source": 2219,
            "target": 2793
        },
        {
            "source": 2219,
            "target": 2794
        },
        {
            "source": 2219,
            "target": 2795
        },
        {
            "source": 2219,
            "target": 2988
        },
        {
            "source": 2219,
            "target": 3341
        },
        {
            "source": 2219,
            "target": 3407
        },
        {
            "source": 2219,
            "target": 3754
        },
        {
            "source": 2219,
            "target": 3816
        },
        {
            "source": 2219,
            "target": 3925
        },
        {
            "source": 2219,
            "target": 3964
        },
        {
            "source": 2219,
            "target": 3984
        },
        {
            "source": 2219,
            "target": 4025
        },
        {
            "source": 2219,
            "target": 4054
        },
        {
            "source": 2219,
            "target": 4323
        },
        {
            "source": 2219,
            "target": 4335
        },
        {
            "source": 2219,
            "target": 4336
        },
        {
            "source": 2219,
            "target": 4337
        },
        {
            "source": 2219,
            "target": 4340
        },
        {
            "source": 2219,
            "target": 4846
        },
        {
            "source": 2219,
            "target": 4870
        },
        {
            "source": 2219,
            "target": 4871
        },
        {
            "source": 2219,
            "target": 4872
        },
        {
            "source": 2219,
            "target": 4873
        },
        {
            "source": 2219,
            "target": 4941
        },
        {
            "source": 2219,
            "target": 5080
        },
        {
            "source": 2219,
            "target": 5096
        },
        {
            "source": 3754,
            "target": 442
        },
        {
            "source": 3754,
            "target": 1962
        },
        {
            "source": 3754,
            "target": 2001
        },
        {
            "source": 3754,
            "target": 2018
        },
        {
            "source": 3754,
            "target": 2231
        },
        {
            "source": 3754,
            "target": 2243
        },
        {
            "source": 3754,
            "target": 2251
        },
        {
            "source": 3754,
            "target": 2262
        },
        {
            "source": 3754,
            "target": 2265
        },
        {
            "source": 3754,
            "target": 2267
        },
        {
            "source": 3754,
            "target": 2273
        },
        {
            "source": 3754,
            "target": 2288
        },
        {
            "source": 3754,
            "target": 2310
        },
        {
            "source": 3754,
            "target": 2312
        },
        {
            "source": 3754,
            "target": 2316
        },
        {
            "source": 3754,
            "target": 2321
        },
        {
            "source": 3754,
            "target": 2354
        },
        {
            "source": 3754,
            "target": 2355
        },
        {
            "source": 3754,
            "target": 2356
        },
        {
            "source": 3754,
            "target": 2357
        },
        {
            "source": 3754,
            "target": 2358
        },
        {
            "source": 3754,
            "target": 2378
        },
        {
            "source": 3754,
            "target": 2791
        },
        {
            "source": 3754,
            "target": 2792
        },
        {
            "source": 3754,
            "target": 2793
        },
        {
            "source": 3754,
            "target": 2794
        },
        {
            "source": 3754,
            "target": 2795
        },
        {
            "source": 3754,
            "target": 2988
        },
        {
            "source": 3754,
            "target": 3341
        },
        {
            "source": 3754,
            "target": 3407
        },
        {
            "source": 3754,
            "target": 3816
        },
        {
            "source": 3754,
            "target": 3925
        },
        {
            "source": 3754,
            "target": 3964
        },
        {
            "source": 3754,
            "target": 3984
        },
        {
            "source": 3754,
            "target": 4025
        },
        {
            "source": 3754,
            "target": 4054
        },
        {
            "source": 3754,
            "target": 4323
        },
        {
            "source": 3754,
            "target": 4335
        },
        {
            "source": 3754,
            "target": 4336
        },
        {
            "source": 3754,
            "target": 4337
        },
        {
            "source": 3754,
            "target": 4340
        },
        {
            "source": 3754,
            "target": 4846
        },
        {
            "source": 3754,
            "target": 4870
        },
        {
            "source": 3754,
            "target": 4871
        },
        {
            "source": 3754,
            "target": 4872
        },
        {
            "source": 3754,
            "target": 4873
        },
        {
            "source": 3754,
            "target": 4941
        },
        {
            "source": 3754,
            "target": 5080
        },
        {
            "source": 3754,
            "target": 5096
        },
        {
            "source": 2231,
            "target": 442
        },
        {
            "source": 2231,
            "target": 1962
        },
        {
            "source": 2231,
            "target": 2001
        },
        {
            "source": 2231,
            "target": 2018
        },
        {
            "source": 2231,
            "target": 2243
        },
        {
            "source": 2231,
            "target": 2251
        },
        {
            "source": 2231,
            "target": 2262
        },
        {
            "source": 2231,
            "target": 2265
        },
        {
            "source": 2231,
            "target": 2267
        },
        {
            "source": 2231,
            "target": 2273
        },
        {
            "source": 2231,
            "target": 2288
        },
        {
            "source": 2231,
            "target": 2310
        },
        {
            "source": 2231,
            "target": 2312
        },
        {
            "source": 2231,
            "target": 2316
        },
        {
            "source": 2231,
            "target": 2321
        },
        {
            "source": 2231,
            "target": 2354
        },
        {
            "source": 2231,
            "target": 2355
        },
        {
            "source": 2231,
            "target": 2356
        },
        {
            "source": 2231,
            "target": 2357
        },
        {
            "source": 2231,
            "target": 2358
        },
        {
            "source": 2231,
            "target": 2378
        },
        {
            "source": 2231,
            "target": 2791
        },
        {
            "source": 2231,
            "target": 2792
        },
        {
            "source": 2231,
            "target": 2793
        },
        {
            "source": 2231,
            "target": 2794
        },
        {
            "source": 2231,
            "target": 2795
        },
        {
            "source": 2231,
            "target": 2988
        },
        {
            "source": 2231,
            "target": 3341
        },
        {
            "source": 2231,
            "target": 3407
        },
        {
            "source": 2231,
            "target": 3816
        },
        {
            "source": 2231,
            "target": 3925
        },
        {
            "source": 2231,
            "target": 3964
        },
        {
            "source": 2231,
            "target": 3984
        },
        {
            "source": 2231,
            "target": 4025
        },
        {
            "source": 2231,
            "target": 4054
        },
        {
            "source": 2231,
            "target": 4323
        },
        {
            "source": 2231,
            "target": 4335
        },
        {
            "source": 2231,
            "target": 4336
        },
        {
            "source": 2231,
            "target": 4337
        },
        {
            "source": 2231,
            "target": 4340
        },
        {
            "source": 2231,
            "target": 4846
        },
        {
            "source": 2231,
            "target": 4870
        },
        {
            "source": 2231,
            "target": 4871
        },
        {
            "source": 2231,
            "target": 4872
        },
        {
            "source": 2231,
            "target": 4873
        },
        {
            "source": 2231,
            "target": 4941
        },
        {
            "source": 2231,
            "target": 5080
        },
        {
            "source": 2231,
            "target": 5096
        },
        {
            "source": 2243,
            "target": 442
        },
        {
            "source": 2243,
            "target": 1962
        },
        {
            "source": 2243,
            "target": 2001
        },
        {
            "source": 2243,
            "target": 2018
        },
        {
            "source": 2243,
            "target": 2251
        },
        {
            "source": 2243,
            "target": 2262
        },
        {
            "source": 2243,
            "target": 2265
        },
        {
            "source": 2243,
            "target": 2267
        },
        {
            "source": 2243,
            "target": 2273
        },
        {
            "source": 2243,
            "target": 2288
        },
        {
            "source": 2243,
            "target": 2310
        },
        {
            "source": 2243,
            "target": 2312
        },
        {
            "source": 2243,
            "target": 2316
        },
        {
            "source": 2243,
            "target": 2321
        },
        {
            "source": 2243,
            "target": 2354
        },
        {
            "source": 2243,
            "target": 2355
        },
        {
            "source": 2243,
            "target": 2356
        },
        {
            "source": 2243,
            "target": 2357
        },
        {
            "source": 2243,
            "target": 2358
        },
        {
            "source": 2243,
            "target": 2378
        },
        {
            "source": 2243,
            "target": 2791
        },
        {
            "source": 2243,
            "target": 2792
        },
        {
            "source": 2243,
            "target": 2793
        },
        {
            "source": 2243,
            "target": 2794
        },
        {
            "source": 2243,
            "target": 2795
        },
        {
            "source": 2243,
            "target": 2988
        },
        {
            "source": 2243,
            "target": 3341
        },
        {
            "source": 2243,
            "target": 3407
        },
        {
            "source": 2243,
            "target": 3816
        },
        {
            "source": 2243,
            "target": 3925
        },
        {
            "source": 2243,
            "target": 3964
        },
        {
            "source": 2243,
            "target": 3984
        },
        {
            "source": 2243,
            "target": 4025
        },
        {
            "source": 2243,
            "target": 4054
        },
        {
            "source": 2243,
            "target": 4323
        },
        {
            "source": 2243,
            "target": 4335
        },
        {
            "source": 2243,
            "target": 4336
        },
        {
            "source": 2243,
            "target": 4337
        },
        {
            "source": 2243,
            "target": 4340
        },
        {
            "source": 2243,
            "target": 4846
        },
        {
            "source": 2243,
            "target": 4870
        },
        {
            "source": 2243,
            "target": 4871
        },
        {
            "source": 2243,
            "target": 4872
        },
        {
            "source": 2243,
            "target": 4873
        },
        {
            "source": 2243,
            "target": 4941
        },
        {
            "source": 2243,
            "target": 5080
        },
        {
            "source": 2243,
            "target": 5096
        },
        {
            "source": 2251,
            "target": 442
        },
        {
            "source": 2251,
            "target": 1962
        },
        {
            "source": 2251,
            "target": 2001
        },
        {
            "source": 2251,
            "target": 2018
        },
        {
            "source": 2251,
            "target": 2262
        },
        {
            "source": 2251,
            "target": 2265
        },
        {
            "source": 2251,
            "target": 2267
        },
        {
            "source": 2251,
            "target": 2273
        },
        {
            "source": 2251,
            "target": 2288
        },
        {
            "source": 2251,
            "target": 2310
        },
        {
            "source": 2251,
            "target": 2312
        },
        {
            "source": 2251,
            "target": 2316
        },
        {
            "source": 2251,
            "target": 2321
        },
        {
            "source": 2251,
            "target": 2354
        },
        {
            "source": 2251,
            "target": 2355
        },
        {
            "source": 2251,
            "target": 2356
        },
        {
            "source": 2251,
            "target": 2357
        },
        {
            "source": 2251,
            "target": 2358
        },
        {
            "source": 2251,
            "target": 2378
        },
        {
            "source": 2251,
            "target": 2791
        },
        {
            "source": 2251,
            "target": 2792
        },
        {
            "source": 2251,
            "target": 2793
        },
        {
            "source": 2251,
            "target": 2794
        },
        {
            "source": 2251,
            "target": 2795
        },
        {
            "source": 2251,
            "target": 2988
        },
        {
            "source": 2251,
            "target": 3341
        },
        {
            "source": 2251,
            "target": 3407
        },
        {
            "source": 2251,
            "target": 3816
        },
        {
            "source": 2251,
            "target": 3925
        },
        {
            "source": 2251,
            "target": 3964
        },
        {
            "source": 2251,
            "target": 3984
        },
        {
            "source": 2251,
            "target": 4025
        },
        {
            "source": 2251,
            "target": 4054
        },
        {
            "source": 2251,
            "target": 4323
        },
        {
            "source": 2251,
            "target": 4335
        },
        {
            "source": 2251,
            "target": 4336
        },
        {
            "source": 2251,
            "target": 4337
        },
        {
            "source": 2251,
            "target": 4340
        },
        {
            "source": 2251,
            "target": 4846
        },
        {
            "source": 2251,
            "target": 4870
        },
        {
            "source": 2251,
            "target": 4871
        },
        {
            "source": 2251,
            "target": 4872
        },
        {
            "source": 2251,
            "target": 4873
        },
        {
            "source": 2251,
            "target": 4941
        },
        {
            "source": 2251,
            "target": 5080
        },
        {
            "source": 2251,
            "target": 5096
        },
        {
            "source": 2262,
            "target": 442
        },
        {
            "source": 2262,
            "target": 1962
        },
        {
            "source": 2262,
            "target": 2001
        },
        {
            "source": 2262,
            "target": 2018
        },
        {
            "source": 2262,
            "target": 2265
        },
        {
            "source": 2262,
            "target": 2267
        },
        {
            "source": 2262,
            "target": 2273
        },
        {
            "source": 2262,
            "target": 2288
        },
        {
            "source": 2262,
            "target": 2310
        },
        {
            "source": 2262,
            "target": 2312
        },
        {
            "source": 2262,
            "target": 2316
        },
        {
            "source": 2262,
            "target": 2321
        },
        {
            "source": 2262,
            "target": 2354
        },
        {
            "source": 2262,
            "target": 2355
        },
        {
            "source": 2262,
            "target": 2356
        },
        {
            "source": 2262,
            "target": 2357
        },
        {
            "source": 2262,
            "target": 2358
        },
        {
            "source": 2262,
            "target": 2378
        },
        {
            "source": 2262,
            "target": 2791
        },
        {
            "source": 2262,
            "target": 2792
        },
        {
            "source": 2262,
            "target": 2793
        },
        {
            "source": 2262,
            "target": 2794
        },
        {
            "source": 2262,
            "target": 2795
        },
        {
            "source": 2262,
            "target": 2988
        },
        {
            "source": 2262,
            "target": 3341
        },
        {
            "source": 2262,
            "target": 3407
        },
        {
            "source": 2262,
            "target": 3816
        },
        {
            "source": 2262,
            "target": 3925
        },
        {
            "source": 2262,
            "target": 3964
        },
        {
            "source": 2262,
            "target": 3984
        },
        {
            "source": 2262,
            "target": 4025
        },
        {
            "source": 2262,
            "target": 4054
        },
        {
            "source": 2262,
            "target": 4323
        },
        {
            "source": 2262,
            "target": 4335
        },
        {
            "source": 2262,
            "target": 4336
        },
        {
            "source": 2262,
            "target": 4337
        },
        {
            "source": 2262,
            "target": 4340
        },
        {
            "source": 2262,
            "target": 4846
        },
        {
            "source": 2262,
            "target": 4870
        },
        {
            "source": 2262,
            "target": 4871
        },
        {
            "source": 2262,
            "target": 4872
        },
        {
            "source": 2262,
            "target": 4873
        },
        {
            "source": 2262,
            "target": 4941
        },
        {
            "source": 2262,
            "target": 5080
        },
        {
            "source": 2262,
            "target": 5096
        },
        {
            "source": 2265,
            "target": 442
        },
        {
            "source": 2265,
            "target": 1962
        },
        {
            "source": 2265,
            "target": 2001
        },
        {
            "source": 2265,
            "target": 2018
        },
        {
            "source": 2265,
            "target": 2267
        },
        {
            "source": 2265,
            "target": 2273
        },
        {
            "source": 2265,
            "target": 2288
        },
        {
            "source": 2265,
            "target": 2310
        },
        {
            "source": 2265,
            "target": 2312
        },
        {
            "source": 2265,
            "target": 2316
        },
        {
            "source": 2265,
            "target": 2321
        },
        {
            "source": 2265,
            "target": 2354
        },
        {
            "source": 2265,
            "target": 2355
        },
        {
            "source": 2265,
            "target": 2356
        },
        {
            "source": 2265,
            "target": 2357
        },
        {
            "source": 2265,
            "target": 2358
        },
        {
            "source": 2265,
            "target": 2378
        },
        {
            "source": 2265,
            "target": 2791
        },
        {
            "source": 2265,
            "target": 2792
        },
        {
            "source": 2265,
            "target": 2793
        },
        {
            "source": 2265,
            "target": 2794
        },
        {
            "source": 2265,
            "target": 2795
        },
        {
            "source": 2265,
            "target": 2988
        },
        {
            "source": 2265,
            "target": 3341
        },
        {
            "source": 2265,
            "target": 3407
        },
        {
            "source": 2265,
            "target": 3816
        },
        {
            "source": 2265,
            "target": 3925
        },
        {
            "source": 2265,
            "target": 3964
        },
        {
            "source": 2265,
            "target": 3984
        },
        {
            "source": 2265,
            "target": 4025
        },
        {
            "source": 2265,
            "target": 4054
        },
        {
            "source": 2265,
            "target": 4323
        },
        {
            "source": 2265,
            "target": 4335
        },
        {
            "source": 2265,
            "target": 4336
        },
        {
            "source": 2265,
            "target": 4337
        },
        {
            "source": 2265,
            "target": 4340
        },
        {
            "source": 2265,
            "target": 4846
        },
        {
            "source": 2265,
            "target": 4870
        },
        {
            "source": 2265,
            "target": 4871
        },
        {
            "source": 2265,
            "target": 4872
        },
        {
            "source": 2265,
            "target": 4873
        },
        {
            "source": 2265,
            "target": 4941
        },
        {
            "source": 2265,
            "target": 5080
        },
        {
            "source": 2265,
            "target": 5096
        },
        {
            "source": 2267,
            "target": 442
        },
        {
            "source": 2267,
            "target": 1962
        },
        {
            "source": 2267,
            "target": 2001
        },
        {
            "source": 2267,
            "target": 2018
        },
        {
            "source": 2267,
            "target": 2273
        },
        {
            "source": 2267,
            "target": 2288
        },
        {
            "source": 2267,
            "target": 2310
        },
        {
            "source": 2267,
            "target": 2312
        },
        {
            "source": 2267,
            "target": 2316
        },
        {
            "source": 2267,
            "target": 2321
        },
        {
            "source": 2267,
            "target": 2354
        },
        {
            "source": 2267,
            "target": 2355
        },
        {
            "source": 2267,
            "target": 2356
        },
        {
            "source": 2267,
            "target": 2357
        },
        {
            "source": 2267,
            "target": 2358
        },
        {
            "source": 2267,
            "target": 2378
        },
        {
            "source": 2267,
            "target": 2791
        },
        {
            "source": 2267,
            "target": 2792
        },
        {
            "source": 2267,
            "target": 2793
        },
        {
            "source": 2267,
            "target": 2794
        },
        {
            "source": 2267,
            "target": 2795
        },
        {
            "source": 2267,
            "target": 2988
        },
        {
            "source": 2267,
            "target": 3341
        },
        {
            "source": 2267,
            "target": 3407
        },
        {
            "source": 2267,
            "target": 3816
        },
        {
            "source": 2267,
            "target": 3925
        },
        {
            "source": 2267,
            "target": 3964
        },
        {
            "source": 2267,
            "target": 3984
        },
        {
            "source": 2267,
            "target": 4025
        },
        {
            "source": 2267,
            "target": 4054
        },
        {
            "source": 2267,
            "target": 4323
        },
        {
            "source": 2267,
            "target": 4335
        },
        {
            "source": 2267,
            "target": 4336
        },
        {
            "source": 2267,
            "target": 4337
        },
        {
            "source": 2267,
            "target": 4340
        },
        {
            "source": 2267,
            "target": 4846
        },
        {
            "source": 2267,
            "target": 4870
        },
        {
            "source": 2267,
            "target": 4871
        },
        {
            "source": 2267,
            "target": 4872
        },
        {
            "source": 2267,
            "target": 4873
        },
        {
            "source": 2267,
            "target": 4941
        },
        {
            "source": 2267,
            "target": 5080
        },
        {
            "source": 2267,
            "target": 5096
        },
        {
            "source": 2273,
            "target": 442
        },
        {
            "source": 2273,
            "target": 1962
        },
        {
            "source": 2273,
            "target": 2001
        },
        {
            "source": 2273,
            "target": 2018
        },
        {
            "source": 2273,
            "target": 2288
        },
        {
            "source": 2273,
            "target": 2310
        },
        {
            "source": 2273,
            "target": 2312
        },
        {
            "source": 2273,
            "target": 2316
        },
        {
            "source": 2273,
            "target": 2321
        },
        {
            "source": 2273,
            "target": 2354
        },
        {
            "source": 2273,
            "target": 2355
        },
        {
            "source": 2273,
            "target": 2356
        },
        {
            "source": 2273,
            "target": 2357
        },
        {
            "source": 2273,
            "target": 2358
        },
        {
            "source": 2273,
            "target": 2378
        },
        {
            "source": 2273,
            "target": 2791
        },
        {
            "source": 2273,
            "target": 2792
        },
        {
            "source": 2273,
            "target": 2793
        },
        {
            "source": 2273,
            "target": 2794
        },
        {
            "source": 2273,
            "target": 2795
        },
        {
            "source": 2273,
            "target": 2988
        },
        {
            "source": 2273,
            "target": 3341
        },
        {
            "source": 2273,
            "target": 3407
        },
        {
            "source": 2273,
            "target": 3816
        },
        {
            "source": 2273,
            "target": 3925
        },
        {
            "source": 2273,
            "target": 3964
        },
        {
            "source": 2273,
            "target": 3984
        },
        {
            "source": 2273,
            "target": 4025
        },
        {
            "source": 2273,
            "target": 4054
        },
        {
            "source": 2273,
            "target": 4323
        },
        {
            "source": 2273,
            "target": 4335
        },
        {
            "source": 2273,
            "target": 4336
        },
        {
            "source": 2273,
            "target": 4337
        },
        {
            "source": 2273,
            "target": 4340
        },
        {
            "source": 2273,
            "target": 4846
        },
        {
            "source": 2273,
            "target": 4870
        },
        {
            "source": 2273,
            "target": 4871
        },
        {
            "source": 2273,
            "target": 4872
        },
        {
            "source": 2273,
            "target": 4873
        },
        {
            "source": 2273,
            "target": 4941
        },
        {
            "source": 2273,
            "target": 5080
        },
        {
            "source": 2273,
            "target": 5096
        },
        {
            "source": 4323,
            "target": 442
        },
        {
            "source": 4323,
            "target": 1962
        },
        {
            "source": 4323,
            "target": 2001
        },
        {
            "source": 4323,
            "target": 2018
        },
        {
            "source": 4323,
            "target": 2288
        },
        {
            "source": 4323,
            "target": 2310
        },
        {
            "source": 4323,
            "target": 2312
        },
        {
            "source": 4323,
            "target": 2316
        },
        {
            "source": 4323,
            "target": 2321
        },
        {
            "source": 4323,
            "target": 2354
        },
        {
            "source": 4323,
            "target": 2355
        },
        {
            "source": 4323,
            "target": 2356
        },
        {
            "source": 4323,
            "target": 2357
        },
        {
            "source": 4323,
            "target": 2358
        },
        {
            "source": 4323,
            "target": 2378
        },
        {
            "source": 4323,
            "target": 2791
        },
        {
            "source": 4323,
            "target": 2792
        },
        {
            "source": 4323,
            "target": 2793
        },
        {
            "source": 4323,
            "target": 2794
        },
        {
            "source": 4323,
            "target": 2795
        },
        {
            "source": 4323,
            "target": 2988
        },
        {
            "source": 4323,
            "target": 3341
        },
        {
            "source": 4323,
            "target": 3407
        },
        {
            "source": 4323,
            "target": 3816
        },
        {
            "source": 4323,
            "target": 3925
        },
        {
            "source": 4323,
            "target": 3964
        },
        {
            "source": 4323,
            "target": 3984
        },
        {
            "source": 4323,
            "target": 4025
        },
        {
            "source": 4323,
            "target": 4054
        },
        {
            "source": 4323,
            "target": 4335
        },
        {
            "source": 4323,
            "target": 4336
        },
        {
            "source": 4323,
            "target": 4337
        },
        {
            "source": 4323,
            "target": 4340
        },
        {
            "source": 4323,
            "target": 4846
        },
        {
            "source": 4323,
            "target": 4870
        },
        {
            "source": 4323,
            "target": 4871
        },
        {
            "source": 4323,
            "target": 4872
        },
        {
            "source": 4323,
            "target": 4873
        },
        {
            "source": 4323,
            "target": 4941
        },
        {
            "source": 4323,
            "target": 5080
        },
        {
            "source": 4323,
            "target": 5096
        },
        {
            "source": 2791,
            "target": 442
        },
        {
            "source": 2791,
            "target": 1962
        },
        {
            "source": 2791,
            "target": 2001
        },
        {
            "source": 2791,
            "target": 2018
        },
        {
            "source": 2791,
            "target": 2288
        },
        {
            "source": 2791,
            "target": 2310
        },
        {
            "source": 2791,
            "target": 2312
        },
        {
            "source": 2791,
            "target": 2316
        },
        {
            "source": 2791,
            "target": 2321
        },
        {
            "source": 2791,
            "target": 2354
        },
        {
            "source": 2791,
            "target": 2355
        },
        {
            "source": 2791,
            "target": 2356
        },
        {
            "source": 2791,
            "target": 2357
        },
        {
            "source": 2791,
            "target": 2358
        },
        {
            "source": 2791,
            "target": 2378
        },
        {
            "source": 2791,
            "target": 2792
        },
        {
            "source": 2791,
            "target": 2793
        },
        {
            "source": 2791,
            "target": 2794
        },
        {
            "source": 2791,
            "target": 2795
        },
        {
            "source": 2791,
            "target": 2988
        },
        {
            "source": 2791,
            "target": 3341
        },
        {
            "source": 2791,
            "target": 3407
        },
        {
            "source": 2791,
            "target": 3816
        },
        {
            "source": 2791,
            "target": 3925
        },
        {
            "source": 2791,
            "target": 3964
        },
        {
            "source": 2791,
            "target": 3984
        },
        {
            "source": 2791,
            "target": 4025
        },
        {
            "source": 2791,
            "target": 4054
        },
        {
            "source": 2791,
            "target": 4335
        },
        {
            "source": 2791,
            "target": 4336
        },
        {
            "source": 2791,
            "target": 4337
        },
        {
            "source": 2791,
            "target": 4340
        },
        {
            "source": 2791,
            "target": 4846
        },
        {
            "source": 2791,
            "target": 4870
        },
        {
            "source": 2791,
            "target": 4871
        },
        {
            "source": 2791,
            "target": 4872
        },
        {
            "source": 2791,
            "target": 4873
        },
        {
            "source": 2791,
            "target": 4941
        },
        {
            "source": 2791,
            "target": 5080
        },
        {
            "source": 2791,
            "target": 5096
        },
        {
            "source": 2792,
            "target": 442
        },
        {
            "source": 2792,
            "target": 1962
        },
        {
            "source": 2792,
            "target": 2001
        },
        {
            "source": 2792,
            "target": 2018
        },
        {
            "source": 2792,
            "target": 2288
        },
        {
            "source": 2792,
            "target": 2310
        },
        {
            "source": 2792,
            "target": 2312
        },
        {
            "source": 2792,
            "target": 2316
        },
        {
            "source": 2792,
            "target": 2321
        },
        {
            "source": 2792,
            "target": 2354
        },
        {
            "source": 2792,
            "target": 2355
        },
        {
            "source": 2792,
            "target": 2356
        },
        {
            "source": 2792,
            "target": 2357
        },
        {
            "source": 2792,
            "target": 2358
        },
        {
            "source": 2792,
            "target": 2378
        },
        {
            "source": 2792,
            "target": 2793
        },
        {
            "source": 2792,
            "target": 2794
        },
        {
            "source": 2792,
            "target": 2795
        },
        {
            "source": 2792,
            "target": 2988
        },
        {
            "source": 2792,
            "target": 3341
        },
        {
            "source": 2792,
            "target": 3407
        },
        {
            "source": 2792,
            "target": 3816
        },
        {
            "source": 2792,
            "target": 3925
        },
        {
            "source": 2792,
            "target": 3964
        },
        {
            "source": 2792,
            "target": 3984
        },
        {
            "source": 2792,
            "target": 4025
        },
        {
            "source": 2792,
            "target": 4054
        },
        {
            "source": 2792,
            "target": 4335
        },
        {
            "source": 2792,
            "target": 4336
        },
        {
            "source": 2792,
            "target": 4337
        },
        {
            "source": 2792,
            "target": 4340
        },
        {
            "source": 2792,
            "target": 4846
        },
        {
            "source": 2792,
            "target": 4870
        },
        {
            "source": 2792,
            "target": 4871
        },
        {
            "source": 2792,
            "target": 4872
        },
        {
            "source": 2792,
            "target": 4873
        },
        {
            "source": 2792,
            "target": 4941
        },
        {
            "source": 2792,
            "target": 5080
        },
        {
            "source": 2792,
            "target": 5096
        },
        {
            "source": 2793,
            "target": 442
        },
        {
            "source": 2793,
            "target": 1962
        },
        {
            "source": 2793,
            "target": 2001
        },
        {
            "source": 2793,
            "target": 2018
        },
        {
            "source": 2793,
            "target": 2288
        },
        {
            "source": 2793,
            "target": 2310
        },
        {
            "source": 2793,
            "target": 2312
        },
        {
            "source": 2793,
            "target": 2316
        },
        {
            "source": 2793,
            "target": 2321
        },
        {
            "source": 2793,
            "target": 2354
        },
        {
            "source": 2793,
            "target": 2355
        },
        {
            "source": 2793,
            "target": 2356
        },
        {
            "source": 2793,
            "target": 2357
        },
        {
            "source": 2793,
            "target": 2358
        },
        {
            "source": 2793,
            "target": 2378
        },
        {
            "source": 2793,
            "target": 2794
        },
        {
            "source": 2793,
            "target": 2795
        },
        {
            "source": 2793,
            "target": 2988
        },
        {
            "source": 2793,
            "target": 3341
        },
        {
            "source": 2793,
            "target": 3407
        },
        {
            "source": 2793,
            "target": 3816
        },
        {
            "source": 2793,
            "target": 3925
        },
        {
            "source": 2793,
            "target": 3964
        },
        {
            "source": 2793,
            "target": 3984
        },
        {
            "source": 2793,
            "target": 4025
        },
        {
            "source": 2793,
            "target": 4054
        },
        {
            "source": 2793,
            "target": 4335
        },
        {
            "source": 2793,
            "target": 4336
        },
        {
            "source": 2793,
            "target": 4337
        },
        {
            "source": 2793,
            "target": 4340
        },
        {
            "source": 2793,
            "target": 4846
        },
        {
            "source": 2793,
            "target": 4870
        },
        {
            "source": 2793,
            "target": 4871
        },
        {
            "source": 2793,
            "target": 4872
        },
        {
            "source": 2793,
            "target": 4873
        },
        {
            "source": 2793,
            "target": 4941
        },
        {
            "source": 2793,
            "target": 5080
        },
        {
            "source": 2793,
            "target": 5096
        },
        {
            "source": 2794,
            "target": 442
        },
        {
            "source": 2794,
            "target": 1962
        },
        {
            "source": 2794,
            "target": 2001
        },
        {
            "source": 2794,
            "target": 2018
        },
        {
            "source": 2794,
            "target": 2288
        },
        {
            "source": 2794,
            "target": 2310
        },
        {
            "source": 2794,
            "target": 2312
        },
        {
            "source": 2794,
            "target": 2316
        },
        {
            "source": 2794,
            "target": 2321
        },
        {
            "source": 2794,
            "target": 2354
        },
        {
            "source": 2794,
            "target": 2355
        },
        {
            "source": 2794,
            "target": 2356
        },
        {
            "source": 2794,
            "target": 2357
        },
        {
            "source": 2794,
            "target": 2358
        },
        {
            "source": 2794,
            "target": 2378
        },
        {
            "source": 2794,
            "target": 2795
        },
        {
            "source": 2794,
            "target": 2988
        },
        {
            "source": 2794,
            "target": 3341
        },
        {
            "source": 2794,
            "target": 3407
        },
        {
            "source": 2794,
            "target": 3816
        },
        {
            "source": 2794,
            "target": 3925
        },
        {
            "source": 2794,
            "target": 3964
        },
        {
            "source": 2794,
            "target": 3984
        },
        {
            "source": 2794,
            "target": 4025
        },
        {
            "source": 2794,
            "target": 4054
        },
        {
            "source": 2794,
            "target": 4335
        },
        {
            "source": 2794,
            "target": 4336
        },
        {
            "source": 2794,
            "target": 4337
        },
        {
            "source": 2794,
            "target": 4340
        },
        {
            "source": 2794,
            "target": 4846
        },
        {
            "source": 2794,
            "target": 4870
        },
        {
            "source": 2794,
            "target": 4871
        },
        {
            "source": 2794,
            "target": 4872
        },
        {
            "source": 2794,
            "target": 4873
        },
        {
            "source": 2794,
            "target": 4941
        },
        {
            "source": 2794,
            "target": 5080
        },
        {
            "source": 2794,
            "target": 5096
        },
        {
            "source": 2795,
            "target": 442
        },
        {
            "source": 2795,
            "target": 1962
        },
        {
            "source": 2795,
            "target": 2001
        },
        {
            "source": 2795,
            "target": 2018
        },
        {
            "source": 2795,
            "target": 2288
        },
        {
            "source": 2795,
            "target": 2310
        },
        {
            "source": 2795,
            "target": 2312
        },
        {
            "source": 2795,
            "target": 2316
        },
        {
            "source": 2795,
            "target": 2321
        },
        {
            "source": 2795,
            "target": 2354
        },
        {
            "source": 2795,
            "target": 2355
        },
        {
            "source": 2795,
            "target": 2356
        },
        {
            "source": 2795,
            "target": 2357
        },
        {
            "source": 2795,
            "target": 2358
        },
        {
            "source": 2795,
            "target": 2378
        },
        {
            "source": 2795,
            "target": 2988
        },
        {
            "source": 2795,
            "target": 3341
        },
        {
            "source": 2795,
            "target": 3407
        },
        {
            "source": 2795,
            "target": 3816
        },
        {
            "source": 2795,
            "target": 3925
        },
        {
            "source": 2795,
            "target": 3964
        },
        {
            "source": 2795,
            "target": 3984
        },
        {
            "source": 2795,
            "target": 4025
        },
        {
            "source": 2795,
            "target": 4054
        },
        {
            "source": 2795,
            "target": 4335
        },
        {
            "source": 2795,
            "target": 4336
        },
        {
            "source": 2795,
            "target": 4337
        },
        {
            "source": 2795,
            "target": 4340
        },
        {
            "source": 2795,
            "target": 4846
        },
        {
            "source": 2795,
            "target": 4870
        },
        {
            "source": 2795,
            "target": 4871
        },
        {
            "source": 2795,
            "target": 4872
        },
        {
            "source": 2795,
            "target": 4873
        },
        {
            "source": 2795,
            "target": 4941
        },
        {
            "source": 2795,
            "target": 5080
        },
        {
            "source": 2795,
            "target": 5096
        },
        {
            "source": 3816,
            "target": 442
        },
        {
            "source": 3816,
            "target": 1962
        },
        {
            "source": 3816,
            "target": 2001
        },
        {
            "source": 3816,
            "target": 2018
        },
        {
            "source": 3816,
            "target": 2288
        },
        {
            "source": 3816,
            "target": 2310
        },
        {
            "source": 3816,
            "target": 2312
        },
        {
            "source": 3816,
            "target": 2316
        },
        {
            "source": 3816,
            "target": 2321
        },
        {
            "source": 3816,
            "target": 2354
        },
        {
            "source": 3816,
            "target": 2355
        },
        {
            "source": 3816,
            "target": 2356
        },
        {
            "source": 3816,
            "target": 2357
        },
        {
            "source": 3816,
            "target": 2358
        },
        {
            "source": 3816,
            "target": 2378
        },
        {
            "source": 3816,
            "target": 2988
        },
        {
            "source": 3816,
            "target": 3341
        },
        {
            "source": 3816,
            "target": 3407
        },
        {
            "source": 3816,
            "target": 3925
        },
        {
            "source": 3816,
            "target": 3964
        },
        {
            "source": 3816,
            "target": 3984
        },
        {
            "source": 3816,
            "target": 4025
        },
        {
            "source": 3816,
            "target": 4054
        },
        {
            "source": 3816,
            "target": 4335
        },
        {
            "source": 3816,
            "target": 4336
        },
        {
            "source": 3816,
            "target": 4337
        },
        {
            "source": 3816,
            "target": 4340
        },
        {
            "source": 3816,
            "target": 4846
        },
        {
            "source": 3816,
            "target": 4870
        },
        {
            "source": 3816,
            "target": 4871
        },
        {
            "source": 3816,
            "target": 4872
        },
        {
            "source": 3816,
            "target": 4873
        },
        {
            "source": 3816,
            "target": 4941
        },
        {
            "source": 3816,
            "target": 5080
        },
        {
            "source": 3816,
            "target": 5096
        },
        {
            "source": 4846,
            "target": 442
        },
        {
            "source": 4846,
            "target": 1962
        },
        {
            "source": 4846,
            "target": 2001
        },
        {
            "source": 4846,
            "target": 2018
        },
        {
            "source": 4846,
            "target": 2288
        },
        {
            "source": 4846,
            "target": 2310
        },
        {
            "source": 4846,
            "target": 2312
        },
        {
            "source": 4846,
            "target": 2316
        },
        {
            "source": 4846,
            "target": 2321
        },
        {
            "source": 4846,
            "target": 2354
        },
        {
            "source": 4846,
            "target": 2355
        },
        {
            "source": 4846,
            "target": 2356
        },
        {
            "source": 4846,
            "target": 2357
        },
        {
            "source": 4846,
            "target": 2358
        },
        {
            "source": 4846,
            "target": 2378
        },
        {
            "source": 4846,
            "target": 2988
        },
        {
            "source": 4846,
            "target": 3341
        },
        {
            "source": 4846,
            "target": 3407
        },
        {
            "source": 4846,
            "target": 3925
        },
        {
            "source": 4846,
            "target": 3964
        },
        {
            "source": 4846,
            "target": 3984
        },
        {
            "source": 4846,
            "target": 4025
        },
        {
            "source": 4846,
            "target": 4054
        },
        {
            "source": 4846,
            "target": 4335
        },
        {
            "source": 4846,
            "target": 4336
        },
        {
            "source": 4846,
            "target": 4337
        },
        {
            "source": 4846,
            "target": 4340
        },
        {
            "source": 4846,
            "target": 4870
        },
        {
            "source": 4846,
            "target": 4871
        },
        {
            "source": 4846,
            "target": 4872
        },
        {
            "source": 4846,
            "target": 4873
        },
        {
            "source": 4846,
            "target": 4941
        },
        {
            "source": 4846,
            "target": 5080
        },
        {
            "source": 4846,
            "target": 5096
        },
        {
            "source": 4335,
            "target": 442
        },
        {
            "source": 4335,
            "target": 1962
        },
        {
            "source": 4335,
            "target": 2001
        },
        {
            "source": 4335,
            "target": 2018
        },
        {
            "source": 4335,
            "target": 2288
        },
        {
            "source": 4335,
            "target": 2310
        },
        {
            "source": 4335,
            "target": 2312
        },
        {
            "source": 4335,
            "target": 2316
        },
        {
            "source": 4335,
            "target": 2321
        },
        {
            "source": 4335,
            "target": 2354
        },
        {
            "source": 4335,
            "target": 2355
        },
        {
            "source": 4335,
            "target": 2356
        },
        {
            "source": 4335,
            "target": 2357
        },
        {
            "source": 4335,
            "target": 2358
        },
        {
            "source": 4335,
            "target": 2378
        },
        {
            "source": 4335,
            "target": 2988
        },
        {
            "source": 4335,
            "target": 3341
        },
        {
            "source": 4335,
            "target": 3407
        },
        {
            "source": 4335,
            "target": 3925
        },
        {
            "source": 4335,
            "target": 3964
        },
        {
            "source": 4335,
            "target": 3984
        },
        {
            "source": 4335,
            "target": 4025
        },
        {
            "source": 4335,
            "target": 4054
        },
        {
            "source": 4335,
            "target": 4336
        },
        {
            "source": 4335,
            "target": 4337
        },
        {
            "source": 4335,
            "target": 4340
        },
        {
            "source": 4335,
            "target": 4870
        },
        {
            "source": 4335,
            "target": 4871
        },
        {
            "source": 4335,
            "target": 4872
        },
        {
            "source": 4335,
            "target": 4873
        },
        {
            "source": 4335,
            "target": 4941
        },
        {
            "source": 4335,
            "target": 5080
        },
        {
            "source": 4335,
            "target": 5096
        },
        {
            "source": 2288,
            "target": 442
        },
        {
            "source": 2288,
            "target": 1962
        },
        {
            "source": 2288,
            "target": 2001
        },
        {
            "source": 2288,
            "target": 2018
        },
        {
            "source": 2288,
            "target": 2310
        },
        {
            "source": 2288,
            "target": 2312
        },
        {
            "source": 2288,
            "target": 2316
        },
        {
            "source": 2288,
            "target": 2321
        },
        {
            "source": 2288,
            "target": 2354
        },
        {
            "source": 2288,
            "target": 2355
        },
        {
            "source": 2288,
            "target": 2356
        },
        {
            "source": 2288,
            "target": 2357
        },
        {
            "source": 2288,
            "target": 2358
        },
        {
            "source": 2288,
            "target": 2378
        },
        {
            "source": 2288,
            "target": 2988
        },
        {
            "source": 2288,
            "target": 3341
        },
        {
            "source": 2288,
            "target": 3407
        },
        {
            "source": 2288,
            "target": 3925
        },
        {
            "source": 2288,
            "target": 3964
        },
        {
            "source": 2288,
            "target": 3984
        },
        {
            "source": 2288,
            "target": 4025
        },
        {
            "source": 2288,
            "target": 4054
        },
        {
            "source": 2288,
            "target": 4336
        },
        {
            "source": 2288,
            "target": 4337
        },
        {
            "source": 2288,
            "target": 4340
        },
        {
            "source": 2288,
            "target": 4870
        },
        {
            "source": 2288,
            "target": 4871
        },
        {
            "source": 2288,
            "target": 4872
        },
        {
            "source": 2288,
            "target": 4873
        },
        {
            "source": 2288,
            "target": 4941
        },
        {
            "source": 2288,
            "target": 5080
        },
        {
            "source": 2288,
            "target": 5096
        },
        {
            "source": 4336,
            "target": 442
        },
        {
            "source": 4336,
            "target": 1962
        },
        {
            "source": 4336,
            "target": 2001
        },
        {
            "source": 4336,
            "target": 2018
        },
        {
            "source": 4336,
            "target": 2310
        },
        {
            "source": 4336,
            "target": 2312
        },
        {
            "source": 4336,
            "target": 2316
        },
        {
            "source": 4336,
            "target": 2321
        },
        {
            "source": 4336,
            "target": 2354
        },
        {
            "source": 4336,
            "target": 2355
        },
        {
            "source": 4336,
            "target": 2356
        },
        {
            "source": 4336,
            "target": 2357
        },
        {
            "source": 4336,
            "target": 2358
        },
        {
            "source": 4336,
            "target": 2378
        },
        {
            "source": 4336,
            "target": 2988
        },
        {
            "source": 4336,
            "target": 3341
        },
        {
            "source": 4336,
            "target": 3407
        },
        {
            "source": 4336,
            "target": 3925
        },
        {
            "source": 4336,
            "target": 3964
        },
        {
            "source": 4336,
            "target": 3984
        },
        {
            "source": 4336,
            "target": 4025
        },
        {
            "source": 4336,
            "target": 4054
        },
        {
            "source": 4336,
            "target": 4337
        },
        {
            "source": 4336,
            "target": 4340
        },
        {
            "source": 4336,
            "target": 4870
        },
        {
            "source": 4336,
            "target": 4871
        },
        {
            "source": 4336,
            "target": 4872
        },
        {
            "source": 4336,
            "target": 4873
        },
        {
            "source": 4336,
            "target": 4941
        },
        {
            "source": 4336,
            "target": 5080
        },
        {
            "source": 4336,
            "target": 5096
        },
        {
            "source": 4337,
            "target": 442
        },
        {
            "source": 4337,
            "target": 1962
        },
        {
            "source": 4337,
            "target": 2001
        },
        {
            "source": 4337,
            "target": 2018
        },
        {
            "source": 4337,
            "target": 2310
        },
        {
            "source": 4337,
            "target": 2312
        },
        {
            "source": 4337,
            "target": 2316
        },
        {
            "source": 4337,
            "target": 2321
        },
        {
            "source": 4337,
            "target": 2354
        },
        {
            "source": 4337,
            "target": 2355
        },
        {
            "source": 4337,
            "target": 2356
        },
        {
            "source": 4337,
            "target": 2357
        },
        {
            "source": 4337,
            "target": 2358
        },
        {
            "source": 4337,
            "target": 2378
        },
        {
            "source": 4337,
            "target": 2988
        },
        {
            "source": 4337,
            "target": 3341
        },
        {
            "source": 4337,
            "target": 3407
        },
        {
            "source": 4337,
            "target": 3925
        },
        {
            "source": 4337,
            "target": 3964
        },
        {
            "source": 4337,
            "target": 3984
        },
        {
            "source": 4337,
            "target": 4025
        },
        {
            "source": 4337,
            "target": 4054
        },
        {
            "source": 4337,
            "target": 4340
        },
        {
            "source": 4337,
            "target": 4870
        },
        {
            "source": 4337,
            "target": 4871
        },
        {
            "source": 4337,
            "target": 4872
        },
        {
            "source": 4337,
            "target": 4873
        },
        {
            "source": 4337,
            "target": 4941
        },
        {
            "source": 4337,
            "target": 5080
        },
        {
            "source": 4337,
            "target": 5096
        },
        {
            "source": 4340,
            "target": 442
        },
        {
            "source": 4340,
            "target": 1962
        },
        {
            "source": 4340,
            "target": 2001
        },
        {
            "source": 4340,
            "target": 2018
        },
        {
            "source": 4340,
            "target": 2310
        },
        {
            "source": 4340,
            "target": 2312
        },
        {
            "source": 4340,
            "target": 2316
        },
        {
            "source": 4340,
            "target": 2321
        },
        {
            "source": 4340,
            "target": 2354
        },
        {
            "source": 4340,
            "target": 2355
        },
        {
            "source": 4340,
            "target": 2356
        },
        {
            "source": 4340,
            "target": 2357
        },
        {
            "source": 4340,
            "target": 2358
        },
        {
            "source": 4340,
            "target": 2378
        },
        {
            "source": 4340,
            "target": 2988
        },
        {
            "source": 4340,
            "target": 3341
        },
        {
            "source": 4340,
            "target": 3407
        },
        {
            "source": 4340,
            "target": 3925
        },
        {
            "source": 4340,
            "target": 3964
        },
        {
            "source": 4340,
            "target": 3984
        },
        {
            "source": 4340,
            "target": 4025
        },
        {
            "source": 4340,
            "target": 4054
        },
        {
            "source": 4340,
            "target": 4870
        },
        {
            "source": 4340,
            "target": 4871
        },
        {
            "source": 4340,
            "target": 4872
        },
        {
            "source": 4340,
            "target": 4873
        },
        {
            "source": 4340,
            "target": 4941
        },
        {
            "source": 4340,
            "target": 5080
        },
        {
            "source": 4340,
            "target": 5096
        },
        {
            "source": 2310,
            "target": 442
        },
        {
            "source": 2310,
            "target": 1962
        },
        {
            "source": 2310,
            "target": 2001
        },
        {
            "source": 2310,
            "target": 2018
        },
        {
            "source": 2310,
            "target": 2312
        },
        {
            "source": 2310,
            "target": 2316
        },
        {
            "source": 2310,
            "target": 2321
        },
        {
            "source": 2310,
            "target": 2354
        },
        {
            "source": 2310,
            "target": 2355
        },
        {
            "source": 2310,
            "target": 2356
        },
        {
            "source": 2310,
            "target": 2357
        },
        {
            "source": 2310,
            "target": 2358
        },
        {
            "source": 2310,
            "target": 2378
        },
        {
            "source": 2310,
            "target": 2988
        },
        {
            "source": 2310,
            "target": 3341
        },
        {
            "source": 2310,
            "target": 3407
        },
        {
            "source": 2310,
            "target": 3925
        },
        {
            "source": 2310,
            "target": 3964
        },
        {
            "source": 2310,
            "target": 3984
        },
        {
            "source": 2310,
            "target": 4025
        },
        {
            "source": 2310,
            "target": 4054
        },
        {
            "source": 2310,
            "target": 4870
        },
        {
            "source": 2310,
            "target": 4871
        },
        {
            "source": 2310,
            "target": 4872
        },
        {
            "source": 2310,
            "target": 4873
        },
        {
            "source": 2310,
            "target": 4941
        },
        {
            "source": 2310,
            "target": 5080
        },
        {
            "source": 2310,
            "target": 5096
        },
        {
            "source": 4870,
            "target": 442
        },
        {
            "source": 4870,
            "target": 1962
        },
        {
            "source": 4870,
            "target": 2001
        },
        {
            "source": 4870,
            "target": 2018
        },
        {
            "source": 4870,
            "target": 2312
        },
        {
            "source": 4870,
            "target": 2316
        },
        {
            "source": 4870,
            "target": 2321
        },
        {
            "source": 4870,
            "target": 2354
        },
        {
            "source": 4870,
            "target": 2355
        },
        {
            "source": 4870,
            "target": 2356
        },
        {
            "source": 4870,
            "target": 2357
        },
        {
            "source": 4870,
            "target": 2358
        },
        {
            "source": 4870,
            "target": 2378
        },
        {
            "source": 4870,
            "target": 2988
        },
        {
            "source": 4870,
            "target": 3341
        },
        {
            "source": 4870,
            "target": 3407
        },
        {
            "source": 4870,
            "target": 3925
        },
        {
            "source": 4870,
            "target": 3964
        },
        {
            "source": 4870,
            "target": 3984
        },
        {
            "source": 4870,
            "target": 4025
        },
        {
            "source": 4870,
            "target": 4054
        },
        {
            "source": 4870,
            "target": 4871
        },
        {
            "source": 4870,
            "target": 4872
        },
        {
            "source": 4870,
            "target": 4873
        },
        {
            "source": 4870,
            "target": 4941
        },
        {
            "source": 4870,
            "target": 5080
        },
        {
            "source": 4870,
            "target": 5096
        },
        {
            "source": 2312,
            "target": 442
        },
        {
            "source": 2312,
            "target": 1962
        },
        {
            "source": 2312,
            "target": 2001
        },
        {
            "source": 2312,
            "target": 2018
        },
        {
            "source": 2312,
            "target": 2316
        },
        {
            "source": 2312,
            "target": 2321
        },
        {
            "source": 2312,
            "target": 2354
        },
        {
            "source": 2312,
            "target": 2355
        },
        {
            "source": 2312,
            "target": 2356
        },
        {
            "source": 2312,
            "target": 2357
        },
        {
            "source": 2312,
            "target": 2358
        },
        {
            "source": 2312,
            "target": 2378
        },
        {
            "source": 2312,
            "target": 2988
        },
        {
            "source": 2312,
            "target": 3341
        },
        {
            "source": 2312,
            "target": 3407
        },
        {
            "source": 2312,
            "target": 3925
        },
        {
            "source": 2312,
            "target": 3964
        },
        {
            "source": 2312,
            "target": 3984
        },
        {
            "source": 2312,
            "target": 4025
        },
        {
            "source": 2312,
            "target": 4054
        },
        {
            "source": 2312,
            "target": 4871
        },
        {
            "source": 2312,
            "target": 4872
        },
        {
            "source": 2312,
            "target": 4873
        },
        {
            "source": 2312,
            "target": 4941
        },
        {
            "source": 2312,
            "target": 5080
        },
        {
            "source": 2312,
            "target": 5096
        },
        {
            "source": 4871,
            "target": 442
        },
        {
            "source": 4871,
            "target": 1962
        },
        {
            "source": 4871,
            "target": 2001
        },
        {
            "source": 4871,
            "target": 2018
        },
        {
            "source": 4871,
            "target": 2316
        },
        {
            "source": 4871,
            "target": 2321
        },
        {
            "source": 4871,
            "target": 2354
        },
        {
            "source": 4871,
            "target": 2355
        },
        {
            "source": 4871,
            "target": 2356
        },
        {
            "source": 4871,
            "target": 2357
        },
        {
            "source": 4871,
            "target": 2358
        },
        {
            "source": 4871,
            "target": 2378
        },
        {
            "source": 4871,
            "target": 2988
        },
        {
            "source": 4871,
            "target": 3341
        },
        {
            "source": 4871,
            "target": 3407
        },
        {
            "source": 4871,
            "target": 3925
        },
        {
            "source": 4871,
            "target": 3964
        },
        {
            "source": 4871,
            "target": 3984
        },
        {
            "source": 4871,
            "target": 4025
        },
        {
            "source": 4871,
            "target": 4054
        },
        {
            "source": 4871,
            "target": 4872
        },
        {
            "source": 4871,
            "target": 4873
        },
        {
            "source": 4871,
            "target": 4941
        },
        {
            "source": 4871,
            "target": 5080
        },
        {
            "source": 4871,
            "target": 5096
        },
        {
            "source": 4872,
            "target": 442
        },
        {
            "source": 4872,
            "target": 1962
        },
        {
            "source": 4872,
            "target": 2001
        },
        {
            "source": 4872,
            "target": 2018
        },
        {
            "source": 4872,
            "target": 2316
        },
        {
            "source": 4872,
            "target": 2321
        },
        {
            "source": 4872,
            "target": 2354
        },
        {
            "source": 4872,
            "target": 2355
        },
        {
            "source": 4872,
            "target": 2356
        },
        {
            "source": 4872,
            "target": 2357
        },
        {
            "source": 4872,
            "target": 2358
        },
        {
            "source": 4872,
            "target": 2378
        },
        {
            "source": 4872,
            "target": 2988
        },
        {
            "source": 4872,
            "target": 3341
        },
        {
            "source": 4872,
            "target": 3407
        },
        {
            "source": 4872,
            "target": 3925
        },
        {
            "source": 4872,
            "target": 3964
        },
        {
            "source": 4872,
            "target": 3984
        },
        {
            "source": 4872,
            "target": 4025
        },
        {
            "source": 4872,
            "target": 4054
        },
        {
            "source": 4872,
            "target": 4873
        },
        {
            "source": 4872,
            "target": 4941
        },
        {
            "source": 4872,
            "target": 5080
        },
        {
            "source": 4872,
            "target": 5096
        },
        {
            "source": 4873,
            "target": 442
        },
        {
            "source": 4873,
            "target": 1962
        },
        {
            "source": 4873,
            "target": 2001
        },
        {
            "source": 4873,
            "target": 2018
        },
        {
            "source": 4873,
            "target": 2316
        },
        {
            "source": 4873,
            "target": 2321
        },
        {
            "source": 4873,
            "target": 2354
        },
        {
            "source": 4873,
            "target": 2355
        },
        {
            "source": 4873,
            "target": 2356
        },
        {
            "source": 4873,
            "target": 2357
        },
        {
            "source": 4873,
            "target": 2358
        },
        {
            "source": 4873,
            "target": 2378
        },
        {
            "source": 4873,
            "target": 2988
        },
        {
            "source": 4873,
            "target": 3341
        },
        {
            "source": 4873,
            "target": 3407
        },
        {
            "source": 4873,
            "target": 3925
        },
        {
            "source": 4873,
            "target": 3964
        },
        {
            "source": 4873,
            "target": 3984
        },
        {
            "source": 4873,
            "target": 4025
        },
        {
            "source": 4873,
            "target": 4054
        },
        {
            "source": 4873,
            "target": 4941
        },
        {
            "source": 4873,
            "target": 5080
        },
        {
            "source": 4873,
            "target": 5096
        },
        {
            "source": 2316,
            "target": 442
        },
        {
            "source": 2316,
            "target": 1962
        },
        {
            "source": 2316,
            "target": 2001
        },
        {
            "source": 2316,
            "target": 2018
        },
        {
            "source": 2316,
            "target": 2321
        },
        {
            "source": 2316,
            "target": 2354
        },
        {
            "source": 2316,
            "target": 2355
        },
        {
            "source": 2316,
            "target": 2356
        },
        {
            "source": 2316,
            "target": 2357
        },
        {
            "source": 2316,
            "target": 2358
        },
        {
            "source": 2316,
            "target": 2378
        },
        {
            "source": 2316,
            "target": 2988
        },
        {
            "source": 2316,
            "target": 3341
        },
        {
            "source": 2316,
            "target": 3407
        },
        {
            "source": 2316,
            "target": 3925
        },
        {
            "source": 2316,
            "target": 3964
        },
        {
            "source": 2316,
            "target": 3984
        },
        {
            "source": 2316,
            "target": 4025
        },
        {
            "source": 2316,
            "target": 4054
        },
        {
            "source": 2316,
            "target": 4941
        },
        {
            "source": 2316,
            "target": 5080
        },
        {
            "source": 2316,
            "target": 5096
        },
        {
            "source": 3341,
            "target": 442
        },
        {
            "source": 3341,
            "target": 1962
        },
        {
            "source": 3341,
            "target": 2001
        },
        {
            "source": 3341,
            "target": 2018
        },
        {
            "source": 3341,
            "target": 2321
        },
        {
            "source": 3341,
            "target": 2354
        },
        {
            "source": 3341,
            "target": 2355
        },
        {
            "source": 3341,
            "target": 2356
        },
        {
            "source": 3341,
            "target": 2357
        },
        {
            "source": 3341,
            "target": 2358
        },
        {
            "source": 3341,
            "target": 2378
        },
        {
            "source": 3341,
            "target": 2988
        },
        {
            "source": 3341,
            "target": 3407
        },
        {
            "source": 3341,
            "target": 3925
        },
        {
            "source": 3341,
            "target": 3964
        },
        {
            "source": 3341,
            "target": 3984
        },
        {
            "source": 3341,
            "target": 4025
        },
        {
            "source": 3341,
            "target": 4054
        },
        {
            "source": 3341,
            "target": 4941
        },
        {
            "source": 3341,
            "target": 5080
        },
        {
            "source": 3341,
            "target": 5096
        },
        {
            "source": 2321,
            "target": 442
        },
        {
            "source": 2321,
            "target": 1962
        },
        {
            "source": 2321,
            "target": 2001
        },
        {
            "source": 2321,
            "target": 2018
        },
        {
            "source": 2321,
            "target": 2354
        },
        {
            "source": 2321,
            "target": 2355
        },
        {
            "source": 2321,
            "target": 2356
        },
        {
            "source": 2321,
            "target": 2357
        },
        {
            "source": 2321,
            "target": 2358
        },
        {
            "source": 2321,
            "target": 2378
        },
        {
            "source": 2321,
            "target": 2988
        },
        {
            "source": 2321,
            "target": 3407
        },
        {
            "source": 2321,
            "target": 3925
        },
        {
            "source": 2321,
            "target": 3964
        },
        {
            "source": 2321,
            "target": 3984
        },
        {
            "source": 2321,
            "target": 4025
        },
        {
            "source": 2321,
            "target": 4054
        },
        {
            "source": 2321,
            "target": 4941
        },
        {
            "source": 2321,
            "target": 5080
        },
        {
            "source": 2321,
            "target": 5096
        },
        {
            "source": 2354,
            "target": 442
        },
        {
            "source": 2354,
            "target": 1962
        },
        {
            "source": 2354,
            "target": 2001
        },
        {
            "source": 2354,
            "target": 2018
        },
        {
            "source": 2354,
            "target": 2355
        },
        {
            "source": 2354,
            "target": 2356
        },
        {
            "source": 2354,
            "target": 2357
        },
        {
            "source": 2354,
            "target": 2358
        },
        {
            "source": 2354,
            "target": 2378
        },
        {
            "source": 2354,
            "target": 2988
        },
        {
            "source": 2354,
            "target": 3407
        },
        {
            "source": 2354,
            "target": 3925
        },
        {
            "source": 2354,
            "target": 3964
        },
        {
            "source": 2354,
            "target": 3984
        },
        {
            "source": 2354,
            "target": 4025
        },
        {
            "source": 2354,
            "target": 4054
        },
        {
            "source": 2354,
            "target": 4941
        },
        {
            "source": 2354,
            "target": 5080
        },
        {
            "source": 2354,
            "target": 5096
        },
        {
            "source": 2355,
            "target": 442
        },
        {
            "source": 2355,
            "target": 1962
        },
        {
            "source": 2355,
            "target": 2001
        },
        {
            "source": 2355,
            "target": 2018
        },
        {
            "source": 2355,
            "target": 2356
        },
        {
            "source": 2355,
            "target": 2357
        },
        {
            "source": 2355,
            "target": 2358
        },
        {
            "source": 2355,
            "target": 2378
        },
        {
            "source": 2355,
            "target": 2988
        },
        {
            "source": 2355,
            "target": 3407
        },
        {
            "source": 2355,
            "target": 3925
        },
        {
            "source": 2355,
            "target": 3964
        },
        {
            "source": 2355,
            "target": 3984
        },
        {
            "source": 2355,
            "target": 4025
        },
        {
            "source": 2355,
            "target": 4054
        },
        {
            "source": 2355,
            "target": 4941
        },
        {
            "source": 2355,
            "target": 5080
        },
        {
            "source": 2355,
            "target": 5096
        },
        {
            "source": 2356,
            "target": 442
        },
        {
            "source": 2356,
            "target": 1962
        },
        {
            "source": 2356,
            "target": 2001
        },
        {
            "source": 2356,
            "target": 2018
        },
        {
            "source": 2356,
            "target": 2357
        },
        {
            "source": 2356,
            "target": 2358
        },
        {
            "source": 2356,
            "target": 2378
        },
        {
            "source": 2356,
            "target": 2988
        },
        {
            "source": 2356,
            "target": 3407
        },
        {
            "source": 2356,
            "target": 3925
        },
        {
            "source": 2356,
            "target": 3964
        },
        {
            "source": 2356,
            "target": 3984
        },
        {
            "source": 2356,
            "target": 4025
        },
        {
            "source": 2356,
            "target": 4054
        },
        {
            "source": 2356,
            "target": 4941
        },
        {
            "source": 2356,
            "target": 5080
        },
        {
            "source": 2356,
            "target": 5096
        },
        {
            "source": 2357,
            "target": 442
        },
        {
            "source": 2357,
            "target": 1962
        },
        {
            "source": 2357,
            "target": 2001
        },
        {
            "source": 2357,
            "target": 2018
        },
        {
            "source": 2357,
            "target": 2358
        },
        {
            "source": 2357,
            "target": 2378
        },
        {
            "source": 2357,
            "target": 2988
        },
        {
            "source": 2357,
            "target": 3407
        },
        {
            "source": 2357,
            "target": 3925
        },
        {
            "source": 2357,
            "target": 3964
        },
        {
            "source": 2357,
            "target": 3984
        },
        {
            "source": 2357,
            "target": 4025
        },
        {
            "source": 2357,
            "target": 4054
        },
        {
            "source": 2357,
            "target": 4941
        },
        {
            "source": 2357,
            "target": 5080
        },
        {
            "source": 2357,
            "target": 5096
        },
        {
            "source": 2358,
            "target": 442
        },
        {
            "source": 2358,
            "target": 1962
        },
        {
            "source": 2358,
            "target": 2001
        },
        {
            "source": 2358,
            "target": 2018
        },
        {
            "source": 2358,
            "target": 2378
        },
        {
            "source": 2358,
            "target": 2988
        },
        {
            "source": 2358,
            "target": 3407
        },
        {
            "source": 2358,
            "target": 3925
        },
        {
            "source": 2358,
            "target": 3964
        },
        {
            "source": 2358,
            "target": 3984
        },
        {
            "source": 2358,
            "target": 4025
        },
        {
            "source": 2358,
            "target": 4054
        },
        {
            "source": 2358,
            "target": 4941
        },
        {
            "source": 2358,
            "target": 5080
        },
        {
            "source": 2358,
            "target": 5096
        },
        {
            "source": 2378,
            "target": 442
        },
        {
            "source": 2378,
            "target": 1962
        },
        {
            "source": 2378,
            "target": 2001
        },
        {
            "source": 2378,
            "target": 2018
        },
        {
            "source": 2378,
            "target": 2988
        },
        {
            "source": 2378,
            "target": 3407
        },
        {
            "source": 2378,
            "target": 3925
        },
        {
            "source": 2378,
            "target": 3964
        },
        {
            "source": 2378,
            "target": 3984
        },
        {
            "source": 2378,
            "target": 4025
        },
        {
            "source": 2378,
            "target": 4054
        },
        {
            "source": 2378,
            "target": 4941
        },
        {
            "source": 2378,
            "target": 5080
        },
        {
            "source": 2378,
            "target": 5096
        },
        {
            "source": 4941,
            "target": 442
        },
        {
            "source": 4941,
            "target": 1962
        },
        {
            "source": 4941,
            "target": 2001
        },
        {
            "source": 4941,
            "target": 2018
        },
        {
            "source": 4941,
            "target": 2988
        },
        {
            "source": 4941,
            "target": 3407
        },
        {
            "source": 4941,
            "target": 3925
        },
        {
            "source": 4941,
            "target": 3964
        },
        {
            "source": 4941,
            "target": 3984
        },
        {
            "source": 4941,
            "target": 4025
        },
        {
            "source": 4941,
            "target": 4054
        },
        {
            "source": 4941,
            "target": 5080
        },
        {
            "source": 4941,
            "target": 5096
        },
        {
            "source": 3407,
            "target": 442
        },
        {
            "source": 3407,
            "target": 1962
        },
        {
            "source": 3407,
            "target": 2001
        },
        {
            "source": 3407,
            "target": 2018
        },
        {
            "source": 3407,
            "target": 2988
        },
        {
            "source": 3407,
            "target": 3925
        },
        {
            "source": 3407,
            "target": 3964
        },
        {
            "source": 3407,
            "target": 3984
        },
        {
            "source": 3407,
            "target": 4025
        },
        {
            "source": 3407,
            "target": 4054
        },
        {
            "source": 3407,
            "target": 5080
        },
        {
            "source": 3407,
            "target": 5096
        },
        {
            "source": 3925,
            "target": 442
        },
        {
            "source": 3925,
            "target": 1962
        },
        {
            "source": 3925,
            "target": 2001
        },
        {
            "source": 3925,
            "target": 2018
        },
        {
            "source": 3925,
            "target": 2988
        },
        {
            "source": 3925,
            "target": 3964
        },
        {
            "source": 3925,
            "target": 3984
        },
        {
            "source": 3925,
            "target": 4025
        },
        {
            "source": 3925,
            "target": 4054
        },
        {
            "source": 3925,
            "target": 5080
        },
        {
            "source": 3925,
            "target": 5096
        },
        {
            "source": 3964,
            "target": 442
        },
        {
            "source": 3964,
            "target": 1962
        },
        {
            "source": 3964,
            "target": 2001
        },
        {
            "source": 3964,
            "target": 2018
        },
        {
            "source": 3964,
            "target": 2988
        },
        {
            "source": 3964,
            "target": 3984
        },
        {
            "source": 3964,
            "target": 4025
        },
        {
            "source": 3964,
            "target": 4054
        },
        {
            "source": 3964,
            "target": 5080
        },
        {
            "source": 3964,
            "target": 5096
        },
        {
            "source": 3984,
            "target": 442
        },
        {
            "source": 3984,
            "target": 1962
        },
        {
            "source": 3984,
            "target": 2001
        },
        {
            "source": 3984,
            "target": 2018
        },
        {
            "source": 3984,
            "target": 2988
        },
        {
            "source": 3984,
            "target": 4025
        },
        {
            "source": 3984,
            "target": 4054
        },
        {
            "source": 3984,
            "target": 5080
        },
        {
            "source": 3984,
            "target": 5096
        },
        {
            "source": 1962,
            "target": 442
        },
        {
            "source": 1962,
            "target": 2001
        },
        {
            "source": 1962,
            "target": 2018
        },
        {
            "source": 1962,
            "target": 2988
        },
        {
            "source": 1962,
            "target": 4025
        },
        {
            "source": 1962,
            "target": 4054
        },
        {
            "source": 1962,
            "target": 5080
        },
        {
            "source": 1962,
            "target": 5096
        },
        {
            "source": 2988,
            "target": 442
        },
        {
            "source": 2988,
            "target": 2001
        },
        {
            "source": 2988,
            "target": 2018
        },
        {
            "source": 2988,
            "target": 4025
        },
        {
            "source": 2988,
            "target": 4054
        },
        {
            "source": 2988,
            "target": 5080
        },
        {
            "source": 2988,
            "target": 5096
        },
        {
            "source": 4025,
            "target": 442
        },
        {
            "source": 4025,
            "target": 2001
        },
        {
            "source": 4025,
            "target": 2018
        },
        {
            "source": 4025,
            "target": 4054
        },
        {
            "source": 4025,
            "target": 5080
        },
        {
            "source": 4025,
            "target": 5096
        },
        {
            "source": 442,
            "target": 2001
        },
        {
            "source": 442,
            "target": 2018
        },
        {
            "source": 442,
            "target": 4054
        },
        {
            "source": 442,
            "target": 5080
        },
        {
            "source": 442,
            "target": 5096
        },
        {
            "source": 2001,
            "target": 2018
        },
        {
            "source": 2001,
            "target": 4054
        },
        {
            "source": 2001,
            "target": 5080
        },
        {
            "source": 2001,
            "target": 5096
        },
        {
            "source": 4054,
            "target": 2018
        },
        {
            "source": 4054,
            "target": 5080
        },
        {
            "source": 4054,
            "target": 5096
        },
        {
            "source": 5080,
            "target": 2018
        },
        {
            "source": 5080,
            "target": 5096
        },
        {
            "source": 2018,
            "target": 5096
        }
    ]
}